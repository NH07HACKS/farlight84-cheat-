#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_Mode_Framework

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Solarland_structs.hpp"
#include "E_CharacterSkillType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FL_Mode_Framework.FL_Mode_Framework_C
// 0x0000 (0x0028 - 0x0028)
class UFL_Mode_Framework_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetCapsuleList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_CapsuleProperty GetCapsuleData(int32 Key, class UObject* __WorldContext);
	static void GetDeathBoxList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_DeathBox GetDeathBoxData(int32 Key, class UObject* __WorldContext);
	static void GetDanceList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_Dance GetDanceData(int32 Key, class UObject* __WorldContext);
	static void GetEmojiList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_Emote GetEmojiData(int32 Key, class UObject* __WorldContext);
	static class FString SkillConfigToString(const struct FSkillState& S_SkillState, class UObject* __WorldContext);
	static class FString GetItemIconPath(int32 Key, const class FString& BasePath, class UObject* __WorldContext);
	static void GetVehicleSkinList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static void GetVehicleTypeList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static void GetWeaponSkinList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static void GetWeaponList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static void GetBroadcastPlayerName(const class FString& SolarPlayerId, class UObject* __WorldContext, class FString* BroadcastPlayerName);
	static void BindBroadcastModeChanged(const TDelegate<void()>& Event, class UObject* __WorldContext);
	static void GetBroadcastHeroName(const class FString& SolarPlayerId, class UObject* __WorldContext, class FString* BroadcastHeroName);
	static bool IsTouchScreenLayout(class UObject* __WorldContext);
	static void GetPositionOfCircle(float Radius, float Angle, class UObject* __WorldContext, struct FVector2D* Position);
	static void _s_SetCharacterSkill(class ASolarCharacter* Character, const struct FSkillState& InSkillConfig, class UObject* __WorldContext);
	static void _a_GetCharacterIDBySkinID(int32 SkinID, class UObject* __WorldContext, int32* CharacterID);
	static void SetSkillState(class ASolarCharacter* Character, ECharacterRoleAbilityIndex SkillType, ERoleSkillOperation NewSate, class UObject* __WorldContext);
	static void Set_Skill_State_for_Everybody(E_CharacterSkillType SkillType, ERoleSkillOperation NewSate, class UObject* __WorldContext);
	static void SetWeaponPartByPartID(class ASolarWeapon* TargetWeapon, int32 PartID, class UObject* __WorldContext, bool* Success);
	static void Distribute_Experience_to_Side(int32 InExp, EExpBehaviorType InType, class UObject* __WorldContext);
	static void GetRandomCharacter(class UObject* __WorldContext, int32* Output);
	static int32 RandomIntInRange(const struct FInt32Range& Range, class UObject* __WorldContext);
	static class FString GetLocText(const struct FSolarTablesLocalText& InData, class UObject* __WorldContext);
	static void GetTrailList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_BackpackTrailProperty GetTrailData(int32 Key, class UObject* __WorldContext);
	static void GetBackpackList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_BackpackProperty GetBackpackData(int32 Key, class UObject* __WorldContext);
	static void GetCharacterList(class UObject* __WorldContext, TArray<int32>* OutKeys);
	static const struct FSolarTablesData_UnitCharacter GetCharacterData(int32 Key, class UObject* __WorldContext);
	static void GetCharacterSkinList(class UObject* __WorldContext, TArray<int32>* OutKeys);

	const struct FSolarTablesData_VehicleSkin GetVehicleSkinData(int32 Key, class UObject* __WorldContext);
	const struct FSolarTablesData_VehicleType GetVehicleTypeData(int32 Key, class UObject* __WorldContext);
	const struct FSolarTablesData_WeaponSkin GetWeaponSkinData(int32 Key, class UObject* __WorldContext);
	const struct FSolarTablesData_GunProperty GetWeaponData(int32 Key, class UObject* __WorldContext);
	class UObject* GetTextureByPath(const class FString& Path, class UObject* __WorldContext);
	const struct FSolarTablesData_Skin GetCharacterSkinData(int32 Key, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FL_Mode_Framework_C">();
	}
	static class UFL_Mode_Framework_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFL_Mode_Framework_C>();
	}
};
static_assert(alignof(UFL_Mode_Framework_C) == 0x000008, "Wrong alignment on UFL_Mode_Framework_C");
static_assert(sizeof(UFL_Mode_Framework_C) == 0x000028, "Wrong size on UFL_Mode_Framework_C");

}

