#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TabControl_Horizontal_Slot_Desktop

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_TabStyle_structs.hpp"


namespace SDK::Params
{

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop
// 0x0138 (0x0138 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop) == 0x000138, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, EntryPoint) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, K2Node_Event_MyGeometry) == 0x000008, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000120, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, CallFunc_PlayAnimationForward_ReturnValue) == 0x000128, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000130, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave) == 0x000070, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct) == 0x000001, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.SetSelected
// 0x00D0 (0x00D0 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewLocalVar_0;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0090(0x0028)()
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected) == 0x0000D0, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, IsSelected) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::IsSelected' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, NewLocalVar_0) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_byte_Variable) == 0x000008, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_byte_Variable_1) == 0x000009, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_bool_Variable) == 0x00000A, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable) == 0x00000C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable_1) == 0x000014, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_bool_Variable_1) == 0x00001C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_Select_Default) == 0x000020, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable_2) == 0x000028, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable_3) == 0x000038, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_bool_Variable_2) == 0x000048, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_Select_Default_1) == 0x00004C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable_4) == 0x00005C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_struct_Variable_5) == 0x00006C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_bool_Variable_3) == 0x00007C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_Select_Default_2) == 0x000080, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_MakeStruct_SlateColor) == 0x000090, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_byte_Variable_2) == 0x0000B8, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_byte_Variable_3) == 0x0000B9, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_Select_Default_3) == 0x0000BA, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, Temp_bool_Variable_4) == 0x0000BB, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, CallFunc_PlayAnimation_ReturnValue) == 0x0000C0, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected, K2Node_Select_Default_4) == 0x0000C8, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetSelected::K2Node_Select_Default_4' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.SetStyle
// 0x0028 (0x0028 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle final
{
public:
	E_TabStyle                                    Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle) == 0x000004, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle) == 0x000028, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, Style_0) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::Style_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, Temp_bool_Variable) == 0x000001, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, Temp_bool_Variable_1) == 0x000002, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_BreakVector2D_X) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_BreakVector2D_X_1) == 0x00000C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_BreakVector2D_Y_1) == 0x000010, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, K2Node_Select_Default) == 0x00001C, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000020, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle, K2Node_Select_Default_1) == 0x000024, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetStyle::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.InitWidget
// 0x0018 (0x0018 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget final
{
public:
	class USolarRedHint_General_C*                HintWidget_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_0;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget) == 0x000018, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget, HintWidget_0) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget::HintWidget_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget, Text_0) == 0x000008, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget::Text_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget, Icon_0) == 0x000010, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_InitWidget::Icon_0' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.OnHovered
// 0x0088 (0x0088 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0060(0x0028)()
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered) == 0x000008, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered) == 0x000088, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, IsHovered_0) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::IsHovered_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_bool_Variable) == 0x000001, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_byte_Variable) == 0x000002, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_byte_Variable_1) == 0x000003, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_bool_Variable_1) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, K2Node_Select_Default) == 0x000005, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_struct_Variable) == 0x000008, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, Temp_struct_Variable_1) == 0x000018, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, K2Node_Select_Default_1) == 0x000028, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered, K2Node_MakeStruct_SlateColor_1) == 0x000060, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_OnHovered::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.SetLineImage
// 0x0005 (0x0005 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage) == 0x000001, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage) == 0x000005, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage, IsEnd) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage::IsEnd' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage, Temp_bool_Variable) == 0x000001, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage, Temp_byte_Variable) == 0x000002, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage, Temp_byte_Variable_1) == 0x000003, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage, K2Node_Select_Default) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetLineImage::K2Node_Select_Default' has a wrong offset!");

// Function UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C.SetHover
// 0x0005 (0x0005 - 0x0000)
struct UI_TabControl_Horizontal_Slot_Desktop_C_SetHover final
{
public:
	bool                                          Hover_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover) == 0x000001, "Wrong alignment on UI_TabControl_Horizontal_Slot_Desktop_C_SetHover");
static_assert(sizeof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover) == 0x000005, "Wrong size on UI_TabControl_Horizontal_Slot_Desktop_C_SetHover");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover, Hover_0) == 0x000000, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetHover::Hover_0' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover, Temp_bool_Variable) == 0x000001, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetHover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover, Temp_byte_Variable) == 0x000002, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetHover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover, Temp_byte_Variable_1) == 0x000003, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetHover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TabControl_Horizontal_Slot_Desktop_C_SetHover, K2Node_Select_Default) == 0x000004, "Member 'UI_TabControl_Horizontal_Slot_Desktop_C_SetHover::K2Node_Select_Default' has a wrong offset!");

}

