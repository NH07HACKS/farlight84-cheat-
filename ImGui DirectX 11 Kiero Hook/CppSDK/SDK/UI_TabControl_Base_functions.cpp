#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TabControl_Base

#include "Basic.hpp"

#include "UI_TabControl_Base_classes.hpp"
#include "UI_TabControl_Base_parameters.hpp"


namespace SDK
{

// Function UI_TabControl_Base.UI_TabControl_Base_C.CallPreItemsNumChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemsNum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::CallPreItemsNumChange(int32 ItemsNum, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "CallPreItemsNumChange");

	Params::UI_TabControl_Base_C_CallPreItemsNumChange Parms{};

	Parms.ItemsNum = ItemsNum;

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.PreItemsNumChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemsNum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::PreItemsNumChange(int32 ItemsNum, struct FVector2D* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "PreItemsNumChange");

	Params::UI_TabControl_Base_C_PreItemsNumChange Parms{};

	Parms.ItemsNum = ItemsNum;

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetIsControllerEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::SetIsControllerEnabled(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetIsControllerEnabled");

	Params::UI_TabControl_Base_C_SetIsControllerEnabled Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.Onitemschane
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::Onitemschane()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "Onitemschane");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.GetBindListView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UListView**                       NewParam                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::GetBindListView(class UListView** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "GetBindListView");

	Params::UI_TabControl_Base_C_GetBindListView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetSelectedIndexPrev
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::SetSelectedIndexPrev()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetSelectedIndexPrev");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetSelectedIndexNext
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::SetSelectedIndexNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetSelectedIndexNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.AddItemByItemData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_TabItem&                TabData                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::AddItemByItemData(const struct FS_TabItem& TabData, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "AddItemByItemData");

	Params::UI_TabControl_Base_C_AddItemByItemData Parms{};

	Parms.TabData = std::move(TabData);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.AddSizedItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FS_HintData&               HintDotData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          LinkWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Szie                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::AddSizedItem(const class FString& Key, const class FString& Text, class UObject* Icon, const struct FS_HintData& HintDotData, class UWidget* LinkWidget, const struct FVector2D& Szie, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "AddSizedItem");

	Params::UI_TabControl_Base_C_AddSizedItem Parms{};

	Parms.Key = std::move(Key);
	Parms.Text = std::move(Text);
	Parms.Icon = Icon;
	Parms.HintDotData = std::move(HintDotData);
	Parms.LinkWidget = LinkWidget;
	Parms.Szie = std::move(Szie);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.ReviseItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FS_HintData&               HintDotData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          LinkWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::ReviseItem(const class FString& Key, const class FString& Text, class UObject* Icon, const struct FS_HintData& HintDotData, class UWidget* LinkWidget, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "ReviseItem");

	Params::UI_TabControl_Base_C_ReviseItem Parms{};

	Parms.Key = std::move(Key);
	Parms.Text = std::move(Text);
	Parms.Icon = Icon;
	Parms.HintDotData = std::move(HintDotData);
	Parms.LinkWidget = LinkWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.RefreshAllItems
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::RefreshAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "RefreshAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.InsertItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FS_HintData&               HintDotData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          LinkWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::InsertItem(int32 Index_0, const class FString& Key, const class FString& Text, class UObject* Icon, const struct FS_HintData& HintDotData, class UWidget* LinkWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "InsertItem");

	Params::UI_TabControl_Base_C_InsertItem Parms{};

	Parms.Index_0 = Index_0;
	Parms.Key = std::move(Key);
	Parms.Text = std::move(Text);
	Parms.Icon = Icon;
	Parms.HintDotData = std::move(HintDotData);
	Parms.LinkWidget = LinkWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.AddItemByPreset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_TabItem&                S_TabItem                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void UUI_TabControl_Base_C::AddItemByPreset(const struct FS_TabItem& S_TabItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "AddItemByPreset");

	Params::UI_TabControl_Base_C_AddItemByPreset Parms{};

	Parms.S_TabItem = std::move(S_TabItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.BindChildWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::BindChildWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "BindChildWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetBindWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UListView**                       BindList_0                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::SetBindWidget(class UListView** BindList_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetBindWidget");

	Params::UI_TabControl_Base_C_SetBindWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BindList_0 != nullptr)
		*BindList_0 = Parms.BindList_0;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.ScrollToItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const float                             InScrollOffset                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::ScrollToItem(const class FString& Key, bool Active, const float InScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "ScrollToItem");

	Params::UI_TabControl_Base_C_ScrollToItem Parms{};

	Parms.Key = std::move(Key);
	Parms.Active = Active;
	Parms.InScrollOffset = InScrollOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.ClearItems
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::ClearItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "ClearItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetStyle
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::SetStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.GetKeys
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>*                  Keys                                                   (Parm, OutParm, HasGetValueTypeHash)

void UUI_TabControl_Base_C::GetKeys(TArray<class FString>* Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "GetKeys");

	Params::UI_TabControl_Base_C_GetKeys Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Keys != nullptr)
		*Keys = std::move(Parms.Keys);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.AddPresetItem
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_TabControl_Base_C::AddPresetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "AddPresetItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.SetActiveTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::SetActiveTab(const class FString& Key, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "SetActiveTab");

	Params::UI_TabControl_Base_C_SetActiveTab Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.GetLinkedWidgetByKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UWidget**                         Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::GetLinkedWidgetByKey(const class FString& Key, class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "GetLinkedWidgetByKey");

	Params::UI_TabControl_Base_C_GetLinkedWidgetByKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.RemoveItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::RemoveItem(const class FString& Key, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "RemoveItem");

	Params::UI_TabControl_Base_C_RemoveItem Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.AddItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          Icon                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FS_HintData&               HintDotData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          LinkWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::AddItem(const class FString& Key, const class FString& Text, class UObject* Icon, const struct FS_HintData& HintDotData, class UWidget* LinkWidget, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "AddItem");

	Params::UI_TabControl_Base_C_AddItem Parms{};

	Parms.Key = std::move(Key);
	Parms.Text = std::move(Text);
	Parms.Icon = Icon;
	Parms.HintDotData = std::move(HintDotData);
	Parms.LinkWidget = LinkWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.OnItemClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::OnItemClicked(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "OnItemClicked");

	Params::UI_TabControl_Base_C_OnItemClicked Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.OnItemSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::OnItemSelected(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "OnItemSelected");

	Params::UI_TabControl_Base_C_OnItemSelected Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.BP_OnItemIsHoveredChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsHovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::BP_OnItemIsHoveredChanged_Event(class UObject* Item, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "BP_OnItemIsHoveredChanged_Event");

	Params::UI_TabControl_Base_C_BP_OnItemIsHoveredChanged_Event Parms{};

	Parms.Item = Item;
	Parms.bIsHovered = bIsHovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_TabControl_Base_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "PreConstruct");

	Params::UI_TabControl_Base_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.ExecuteUbergraph_UI_TabControl_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TabControl_Base_C::ExecuteUbergraph_UI_TabControl_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "ExecuteUbergraph_UI_TabControl_Base");

	Params::UI_TabControl_Base_C_ExecuteUbergraph_UI_TabControl_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_TabControl_Base_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.OnDeinitialize
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_TabControl_Base_C::OnDeinitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "OnDeinitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_TabControl_Base_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_TabControl_Base_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_TabControl_Base.UI_TabControl_Base_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_TabControl_Base_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabControl_Base_C", "GetModuleName");

	Params::UI_TabControl_Base_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

