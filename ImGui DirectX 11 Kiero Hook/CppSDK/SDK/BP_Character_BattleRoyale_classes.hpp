#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_BattleRoyale

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Character_Framework_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_BattleRoyale.BP_Character_BattleRoyale_C
// 0x00B0 (0x3EE0 - 0x3E30)
class ABP_Character_BattleRoyale_C final : public ABP_Character_Framework_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Character_BattleRoyale_C;        // 0x3E28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(class ASolarCharacter* TargetCharacter)> OnPlayerRevive;           // 0x3E30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UActorMarkBase*                         DeathBoxMark;                                      // 0x3E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMapMarkBase*>                   DeathBoxMiniMapMark;                               // 0x3E48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x3E58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UI_Relive_StartTime;                               // 0x3E5C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LandedDetectionHandel;                             // 0x3E60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_SI_RebornLine_C*                    RebornLine;                                        // 0x3E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, float>                            Level_Damage;                                      // 0x3E70(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  SkipUpdateSkillTags;                               // 0x3EC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GetWeaponLevelDamageBonus(float* Result);
	void Death_Cleanup_UI();
	float TakeDamageResolve(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void SetReviveCameraFade(float Time_0);
	void ReceiveBeginPlay();
	void Debug_Set_DayAndNightTime(float Time_0);
	void SetMapID(int32 MapID);
	void BeginPlayBlueprint();
	void ExecuteUbergraph_BP_Character_BattleRoyale(int32 EntryPoint);

	bool OnShouldTakeDamage(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_BattleRoyale_C">();
	}
	static class ABP_Character_BattleRoyale_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_BattleRoyale_C>();
	}
};
static_assert(alignof(ABP_Character_BattleRoyale_C) == 0x000010, "Wrong alignment on ABP_Character_BattleRoyale_C");
static_assert(sizeof(ABP_Character_BattleRoyale_C) == 0x003EE0, "Wrong size on ABP_Character_BattleRoyale_C");
static_assert(offsetof(ABP_Character_BattleRoyale_C, UberGraphFrame_BP_Character_BattleRoyale_C) == 0x003E28, "Member 'ABP_Character_BattleRoyale_C::UberGraphFrame_BP_Character_BattleRoyale_C' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, OnPlayerRevive) == 0x003E30, "Member 'ABP_Character_BattleRoyale_C::OnPlayerRevive' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, DeathBoxMark) == 0x003E40, "Member 'ABP_Character_BattleRoyale_C::DeathBoxMark' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, DeathBoxMiniMapMark) == 0x003E48, "Member 'ABP_Character_BattleRoyale_C::DeathBoxMiniMapMark' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, Index_0) == 0x003E58, "Member 'ABP_Character_BattleRoyale_C::Index_0' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, UI_Relive_StartTime) == 0x003E5C, "Member 'ABP_Character_BattleRoyale_C::UI_Relive_StartTime' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, LandedDetectionHandel) == 0x003E60, "Member 'ABP_Character_BattleRoyale_C::LandedDetectionHandel' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, RebornLine) == 0x003E68, "Member 'ABP_Character_BattleRoyale_C::RebornLine' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, Level_Damage) == 0x003E70, "Member 'ABP_Character_BattleRoyale_C::Level_Damage' has a wrong offset!");
static_assert(offsetof(ABP_Character_BattleRoyale_C, SkipUpdateSkillTags) == 0x003EC0, "Member 'ABP_Character_BattleRoyale_C::SkipUpdateSkillTags' has a wrong offset!");

}

