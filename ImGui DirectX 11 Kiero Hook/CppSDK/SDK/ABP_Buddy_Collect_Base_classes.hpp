#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Buddy_Collect_Base

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// DynamicClass ABP_Buddy_Collect_Base.ABP_Buddy_Collect_Base_C
// 0x02F0 (0x05B0 - 0x02C0)
#pragma pack(push, 0x1)
class alignas(0x10) UABP_Buddy_Collect_Base_C : public UCollectBuddyAnimInstance
{
public:
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x02F0(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0318(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0340(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x03C8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03F8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0480(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x04B0(0x00B0)(NativeAccessSpecifierPublic)
	TArray<class UAnimSequenceBase*>              IdleShowList;                                      // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdleAnim;                                          // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxStartTime;                                      // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinStartTime;                                      // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartIdleShowTime;                                 // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurIdleShow;                                       // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurIdleLoopTime;                                   // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          CanEnterIdleShow;                                  // 0x0594(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PlayIdleShow;                                      // 0x0595(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_596[0x2];                                      // 0x0596(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0598(0x0010)(ZeroConstructor, Transient, InstancedReference, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void AnimNotify_ExitIdleLoop();
	void AnimNotify_IdleShowEnd();
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Buddy_Collect_Base_AnimGraphNode_SequencePlayer_4214C369487C5DA7141CB8B9F28EAC36();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Buddy_Collect_Base_AnimGraphNode_SequencePlayer_DF76A8B4401DFAECD09E80B613C06CD8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Buddy_Collect_Base_AnimGraphNode_TransitionResult_567FA22B4E35801834533087BDEE6ACB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Buddy_Collect_Base_AnimGraphNode_TransitionResult_BB7CACF94FD2ABD0257C7787E1937E74();
	void PlayIdleShowAnim();
	void TimerTick();
	void UpdateRandomCurIdleShow();
	void UpdateRandomStartIdleShowTime();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ABP_Buddy_Collect_Base_C">();
	}
	static class UABP_Buddy_Collect_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Buddy_Collect_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UABP_Buddy_Collect_Base_C) == 0x000010, "Wrong alignment on UABP_Buddy_Collect_Base_C");
static_assert(sizeof(UABP_Buddy_Collect_Base_C) == 0x0005B0, "Wrong size on UABP_Buddy_Collect_Base_C");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_Root) == 0x0002C0, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_TransitionResult_1) == 0x0002F0, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_TransitionResult) == 0x000318, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_SequencePlayer_1) == 0x000340, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_StateResult_1) == 0x0003C8, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_SequencePlayer) == 0x0003F8, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_StateResult) == 0x000480, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, AnimGraphNode_StateMachine) == 0x0004B0, "Member 'UABP_Buddy_Collect_Base_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, IdleShowList) == 0x000560, "Member 'UABP_Buddy_Collect_Base_C::IdleShowList' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, IdleAnim) == 0x000570, "Member 'UABP_Buddy_Collect_Base_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, MaxStartTime) == 0x000578, "Member 'UABP_Buddy_Collect_Base_C::MaxStartTime' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, MinStartTime) == 0x00057C, "Member 'UABP_Buddy_Collect_Base_C::MinStartTime' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, StartIdleShowTime) == 0x000580, "Member 'UABP_Buddy_Collect_Base_C::StartIdleShowTime' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, CurIdleShow) == 0x000588, "Member 'UABP_Buddy_Collect_Base_C::CurIdleShow' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, CurIdleLoopTime) == 0x000590, "Member 'UABP_Buddy_Collect_Base_C::CurIdleLoopTime' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, CanEnterIdleShow) == 0x000594, "Member 'UABP_Buddy_Collect_Base_C::CanEnterIdleShow' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, PlayIdleShow) == 0x000595, "Member 'UABP_Buddy_Collect_Base_C::PlayIdleShow' has a wrong offset!");
static_assert(offsetof(UABP_Buddy_Collect_Base_C, K2Node_CreateDelegate_OutputDelegate) == 0x000598, "Member 'UABP_Buddy_Collect_Base_C::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

