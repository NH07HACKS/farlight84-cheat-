#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Solo_Notice_RoundWeaponShow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Solo_Notice_RoundWeaponShow.UI_Solo_Notice_RoundWeaponShow_C
// 0x0050 (0x06D0 - 0x0680)
class UUI_Solo_Notice_RoundWeaponShow_C final : public UUINoticeBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0688(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Enter;                                        // 0x0690(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Weapon;                                        // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Weapon_1;                                      // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Title;                                         // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_WeaponName;                                    // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_WeaponName_1;                                  // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             WeaponList;                                        // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon1;                                           // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Weapon2;                                           // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Solo_Notice_RoundWeaponShow(int32 EntryPoint);
	void BP_OnNoticeShow();
	void Finished_81D9EE354B6D441079476694F91E96C1();
	void GetWeaponID(int32* weaponid_1, int32* weaponid_2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Solo_Notice_RoundWeaponShow_C">();
	}
	static class UUI_Solo_Notice_RoundWeaponShow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Solo_Notice_RoundWeaponShow_C>();
	}
};
static_assert(alignof(UUI_Solo_Notice_RoundWeaponShow_C) == 0x000008, "Wrong alignment on UUI_Solo_Notice_RoundWeaponShow_C");
static_assert(sizeof(UUI_Solo_Notice_RoundWeaponShow_C) == 0x0006D0, "Wrong size on UUI_Solo_Notice_RoundWeaponShow_C");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, UberGraphFrame) == 0x000680, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Anim_Exit) == 0x000688, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Anim_Enter) == 0x000690, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Anim_Enter' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Img_Weapon) == 0x000698, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Img_Weapon' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Img_Weapon_1) == 0x0006A0, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Img_Weapon_1' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Txt_Title) == 0x0006A8, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Txt_WeaponName) == 0x0006B0, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Txt_WeaponName' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Txt_WeaponName_1) == 0x0006B8, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Txt_WeaponName_1' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, WeaponList) == 0x0006C0, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::WeaponList' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Weapon1) == 0x0006C8, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Weapon1' has a wrong offset!");
static_assert(offsetof(UUI_Solo_Notice_RoundWeaponShow_C, Weapon2) == 0x0006CC, "Member 'UUI_Solo_Notice_RoundWeaponShow_C::Weapon2' has a wrong offset!");

}

