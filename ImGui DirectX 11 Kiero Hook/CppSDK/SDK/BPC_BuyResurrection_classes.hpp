#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_BuyResurrection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_BuyResurrection.BPC_BuyResurrection_C
// 0x0018 (0x01C0 - 0x01A8)
class UBPC_BuyResurrection_C final : public USolarResurrectionComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ReviveItemManger_BattleRoyale_C*    ReviveItemManger;                                  // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SuccessTime;                                       // 0x01B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckAllTeammateDied(bool* IfAllDied);
	TArray<class ASCMPlayerState*> GetTeammatesArr();
	void On_All_Teammates_Killed();
	void Get_Alive_Team_Player_Num(class ASCMPlayerState* OutPlayer, int32* Num);
	void Event_LeaveWhileWaiting();
	void Event_OnRevivingComplete(const class FString& PlayerID);
	void Event_OnResurrectionStateChanged(EResurrectionState LastState);
	void ExecuteUbergraph_BPC_BuyResurrection(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_BuyResurrection_C">();
	}
	static class UBPC_BuyResurrection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_BuyResurrection_C>();
	}
};
static_assert(alignof(UBPC_BuyResurrection_C) == 0x000008, "Wrong alignment on UBPC_BuyResurrection_C");
static_assert(sizeof(UBPC_BuyResurrection_C) == 0x0001C0, "Wrong size on UBPC_BuyResurrection_C");
static_assert(offsetof(UBPC_BuyResurrection_C, UberGraphFrame) == 0x0001A8, "Member 'UBPC_BuyResurrection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_BuyResurrection_C, ReviveItemManger) == 0x0001B0, "Member 'UBPC_BuyResurrection_C::ReviveItemManger' has a wrong offset!");
static_assert(offsetof(UBPC_BuyResurrection_C, SuccessTime) == 0x0001B8, "Member 'UBPC_BuyResurrection_C::SuccessTime' has a wrong offset!");

}

