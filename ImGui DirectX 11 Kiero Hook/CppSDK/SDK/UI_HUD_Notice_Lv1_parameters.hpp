#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_Lv1

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.ExecuteUbergraph_UI_HUD_Notice_Lv1
// 0x0030 (0x0030 - 0x0000)
struct UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	bool                                          K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1) == 0x000008, "Wrong alignment on UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1) == 0x000030, "Wrong size on UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, EntryPoint) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, Temp_bool_Variable) == 0x000005, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, Temp_bool_Variable_1) == 0x000006, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, K2Node_Event_IsDesignTime) == 0x000007, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, K2Node_Event_InLayoutType) == 0x000008, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1, K2Node_Select_Default) == 0x000028, "Member 'UI_HUD_Notice_Lv1_C_ExecuteUbergraph_UI_HUD_Notice_Lv1::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_Lv1_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Notice_Lv1_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Notice_Lv1_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_Lv1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Notice_Lv1_C_PreConstruct");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Notice_Lv1_C_PreConstruct");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.Set Parameters
// 0x0048 (0x0048 - 0x0000)
struct UI_HUD_Notice_Lv1_C_Set_Parameters final
{
public:
	class FString                                 Upper_String;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lower_String;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_Set_Parameters) == 0x000008, "Wrong alignment on UI_HUD_Notice_Lv1_C_Set_Parameters");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_Set_Parameters) == 0x000048, "Wrong size on UI_HUD_Notice_Lv1_C_Set_Parameters");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, Upper_String) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::Upper_String' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, Lower_String) == 0x000010, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::Lower_String' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, Temp_bool_Variable) == 0x000020, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, CallFunc_IsEmpty_ReturnValue) == 0x000021, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, CallFunc_IsEmpty_ReturnValue_1) == 0x000022, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, Temp_bool_Variable_1) == 0x000023, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, K2Node_Select_Default) == 0x000028, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Parameters, K2Node_Select_Default_1) == 0x000038, "Member 'UI_HUD_Notice_Lv1_C_Set_Parameters::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.Set Color
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_Lv1_C_Set_Color final
{
public:
	bool                                          已开启;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_Set_Color) == 0x000001, "Wrong alignment on UI_HUD_Notice_Lv1_C_Set_Color");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_Set_Color) == 0x000001, "Wrong size on UI_HUD_Notice_Lv1_C_Set_Color");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_Set_Color, 已开启) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_Set_Color::已开启' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_Lv1_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_Lv1_C_GetEnterAnimation");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_Lv1_C_GetEnterAnimation");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_Lv1.UI_HUD_Notice_Lv1_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_Lv1_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Lv1_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_Lv1_C_GetExitAnimation");
static_assert(sizeof(UI_HUD_Notice_Lv1_C_GetExitAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_Lv1_C_GetExitAnimation");
static_assert(offsetof(UI_HUD_Notice_Lv1_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_Lv1_C_GetExitAnimation::ReturnValue' has a wrong offset!");

}

