#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_TrainingMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_AiItem_structs.hpp"
#include "Solarland_structs.hpp"
#include "BP_CustomiaedCharacterBase_classes.hpp"
#include "E_AiItemType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_TrainingMode.BP_Character_TrainingMode_C
// 0x0020 (0x3E30 - 0x3E10)
class ABP_Character_TrainingMode_C final : public ABP_CustomiaedCharacterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Character_TrainingMode_C;        // 0x3E10(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ASolarVehiclePawn*                      Vehicle;                                           // 0x3E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AiItem                              NewVar_0;                                          // 0x3E20(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool ShouldForceOverrideDamageTaken(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser, float* OverrideDamageTaken);
	void OnCompleted_84F20D844D539263D5B45F9E9A20B26D(class ASolarPlayerWeapon* Weapon);
	void BeginPlayBlueprint();
	void ShowNotice();
	void BatchSetItem(const TArray<struct FS_AiItem>& ItemList);
	void ExecuteUbergraph_BP_Character_TrainingMode(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_TrainingMode_C">();
	}
	static class ABP_Character_TrainingMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_TrainingMode_C>();
	}
};
static_assert(alignof(ABP_Character_TrainingMode_C) == 0x000010, "Wrong alignment on ABP_Character_TrainingMode_C");
static_assert(sizeof(ABP_Character_TrainingMode_C) == 0x003E30, "Wrong size on ABP_Character_TrainingMode_C");
static_assert(offsetof(ABP_Character_TrainingMode_C, UberGraphFrame_BP_Character_TrainingMode_C) == 0x003E10, "Member 'ABP_Character_TrainingMode_C::UberGraphFrame_BP_Character_TrainingMode_C' has a wrong offset!");
static_assert(offsetof(ABP_Character_TrainingMode_C, Vehicle) == 0x003E18, "Member 'ABP_Character_TrainingMode_C::Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_Character_TrainingMode_C, NewVar_0) == 0x003E20, "Member 'ABP_Character_TrainingMode_C::NewVar_0' has a wrong offset!");

}

