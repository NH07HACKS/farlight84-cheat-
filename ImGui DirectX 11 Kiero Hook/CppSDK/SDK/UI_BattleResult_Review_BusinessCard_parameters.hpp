#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattleResult_Review_BusinessCard

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.ExecuteUbergraph_UI_BattleResult_Review_BusinessCard
// 0x0008 (0x0008 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard) == 0x000004, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard) == 0x000008, "Wrong size on UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard, EntryPoint) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_BattleResult_Review_BusinessCard_C_ExecuteUbergraph_UI_BattleResult_Review_BusinessCard::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_PreConstruct");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_PreConstruct) == 0x000001, "Wrong size on UI_BattleResult_Review_BusinessCard_C_PreConstruct");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.SetAssist
// 0x00A0 (0x00A0 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_SetAssist final
{
public:
	bool                                          IsAssist_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0028)()
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_SetAssist) == 0x000008, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_SetAssist");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_SetAssist) == 0x0000A0, "Wrong size on UI_BattleResult_Review_BusinessCard_C_SetAssist");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, IsAssist_0) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::IsAssist_0' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_bool_Variable) == 0x000001, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_int_Variable) == 0x000004, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_int_Variable_1) == 0x000008, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_bool_Variable_1) == 0x00000C, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_struct_Variable) == 0x000010, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_struct_Variable_1) == 0x000020, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_bool_Variable_2) == 0x000030, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_struct_Variable_2) == 0x000034, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, Temp_struct_Variable_3) == 0x000044, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, K2Node_Select_Default) == 0x000054, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, K2Node_Select_Default_1) == 0x000058, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, K2Node_Select_Default_2) == 0x000068, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssist, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssist::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.SetAssistSign
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_SetAssistSign final
{
public:
	bool                                          bIsAssist;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_SetAssistSign) == 0x000001, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_SetAssistSign");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_SetAssistSign) == 0x000001, "Wrong size on UI_BattleResult_Review_BusinessCard_C_SetAssistSign");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetAssistSign, bIsAssist) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_SetAssistSign::bIsAssist' has a wrong offset!");

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.SetHighlightBodyPart
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart final
{
public:
	EHitBodyPart                                  BodyPartName;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart) == 0x000001, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart) == 0x000001, "Wrong size on UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart, BodyPartName) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_SetHighlightBodyPart::BodyPartName' has a wrong offset!");

// Function UI_BattleResult_Review_BusinessCard.UI_BattleResult_Review_BusinessCard_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_BattleResult_Review_BusinessCard_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleResult_Review_BusinessCard_C_GetModuleName) == 0x000008, "Wrong alignment on UI_BattleResult_Review_BusinessCard_C_GetModuleName");
static_assert(sizeof(UI_BattleResult_Review_BusinessCard_C_GetModuleName) == 0x000010, "Wrong size on UI_BattleResult_Review_BusinessCard_C_GetModuleName");
static_assert(offsetof(UI_BattleResult_Review_BusinessCard_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_BattleResult_Review_BusinessCard_C_GetModuleName::ReturnValue' has a wrong offset!");

}

