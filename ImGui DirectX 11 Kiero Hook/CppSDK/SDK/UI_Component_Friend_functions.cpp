#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Friend

#include "Basic.hpp"

#include "UI_Component_Friend_classes.hpp"
#include "UI_Component_Friend_parameters.hpp"


namespace SDK
{

// Function UI_Component_Friend.UI_Component_Friend_C.ExecuteUbergraph_UI_Component_Friend
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Component_Friend_C::ExecuteUbergraph_UI_Component_Friend(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "ExecuteUbergraph_UI_Component_Friend");

	Params::UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Component_Friend_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "OnMouseLeave");

	Params::UI_Component_Friend_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Component_Friend_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "OnMouseEnter");

	Params::UI_Component_Friend_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.ReceivePlatformLayout
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EUSolarWidgetLayoutType                 InLayoutType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Component_Friend_C::ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "ReceivePlatformLayout");

	Params::UI_Component_Friend_C_ReceivePlatformLayout Parms{};

	Parms.InLayoutType = InLayoutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Component_Friend_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "PreConstruct");

	Params::UI_Component_Friend_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetTypeFriend
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Component_Friend_C::SetTypeFriend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetTypeFriend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Component_Friend.UI_Component_Friend_C.InitWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InPlayerID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    InIsBotAI                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Component_Friend_C::InitWidget(const class FString& InPlayerID, bool InIsBotAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "InitWidget");

	Params::UI_Component_Friend_C_InitWidget Parms{};

	Parms.InPlayerID = std::move(InPlayerID);
	Parms.InIsBotAI = InIsBotAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetisPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPC_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Component_Friend_C::SetisPC(bool IsPC_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetisPC");

	Params::UI_Component_Friend_C_SetisPC Parms{};

	Parms.IsPC_0 = IsPC_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   inInt                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Component_Friend_C::SetSize(int32 inInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetSize");

	Params::UI_Component_Friend_C_SetSize Parms{};

	Parms.inInt = inInt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Type_Friends                          Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSlateColor&               Follow                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FSlateColor&               Following                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FSlateColor&               Followed                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FSlateColor&               Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Component_Friend_C::SetColor(E_Type_Friends Index_0, const struct FSlateColor& Follow, const struct FSlateColor& Following, const struct FSlateColor& Followed, const struct FSlateColor& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetColor");

	Params::UI_Component_Friend_C_SetColor Parms{};

	Parms.Index_0 = Index_0;
	Parms.Follow = std::move(Follow);
	Parms.Following = std::move(Following);
	Parms.Followed = std::move(Followed);
	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetIsRelationship
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Component_Friend_C::SetIsRelationship(bool Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetIsRelationship");

	Params::UI_Component_Friend_C_SetIsRelationship Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetTxtPadding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InPadding                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Component_Friend_C::SetTxtPadding(float InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetTxtPadding");

	Params::UI_Component_Friend_C_SetTxtPadding Parms{};

	Parms.InPadding = InPadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.SetHoverType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Type_FriendHover                      HoverType_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hover_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Component_Friend_C::SetHoverType(E_Type_FriendHover HoverType_0, bool Hover_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "SetHoverType");

	Params::UI_Component_Friend_C_SetHoverType Parms{};

	Parms.HoverType_0 = HoverType_0;
	Parms.Hover_0 = Hover_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Component_Friend.UI_Component_Friend_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_Component_Friend_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Component_Friend_C", "GetModuleName");

	Params::UI_Component_Friend_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

