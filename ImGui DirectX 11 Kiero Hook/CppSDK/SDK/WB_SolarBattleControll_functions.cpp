#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SolarBattleControll

#include "Basic.hpp"

#include "WB_SolarBattleControll_classes.hpp"
#include "WB_SolarBattleControll_parameters.hpp"


namespace SDK
{

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.ExecuteUbergraph_WB_SolarBattleControll
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SolarBattleControll_C::ExecuteUbergraph_WB_SolarBattleControll(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "ExecuteUbergraph_WB_SolarBattleControll");

	Params::WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_SolarBattleControll_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "PreConstruct");

	Params::WB_SolarBattleControll_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.ScreenOrientation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EScreenOrientation                      inScreenOrientation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SolarBattleControll_C::ScreenOrientation(EScreenOrientation inScreenOrientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "ScreenOrientation");

	Params::WB_SolarBattleControll_C_ScreenOrientation Parms{};

	Parms.inScreenOrientation = inScreenOrientation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnWidgetVisibilitySet
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Publisher                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class FString>&            MetaData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UWB_SolarBattleControll_C::OnWidgetVisibilitySet(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnWidgetVisibilitySet");

	Params::WB_SolarBattleControll_C_OnWidgetVisibilitySet Parms{};

	Parms.Publisher = Publisher;
	Parms.Payload = Payload;
	Parms.MetaData = std::move(MetaData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.BindEventToSetWidgetVisibility
// (BlueprintCallable, BlueprintEvent)

void UWB_SolarBattleControll_C::BindEventToSetWidgetVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "BindEventToSetWidgetVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.SetChangeProfessionBtnVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_SolarBattleControll_C::SetChangeProfessionBtnVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "SetChangeProfessionBtnVisibility");

	Params::WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.SetBattleUISubItemVisibilityByGameMode
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECustomGameModeTypeForUI                GameModeType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWB_SolarBattleControll_C::SetBattleUISubItemVisibilityByGameMode(ECustomGameModeTypeForUI GameModeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "SetBattleUISubItemVisibilityByGameMode");

	Params::WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode Parms{};

	Parms.GameModeType = GameModeType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnSpectateStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpectating                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWB_SolarBattleControll_C::OnSpectateStateChanged(bool IsSpectating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnSpectateStateChanged");

	Params::WB_SolarBattleControll_C_OnSpectateStateChanged Parms{};

	Parms.IsSpectating = IsSpectating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_SolarBattleControll_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_SolarBattleControll_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnSolarUIOpened
// (Native, Event, Protected, BlueprintEvent)

void UWB_SolarBattleControll_C::OnSolarUIOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnSolarUIOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_SolarBattleControll_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnBackKey
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWidgetBackKeyType                      BackKeyType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWB_SolarBattleControll_C::OnBackKey(EWidgetBackKeyType BackKeyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnBackKey");

	Params::WB_SolarBattleControll_C_OnBackKey Parms{};

	Parms.BackKeyType = BackKeyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnShow
// (Native, Event, Protected, BlueprintEvent)

void UWB_SolarBattleControll_C::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnShow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnSolarUIClosed
// (Native, Event, Protected, BlueprintEvent)

void UWB_SolarBattleControll_C::OnSolarUIClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnSolarUIClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnHide
// (Native, Event, Protected, BlueprintEvent)

void UWB_SolarBattleControll_C::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "OnHide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function WB_SolarBattleControll.WB_SolarBattleControll_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWB_SolarBattleControll_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SolarBattleControll_C", "GetModuleName");

	Params::WB_SolarBattleControll_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

