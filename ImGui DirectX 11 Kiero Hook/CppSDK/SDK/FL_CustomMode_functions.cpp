#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_CustomMode

#include "Basic.hpp"

#include "FL_CustomMode_classes.hpp"
#include "FL_CustomMode_parameters.hpp"


namespace SDK
{

// Function FL_CustomMode.FL_CustomMode_C.Convert(ToString)
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          KeyString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UFL_CustomMode_C::Convert_ToString_(const struct FKey& Key, class UObject* __WorldContext, class FString* KeyString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Convert(ToString)");

	Params::FL_CustomMode_C_Convert_ToString_ Parms{};

	Parms.Key = std::move(Key);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyString != nullptr)
		*KeyString = std::move(Parms.KeyString);
}


// Function FL_CustomMode.FL_CustomMode_C.触发提示
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          图标                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    文本                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// E_NoticeLevel                           强度等级                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::触发提示(class UObject* 图标, const class FString& 文本, E_NoticeLevel 强度等级, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "触发提示");

	Params::FL_CustomMode_C_触发提示 Parms{};

	Parms.图标 = 图标;
	Parms.文本 = std::move(文本);
	Parms.强度等级 = 强度等级;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.角色是否存活
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarCharacter*                  角色                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   是否存活                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::角色是否存活(class ASolarCharacter* 角色, class UObject* __WorldContext, bool* 是否存活)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "角色是否存活");

	Params::FL_CustomMode_C_角色是否存活 Parms{};

	Parms.角色 = 角色;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (是否存活 != nullptr)
		*是否存活 = Parms.是否存活;
}


// Function FL_CustomMode.FL_CustomMode_C.切换控件可见性
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget**                     Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::切换控件可见性(class UUserWidget* Target, class UObject* __WorldContext, bool* Visible, class UUserWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "切换控件可见性");

	Params::FL_CustomMode_C_切换控件可见性 Parms{};

	Parms.Target = Target;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function FL_CustomMode.FL_CustomMode_C.物品下标
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   单页物品数量                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   页码                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   物品序号                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  列表下标                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::物品下标(int32 单页物品数量, int32 页码, int32 物品序号, class UObject* __WorldContext, int32* 列表下标)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "物品下标");

	Params::FL_CustomMode_C_物品下标 Parms{};

	Parms.单页物品数量 = 单页物品数量;
	Parms.页码 = 页码;
	Parms.物品序号 = 物品序号;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (列表下标 != nullptr)
		*列表下标 = Parms.列表下标;
}


// Function FL_CustomMode.FL_CustomMode_C.获取页码数量
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PageCapacity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PageCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::获取页码数量(int32 ItemCount, int32 PageCapacity, class UObject* __WorldContext, int32* PageCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取页码数量");

	Params::FL_CustomMode_C_获取页码数量 Parms{};

	Parms.ItemCount = ItemCount;
	Parms.PageCapacity = PageCapacity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PageCount != nullptr)
		*PageCount = Parms.PageCount;
}


// Function FL_CustomMode.FL_CustomMode_C.设置可见性
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visiable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::设置可见性(class UWidget* Target, bool Visiable, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "设置可见性");

	Params::FL_CustomMode_C_设置可见性 Parms{};

	Parms.Target = Target;
	Parms.Visiable = Visiable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.随机POP元素
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ASolarMapElementBase*>&    Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// int32                                   数量                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ASolarMapElementBase*>*    Resault                                                (Parm, OutParm, HasGetValueTypeHash)

void UFL_CustomMode_C::随机POP元素(TArray<class ASolarMapElementBase*>& Array, int32 数量, class UObject* __WorldContext, TArray<class ASolarMapElementBase*>* Resault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "随机POP元素");

	Params::FL_CustomMode_C_随机POP元素 Parms{};

	Parms.Array = std::move(Array);
	Parms.数量 = 数量;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Resault != nullptr)
		*Resault = std::move(Parms.Resault);
}


// Function FL_CustomMode.FL_CustomMode_C.是否为本地角色
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarCharacter*                  角色                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   本地角色                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::是否为本地角色(class ASolarCharacter* 角色, class UObject* __WorldContext, bool* 本地角色)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "是否为本地角色");

	Params::FL_CustomMode_C_是否为本地角色 Parms{};

	Parms.角色 = 角色;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (本地角色 != nullptr)
		*本地角色 = Parms.本地角色;
}


// Function FL_CustomMode.FL_CustomMode_C.ToInt(StringArray)
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>&                  str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          Int                                                    (Parm, OutParm, HasGetValueTypeHash)

void UFL_CustomMode_C::ToInt_StringArray_(TArray<class FString>& str, class UObject* __WorldContext, TArray<int32>* Int)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "ToInt(StringArray)");

	Params::FL_CustomMode_C_ToInt_StringArray_ Parms{};

	Parms.str = std::move(str);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	str = std::move(Parms.str);

	if (Int != nullptr)
		*Int = std::move(Parms.Int);
}


// Function FL_CustomMode.FL_CustomMode_C.获取地面高度
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   位置                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    从上到下                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         地面位置                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Z                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   是否在水中                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::获取地面高度(const struct FVector& 位置, bool 从上到下, class UObject* __WorldContext, struct FVector* 地面位置, float* Z, bool* 是否在水中)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取地面高度");

	Params::FL_CustomMode_C_获取地面高度 Parms{};

	Parms.位置 = std::move(位置);
	Parms.从上到下 = 从上到下;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (地面位置 != nullptr)
		*地面位置 = std::move(Parms.地面位置);

	if (Z != nullptr)
		*Z = Parms.Z;

	if (是否在水中 != nullptr)
		*是否在水中 = Parms.是否在水中;
}


// Function FL_CustomMode.FL_CustomMode_C.角色健康状态
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarCharacter*                  角色                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterHealthState*                  健康状态                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::角色健康状态(class ASolarCharacter* 角色, class UObject* __WorldContext, ECharacterHealthState* 健康状态)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "角色健康状态");

	Params::FL_CustomMode_C_角色健康状态 Parms{};

	Parms.角色 = 角色;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (健康状态 != nullptr)
		*健康状态 = Parms.健康状态;
}


// Function FL_CustomMode.FL_CustomMode_C.仅注册小地图标记物
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InMapMarkClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   InMarkPos                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EdgeSupport                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   ZOrder                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMapMarkBase**                    Output                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::仅注册小地图标记物(class UClass* InMapMarkClass, const struct FVector& InMarkPos, bool EdgeSupport, int32 ZOrder, class UObject* __WorldContext, class UMapMarkBase** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "仅注册小地图标记物");

	Params::FL_CustomMode_C_仅注册小地图标记物 Parms{};

	Parms.InMapMarkClass = InMapMarkClass;
	Parms.InMarkPos = std::move(InMarkPos);
	Parms.EdgeSupport = EdgeSupport;
	Parms.ZOrder = ZOrder;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function FL_CustomMode.FL_CustomMode_C.坐标打点
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          str                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UFL_CustomMode_C::坐标打点(const struct FVector& Vector, class UObject* __WorldContext, class FString* str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "坐标打点");

	Params::FL_CustomMode_C_坐标打点 Parms{};

	Parms.Vector = std::move(Vector);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (str != nullptr)
		*str = std::move(Parms.str);
}


// Function FL_CustomMode.FL_CustomMode_C.角色势力列表
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>&                  角色                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>*                  Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void UFL_CustomMode_C::角色势力列表(TArray<class AActor*>& 角色, class UObject* __WorldContext, TArray<class FString>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "角色势力列表");

	Params::FL_CustomMode_C_角色势力列表 Parms{};

	Parms.角色 = std::move(角色);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	角色 = std::move(Parms.角色);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FL_CustomMode.FL_CustomMode_C.角色驾驶状态
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDriveState                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EDriveState UFL_CustomMode_C::角色驾驶状态(class AActor* NewParam, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "角色驾驶状态");

	Params::FL_CustomMode_C_角色驾驶状态 Parms{};

	Parms.NewParam = NewParam;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_CustomMode.FL_CustomMode_C.注册Noya被动提示
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NoticeType_Noya                       类型                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   持续时间                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    文本                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const TMap<uint8, bool>&                触发条件                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   可触发次数                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::注册Noya被动提示(E_NoticeType_Noya 类型, float 持续时间, const class FString& 文本, const TMap<uint8, bool>& 触发条件, int32 可触发次数, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "注册Noya被动提示");

	Params::FL_CustomMode_C_注册Noya被动提示 Parms{};

	Parms.类型 = 类型;
	Parms.持续时间 = 持续时间;
	Parms.文本 = std::move(文本);
	Parms.触发条件 = std::move(触发条件);
	Parms.可触发次数 = 可触发次数;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.触发Noya主动提示
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NoticeType_Noya                       类型                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   持续时间                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    文本                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::触发Noya主动提示(E_NoticeType_Noya 类型, float 持续时间, const class FString& 文本, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "触发Noya主动提示");

	Params::FL_CustomMode_C_触发Noya主动提示 Parms{};

	Parms.类型 = 类型;
	Parms.持续时间 = 持续时间;
	Parms.文本 = std::move(文本);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.更新Noya触发条件
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<uint8, bool>&                触发条件                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::更新Noya触发条件(const TMap<uint8, bool>& 触发条件, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "更新Noya触发条件");

	Params::FL_CustomMode_C_更新Noya触发条件 Parms{};

	Parms.触发条件 = std::move(触发条件);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.获取Noya界面
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUI_Notice_Noya_C**               NoyaWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::获取Noya界面(class UObject* __WorldContext, class UUI_Notice_Noya_C** NoyaWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取Noya界面");

	Params::FL_CustomMode_C_获取Noya界面 Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NoyaWidget != nullptr)
		*NoyaWidget = Parms.NoyaWidget;
}


// Function FL_CustomMode.FL_CustomMode_C.设置Noya提示触发间隔
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   被动提示触发间隔                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::设置Noya提示触发间隔(float 被动提示触发间隔, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "设置Noya提示触发间隔");

	Params::FL_CustomMode_C_设置Noya提示触发间隔 Parms{};

	Parms.被动提示触发间隔 = 被动提示触发间隔;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.Number 2Letter
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString*                          Letter                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UFL_CustomMode_C::Number_2Letter(int32 Number, class UObject* __WorldContext, class FString* Letter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Number 2Letter");

	Params::FL_CustomMode_C_Number_2Letter Parms{};

	Parms.Number = Number;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Letter != nullptr)
		*Letter = std::move(Parms.Letter);
}


// Function FL_CustomMode.FL_CustomMode_C.获取打包类型
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESolarBuildConfiguration*               打包类型                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::获取打包类型(class UObject* __WorldContext, ESolarBuildConfiguration* 打包类型)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取打包类型");

	Params::FL_CustomMode_C_获取打包类型 Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (打包类型 != nullptr)
		*打包类型 = Parms.打包类型;
}


// Function FL_CustomMode.FL_CustomMode_C.抽选随机数字
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   下限                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   上限                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>&                          排除                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::抽选随机数字(int32 下限, int32 上限, TArray<int32>& 排除, class UObject* __WorldContext, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "抽选随机数字");

	Params::FL_CustomMode_C_抽选随机数字 Parms{};

	Parms.下限 = 下限;
	Parms.上限 = 上限;
	Parms.排除 = std::move(排除);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	排除 = std::move(Parms.排除);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function FL_CustomMode.FL_CustomMode_C.转换时间字符串
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   秒数                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            时间                                                   (Parm, OutParm)

void UFL_CustomMode_C::转换时间字符串(int32 秒数, class UObject* __WorldContext, class FText* 时间)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "转换时间字符串");

	Params::FL_CustomMode_C_转换时间字符串 Parms{};

	Parms.秒数 = 秒数;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (时间 != nullptr)
		*时间 = std::move(Parms.时间);
}


// Function FL_CustomMode.FL_CustomMode_C.ArrayContain
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>&                  Main                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class FString>&                  Sub                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Contain                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::ArrayContain(TArray<class FString>& Main, TArray<class FString>& Sub, class UObject* __WorldContext, bool* Contain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "ArrayContain");

	Params::FL_CustomMode_C_ArrayContain Parms{};

	Parms.Main = std::move(Main);
	Parms.Sub = std::move(Sub);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Main = std::move(Parms.Main);
	Sub = std::move(Parms.Sub);

	if (Contain != nullptr)
		*Contain = Parms.Contain;
}


// Function FL_CustomMode.FL_CustomMode_C.Name2String
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>&                    Names                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>*                  Strings                                                (Parm, OutParm, HasGetValueTypeHash)

void UFL_CustomMode_C::Name2String(TArray<class FName>& Names, class UObject* __WorldContext, TArray<class FString>* Strings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Name2String");

	Params::FL_CustomMode_C_Name2String Parms{};

	Parms.Names = std::move(Names);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Names = std::move(Parms.Names);

	if (Strings != nullptr)
		*Strings = std::move(Parms.Strings);
}


// Function FL_CustomMode.FL_CustomMode_C.GetRequestComponet
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_RequestMessage_C*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UBPC_RequestMessage_C* UFL_CustomMode_C::GetRequestComponet(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "GetRequestComponet");

	Params::FL_CustomMode_C_GetRequestComponet Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_CustomMode.FL_CustomMode_C.[s]BindOnRequestDealt
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const struct FS_MessageRequest& Info, bool Result)>&Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_RequestMessage_C**            RequestManager                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::_s_BindOnRequestDealt(const TDelegate<void(const struct FS_MessageRequest& Info, bool Result)>& Event, class UObject* __WorldContext, class ABP_RequestMessage_C** RequestManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "[s]BindOnRequestDealt");

	Params::FL_CustomMode_C__s_BindOnRequestDealt Parms{};

	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RequestManager != nullptr)
		*RequestManager = Parms.RequestManager;
}


// Function FL_CustomMode.FL_CustomMode_C.[c]BindOnRequestReplied
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const class FString& Handle, bool Reply, uint8 Type, int32 ReplierPlayerID)>&Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::_c_BindOnRequestReplied(const TDelegate<void(const class FString& Handle, bool Reply, uint8 Type, int32 ReplierPlayerID)>& Event, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "[c]BindOnRequestReplied");

	Params::FL_CustomMode_C__c_BindOnRequestReplied Parms{};

	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.[c]BindOnReceiveRequest
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const class FString& Handle, uint8 Type, int32 SenderPlayerID)>&Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::_c_BindOnReceiveRequest(const TDelegate<void(const class FString& Handle, uint8 Type, int32 SenderPlayerID)>& Event, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "[c]BindOnReceiveRequest");

	Params::FL_CustomMode_C__c_BindOnReceiveRequest Parms{};

	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function FL_CustomMode.FL_CustomMode_C.GetNetMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESolarNetMode                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESolarNetMode UFL_CustomMode_C::GetNetMode(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "GetNetMode");

	Params::FL_CustomMode_C_GetNetMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_CustomMode.FL_CustomMode_C.Pawn is a vehicle
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::Pawn_is_a_vehicle(class APawn* Pawn, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Pawn is a vehicle");

	Params::FL_CustomMode_C_Pawn_is_a_vehicle Parms{};

	Parms.Pawn = Pawn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function FL_CustomMode.FL_CustomMode_C.获取武器Icon
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      武器Icon                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  品质                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  PartsType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::获取武器Icon(int32 ID, class UObject* __WorldContext, class UTexture2D** 武器Icon, int32* 品质, int32* PartsType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取武器Icon");

	Params::FL_CustomMode_C_获取武器Icon Parms{};

	Parms.ID = ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (武器Icon != nullptr)
		*武器Icon = Parms.武器Icon;

	if (品质 != nullptr)
		*品质 = Parms.品质;

	if (PartsType != nullptr)
		*PartsType = Parms.PartsType;
}


// Function FL_CustomMode.FL_CustomMode_C.获取武器技能Icon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      武器技能Icon                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  武器技能本地化ID                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::获取武器技能Icon(int32 ID, class UObject* __WorldContext, class UTexture2D** 武器技能Icon, int32* 武器技能本地化ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "获取武器技能Icon");

	Params::FL_CustomMode_C_获取武器技能Icon Parms{};

	Parms.ID = ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (武器技能Icon != nullptr)
		*武器技能Icon = Parms.武器技能Icon;

	if (武器技能本地化ID != nullptr)
		*武器技能本地化ID = Parms.武器技能本地化ID;
}


// Function FL_CustomMode.FL_CustomMode_C.从物品ID获取本地化文本ID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  文本ID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::从物品ID获取本地化文本ID(int32 ID, class UObject* __WorldContext, int32* 文本ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "从物品ID获取本地化文本ID");

	Params::FL_CustomMode_C_从物品ID获取本地化文本ID Parms{};

	Parms.ID = ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (文本ID != nullptr)
		*文本ID = Parms.文本ID;
}


// Function FL_CustomMode.FL_CustomMode_C.[s]BindOnPlayerDisconnected
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const class ASolarPlayerController* PC)>&Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::_s_BindOnPlayerDisconnected(const TDelegate<void(const class ASolarPlayerController* PC)>& Event, class UObject* __WorldContext, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "[s]BindOnPlayerDisconnected");

	Params::FL_CustomMode_C__s_BindOnPlayerDisconnected Parms{};

	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function FL_CustomMode.FL_CustomMode_C.[s]BindOnPlayerReconnected
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void(const class ASolarPlayerController* PC)>&Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFL_CustomMode_C::_s_BindOnPlayerReconnected(const TDelegate<void(const class ASolarPlayerController* PC)>& Event, class UObject* __WorldContext, bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "[s]BindOnPlayerReconnected");

	Params::FL_CustomMode_C__s_BindOnPlayerReconnected Parms{};

	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function FL_CustomMode.FL_CustomMode_C.Get Loc Request Componet
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULocal_RequestMessage_C*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ULocal_RequestMessage_C* UFL_CustomMode_C::Get_Loc_Request_Componet(const class UObject* WorldContextObject, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Get Loc Request Componet");

	Params::FL_CustomMode_C_Get_Loc_Request_Componet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_CustomMode.FL_CustomMode_C.Get Portrait from Avatar ID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Avatar_ID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D**                      Portrait_Texture                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_CustomMode_C::Get_Portrait_from_Avatar_ID(int32 Avatar_ID, class UObject* __WorldContext, class UTexture2D** Portrait_Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_CustomMode_C", "Get Portrait from Avatar ID");

	Params::FL_CustomMode_C_Get_Portrait_from_Avatar_ID Parms{};

	Parms.Avatar_ID = Avatar_ID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Portrait_Texture != nullptr)
		*Portrait_Texture = Parms.Portrait_Texture;
}

}

