#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Express_WorldMark

#include "Basic.hpp"

#include "UI_Express_WorldMark_classes.hpp"
#include "UI_Express_WorldMark_parameters.hpp"


namespace SDK
{

// Function UI_Express_WorldMark.UI_Express_WorldMark_C.SetExpressState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EExpressMarkState                       Express_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Express_WorldMark_C::SetExpressState(EExpressMarkState Express_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Express_WorldMark_C", "SetExpressState");

	Params::UI_Express_WorldMark_C_SetExpressState Parms{};

	Parms.Express_0 = Express_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Express_WorldMark.UI_Express_WorldMark_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Express_WorldMark_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Express_WorldMark_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Express_WorldMark.UI_Express_WorldMark_C.ExecuteUbergraph_UI_Express_WorldMark
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Express_WorldMark_C::ExecuteUbergraph_UI_Express_WorldMark(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Express_WorldMark_C", "ExecuteUbergraph_UI_Express_WorldMark");

	Params::UI_Express_WorldMark_C_ExecuteUbergraph_UI_Express_WorldMark Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

