#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FoliageNetRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class FoliageNetRuntime.FoliageNet
// 0x0028 (0x0050 - 0x0028)
class UFoliageNet final : public UObject
{
public:
	TArray<TSoftObjectPtr<class UFoliageNetFunLib>> NodesList;                                       // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                AssetPathList;                                     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FoliageNet">();
	}
	static class UFoliageNet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFoliageNet>();
	}
};
static_assert(alignof(UFoliageNet) == 0x000008, "Wrong alignment on UFoliageNet");
static_assert(sizeof(UFoliageNet) == 0x000050, "Wrong size on UFoliageNet");
static_assert(offsetof(UFoliageNet, NodesList) == 0x000028, "Member 'UFoliageNet::NodesList' has a wrong offset!");
static_assert(offsetof(UFoliageNet, AssetPathList) == 0x000038, "Member 'UFoliageNet::AssetPathList' has a wrong offset!");

// Class FoliageNetRuntime.FoliageNetFunLib
// 0x0008 (0x0030 - 0x0028)
class UFoliageNetFunLib : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FoliageNetFunLib">();
	}
	static class UFoliageNetFunLib* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFoliageNetFunLib>();
	}
};
static_assert(alignof(UFoliageNetFunLib) == 0x000008, "Wrong alignment on UFoliageNetFunLib");
static_assert(sizeof(UFoliageNetFunLib) == 0x000030, "Wrong size on UFoliageNetFunLib");

// Class FoliageNetRuntime.FoliageNetAssetNode
// 0x0000 (0x0030 - 0x0030)
class UFoliageNetAssetNode final : public UFoliageNetFunLib
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FoliageNetAssetNode">();
	}
	static class UFoliageNetAssetNode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFoliageNetAssetNode>();
	}
};
static_assert(alignof(UFoliageNetAssetNode) == 0x000008, "Wrong alignment on UFoliageNetAssetNode");
static_assert(sizeof(UFoliageNetAssetNode) == 0x000030, "Wrong size on UFoliageNetAssetNode");

// Class FoliageNetRuntime.IFoliageNetFunLibInterface
// 0x0000 (0x0000 - 0x0000)
class IIFoliageNetFunLibInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IFoliageNetFunLibInterface">();
	}
	static class IIFoliageNetFunLibInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IIFoliageNetFunLibInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IIFoliageNetFunLibInterface) == 0x000001, "Wrong alignment on IIFoliageNetFunLibInterface");
static_assert(sizeof(IIFoliageNetFunLibInterface) == 0x000001, "Wrong size on IIFoliageNetFunLibInterface");

}

