#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZiplineObj_h

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.ExecuteUbergraph_BP_ZiplineObj_h
// 0x0038 (0x0038 - 0x0000)
struct BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class ASolarCharacter*                  K2Node_Event_InCharacter;                          // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ASolarCharacter*                  K2Node_Event_InCharacter_2;                        // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarUserWidget*                       CallFunc__c__Create_Widget_And_Display_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ASolarCharacter*                  K2Node_Event_InCharacter_1;                        // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ZipLineUMG_C*                       K2Node_DynamicCast_AsUI_Zip_Line_UMG;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h");
static_assert(sizeof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h) == 0x000038, "Wrong size on BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, EntryPoint) == 0x000000, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, K2Node_Event_InCharacter) == 0x000008, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::K2Node_Event_InCharacter' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, K2Node_Event_InCharacter_2) == 0x000010, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::K2Node_Event_InCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, CallFunc__c__Create_Widget_And_Display_ReturnValue) == 0x000018, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::CallFunc__c__Create_Widget_And_Display_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, K2Node_Event_InCharacter_1) == 0x000020, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::K2Node_Event_InCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, K2Node_DynamicCast_AsUI_Zip_Line_UMG) == 0x000028, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::K2Node_DynamicCast_AsUI_Zip_Line_UMG' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h, CallFunc_IsValid_ReturnValue_2) == 0x000033, "Member 'BP_ZiplineObj_h_C_ExecuteUbergraph_BP_ZiplineObj_h::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.K2_OnGoZip
// 0x0008 (0x0008 - 0x0000)
struct BP_ZiplineObj_h_C_K2_OnGoZip final
{
public:
	const class ASolarCharacter*                  InCharacter;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZiplineObj_h_C_K2_OnGoZip) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_K2_OnGoZip");
static_assert(sizeof(BP_ZiplineObj_h_C_K2_OnGoZip) == 0x000008, "Wrong size on BP_ZiplineObj_h_C_K2_OnGoZip");
static_assert(offsetof(BP_ZiplineObj_h_C_K2_OnGoZip, InCharacter) == 0x000000, "Member 'BP_ZiplineObj_h_C_K2_OnGoZip::InCharacter' has a wrong offset!");

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.K2_OnZiplineEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap final
{
public:
	const class ASolarCharacter*                  InCharacter;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap");
static_assert(sizeof(BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap) == 0x000008, "Wrong size on BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap");
static_assert(offsetof(BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap, InCharacter) == 0x000000, "Member 'BP_ZiplineObj_h_C_K2_OnZiplineEndOverlap::InCharacter' has a wrong offset!");

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.K2_OnZiplineBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap final
{
public:
	const class ASolarCharacter*                  InCharacter;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap");
static_assert(sizeof(BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap) == 0x000008, "Wrong size on BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap");
static_assert(offsetof(BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap, InCharacter) == 0x000000, "Member 'BP_ZiplineObj_h_C_K2_OnZiplineBeginOverlap::InCharacter' has a wrong offset!");

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.GetAnchorComponents
// 0x0050 (0x0050 - 0x0000)
struct BP_ZiplineObj_h_C_GetAnchorComponents final
{
public:
	class USceneComponent*                        PointA;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StartA;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EndA;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxA;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LandA;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PointB;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StartB;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EndB;                                              // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxB;                                              // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LandB;                                             // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZiplineObj_h_C_GetAnchorComponents) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_GetAnchorComponents");
static_assert(sizeof(BP_ZiplineObj_h_C_GetAnchorComponents) == 0x000050, "Wrong size on BP_ZiplineObj_h_C_GetAnchorComponents");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, PointA) == 0x000000, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::PointA' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, StartA) == 0x000008, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::StartA' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, EndA) == 0x000010, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::EndA' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, BoxA) == 0x000018, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::BoxA' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, LandA) == 0x000020, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::LandA' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, PointB) == 0x000028, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::PointB' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, StartB) == 0x000030, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::StartB' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, EndB) == 0x000038, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::EndB' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, BoxB) == 0x000040, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::BoxB' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_GetAnchorComponents, LandB) == 0x000048, "Member 'BP_ZiplineObj_h_C_GetAnchorComponents::LandB' has a wrong offset!");

// Function BP_ZiplineObj_h.BP_ZiplineObj_h_C.FixZipLocation
// 0x0440 (0x0440 - 0x0000)
struct BP_ZiplineObj_h_C_FixZipLocation final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcSideRotation_Rotation;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x010C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0220(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x03B4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ZiplineObj_h_C_FixZipLocation) == 0x000008, "Wrong alignment on BP_ZiplineObj_h_C_FixZipLocation");
static_assert(sizeof(BP_ZiplineObj_h_C_FixZipLocation) == 0x000440, "Wrong size on BP_ZiplineObj_h_C_FixZipLocation");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, Temp_object_Variable) == 0x000000, "Member 'BP_ZiplineObj_h_C_FixZipLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, Temp_object_Variable_1) == 0x000010, "Member 'BP_ZiplineObj_h_C_FixZipLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_CalcSideRotation_Rotation) == 0x000020, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_CalcSideRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00002C, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000038, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00003C, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F4, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000100, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x00010C, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000194, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000198, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A4, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A5, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Time) == 0x0001A8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Distance) == 0x0001AC, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0001BC, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Normal) == 0x0001C8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D4, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_PhysMat) == 0x0001E0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitActor) == 0x0001E8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001F0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0001F8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitItem) == 0x000200, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000204, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000214, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000220, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0002A8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002A9, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002AA, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002AB, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Time_1) == 0x0002AC, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Distance_1) == 0x0002B0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Location_1) == 0x0002B4, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002C0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_Normal_1) == 0x0002CC, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002D8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x0002E8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitActor_1) == 0x0002F0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x0002F8, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000300, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_HitItem_1) == 0x000308, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x00030C, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x000310, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x00031C, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000328, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0003B0, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZiplineObj_h_C_FixZipLocation, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0003B4, "Member 'BP_ZiplineObj_h_C_FixZipLocation::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

}

