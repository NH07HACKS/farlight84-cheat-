#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Input_Device

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Input_Device.UI_Input_Device_C.SetBlendPlatform
// 0x0001 (0x0001 - 0x0000)
struct UI_Input_Device_C_SetBlendPlatform final
{
public:
	bool                                          UseIcon_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Input_Device_C_SetBlendPlatform) == 0x000001, "Wrong alignment on UI_Input_Device_C_SetBlendPlatform");
static_assert(sizeof(UI_Input_Device_C_SetBlendPlatform) == 0x000001, "Wrong size on UI_Input_Device_C_SetBlendPlatform");
static_assert(offsetof(UI_Input_Device_C_SetBlendPlatform, UseIcon_0) == 0x000000, "Member 'UI_Input_Device_C_SetBlendPlatform::UseIcon_0' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.SetSizeState
// 0x0040 (0x0040 - 0x0000)
struct UI_Input_Device_C_SetSizeState final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Input_Device_C_SetSizeState) == 0x000008, "Wrong alignment on UI_Input_Device_C_SetSizeState");
static_assert(sizeof(UI_Input_Device_C_SetSizeState) == 0x000040, "Wrong size on UI_Input_Device_C_SetSizeState");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_byte_Variable) == 0x000000, "Member 'UI_Input_Device_C_SetSizeState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_byte_Variable_1) == 0x000001, "Member 'UI_Input_Device_C_SetSizeState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_byte_Variable_2) == 0x000002, "Member 'UI_Input_Device_C_SetSizeState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_object_Variable) == 0x000008, "Member 'UI_Input_Device_C_SetSizeState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_object_Variable_1) == 0x000010, "Member 'UI_Input_Device_C_SetSizeState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_object_Variable_2) == 0x000018, "Member 'UI_Input_Device_C_SetSizeState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_object_Variable_3) == 0x000020, "Member 'UI_Input_Device_C_SetSizeState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_bool_Variable) == 0x000028, "Member 'UI_Input_Device_C_SetSizeState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_byte_Variable_3) == 0x000029, "Member 'UI_Input_Device_C_SetSizeState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_byte_Variable_4) == 0x00002A, "Member 'UI_Input_Device_C_SetSizeState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, Temp_bool_Variable_1) == 0x00002B, "Member 'UI_Input_Device_C_SetSizeState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, K2Node_Select_Default) == 0x00002C, "Member 'UI_Input_Device_C_SetSizeState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'UI_Input_Device_C_SetSizeState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, K2Node_Select_Default_1) == 0x000030, "Member 'UI_Input_Device_C_SetSizeState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_SetSizeState, K2Node_Select_Default_2) == 0x000038, "Member 'UI_Input_Device_C_SetSizeState::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.UpdateInputType
// 0x0001 (0x0001 - 0x0000)
struct UI_Input_Device_C_UpdateInputType final
{
public:
	ECommonInputType                              InputDevice;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Input_Device_C_UpdateInputType) == 0x000001, "Wrong alignment on UI_Input_Device_C_UpdateInputType");
static_assert(sizeof(UI_Input_Device_C_UpdateInputType) == 0x000001, "Wrong size on UI_Input_Device_C_UpdateInputType");
static_assert(offsetof(UI_Input_Device_C_UpdateInputType, InputDevice) == 0x000000, "Member 'UI_Input_Device_C_UpdateInputType::InputDevice' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.SetIconColor
// 0x0010 (0x0010 - 0x0000)
struct UI_Input_Device_C_SetIconColor final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Input_Device_C_SetIconColor) == 0x000004, "Wrong alignment on UI_Input_Device_C_SetIconColor");
static_assert(sizeof(UI_Input_Device_C_SetIconColor) == 0x000010, "Wrong size on UI_Input_Device_C_SetIconColor");
static_assert(offsetof(UI_Input_Device_C_SetIconColor, InColor) == 0x000000, "Member 'UI_Input_Device_C_SetIconColor::InColor' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.ExecuteUbergraph_UI_Input_Device
// 0x0028 (0x0028 - 0x0000)
struct UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_8;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable_9;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Event_InputDeVice;                          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_InColor;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device) == 0x000004, "Wrong alignment on UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device");
static_assert(sizeof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device) == 0x000028, "Wrong size on UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, EntryPoint) == 0x000000, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable) == 0x000005, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_1) == 0x000006, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_2) == 0x000007, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_3) == 0x000008, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_4) == 0x000009, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_5) == 0x00000A, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_6) == 0x00000B, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_7) == 0x00000C, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_8) == 0x00000D, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, Temp_byte_Variable_9) == 0x00000E, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, K2Node_Event_InputDeVice) == 0x00000F, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::K2Node_Event_InputDeVice' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, K2Node_Select_Default) == 0x000010, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, K2Node_Select_Default_1) == 0x000011, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, K2Node_Event_InColor) == 0x000014, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::K2Node_Event_InColor' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000024, "Member 'UI_Input_Device_C_ExecuteUbergraph_UI_Input_Device::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Input_Device_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Input_Device_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Input_Device_C_PreConstruct");
static_assert(sizeof(UI_Input_Device_C_PreConstruct) == 0x000001, "Wrong size on UI_Input_Device_C_PreConstruct");
static_assert(offsetof(UI_Input_Device_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Input_Device_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Input_Device.UI_Input_Device_C.OnCollectDynamicAtlasImages
// 0x0030 (0x0030 - 0x0000)
struct UI_Input_Device_C_OnCollectDynamicAtlasImages final
{
public:
	TArray<struct FDynamicAtlasCollectParams>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDynamicAtlasCollectParams             K2Node_MakeStruct_DynamicAtlasCollectParams;       // 0x0010(0x0010)(NoDestructor, ContainsInstancedReference)
	TArray<struct FDynamicAtlasCollectParams>     K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(UI_Input_Device_C_OnCollectDynamicAtlasImages) == 0x000008, "Wrong alignment on UI_Input_Device_C_OnCollectDynamicAtlasImages");
static_assert(sizeof(UI_Input_Device_C_OnCollectDynamicAtlasImages) == 0x000030, "Wrong size on UI_Input_Device_C_OnCollectDynamicAtlasImages");
static_assert(offsetof(UI_Input_Device_C_OnCollectDynamicAtlasImages, ReturnValue) == 0x000000, "Member 'UI_Input_Device_C_OnCollectDynamicAtlasImages::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_OnCollectDynamicAtlasImages, K2Node_MakeStruct_DynamicAtlasCollectParams) == 0x000010, "Member 'UI_Input_Device_C_OnCollectDynamicAtlasImages::K2Node_MakeStruct_DynamicAtlasCollectParams' has a wrong offset!");
static_assert(offsetof(UI_Input_Device_C_OnCollectDynamicAtlasImages, K2Node_MakeArray_Array) == 0x000020, "Member 'UI_Input_Device_C_OnCollectDynamicAtlasImages::K2Node_MakeArray_Array' has a wrong offset!");

}

