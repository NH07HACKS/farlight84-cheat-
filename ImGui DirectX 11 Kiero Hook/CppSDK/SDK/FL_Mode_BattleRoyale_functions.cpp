#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_Mode_BattleRoyale

#include "Basic.hpp"

#include "FL_Mode_BattleRoyale_classes.hpp"
#include "FL_Mode_BattleRoyale_parameters.hpp"


namespace SDK
{

// Function FL_Mode_BattleRoyale.FL_Mode_BattleRoyale_C.[s]UpdateTeamCountMax
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UFL_Mode_BattleRoyale_C::_s_UpdateTeamCountMax(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_Mode_BattleRoyale_C", "[s]UpdateTeamCountMax");

	Params::FL_Mode_BattleRoyale_C__s_UpdateTeamCountMax Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_Mode_BattleRoyale.FL_Mode_BattleRoyale_C.OutputLog
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BattleLog_BattleRoyale                LogType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TMap<class FString, class FString>&InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_Mode_BattleRoyale_C::OutputLog(E_BattleLog_BattleRoyale LogType, const TMap<class FString, class FString>& InputPin, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_Mode_BattleRoyale_C", "OutputLog");

	Params::FL_Mode_BattleRoyale_C_OutputLog Parms{};

	Parms.LogType = LogType;
	Parms.InputPin = std::move(InputPin);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

