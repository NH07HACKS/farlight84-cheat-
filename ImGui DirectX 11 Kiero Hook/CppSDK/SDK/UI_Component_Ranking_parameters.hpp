#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Ranking

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_RankingType_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Ranking.UI_Component_Ranking_C.ExecuteUbergraph_UI_Component_Ranking
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking) == 0x000008, "Wrong alignment on UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking");
static_assert(sizeof(UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking) == 0x000010, "Wrong size on UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking");
static_assert(offsetof(UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking, EntryPoint) == 0x000000, "Member 'UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_Component_Ranking_C_ExecuteUbergraph_UI_Component_Ranking::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_Component_Ranking.UI_Component_Ranking_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Ranking_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Ranking_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Ranking_C_PreConstruct");
static_assert(sizeof(UI_Component_Ranking_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Ranking_C_PreConstruct");
static_assert(offsetof(UI_Component_Ranking_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Ranking_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Ranking.UI_Component_Ranking_C.SetRankingState
// 0x0198 (0x0198 - 0x0000)
struct UI_Component_Ranking_C_SetRankingState final
{
public:
	E_RankingType                                 RankingType_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable_2;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable_3;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable_8;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_4;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RankingType                                 Temp_byte_Variable_9;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0138(0x0030)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_5;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Ranking_C_SetRankingState) == 0x000008, "Wrong alignment on UI_Component_Ranking_C_SetRankingState");
static_assert(sizeof(UI_Component_Ranking_C_SetRankingState) == 0x000198, "Wrong size on UI_Component_Ranking_C_SetRankingState");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, RankingType_0) == 0x000000, "Member 'UI_Component_Ranking_C_SetRankingState::RankingType_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable) == 0x000004, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable) == 0x000034, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable) == 0x000038, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_1) == 0x000040, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_2) == 0x000048, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_3) == 0x000050, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_1) == 0x000058, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_3) == 0x00005C, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_4) == 0x00006C, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_5) == 0x00007C, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_6) == 0x00008C, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_2) == 0x00009C, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_7) == 0x0000A0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_8) == 0x0000B0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_9) == 0x0000C0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_10) == 0x0000D0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_3) == 0x0000E0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_4) == 0x0000E1, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_5) == 0x0000E2, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_6) == 0x0000E3, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_7) == 0x0000E4, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_8) == 0x0000E5, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_4) == 0x0000E8, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_5) == 0x0000F0, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_6) == 0x0000F8, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_object_Variable_7) == 0x000100, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_struct_Variable_11) == 0x000108, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, Temp_byte_Variable_9) == 0x000118, "Member 'UI_Component_Ranking_C_SetRankingState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default) == 0x00011C, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default_1) == 0x000130, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_MakeStruct_FontOutlineSettings) == 0x000138, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default_2) == 0x000168, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default_3) == 0x000178, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default_4) == 0x000188, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetRankingState, K2Node_Select_Default_5) == 0x000190, "Member 'UI_Component_Ranking_C_SetRankingState::K2Node_Select_Default_5' has a wrong offset!");

// Function UI_Component_Ranking.UI_Component_Ranking_C.Set Size
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Ranking_C_Set_Size final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Ranking_C_Set_Size) == 0x000004, "Wrong alignment on UI_Component_Ranking_C_Set_Size");
static_assert(sizeof(UI_Component_Ranking_C_Set_Size) == 0x000010, "Wrong size on UI_Component_Ranking_C_Set_Size");
static_assert(offsetof(UI_Component_Ranking_C_Set_Size, Size_0) == 0x000000, "Member 'UI_Component_Ranking_C_Set_Size::Size_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_Set_Size, CallFunc_BreakVector2D_X) == 0x000008, "Member 'UI_Component_Ranking_C_Set_Size::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_Set_Size, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'UI_Component_Ranking_C_Set_Size::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function UI_Component_Ranking.UI_Component_Ranking_C.SetHaveLogo
// 0x0009 (0x0009 - 0x0000)
struct UI_Component_Ranking_C_SetHaveLogo final
{
public:
	bool                                          IshaveLogo_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Ranking_C_SetHaveLogo) == 0x000001, "Wrong alignment on UI_Component_Ranking_C_SetHaveLogo");
static_assert(sizeof(UI_Component_Ranking_C_SetHaveLogo) == 0x000009, "Wrong size on UI_Component_Ranking_C_SetHaveLogo");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, IshaveLogo_0) == 0x000000, "Member 'UI_Component_Ranking_C_SetHaveLogo::IshaveLogo_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_byte_Variable_2) == 0x000005, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, Temp_byte_Variable_3) == 0x000006, "Member 'UI_Component_Ranking_C_SetHaveLogo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, K2Node_Select_Default) == 0x000007, "Member 'UI_Component_Ranking_C_SetHaveLogo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Ranking_C_SetHaveLogo, K2Node_Select_Default_1) == 0x000008, "Member 'UI_Component_Ranking_C_SetHaveLogo::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Component_Ranking.UI_Component_Ranking_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Ranking_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Ranking_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_Ranking_C_GetModuleName");
static_assert(sizeof(UI_Component_Ranking_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_Ranking_C_GetModuleName");
static_assert(offsetof(UI_Component_Ranking_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_Ranking_C_GetModuleName::ReturnValue' has a wrong offset!");

}

