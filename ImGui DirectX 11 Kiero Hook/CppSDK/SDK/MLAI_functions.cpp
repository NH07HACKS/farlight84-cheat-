#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MLAI

#include "Basic.hpp"

#include "MLAI_classes.hpp"
#include "MLAI_parameters.hpp"


namespace SDK
{

// Function MLAI.AIServiceManagerCCS.OnAfterUpdateDataByDamage
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FSolarPointDamageEvent*          DamageEvent                                            (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class ASolarCharacter*                  DamageSufffer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ActualDamage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayerDamage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIServiceManagerCCS::OnAfterUpdateDataByDamage(struct FSolarPointDamageEvent* DamageEvent, class ASolarCharacter* DamageSufffer, float ActualDamage, float PlayerDamage, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIServiceManagerCCS", "OnAfterUpdateDataByDamage");

	Params::AIServiceManagerCCS_OnAfterUpdateDataByDamage Parms{};

	Parms.DamageSufffer = DamageSufffer;
	Parms.ActualDamage = ActualDamage;
	Parms.PlayerDamage = PlayerDamage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DamageEvent != nullptr)
		*DamageEvent = std::move(Parms.DamageEvent);
}


// Function MLAI.AIServiceManagerCCS.OnCharacterDead
// (Final, Native, Private)
// Parameters:
// class ASolarCharacter*                  DeathCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIServiceManagerCCS::OnCharacterDead(class ASolarCharacter* DeathCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIServiceManagerCCS", "OnCharacterDead");

	Params::AIServiceManagerCCS_OnCharacterDead Parms{};

	Parms.DeathCharacter = DeathCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLAI.AIServiceManagerCCS.OnConnected
// (Final, Native, Protected)
// Parameters:
// int32                                   ConnectionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIServiceManagerCCS::OnConnected(int32 ConnectionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIServiceManagerCCS", "OnConnected");

	Params::AIServiceManagerCCS_OnConnected Parms{};

	Parms.ConnectionId = ConnectionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLAI.AIServiceManagerCCS.OnDisconnected
// (Final, Native, Protected)
// Parameters:
// int32                                   ConnectionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIServiceManagerCCS::OnDisconnected(int32 ConnectionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIServiceManagerCCS", "OnDisconnected");

	Params::AIServiceManagerCCS_OnDisconnected Parms{};

	Parms.ConnectionId = ConnectionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MLAI.AIServiceManagerCCS.OnMessageReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// int32                                   ConnectionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>*                          Message                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIServiceManagerCCS::OnMessageReceived(int32 ConnectionId, TArray<uint8>* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIServiceManagerCCS", "OnMessageReceived");

	Params::AIServiceManagerCCS_OnMessageReceived Parms{};

	Parms.ConnectionId = ConnectionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function MLAI.MLAISubsystem.SetupAIService
// (Final, Native, Public)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMLAISubsystem::SetupAIService(class UWorld* InWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MLAISubsystem", "SetupAIService");

	Params::MLAISubsystem_SetupAIService Parms{};

	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

