#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LocalizeText

#include "Basic.hpp"

#include "LocalizeText_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LocalizeText.LocalizeText.GetDynamicFontMaterial
// 0x0008 (0x0008 - 0x0000)
struct LocalizeText_GetDynamicFontMaterial final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_GetDynamicFontMaterial) == 0x000008, "Wrong alignment on LocalizeText_GetDynamicFontMaterial");
static_assert(sizeof(LocalizeText_GetDynamicFontMaterial) == 0x000008, "Wrong size on LocalizeText_GetDynamicFontMaterial");
static_assert(offsetof(LocalizeText_GetDynamicFontMaterial, ReturnValue) == 0x000000, "Member 'LocalizeText_GetDynamicFontMaterial::ReturnValue' has a wrong offset!");

// Function LocalizeText.LocalizeText.GetDynamicOutlineMaterial
// 0x0008 (0x0008 - 0x0000)
struct LocalizeText_GetDynamicOutlineMaterial final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_GetDynamicOutlineMaterial) == 0x000008, "Wrong alignment on LocalizeText_GetDynamicOutlineMaterial");
static_assert(sizeof(LocalizeText_GetDynamicOutlineMaterial) == 0x000008, "Wrong size on LocalizeText_GetDynamicOutlineMaterial");
static_assert(offsetof(LocalizeText_GetDynamicOutlineMaterial, ReturnValue) == 0x000000, "Member 'LocalizeText_GetDynamicOutlineMaterial::ReturnValue' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetAutoWrapText
// 0x0001 (0x0001 - 0x0000)
struct LocalizeText_SetAutoWrapText final
{
public:
	bool                                          InAutoTextWrap;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetAutoWrapText) == 0x000001, "Wrong alignment on LocalizeText_SetAutoWrapText");
static_assert(sizeof(LocalizeText_SetAutoWrapText) == 0x000001, "Wrong size on LocalizeText_SetAutoWrapText");
static_assert(offsetof(LocalizeText_SetAutoWrapText, InAutoTextWrap) == 0x000000, "Member 'LocalizeText_SetAutoWrapText::InAutoTextWrap' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetCapitalOnly
// 0x0001 (0x0001 - 0x0000)
struct LocalizeText_SetCapitalOnly final
{
public:
	bool                                          bCapitalOnly;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetCapitalOnly) == 0x000001, "Wrong alignment on LocalizeText_SetCapitalOnly");
static_assert(sizeof(LocalizeText_SetCapitalOnly) == 0x000001, "Wrong size on LocalizeText_SetCapitalOnly");
static_assert(offsetof(LocalizeText_SetCapitalOnly, bCapitalOnly) == 0x000000, "Member 'LocalizeText_SetCapitalOnly::bCapitalOnly' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetColorAndOpacity
// 0x0028 (0x0028 - 0x0000)
struct LocalizeText_SetColorAndOpacity final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0028)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetColorAndOpacity) == 0x000008, "Wrong alignment on LocalizeText_SetColorAndOpacity");
static_assert(sizeof(LocalizeText_SetColorAndOpacity) == 0x000028, "Wrong size on LocalizeText_SetColorAndOpacity");
static_assert(offsetof(LocalizeText_SetColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'LocalizeText_SetColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetFont
// 0x0068 (0x0068 - 0x0000)
struct LocalizeText_SetFont final
{
public:
	struct FSlateFontInfo                         InFontInfo;                                        // 0x0000(0x0068)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetFont) == 0x000008, "Wrong alignment on LocalizeText_SetFont");
static_assert(sizeof(LocalizeText_SetFont) == 0x000068, "Wrong size on LocalizeText_SetFont");
static_assert(offsetof(LocalizeText_SetFont, InFontInfo) == 0x000000, "Member 'LocalizeText_SetFont::InFontInfo' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetMinDesiredWidth
// 0x0004 (0x0004 - 0x0000)
struct LocalizeText_SetMinDesiredWidth final
{
public:
	float                                         InMinDesiredWidth;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetMinDesiredWidth) == 0x000004, "Wrong alignment on LocalizeText_SetMinDesiredWidth");
static_assert(sizeof(LocalizeText_SetMinDesiredWidth) == 0x000004, "Wrong size on LocalizeText_SetMinDesiredWidth");
static_assert(offsetof(LocalizeText_SetMinDesiredWidth, InMinDesiredWidth) == 0x000000, "Member 'LocalizeText_SetMinDesiredWidth::InMinDesiredWidth' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct LocalizeText_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetOpacity) == 0x000004, "Wrong alignment on LocalizeText_SetOpacity");
static_assert(sizeof(LocalizeText_SetOpacity) == 0x000004, "Wrong size on LocalizeText_SetOpacity");
static_assert(offsetof(LocalizeText_SetOpacity, InOpacity) == 0x000000, "Member 'LocalizeText_SetOpacity::InOpacity' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetScaleRule
// 0x0001 (0x0001 - 0x0000)
struct LocalizeText_SetScaleRule final
{
public:
	ETextScaleRule                                InScaleRule;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetScaleRule) == 0x000001, "Wrong alignment on LocalizeText_SetScaleRule");
static_assert(sizeof(LocalizeText_SetScaleRule) == 0x000001, "Wrong size on LocalizeText_SetScaleRule");
static_assert(offsetof(LocalizeText_SetScaleRule, InScaleRule) == 0x000000, "Member 'LocalizeText_SetScaleRule::InScaleRule' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetShadowColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct LocalizeText_SetShadowColorAndOpacity final
{
public:
	struct FLinearColor                           InShadowColorAndOpacity;                           // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetShadowColorAndOpacity) == 0x000004, "Wrong alignment on LocalizeText_SetShadowColorAndOpacity");
static_assert(sizeof(LocalizeText_SetShadowColorAndOpacity) == 0x000010, "Wrong size on LocalizeText_SetShadowColorAndOpacity");
static_assert(offsetof(LocalizeText_SetShadowColorAndOpacity, InShadowColorAndOpacity) == 0x000000, "Member 'LocalizeText_SetShadowColorAndOpacity::InShadowColorAndOpacity' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetShadowOffset
// 0x0008 (0x0008 - 0x0000)
struct LocalizeText_SetShadowOffset final
{
public:
	struct FVector2D                              InShadowOffset;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetShadowOffset) == 0x000004, "Wrong alignment on LocalizeText_SetShadowOffset");
static_assert(sizeof(LocalizeText_SetShadowOffset) == 0x000008, "Wrong size on LocalizeText_SetShadowOffset");
static_assert(offsetof(LocalizeText_SetShadowOffset, InShadowOffset) == 0x000000, "Member 'LocalizeText_SetShadowOffset::InShadowOffset' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetStrikeBrush
// 0x0110 (0x0110 - 0x0000)
struct LocalizeText_SetStrikeBrush final
{
public:
	struct FSlateBrush                            InStrikeBrush;                                     // 0x0000(0x0110)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetStrikeBrush) == 0x000010, "Wrong alignment on LocalizeText_SetStrikeBrush");
static_assert(sizeof(LocalizeText_SetStrikeBrush) == 0x000110, "Wrong size on LocalizeText_SetStrikeBrush");
static_assert(offsetof(LocalizeText_SetStrikeBrush, InStrikeBrush) == 0x000000, "Member 'LocalizeText_SetStrikeBrush::InStrikeBrush' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetText
// 0x0018 (0x0018 - 0x0000)
struct LocalizeText_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetText) == 0x000008, "Wrong alignment on LocalizeText_SetText");
static_assert(sizeof(LocalizeText_SetText) == 0x000018, "Wrong size on LocalizeText_SetText");
static_assert(offsetof(LocalizeText_SetText, InText) == 0x000000, "Member 'LocalizeText_SetText::InText' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetVerticalAlign
// 0x0001 (0x0001 - 0x0000)
struct LocalizeText_SetVerticalAlign final
{
public:
	ETextVerticalAlign                            InScaleAlign;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetVerticalAlign) == 0x000001, "Wrong alignment on LocalizeText_SetVerticalAlign");
static_assert(sizeof(LocalizeText_SetVerticalAlign) == 0x000001, "Wrong size on LocalizeText_SetVerticalAlign");
static_assert(offsetof(LocalizeText_SetVerticalAlign, InScaleAlign) == 0x000000, "Member 'LocalizeText_SetVerticalAlign::InScaleAlign' has a wrong offset!");

// Function LocalizeText.LocalizeText.SetWrapTextAt
// 0x0004 (0x0004 - 0x0000)
struct LocalizeText_SetWrapTextAt final
{
public:
	float                                         InWrapTextAt;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_SetWrapTextAt) == 0x000004, "Wrong alignment on LocalizeText_SetWrapTextAt");
static_assert(sizeof(LocalizeText_SetWrapTextAt) == 0x000004, "Wrong size on LocalizeText_SetWrapTextAt");
static_assert(offsetof(LocalizeText_SetWrapTextAt, InWrapTextAt) == 0x000000, "Member 'LocalizeText_SetWrapTextAt::InWrapTextAt' has a wrong offset!");

// Function LocalizeText.LocalizeText.GetLocalizeKey
// 0x0010 (0x0010 - 0x0000)
struct LocalizeText_GetLocalizeKey final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_GetLocalizeKey) == 0x000008, "Wrong alignment on LocalizeText_GetLocalizeKey");
static_assert(sizeof(LocalizeText_GetLocalizeKey) == 0x000010, "Wrong size on LocalizeText_GetLocalizeKey");
static_assert(offsetof(LocalizeText_GetLocalizeKey, ReturnValue) == 0x000000, "Member 'LocalizeText_GetLocalizeKey::ReturnValue' has a wrong offset!");

// Function LocalizeText.LocalizeText.GetText
// 0x0018 (0x0018 - 0x0000)
struct LocalizeText_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeText_GetText) == 0x000008, "Wrong alignment on LocalizeText_GetText");
static_assert(sizeof(LocalizeText_GetText) == 0x000018, "Wrong size on LocalizeText_GetText");
static_assert(offsetof(LocalizeText_GetText, ReturnValue) == 0x000000, "Member 'LocalizeText_GetText::ReturnValue' has a wrong offset!");

// Function LocalizeText.LocalizeTransferAgent.GetLocalizeText
// 0x0030 (0x0030 - 0x0000)
struct LocalizeTransferAgent_GetLocalizeText final
{
public:
	class FString                                 Language;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LocalizeTransferAgent_GetLocalizeText) == 0x000008, "Wrong alignment on LocalizeTransferAgent_GetLocalizeText");
static_assert(sizeof(LocalizeTransferAgent_GetLocalizeText) == 0x000030, "Wrong size on LocalizeTransferAgent_GetLocalizeText");
static_assert(offsetof(LocalizeTransferAgent_GetLocalizeText, Language) == 0x000000, "Member 'LocalizeTransferAgent_GetLocalizeText::Language' has a wrong offset!");
static_assert(offsetof(LocalizeTransferAgent_GetLocalizeText, Key) == 0x000010, "Member 'LocalizeTransferAgent_GetLocalizeText::Key' has a wrong offset!");
static_assert(offsetof(LocalizeTransferAgent_GetLocalizeText, ReturnValue) == 0x000020, "Member 'LocalizeTransferAgent_GetLocalizeText::ReturnValue' has a wrong offset!");

}

