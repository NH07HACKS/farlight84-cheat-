#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Weapon_Tag_special

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Weapon_Tag_special.UI_Weapon_Tag_Special_C
// 0x0068 (0x0658 - 0x05F0)
class UUI_Weapon_Tag_Special_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_Bg;                                            // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_BG2;                                           // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Tag;                                           // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0618(0x0028)(Edit, BlueprintVisible)
	float                                         Opacity;                                           // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PCTxt_Font_Max;                                    // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MoblieTxt_Font_Max;                                // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PCHeight;                                          // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoblieHeight;                                      // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void ExecuteUbergraph_UI_Weapon_Tag_Special(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Weapon_Tag_Special_C">();
	}
	static class UUI_Weapon_Tag_Special_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Weapon_Tag_Special_C>();
	}
};
static_assert(alignof(UUI_Weapon_Tag_Special_C) == 0x000008, "Wrong alignment on UUI_Weapon_Tag_Special_C");
static_assert(sizeof(UUI_Weapon_Tag_Special_C) == 0x000658, "Wrong size on UUI_Weapon_Tag_Special_C");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Weapon_Tag_Special_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, Img_Bg) == 0x0005F8, "Member 'UUI_Weapon_Tag_Special_C::Img_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, Img_BG2) == 0x000600, "Member 'UUI_Weapon_Tag_Special_C::Img_BG2' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, SizeBox_0) == 0x000608, "Member 'UUI_Weapon_Tag_Special_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, Txt_Tag) == 0x000610, "Member 'UUI_Weapon_Tag_Special_C::Txt_Tag' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, Color) == 0x000618, "Member 'UUI_Weapon_Tag_Special_C::Color' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, Opacity) == 0x000640, "Member 'UUI_Weapon_Tag_Special_C::Opacity' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, PCTxt_Font_Max) == 0x000644, "Member 'UUI_Weapon_Tag_Special_C::PCTxt_Font_Max' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, MoblieTxt_Font_Max) == 0x000648, "Member 'UUI_Weapon_Tag_Special_C::MoblieTxt_Font_Max' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, PCHeight) == 0x00064C, "Member 'UUI_Weapon_Tag_Special_C::PCHeight' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Tag_Special_C, MoblieHeight) == 0x000650, "Member 'UUI_Weapon_Tag_Special_C::MoblieHeight' has a wrong offset!");

}

