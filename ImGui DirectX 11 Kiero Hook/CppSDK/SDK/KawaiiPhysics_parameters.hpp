#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KawaiiPhysics

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function KawaiiPhysics.KawaiiPhysics_CustomExternalForce.Apply
// 0x0D20 (0x0D20 - 0x0000)
struct KawaiiPhysics_CustomExternalForce_Apply final
{
public:
	struct FAnimNode_KawaiiPhysics                Node;                                              // 0x0000(0x0CE0)(Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         ModifyBoneIndex;                                   // 0x0CE0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USkeletalMeshComponent*           SkelComp;                                          // 0x0CE8(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             BoneTransform;                                     // 0x0CF0(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysics_CustomExternalForce_Apply) == 0x000010, "Wrong alignment on KawaiiPhysics_CustomExternalForce_Apply");
static_assert(sizeof(KawaiiPhysics_CustomExternalForce_Apply) == 0x000D20, "Wrong size on KawaiiPhysics_CustomExternalForce_Apply");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_Apply, Node) == 0x000000, "Member 'KawaiiPhysics_CustomExternalForce_Apply::Node' has a wrong offset!");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_Apply, ModifyBoneIndex) == 0x000CE0, "Member 'KawaiiPhysics_CustomExternalForce_Apply::ModifyBoneIndex' has a wrong offset!");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_Apply, SkelComp) == 0x000CE8, "Member 'KawaiiPhysics_CustomExternalForce_Apply::SkelComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_Apply, BoneTransform) == 0x000CF0, "Member 'KawaiiPhysics_CustomExternalForce_Apply::BoneTransform' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysics_CustomExternalForce.IsDebugEnabled
// 0x0001 (0x0001 - 0x0000)
struct KawaiiPhysics_CustomExternalForce_IsDebugEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KawaiiPhysics_CustomExternalForce_IsDebugEnabled) == 0x000001, "Wrong alignment on KawaiiPhysics_CustomExternalForce_IsDebugEnabled");
static_assert(sizeof(KawaiiPhysics_CustomExternalForce_IsDebugEnabled) == 0x000001, "Wrong size on KawaiiPhysics_CustomExternalForce_IsDebugEnabled");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_IsDebugEnabled, ReturnValue) == 0x000000, "Member 'KawaiiPhysics_CustomExternalForce_IsDebugEnabled::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysics_CustomExternalForce.PreApply
// 0x0CF0 (0x0CF0 - 0x0000)
struct KawaiiPhysics_CustomExternalForce_PreApply final
{
public:
	struct FAnimNode_KawaiiPhysics                Node;                                              // 0x0000(0x0CE0)(Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	const class USkeletalMeshComponent*           SkelComp;                                          // 0x0CE0(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CE8[0x8];                                      // 0x0CE8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysics_CustomExternalForce_PreApply) == 0x000010, "Wrong alignment on KawaiiPhysics_CustomExternalForce_PreApply");
static_assert(sizeof(KawaiiPhysics_CustomExternalForce_PreApply) == 0x000CF0, "Wrong size on KawaiiPhysics_CustomExternalForce_PreApply");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_PreApply, Node) == 0x000000, "Member 'KawaiiPhysics_CustomExternalForce_PreApply::Node' has a wrong offset!");
static_assert(offsetof(KawaiiPhysics_CustomExternalForce_PreApply, SkelComp) == 0x000CE0, "Member 'KawaiiPhysics_CustomExternalForce_PreApply::SkelComp' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.AddExternalBasicForcesToComponent
// 0x0048 (0x0048 - 0x0000)
struct KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Basic> ExternalForces;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Owner;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0042(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0043(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent");
static_assert(sizeof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent) == 0x000048, "Wrong size on KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, MeshComp) == 0x000000, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, ExternalForces) == 0x000008, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::ExternalForces' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, Owner) == 0x000018, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::Owner' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, FilterTags) == 0x000020, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::FilterTags' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, bFilterExactMatch) == 0x000040, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, bIsOneShot) == 0x000041, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::bIsOneShot' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, bSupportChildComponent) == 0x000042, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::bSupportChildComponent' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent, ReturnValue) == 0x000043, "Member 'KawaiiPhysicsLibrary_AddExternalBasicForcesToComponent::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.AddExternalCurveForcesToComponent
// 0x0048 (0x0048 - 0x0000)
struct KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Curve> ExternalForces;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Owner;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0042(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0043(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent");
static_assert(sizeof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent) == 0x000048, "Wrong size on KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, MeshComp) == 0x000000, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, ExternalForces) == 0x000008, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::ExternalForces' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, Owner) == 0x000018, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::Owner' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, FilterTags) == 0x000020, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::FilterTags' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, bFilterExactMatch) == 0x000040, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, bIsOneShot) == 0x000041, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::bIsOneShot' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, bSupportChildComponent) == 0x000042, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::bSupportChildComponent' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent, ReturnValue) == 0x000043, "Member 'KawaiiPhysicsLibrary_AddExternalCurveForcesToComponent::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.AddExternalGravityForcesToComponent
// 0x0048 (0x0048 - 0x0000)
struct KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Gravity> ExternalForces;                              // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Owner;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0042(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0043(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent");
static_assert(sizeof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent) == 0x000048, "Wrong size on KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, MeshComp) == 0x000000, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, ExternalForces) == 0x000008, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::ExternalForces' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, Owner) == 0x000018, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::Owner' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, FilterTags) == 0x000020, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::FilterTags' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, bFilterExactMatch) == 0x000040, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, bIsOneShot) == 0x000041, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::bIsOneShot' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, bSupportChildComponent) == 0x000042, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::bSupportChildComponent' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent, ReturnValue) == 0x000043, "Member 'KawaiiPhysicsLibrary_AddExternalGravityForcesToComponent::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.AddExternalWindForcesToComponent
// 0x0048 (0x0048 - 0x0000)
struct KawaiiPhysicsLibrary_AddExternalWindForcesToComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Wind> ExternalForces;                                 // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Owner;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0020(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOneShot;                                        // 0x0041(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0042(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0043(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_AddExternalWindForcesToComponent");
static_assert(sizeof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent) == 0x000048, "Wrong size on KawaiiPhysicsLibrary_AddExternalWindForcesToComponent");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, MeshComp) == 0x000000, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, ExternalForces) == 0x000008, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::ExternalForces' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, Owner) == 0x000018, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::Owner' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, FilterTags) == 0x000020, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::FilterTags' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, bFilterExactMatch) == 0x000040, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, bIsOneShot) == 0x000041, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::bIsOneShot' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, bSupportChildComponent) == 0x000042, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::bSupportChildComponent' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_AddExternalWindForcesToComponent, ReturnValue) == 0x000043, "Member 'KawaiiPhysicsLibrary_AddExternalWindForcesToComponent::ReturnValue' has a wrong offset!");

// Function KawaiiPhysics.KawaiiPhysicsLibrary.RemoveExternalForcesFromComponent
// 0x0038 (0x0038 - 0x0000)
struct KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Owner;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0010(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0031(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent) == 0x000008, "Wrong alignment on KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent");
static_assert(sizeof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent) == 0x000038, "Wrong size on KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, MeshComp) == 0x000000, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::MeshComp' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, Owner) == 0x000008, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::Owner' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, FilterTags) == 0x000010, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::FilterTags' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, bFilterExactMatch) == 0x000030, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, bSupportChildComponent) == 0x000031, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::bSupportChildComponent' has a wrong offset!");
static_assert(offsetof(KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent, ReturnValue) == 0x000032, "Member 'KawaiiPhysicsLibrary_RemoveExternalForcesFromComponent::ReturnValue' has a wrong offset!");

}

