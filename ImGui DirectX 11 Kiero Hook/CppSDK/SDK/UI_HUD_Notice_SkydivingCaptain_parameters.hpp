#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_SkydivingCaptain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain
// 0x0018 (0x0018 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           K2Node_CustomEvent_CanvasPanel_0;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StaticPostAkEventByName_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain) == 0x000018, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain, EntryPoint) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain, K2Node_CustomEvent_CanvasPanel_0) == 0x000008, "Member 'UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain::K2Node_CustomEvent_CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain, CallFunc_StaticPostAkEventByName_ReturnValue) == 0x000014, "Member 'UI_HUD_Notice_SkydivingCaptain_C_ExecuteUbergraph_UI_HUD_Notice_SkydivingCaptain::CallFunc_StaticPostAkEventByName_ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_PreConstruct");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_PreConstruct");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.PlayAppearSound
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound final
{
public:
	class UCanvasPanel*                           CanvasPanel_0_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound) == 0x000008, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound, CanvasPanel_0_0) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_PlayAppearSound::CanvasPanel_0_0' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.SetCaptain
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_SetCaptain final
{
public:
	bool                                          Captain_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_SetCaptain) == 0x000001, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_SetCaptain");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_SetCaptain) == 0x000001, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_SetCaptain");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_SetCaptain, Captain_0) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_SetCaptain::Captain_0' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.GetEnterAnimation
// 0x0018 (0x0018 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation) == 0x000018, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation, Temp_bool_Variable) == 0x000008, "Member 'UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation, K2Node_Select_Default) == 0x000010, "Member 'UI_HUD_Notice_SkydivingCaptain_C_GetEnterAnimation::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_GetExitAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.RefreshContent
// 0x01B0 (0x01B0 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_RefreshContent final
{
public:
	int32                                         TeamIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 playerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLocalPlayerIsLeader;                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFollowLeader;                                    // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NewLocalVar_0;                                     // 0x0020(0x0018)(Edit, BlueprintVisible)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalText_bSuccess;                 // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TryGetLocalText_LocalText;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalText_bSuccess_1;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TryGetLocalText_LocalText_1;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0138(0x0018)()
	bool                                          CallFunc_TryGetLocalText_bSuccess_2;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TryGetLocalText_LocalText_2;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlreadyShowing_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0170(0x0018)()
	bool                                          CallFunc_IsAlreadyShowing_ReturnValue_1;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x018C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_RefreshContent");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent) == 0x0001B0, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_RefreshContent");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, TeamIndex) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::TeamIndex' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, playerName) == 0x000008, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::playerName' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, bLocalPlayerIsLeader) == 0x000018, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::bLocalPlayerIsLeader' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, IsFollowLeader) == 0x000019, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::IsFollowLeader' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, NewLocalVar_0) == 0x000020, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_byte_Variable) == 0x000038, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_byte_Variable_1) == 0x000058, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, K2Node_MakeArray_Array) == 0x0000A0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable) == 0x0000B0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable_1) == 0x0000B4, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable_2) == 0x0000B8, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable_3) == 0x0000BC, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable_4) == 0x0000C0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_int_Variable_5) == 0x0000C4, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, K2Node_Select_Default) == 0x0000C8, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_bSuccess) == 0x0000CC, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_LocalText) == 0x0000D0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_LocalText' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_PlayAnimation_ReturnValue) == 0x000110, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_bSuccess_1) == 0x000118, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_LocalText_1) == 0x000120, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_LocalText_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_PlayAnimation_ReturnValue_1) == 0x000130, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000138, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_bSuccess_2) == 0x000150, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_TryGetLocalText_LocalText_2) == 0x000158, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_TryGetLocalText_LocalText_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_IsAlreadyShowing_ReturnValue) == 0x000168, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_IsAlreadyShowing_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000170, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_IsAlreadyShowing_ReturnValue_1) == 0x000188, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_IsAlreadyShowing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, K2Node_CreateDelegate_OutputDelegate) == 0x00018C, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, Temp_bool_Variable) == 0x00019C, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A0, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_RefreshContent, K2Node_Select_Default_1) == 0x0001A8, "Member 'UI_HUD_Notice_SkydivingCaptain_C_RefreshContent::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.IsAlreadyShowing
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing) == 0x000001, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing) == 0x000001, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_IsAlreadyShowing::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0 final
{
public:
	class UCanvasPanel*                           CanvasPanel_0_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0) == 0x000008, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0, CanvasPanel_0_0) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_SequenceEvent__ENTRYPOINTUI_HUD_Notice_SkydivingCaptain_0::CanvasPanel_0_0' has a wrong offset!");

// Function UI_HUD_Notice_SkydivingCaptain.UI_HUD_Notice_SkydivingCaptain_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_Notice_SkydivingCaptain_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_SkydivingCaptain_C_GetModuleName) == 0x000008, "Wrong alignment on UI_HUD_Notice_SkydivingCaptain_C_GetModuleName");
static_assert(sizeof(UI_HUD_Notice_SkydivingCaptain_C_GetModuleName) == 0x000010, "Wrong size on UI_HUD_Notice_SkydivingCaptain_C_GetModuleName");
static_assert(offsetof(UI_HUD_Notice_SkydivingCaptain_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_SkydivingCaptain_C_GetModuleName::ReturnValue' has a wrong offset!");

}

