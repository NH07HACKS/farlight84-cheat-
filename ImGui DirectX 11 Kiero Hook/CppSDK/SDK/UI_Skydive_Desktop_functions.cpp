#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Skydive_Desktop

#include "Basic.hpp"

#include "UI_Skydive_Desktop_classes.hpp"
#include "UI_Skydive_Desktop_parameters.hpp"


namespace SDK
{

// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.ExecuteUbergraph_UI_Skydive_Desktop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Skydive_Desktop_C::ExecuteUbergraph_UI_Skydive_Desktop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "ExecuteUbergraph_UI_Skydive_Desktop");

	Params::UI_Skydive_Desktop_C_ExecuteUbergraph_UI_Skydive_Desktop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.ReceivePlatformLayout
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EUSolarWidgetLayoutType                 InLayoutType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Skydive_Desktop_C::ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "ReceivePlatformLayout");

	Params::UI_Skydive_Desktop_C_ReceivePlatformLayout Parms{};

	Parms.InLayoutType = InLayoutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.ClearFollowKeyProgress
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Skydive_Desktop_C::ClearFollowKeyProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "ClearFollowKeyProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.StartFollowKeyProgress
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Skydive_Desktop_C::StartFollowKeyProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "StartFollowKeyProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SetParachuteButtonVisibility
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Skydive_Desktop_C::SetParachuteButtonVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SetParachuteButtonVisibility");

	Params::UI_Skydive_Desktop_C_SetParachuteButtonVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SetCruisePlayerNumVisibility
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Skydive_Desktop_C::SetCruisePlayerNumVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SetCruisePlayerNumVisibility");

	Params::UI_Skydive_Desktop_C_SetCruisePlayerNumVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.OnCruiseCharacterCountUpdated
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TotalCount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CruiseCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Skydive_Desktop_C::OnCruiseCharacterCountUpdated(int32 TotalCount, int32 CruiseCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "OnCruiseCharacterCountUpdated");

	Params::UI_Skydive_Desktop_C_OnCruiseCharacterCountUpdated Parms{};

	Parms.TotalCount = TotalCount;
	Parms.CruiseCount = CruiseCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SetRelationButtonGroupVisibility
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Skydive_Desktop_C::SetRelationButtonGroupVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SetRelationButtonGroupVisibility");

	Params::UI_Skydive_Desktop_C_SetRelationButtonGroupVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SwitchToFollow
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Skydive_Desktop_C::SwitchToFollow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SwitchToFollow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SwitchToTransfer
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Skydive_Desktop_C::SwitchToTransfer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SwitchToTransfer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SwitchToUnfollow
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Skydive_Desktop_C::SwitchToUnfollow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SwitchToUnfollow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.RefreshSkydivingLeaderContent
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    playerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bLocalPlayerIsLeader                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIsFollowLeader                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Skydive_Desktop_C::RefreshSkydivingLeaderContent(int32 TeamIndex, const class FString& playerName, bool bLocalPlayerIsLeader, bool bIsFollowLeader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "RefreshSkydivingLeaderContent");

	Params::UI_Skydive_Desktop_C_RefreshSkydivingLeaderContent Parms{};

	Parms.TeamIndex = TeamIndex;
	Parms.playerName = std::move(playerName);
	Parms.bLocalPlayerIsLeader = bLocalPlayerIsLeader;
	Parms.bIsFollowLeader = bIsFollowLeader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Skydive_Desktop.UI_Skydive_Desktop_C.SetSkydiveNoticeVisibility
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Skydive_Desktop_C::SetSkydiveNoticeVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Skydive_Desktop_C", "SetSkydiveNoticeVisibility");

	Params::UI_Skydive_Desktop_C_SetSkydiveNoticeVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}

}

