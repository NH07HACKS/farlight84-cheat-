#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_Compensation

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.ExecuteUbergraph_UI_HUD_Notice_Compensation
// 0x000C (0x000C - 0x0000)
struct UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation) == 0x000004, "Wrong alignment on UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation");
static_assert(sizeof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation) == 0x00000C, "Wrong size on UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, EntryPoint) == 0x000000, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, Temp_bool_Variable) == 0x000005, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, Temp_bool_Variable_1) == 0x000006, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, K2Node_Event_InLayoutType) == 0x000007, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation, K2Node_Select_Default) == 0x000008, "Member 'UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_Compensation_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Compensation_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Notice_Compensation_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Notice_Compensation_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Notice_Compensation_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Notice_Compensation_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_Compensation_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Compensation_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_Compensation_C_GetEnterAnimation");
static_assert(sizeof(UI_HUD_Notice_Compensation_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_Compensation_C_GetEnterAnimation");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_Compensation_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_Compensation_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_Compensation_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_Compensation_C_GetExitAnimation");
static_assert(sizeof(UI_HUD_Notice_Compensation_C_GetExitAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_Compensation_C_GetExitAnimation");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_Compensation_C_GetExitAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.UpdateStyle
// 0x0148 (0x0148 - 0x0000)
struct UI_HUD_Notice_Compensation_C_UpdateStyle final
{
public:
	struct FNoticeData                            NoticeData;                                        // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         LocalizationID;                                    // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x00F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0128(0x0018)()
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_Compensation_C_UpdateStyle) == 0x000008, "Wrong alignment on UI_HUD_Notice_Compensation_C_UpdateStyle");
static_assert(sizeof(UI_HUD_Notice_Compensation_C_UpdateStyle) == 0x000148, "Wrong size on UI_HUD_Notice_Compensation_C_UpdateStyle");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, NoticeData) == 0x000000, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::NoticeData' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, LocalizationID) == 0x0000E8, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::LocalizationID' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, Temp_string_Variable) == 0x0000F0, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, CallFunc_Map_Find_Value) == 0x000100, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, CallFunc_GetNoticeFormatText_ReturnValue) == 0x000118, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, CallFunc_Conv_StringToText_ReturnValue) == 0x000128, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_Compensation_C_UpdateStyle, K2Node_SwitchString_CmpSuccess) == 0x000140, "Member 'UI_HUD_Notice_Compensation_C_UpdateStyle::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

}

