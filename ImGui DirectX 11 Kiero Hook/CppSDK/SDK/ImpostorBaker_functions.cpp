#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImpostorBaker

#include "Basic.hpp"

#include "ImpostorBaker_classes.hpp"
#include "ImpostorBaker_parameters.hpp"


namespace SDK
{

// Function ImpostorBaker.KismetImpostorBakerLibrary.ConvertProceduralToStatic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UProceduralMeshComponent*         ProceduralMeshComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MeshName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    MeshPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UKismetImpostorBakerLibrary::ConvertProceduralToStatic(class UProceduralMeshComponent* ProceduralMeshComponent, class FName MeshName, const class FString& MeshPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KismetImpostorBakerLibrary", "ConvertProceduralToStatic");

	Params::KismetImpostorBakerLibrary_ConvertProceduralToStatic Parms{};

	Parms.ProceduralMeshComponent = ProceduralMeshComponent;
	Parms.MeshName = MeshName;
	Parms.MeshPath = std::move(MeshPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

