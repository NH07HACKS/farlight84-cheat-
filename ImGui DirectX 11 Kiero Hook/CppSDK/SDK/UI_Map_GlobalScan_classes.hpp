#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Map_GlobalScan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_BuddyGoldState_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Map_GlobalScan.UI_Map_GlobalScan_C
// 0x0038 (0x0670 - 0x0638)
class UUI_Map_GlobalScan_C final : public UUI_Global_Scan
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0638(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_FirstScan_01;                                  // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_FirstScan_02;                                  // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_FirstScan_03;                                  // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_MapScanning;                                   // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_MapScanning_Gold;                              // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsEnemy;                                           // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BuddyGoldState                              BuddyState;                                        // 0x0669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Map_GlobalScan(int32 EntryPoint);
	void SetBuddyState(const struct FGameplayTag& RadarTag);
	void PreConstruct(bool IsDesignTime);
	void SetIsEnemy(bool IsEnemy_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Map_GlobalScan_C">();
	}
	static class UUI_Map_GlobalScan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Map_GlobalScan_C>();
	}
};
static_assert(alignof(UUI_Map_GlobalScan_C) == 0x000008, "Wrong alignment on UUI_Map_GlobalScan_C");
static_assert(sizeof(UUI_Map_GlobalScan_C) == 0x000670, "Wrong size on UUI_Map_GlobalScan_C");
static_assert(offsetof(UUI_Map_GlobalScan_C, UberGraphFrame) == 0x000638, "Member 'UUI_Map_GlobalScan_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, Img_FirstScan_01) == 0x000640, "Member 'UUI_Map_GlobalScan_C::Img_FirstScan_01' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, Img_FirstScan_02) == 0x000648, "Member 'UUI_Map_GlobalScan_C::Img_FirstScan_02' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, Img_FirstScan_03) == 0x000650, "Member 'UUI_Map_GlobalScan_C::Img_FirstScan_03' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, Img_MapScanning) == 0x000658, "Member 'UUI_Map_GlobalScan_C::Img_MapScanning' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, Img_MapScanning_Gold) == 0x000660, "Member 'UUI_Map_GlobalScan_C::Img_MapScanning_Gold' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, IsEnemy) == 0x000668, "Member 'UUI_Map_GlobalScan_C::IsEnemy' has a wrong offset!");
static_assert(offsetof(UUI_Map_GlobalScan_C, BuddyState) == 0x000669, "Member 'UUI_Map_GlobalScan_C::BuddyState' has a wrong offset!");

}

