#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RotationBar

#include "Basic.hpp"

#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function UI_RotationBar.UI_RotationBar_C.ContainMapID
// 0x0008 (0x0008 - 0x0000)
struct UI_RotationBar_C_ContainMapID final
{
public:
	int32                                         InMapID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_RotationBar_C_ContainMapID) == 0x000004, "Wrong alignment on UI_RotationBar_C_ContainMapID");
static_assert(sizeof(UI_RotationBar_C_ContainMapID) == 0x000008, "Wrong size on UI_RotationBar_C_ContainMapID");
static_assert(offsetof(UI_RotationBar_C_ContainMapID, InMapID) == 0x000000, "Member 'UI_RotationBar_C_ContainMapID::InMapID' has a wrong offset!");
static_assert(offsetof(UI_RotationBar_C_ContainMapID, ReturnValue) == 0x000004, "Member 'UI_RotationBar_C_ContainMapID::ReturnValue' has a wrong offset!");

// Function UI_RotationBar.UI_RotationBar_C.GetLocationIconIDs
// 0x0018 (0x0018 - 0x0000)
struct UI_RotationBar_C_GetLocationIconIDs final
{
public:
	int32                                         InMapID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_RotationBar_C_GetLocationIconIDs) == 0x000008, "Wrong alignment on UI_RotationBar_C_GetLocationIconIDs");
static_assert(sizeof(UI_RotationBar_C_GetLocationIconIDs) == 0x000018, "Wrong size on UI_RotationBar_C_GetLocationIconIDs");
static_assert(offsetof(UI_RotationBar_C_GetLocationIconIDs, InMapID) == 0x000000, "Member 'UI_RotationBar_C_GetLocationIconIDs::InMapID' has a wrong offset!");
static_assert(offsetof(UI_RotationBar_C_GetLocationIconIDs, ReturnValue) == 0x000008, "Member 'UI_RotationBar_C_GetLocationIconIDs::ReturnValue' has a wrong offset!");

// Function UI_RotationBar.UI_RotationBar_C.GetBuildingData
// 0x0028 (0x0028 - 0x0000)
struct UI_RotationBar_C_GetBuildingData final
{
public:
	int32                                         InIconID;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBuildingData                          ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_RotationBar_C_GetBuildingData) == 0x000008, "Wrong alignment on UI_RotationBar_C_GetBuildingData");
static_assert(sizeof(UI_RotationBar_C_GetBuildingData) == 0x000028, "Wrong size on UI_RotationBar_C_GetBuildingData");
static_assert(offsetof(UI_RotationBar_C_GetBuildingData, InIconID) == 0x000000, "Member 'UI_RotationBar_C_GetBuildingData::InIconID' has a wrong offset!");
static_assert(offsetof(UI_RotationBar_C_GetBuildingData, ReturnValue) == 0x000008, "Member 'UI_RotationBar_C_GetBuildingData::ReturnValue' has a wrong offset!");

// Function UI_RotationBar.UI_RotationBar_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_RotationBar_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_RotationBar_C_GetModuleName) == 0x000008, "Wrong alignment on UI_RotationBar_C_GetModuleName");
static_assert(sizeof(UI_RotationBar_C_GetModuleName) == 0x000010, "Wrong size on UI_RotationBar_C_GetModuleName");
static_assert(offsetof(UI_RotationBar_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_RotationBar_C_GetModuleName::ReturnValue' has a wrong offset!");

}

