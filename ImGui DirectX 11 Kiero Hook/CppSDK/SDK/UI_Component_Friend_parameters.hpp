#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Friend

#include "Basic.hpp"

#include "E_Type_FriendHover_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Solarland_structs.hpp"
#include "E_Type_Friends_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Friend.UI_Component_Friend_C.ExecuteUbergraph_UI_Component_Friend
// 0x02F0 (0x02F0 - 0x0000)
struct UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_4;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_5;                              // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoAtlasType                                Temp_byte_Variable_6;                              // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_7;                              // 0x000E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAutoAtlasType                                Temp_byte_Variable_8;                              // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_9;                              // 0x0011(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_1;                         // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0080(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F0(0x0070)(ConstParm)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0180(0x0068)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x01E8(0x0068)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrushAtlasAdapter                K2Node_Select_Default_2;                           // 0x0260(0x0010)(ConstParm, NoDestructor)
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_2;                         // 0x0270(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_3;                         // 0x0288(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                K2Node_Select_Default_3;                           // 0x02A0(0x0010)(ConstParm, NoDestructor)
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_4;                         // 0x02B0(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_5;                         // 0x02C8(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                K2Node_Select_Default_4;                           // 0x02E0(0x0010)(ConstParm, NoDestructor)
};
static_assert(alignof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend) == 0x000008, "Wrong alignment on UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend");
static_assert(sizeof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend) == 0x0002F0, "Wrong size on UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, EntryPoint) == 0x000000, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_bool_Variable) == 0x000004, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable) == 0x000005, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_1) == 0x000006, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_bool_Variable_1) == 0x000007, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_2) == 0x000008, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_3) == 0x000009, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_4) == 0x00000A, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_5) == 0x00000B, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_bool_Variable_2) == 0x00000C, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_6) == 0x00000D, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_7) == 0x00000E, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_bool_Variable_3) == 0x00000F, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_8) == 0x000010, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_byte_Variable_9) == 0x000011, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value) == 0x000018, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value_1) == 0x000030, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue_1) == 0x000040, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, Temp_bool_Variable_4) == 0x000041, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Event_IsDesignTime) == 0x000042, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Event_InLayoutType) == 0x000043, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_SwitchEnum_CmpSuccess) == 0x000044, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Event_MyGeometry) == 0x000048, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Event_MouseEvent_1) == 0x000080, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Event_MouseEvent) == 0x0000F0, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000160, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000168, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00016C, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000170, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000174, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000178, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Select_Default) == 0x00017C, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Select_Default_1) == 0x00017D, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_MakeStruct_SlateFontInfo) == 0x000180, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_MakeStruct_SlateFontInfo_1) == 0x0001E8, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000250, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000254, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x000258, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x00025C, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Select_Default_2) == 0x000260, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value_2) == 0x000270, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue_2) == 0x000280, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value_3) == 0x000288, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue_3) == 0x000298, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Select_Default_3) == 0x0002A0, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value_4) == 0x0002B0, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue_4) == 0x0002C0, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_Value_5) == 0x0002C8, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, CallFunc_Map_Find_ReturnValue_5) == 0x0002D8, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend, K2Node_Select_Default_4) == 0x0002E0, "Member 'UI_Component_Friend_C_ExecuteUbergraph_UI_Component_Friend::K2Node_Select_Default_4' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Component_Friend_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Friend_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Component_Friend_C_OnMouseLeave");
static_assert(sizeof(UI_Component_Friend_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Component_Friend_C_OnMouseLeave");
static_assert(offsetof(UI_Component_Friend_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Component_Friend_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Component_Friend_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Friend_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Component_Friend_C_OnMouseEnter");
static_assert(sizeof(UI_Component_Friend_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Component_Friend_C_OnMouseEnter");
static_assert(offsetof(UI_Component_Friend_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Component_Friend_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Component_Friend_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Friend_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Component_Friend_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Component_Friend_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Component_Friend_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Component_Friend_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Component_Friend_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Friend_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Friend_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Friend_C_PreConstruct");
static_assert(sizeof(UI_Component_Friend_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Friend_C_PreConstruct");
static_assert(offsetof(UI_Component_Friend_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Friend_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetTypeFriend
// 0x0024 (0x0024 - 0x0000)
struct UI_Component_Friend_C_SetTypeFriend final
{
public:
	E_Type_Friends                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Friends                                Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetTypeFriend) == 0x000004, "Wrong alignment on UI_Component_Friend_C_SetTypeFriend");
static_assert(sizeof(UI_Component_Friend_C_SetTypeFriend) == 0x000024, "Wrong size on UI_Component_Friend_C_SetTypeFriend");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_1) == 0x000001, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_2) == 0x000002, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_3) == 0x000003, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_4) == 0x000004, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_5) == 0x000005, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_byte_Variable_6) == 0x000006, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_int_Variable) == 0x000008, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_int_Variable_1) == 0x00000C, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_int_Variable_2) == 0x000010, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_int_Variable_3) == 0x000014, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, Temp_int_Variable_4) == 0x000018, "Member 'UI_Component_Friend_C_SetTypeFriend::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, K2Node_Select_Default) == 0x00001C, "Member 'UI_Component_Friend_C_SetTypeFriend::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTypeFriend, K2Node_Select_Default_1) == 0x000020, "Member 'UI_Component_Friend_C_SetTypeFriend::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.InitWidget
// 0x0018 (0x0018 - 0x0000)
struct UI_Component_Friend_C_InitWidget final
{
public:
	class FString                                 InPlayerID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          InIsBotAI;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Friend_C_InitWidget) == 0x000008, "Wrong alignment on UI_Component_Friend_C_InitWidget");
static_assert(sizeof(UI_Component_Friend_C_InitWidget) == 0x000018, "Wrong size on UI_Component_Friend_C_InitWidget");
static_assert(offsetof(UI_Component_Friend_C_InitWidget, InPlayerID) == 0x000000, "Member 'UI_Component_Friend_C_InitWidget::InPlayerID' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_InitWidget, InIsBotAI) == 0x000010, "Member 'UI_Component_Friend_C_InitWidget::InIsBotAI' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetisPC
// 0x001C (0x001C - 0x0000)
struct UI_Component_Friend_C_SetisPC final
{
public:
	bool                                          IsPC_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetisPC) == 0x000004, "Wrong alignment on UI_Component_Friend_C_SetisPC");
static_assert(sizeof(UI_Component_Friend_C_SetisPC) == 0x00001C, "Wrong size on UI_Component_Friend_C_SetisPC");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, IsPC_0) == 0x000000, "Member 'UI_Component_Friend_C_SetisPC::IsPC_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Friend_C_SetisPC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, Temp_int_Variable) == 0x000004, "Member 'UI_Component_Friend_C_SetisPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, Temp_int_Variable_1) == 0x000008, "Member 'UI_Component_Friend_C_SetisPC::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, Temp_bool_Variable_1) == 0x00000C, "Member 'UI_Component_Friend_C_SetisPC::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, K2Node_Select_Default) == 0x000010, "Member 'UI_Component_Friend_C_SetisPC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, Temp_int_Variable_2) == 0x000014, "Member 'UI_Component_Friend_C_SetisPC::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetisPC, K2Node_Select_Default_1) == 0x000018, "Member 'UI_Component_Friend_C_SetisPC::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetSize
// 0x0004 (0x0004 - 0x0000)
struct UI_Component_Friend_C_SetSize final
{
public:
	int32                                         inInt;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetSize) == 0x000004, "Wrong alignment on UI_Component_Friend_C_SetSize");
static_assert(sizeof(UI_Component_Friend_C_SetSize) == 0x000004, "Wrong size on UI_Component_Friend_C_SetSize");
static_assert(offsetof(UI_Component_Friend_C_SetSize, inInt) == 0x000000, "Member 'UI_Component_Friend_C_SetSize::inInt' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetColor
// 0x0150 (0x0150 - 0x0000)
struct UI_Component_Friend_C_SetColor final
{
public:
	E_Type_Friends                                Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Follow;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Following;                                         // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Followed;                                          // 0x0058(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Friend;                                            // 0x0080(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Temp_struct_Variable;                              // 0x00A8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D0(0x0028)()
	E_Type_Friends                                Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0100(0x0028)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0128(0x0028)()
};
static_assert(alignof(UI_Component_Friend_C_SetColor) == 0x000008, "Wrong alignment on UI_Component_Friend_C_SetColor");
static_assert(sizeof(UI_Component_Friend_C_SetColor) == 0x000150, "Wrong size on UI_Component_Friend_C_SetColor");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Index_0) == 0x000000, "Member 'UI_Component_Friend_C_SetColor::Index_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Follow) == 0x000008, "Member 'UI_Component_Friend_C_SetColor::Follow' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Following) == 0x000030, "Member 'UI_Component_Friend_C_SetColor::Following' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Followed) == 0x000058, "Member 'UI_Component_Friend_C_SetColor::Followed' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Friend) == 0x000080, "Member 'UI_Component_Friend_C_SetColor::Friend' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Temp_struct_Variable) == 0x0000A8, "Member 'UI_Component_Friend_C_SetColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, K2Node_MakeStruct_SlateColor) == 0x0000D0, "Member 'UI_Component_Friend_C_SetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, Temp_byte_Variable) == 0x0000F8, "Member 'UI_Component_Friend_C_SetColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, K2Node_MakeStruct_SlateColor_1) == 0x000100, "Member 'UI_Component_Friend_C_SetColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetColor, K2Node_Select_Default) == 0x000128, "Member 'UI_Component_Friend_C_SetColor::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetIsRelationship
// 0x0005 (0x0005 - 0x0000)
struct UI_Component_Friend_C_SetIsRelationship final
{
public:
	bool                                          Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetIsRelationship) == 0x000001, "Wrong alignment on UI_Component_Friend_C_SetIsRelationship");
static_assert(sizeof(UI_Component_Friend_C_SetIsRelationship) == 0x000005, "Wrong size on UI_Component_Friend_C_SetIsRelationship");
static_assert(offsetof(UI_Component_Friend_C_SetIsRelationship, Index_0) == 0x000000, "Member 'UI_Component_Friend_C_SetIsRelationship::Index_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetIsRelationship, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Friend_C_SetIsRelationship::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetIsRelationship, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Friend_C_SetIsRelationship::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetIsRelationship, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Friend_C_SetIsRelationship::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetIsRelationship, K2Node_Select_Default) == 0x000004, "Member 'UI_Component_Friend_C_SetIsRelationship::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetTxtPadding
// 0x0048 (0x0048 - 0x0000)
struct UI_Component_Friend_C_SetTxtPadding final
{
public:
	float                                         InPadding;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_2;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_3;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_4;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USizeBoxSlot*                           CallFunc_SlotAsSizeBoxSlot_ReturnValue_5;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetTxtPadding) == 0x000008, "Wrong alignment on UI_Component_Friend_C_SetTxtPadding");
static_assert(sizeof(UI_Component_Friend_C_SetTxtPadding) == 0x000048, "Wrong size on UI_Component_Friend_C_SetTxtPadding");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, InPadding) == 0x000000, "Member 'UI_Component_Friend_C_SetTxtPadding::InPadding' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, K2Node_MakeStruct_Margin) == 0x000004, "Member 'UI_Component_Friend_C_SetTxtPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue) == 0x000018, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue_1) == 0x000020, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue_2) == 0x000028, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue_3) == 0x000030, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue_4) == 0x000038, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetTxtPadding, CallFunc_SlotAsSizeBoxSlot_ReturnValue_5) == 0x000040, "Member 'UI_Component_Friend_C_SetTxtPadding::CallFunc_SlotAsSizeBoxSlot_ReturnValue_5' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.SetHoverType
// 0x000B (0x000B - 0x0000)
struct UI_Component_Friend_C_SetHoverType final
{
public:
	E_Type_FriendHover                            HoverType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hover_0;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_SetHoverType) == 0x000001, "Wrong alignment on UI_Component_Friend_C_SetHoverType");
static_assert(sizeof(UI_Component_Friend_C_SetHoverType) == 0x00000B, "Wrong size on UI_Component_Friend_C_SetHoverType");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, HoverType_0) == 0x000000, "Member 'UI_Component_Friend_C_SetHoverType::HoverType_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Hover_0) == 0x000001, "Member 'UI_Component_Friend_C_SetHoverType::Hover_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Friend_C_SetHoverType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'UI_Component_Friend_C_SetHoverType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_byte_Variable_1) == 0x000004, "Member 'UI_Component_Friend_C_SetHoverType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_bool_Variable) == 0x000005, "Member 'UI_Component_Friend_C_SetHoverType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_byte_Variable_2) == 0x000006, "Member 'UI_Component_Friend_C_SetHoverType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_byte_Variable_3) == 0x000007, "Member 'UI_Component_Friend_C_SetHoverType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, K2Node_Select_Default) == 0x000008, "Member 'UI_Component_Friend_C_SetHoverType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, Temp_bool_Variable_1) == 0x000009, "Member 'UI_Component_Friend_C_SetHoverType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Friend_C_SetHoverType, K2Node_Select_Default_1) == 0x00000A, "Member 'UI_Component_Friend_C_SetHoverType::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Component_Friend.UI_Component_Friend_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Friend_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Friend_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_Friend_C_GetModuleName");
static_assert(sizeof(UI_Component_Friend_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_Friend_C_GetModuleName");
static_assert(offsetof(UI_Component_Friend_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_Friend_C_GetModuleName::ReturnValue' has a wrong offset!");

}

