#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeneralFunctionLibrary_Map

#include "Basic.hpp"

#include "GeneralFunctionLibrary_Map_classes.hpp"
#include "GeneralFunctionLibrary_Map_parameters.hpp"


namespace SDK
{

// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[S]Create Air Drop by Out Come ID Auto Trace Ground Height
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                掉落位置                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class UClass*                           Spawner类对象_ASolarTreasureBoxSpawner_                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChestID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseAirship                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   NoticeId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayEventFilterConfig&Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSuperAirDrop                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::_S_Create_Air_Drop_by_Out_Come_ID_Auto_Trace_Ground_Height(class UObject* WorldContextObject, const struct FTransform& 掉落位置, class UClass* Spawner类对象_ASolarTreasureBoxSpawner_, int32 ChestID, bool bUseAirship, int32 NoticeId, const struct FGameplayEventFilterConfig& Config, bool IsSuperAirDrop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[S]Create Air Drop by Out Come ID Auto Trace Ground Height");

	Params::GeneralFunctionLibrary_Map_C__S_Create_Air_Drop_by_Out_Come_ID_Auto_Trace_Ground_Height Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.掉落位置 = std::move(掉落位置);
	Parms.Spawner类对象_ASolarTreasureBoxSpawner_ = Spawner类对象_ASolarTreasureBoxSpawner_;
	Parms.ChestID = ChestID;
	Parms.bUseAirship = bUseAirship;
	Parms.NoticeId = NoticeId;
	Parms.Config = std::move(Config);
	Parms.IsSuperAirDrop = IsSuperAirDrop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[ S]Create Air Drop by Item ID Auto Trace Ground Height
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                掉落位置                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class UClass*                           Spawner类对象_ASolarTreasureBoxSpawner_                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChestID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   箱子类型                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::__S_Create_Air_Drop_by_Item_ID_Auto_Trace_Ground_Height(class UObject* WorldContextObject, const struct FTransform& 掉落位置, class UClass* Spawner类对象_ASolarTreasureBoxSpawner_, int32 ChestID, int32 箱子类型, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[ S]Create Air Drop by Item ID Auto Trace Ground Height");

	Params::GeneralFunctionLibrary_Map_C___S_Create_Air_Drop_by_Item_ID_Auto_Trace_Ground_Height Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.掉落位置 = std::move(掉落位置);
	Parms.Spawner类对象_ASolarTreasureBoxSpawner_ = Spawner类对象_ASolarTreasureBoxSpawner_;
	Parms.ChestID = ChestID;
	Parms.箱子类型 = 箱子类型;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[S]Create Air Drop by Out Come ID Auto Trace Ground Height_Rain
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<struct FTransform>&        掉落位置                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UClass*                           Spawner类对象_ASolarTreasureBoxSpawner_                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ChestID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseAirship                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   NoticeId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayEventFilterConfig&Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsSuperAirDrop                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::_S_Create_Air_Drop_by_Out_Come_ID_Auto_Trace_Ground_Height_Rain(class UObject* WorldContextObject, const TArray<struct FTransform>& 掉落位置, class UClass* Spawner类对象_ASolarTreasureBoxSpawner_, int32 ChestID, bool bUseAirship, int32 NoticeId, const struct FGameplayEventFilterConfig& Config, bool IsSuperAirDrop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[S]Create Air Drop by Out Come ID Auto Trace Ground Height_Rain");

	Params::GeneralFunctionLibrary_Map_C__S_Create_Air_Drop_by_Out_Come_ID_Auto_Trace_Ground_Height_Rain Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.掉落位置 = std::move(掉落位置);
	Parms.Spawner类对象_ASolarTreasureBoxSpawner_ = Spawner类对象_ASolarTreasureBoxSpawner_;
	Parms.ChestID = ChestID;
	Parms.bUseAirship = bUseAirship;
	Parms.NoticeId = NoticeId;
	Parms.Config = std::move(Config);
	Parms.IsSuperAirDrop = IsSuperAirDrop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[ C]Debug Drawing Poison Circle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>&                 CenterArr                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext1                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<float>&                          Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::__C_Debug_Drawing_Poison_Circle(TArray<struct FVector>& CenterArr, class UObject* __WorldContext1, TArray<float>& Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[ C]Debug Drawing Poison Circle");

	Params::GeneralFunctionLibrary_Map_C___C_Debug_Drawing_Poison_Circle Parms{};

	Parms.CenterArr = std::move(CenterArr);
	Parms.__WorldContext1 = __WorldContext1;
	Parms.Radius = std::move(Radius);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	CenterArr = std::move(Parms.CenterArr);
	Radius = std::move(Parms.Radius);
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[ C]Get Viewport Focused Character
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASolarCharacter**                 Character                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::__C_Get_Viewport_Focused_Character(const class UObject* WorldContextObject, class UObject* __WorldContext, class ASolarCharacter** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[ C]Get Viewport Focused Character");

	Params::GeneralFunctionLibrary_Map_C___C_Get_Viewport_Focused_Character Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.CircularInterceptPoint
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 CenterPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LargeRadius                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SmallRadius                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TruncationAngle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LargePointStart                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LargePointEnd                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       SmallPointStart                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       SmallPointEnd                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::CircularInterceptPoint(const struct FVector2D& CenterPoint, float LargeRadius, float SmallRadius, float TruncationAngle, class UObject* __WorldContext, struct FVector2D* LargePointStart, struct FVector2D* LargePointEnd, struct FVector2D* SmallPointStart, struct FVector2D* SmallPointEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "CircularInterceptPoint");

	Params::GeneralFunctionLibrary_Map_C_CircularInterceptPoint Parms{};

	Parms.CenterPoint = std::move(CenterPoint);
	Parms.LargeRadius = LargeRadius;
	Parms.SmallRadius = SmallRadius;
	Parms.TruncationAngle = TruncationAngle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LargePointStart != nullptr)
		*LargePointStart = std::move(Parms.LargePointStart);

	if (LargePointEnd != nullptr)
		*LargePointEnd = std::move(Parms.LargePointEnd);

	if (SmallPointStart != nullptr)
		*SmallPointStart = std::move(Parms.SmallPointStart);

	if (SmallPointEnd != nullptr)
		*SmallPointEnd = std::move(Parms.SmallPointEnd);
}


// Function GeneralFunctionLibrary_Map.GeneralFunctionLibrary_Map_C.[ S]Get Point On Line
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector2D>&               Sample                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// const struct FVector2D&                 StartPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       TargetPoint                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGeneralFunctionLibrary_Map_C::__S_Get_Point_On_Line(TArray<struct FVector2D>& Sample, const struct FVector2D& StartPoint, float Length, class UObject* __WorldContext, struct FVector2D* TargetPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GeneralFunctionLibrary_Map_C", "[ S]Get Point On Line");

	Params::GeneralFunctionLibrary_Map_C___S_Get_Point_On_Line Parms{};

	Parms.Sample = std::move(Sample);
	Parms.StartPoint = std::move(StartPoint);
	Parms.Length = Length;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Sample = std::move(Parms.Sample);

	if (TargetPoint != nullptr)
		*TargetPoint = std::move(Parms.TargetPoint);
}

}

