#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Formula_BattleRoyale

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "E_BattleState_BattleRoyale_structs.hpp"
#include "E_DefenderPlayerType_structs.hpp"


namespace SDK::Params
{

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetSettlementRewards
// 0x0168 (0x0168 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetSettlementRewards final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSettlementReward>              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	int32                                         MatchRuleID;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRealPersonIndex;                                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRealPerson;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemID;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ItemDrop;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ASolarPlayerState*                      PS;                                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RealPersonCount;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMatchRuleID_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_BattleEndRankSettlement CallFunc_GetRowData_ReturnValue;                 // 0x0088(0x0030)(ConstParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarGameState*                        K2Node_DynamicCast_AsSolar_Game_State;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSettlementReward                      K2Node_MakeStruct_SettlementReward;                // 0x00D8(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSettlementReward>              K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader_1;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetRowKeys_OutKeys;                       // 0x0110(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_GetRowKeys_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_BattleEndRankSettlement CallFunc_GetRowData_ReturnValue_1;               // 0x0130(0x0030)(ConstParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetSettlementRewards) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetSettlementRewards");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetSettlementRewards) == 0x000168, "Wrong size on BP_Formula_BattleRoyale_C_GetSettlementRewards");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, MatchRuleID) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::MatchRuleID' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, MaxRealPersonIndex) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::MaxRealPersonIndex' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, MaxRealPerson) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::MaxRealPerson' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, ItemID) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::ItemID' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, ItemDrop) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::ItemDrop' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, PS) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::PS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, RealPersonCount) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::RealPersonCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, Temp_int_Variable) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Divide_IntInt_ReturnValue) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Multiply_IntInt_ReturnValue) == 0x000054, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, Temp_bool_Variable) == 0x000068, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Not_PreBool_ReturnValue) == 0x00006A, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetMatchRuleID_ReturnValue) == 0x00006C, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetMatchRuleID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000078, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetRowData_ReturnValue) == 0x000088, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, K2Node_DynamicCast_AsSolar_Game_State) == 0x0000C0, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::K2Node_DynamicCast_AsSolar_Game_State' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, K2Node_MakeStruct_SettlementReward) == 0x0000D8, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::K2Node_MakeStruct_SettlementReward' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc__A_GetExcelTableReader_TablesReader_1) == 0x000100, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc__A_GetExcelTableReader_TablesReader_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetRowKeys_OutKeys) == 0x000110, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetRowKeys_OutKeys' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetRowKeys_ReturnValue) == 0x000120, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetRowKeys_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Get_Item_2) == 0x000124, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GetRowData_ReturnValue_1) == 0x000130, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GetRowData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000161, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000162, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000163, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_BooleanAND_ReturnValue_1) == 0x000164, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetSettlementRewards, CallFunc_BooleanAND_ReturnValue_2) == 0x000165, "Member 'BP_Formula_BattleRoyale_C_GetSettlementRewards::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.IsSettlementBagItem
// 0x0028 (0x0028 - 0x0000)
struct BP_Formula_BattleRoyale_C_IsSettlementBagItem final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMatchState_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_IsSettlementBagItem) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_IsSettlementBagItem");
static_assert(sizeof(BP_Formula_BattleRoyale_C_IsSettlementBagItem) == 0x000028, "Wrong size on BP_Formula_BattleRoyale_C_IsSettlementBagItem");
static_assert(offsetof(BP_Formula_BattleRoyale_C_IsSettlementBagItem, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_IsSettlementBagItem::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_IsSettlementBagItem, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_IsSettlementBagItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_IsSettlementBagItem, CallFunc_GetSolarGameMode_ReturnValue) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_IsSettlementBagItem::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_IsSettlementBagItem, CallFunc_GetMatchState_ReturnValue) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_IsSettlementBagItem::CallFunc_GetMatchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_IsSettlementBagItem, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_IsSettlementBagItem::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetDefenderManager
// 0x0028 (0x0028 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetDefenderManager final
{
public:
	class ABP_DefenderManager_C*                  Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADefenderManager*                       CallFunc_GetDefenderManager_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DefenderManager_C*                  K2Node_DynamicCast_AsBP_Defender_Manager;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetDefenderManager) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetDefenderManager");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetDefenderManager) == 0x000028, "Wrong size on BP_Formula_BattleRoyale_C_GetDefenderManager");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetDefenderManager, Output_Get) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetDefenderManager::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetDefenderManager, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetDefenderManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetDefenderManager, CallFunc_GetDefenderManager_ReturnValue) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetDefenderManager::CallFunc_GetDefenderManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetDefenderManager, K2Node_DynamicCast_AsBP_Defender_Manager) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetDefenderManager::K2Node_DynamicCast_AsBP_Defender_Manager' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetDefenderManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetDefenderManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.MVPLifeTimeScore
// 0x0038 (0x0038 - 0x0000)
struct BP_Formula_BattleRoyale_C_MVPLifeTimeScore final
{
public:
	float                                         Life_Time;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTMVPScore;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore) == 0x000004, "Wrong alignment on BP_Formula_BattleRoyale_C_MVPLifeTimeScore");
static_assert(sizeof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore) == 0x000038, "Wrong size on BP_Formula_BattleRoyale_C_MVPLifeTimeScore");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, Life_Time) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::Life_Time' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, LTMVPScore) == 0x000004, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::LTMVPScore' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000022, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_MVPLifeTimeScore, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_MVPLifeTimeScore::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetStrategyGuideConditions
// 0x0070 (0x0070 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetStrategyGuideConditions final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 OutResult;                                         // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetStrategyGuideConditions_OutResult;     // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetStrategyGuideConditions");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions) == 0x000070, "Wrong size on BP_Formula_BattleRoyale_C_GetStrategyGuideConditions");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, OutResult) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::OutResult' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, Result) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::Result' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, Temp_int_Variable) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_KillCount) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_KillDown) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_Assist) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_SaveCount) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_LifeTime) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_CauseDamage) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_Rank) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_TeamRank) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_DeathCount) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_TeamAced) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_IsMvp) == 0x000051, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000052, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetPlayerData_DefenderType) == 0x000053, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_GetStrategyGuideConditions_OutResult) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_GetStrategyGuideConditions_OutResult' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetStrategyGuideConditions, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_Formula_BattleRoyale_C_GetStrategyGuideConditions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.CalculateTeamRank
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Formula_BattleRoyale_C_CalculateTeamRank final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataBool_OutValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDataBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0070(0x0050)(ConstParm)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_CalculateTeamRank) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_CalculateTeamRank");
static_assert(sizeof(BP_Formula_BattleRoyale_C_CalculateTeamRank) == 0x0000C0, "Wrong size on BP_Formula_BattleRoyale_C_CalculateTeamRank");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_KillCount) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_KillDown) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_Assist) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_SaveCount) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_LifeTime) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_CauseDamage) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_Rank) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_TeamRank) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_DeathCount) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_TeamAced) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_IsMvp) == 0x000031, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000032, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetPlayerData_DefenderType) == 0x000033, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetTeamName_ReturnValue) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetDataBool_OutValue) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetDataBool_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_GetDataBool_ReturnValue) == 0x000059, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_GetDataBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, CallFunc_Conv_BoolToString_ReturnValue) == 0x000060, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculateTeamRank, K2Node_MakeMap_Map) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_CalculateTeamRank::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.CalculatePlayerRank
// 0x0098 (0x0098 - 0x0000)
struct BP_Formula_BattleRoyale_C_CalculatePlayerRank final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0048(0x0050)(ConstParm)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_CalculatePlayerRank) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_CalculatePlayerRank");
static_assert(sizeof(BP_Formula_BattleRoyale_C_CalculatePlayerRank) == 0x000098, "Wrong size on BP_Formula_BattleRoyale_C_CalculatePlayerRank");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_KillCount) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_KillDown) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_Assist) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_SaveCount) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_LifeTime) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_CauseDamage) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_Rank) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_TeamRank) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_DeathCount) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_TeamAced) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_IsMvp) == 0x000031, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000032, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_GetPlayerData_DefenderType) == 0x000033, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_CalculatePlayerRank, K2Node_MakeMap_Map) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_CalculatePlayerRank::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.BattleStateDealFloat
// 0x0018 (0x0018 - 0x0000)
struct BP_Formula_BattleRoyale_C_BattleStateDealFloat final
{
public:
	float                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchStarted_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_BattleStateDealFloat) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_BattleStateDealFloat");
static_assert(sizeof(BP_Formula_BattleRoyale_C_BattleStateDealFloat) == 0x000018, "Wrong size on BP_Formula_BattleRoyale_C_BattleStateDealFloat");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealFloat, Input) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealFloat::Input' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealFloat, ReturnValue) == 0x000004, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealFloat::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealFloat, CallFunc_GetSolarGameMode_ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealFloat::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealFloat, CallFunc_HasMatchStarted_ReturnValue) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealFloat::CallFunc_HasMatchStarted_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.BattleStateDealInt
// 0x0018 (0x0018 - 0x0000)
struct BP_Formula_BattleRoyale_C_BattleStateDealInt final
{
public:
	int32                                         Input;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchStarted_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_BattleStateDealInt) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_BattleStateDealInt");
static_assert(sizeof(BP_Formula_BattleRoyale_C_BattleStateDealInt) == 0x000018, "Wrong size on BP_Formula_BattleRoyale_C_BattleStateDealInt");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealInt, Input) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealInt::Input' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealInt, ReturnValue) == 0x000004, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealInt::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealInt, CallFunc_GetSolarGameMode_ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealInt::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_BattleStateDealInt, CallFunc_HasMatchStarted_ReturnValue) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_BattleStateDealInt::CallFunc_HasMatchStarted_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetBattleState
// 0x0004 (0x0004 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetBattleState final
{
public:
	E_BattleState_BattleRoyale                    State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetDataByte_OutValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataByte_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetBattleState) == 0x000001, "Wrong alignment on BP_Formula_BattleRoyale_C_GetBattleState");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetBattleState) == 0x000004, "Wrong size on BP_Formula_BattleRoyale_C_GetBattleState");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetBattleState, State) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetBattleState::State' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetBattleState, CallFunc_GetDataByte_OutValue) == 0x000001, "Member 'BP_Formula_BattleRoyale_C_GetBattleState::CallFunc_GetDataByte_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetBattleState, CallFunc_GetDataByte_ReturnValue) == 0x000002, "Member 'BP_Formula_BattleRoyale_C_GetBattleState::CallFunc_GetDataByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetBattleState, CallFunc_GetValidValue_ReturnValue) == 0x000003, "Member 'BP_Formula_BattleRoyale_C_GetBattleState::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetKDA
// 0x0058 (0x0058 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetKDA final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BattleStateDealFloat_ReturnValue;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetKDA) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetKDA");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetKDA) == 0x000058, "Wrong size on BP_Formula_BattleRoyale_C_GetKDA");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetKDA::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetKDA::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, Temp_bool_Variable) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_GetKDA::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_KillCount) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_KillDown) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_Assist) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_SaveCount) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_LifeTime) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_CauseDamage) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_Rank) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_TeamRank) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_DeathCount) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_TeamAced) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_IsMvp) == 0x000035, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000036, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_GetPlayerData_DefenderType) == 0x000037, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, Temp_float_Variable) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetKDA::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, K2Node_Select_Default) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetKDA::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetKDA, CallFunc_BattleStateDealFloat_ReturnValue) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetKDA::CallFunc_BattleStateDealFloat_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetExtraRewards
// 0x05E0 (0x05E0 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetExtraRewards final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSettlementParam_ExtraRewardInfo> ReturnValue;                                     // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	TArray<struct FSettlementParam_ExtraRewardInfo> CommonRewards;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatRewardItem_ItemString;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Combine_Reward_Item_RewardString;         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo; // 0x00B8(0x0040)()
	class FString                                 Temp_string_Variable_1;                            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_DefenderPlayerType                          Temp_byte_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FormatRewardItem_ItemString_1;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_1;       // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_1; // 0x01B8(0x0040)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatRewardItem_ItemString_2;            // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatRewardItem_ItemString_3;            // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_2;                          // 0x0220(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_3;                          // 0x0230(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_2;       // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_3;       // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_3;                           // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_4;                           // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_2; // 0x0280(0x0040)()
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_3; // 0x02C0(0x0040)()
	class FString                                 CallFunc_FormatRewardItem_ItemString_4;            // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_4;                          // 0x0318(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_4;       // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_6;                           // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatRewardItem_ItemString_5;            // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_4; // 0x0360(0x0040)()
	TArray<class FString>                         K2Node_MakeArray_Array_5;                          // 0x03A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FSettlementParam_ExtraRewardInfo> Temp_struct_Variable;                            // 0x03B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_5;       // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_5; // 0x03D8(0x0040)()
	class FString                                 CallFunc_FormatRewardItem_ItemString_6;            // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array_6;                          // 0x0430(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatRewardItem_ItemString_7;            // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_6;       // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_7;                          // 0x0460(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_7;                           // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_7;       // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_6; // 0x0490(0x0040)()
	class FString                                 K2Node_Select_Default_8;                           // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_7; // 0x04E0(0x0040)()
	class FString                                 CallFunc_FormatRewardItem_ItemString_8;            // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_8;                          // 0x0538(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMatchState_ReturnValue;                // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Combine_Reward_Item_RewardString_8;       // 0x0550(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_9;                           // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSettlementParam_ExtraRewardInfo       K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_8; // 0x0580(0x0040)()
	TArray<struct FSettlementParam_ExtraRewardInfo> K2Node_MakeArray_Array_9;                        // 0x05C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FSettlementParam_ExtraRewardInfo> K2Node_Select_Default_10;                        // 0x05D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetExtraRewards) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetExtraRewards");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetExtraRewards) == 0x0005E0, "Wrong size on BP_Formula_BattleRoyale_C_GetExtraRewards");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CommonRewards) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CommonRewards' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_KillCount) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_KillDown) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_Assist) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_SaveCount) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_LifeTime) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_CauseDamage) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_Rank) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_TeamRank) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_DeathCount) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_TeamAced) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_IsMvp) == 0x000051, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000052, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetPlayerData_DefenderType) == 0x000053, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000055, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000056, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000057, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005A, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_BooleanAND_ReturnValue_1) == 0x00005B, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00005D, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00005E, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x00005F, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable) == 0x000060, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable_1) == 0x000064, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_1) == 0x000068, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default) == 0x00006C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString) == 0x000080, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_2) == 0x0000A0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString) == 0x0000A8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo) == 0x0000B8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable_1) == 0x0000F8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_3) == 0x000108, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable_2) == 0x000110, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_4) == 0x000120, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable_3) == 0x000128, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_5) == 0x000138, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable_4) == 0x000140, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_byte_Variable) == 0x000150, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_6) == 0x000151, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_7) == 0x000152, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_8) == 0x000153, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_9) == 0x000154, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_1) == 0x000155, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_string_Variable_5) == 0x000158, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_10) == 0x000168, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable_2) == 0x00016C, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable_3) == 0x000170, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable_4) == 0x000174, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_2) == 0x000178, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_1) == 0x000180, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_int_Variable_5) == 0x000190, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_1) == 0x000198, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_1) == 0x0001A8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_1) == 0x0001B8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Array_Add_ReturnValue) == 0x0001F8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Array_Add_ReturnValue_1) == 0x0001FC, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_2) == 0x000200, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_3) == 0x000210, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_2) == 0x000220, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_3) == 0x000230, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_2) == 0x000240, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_3) == 0x000250, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_3) == 0x000260, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_4) == 0x000270, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_2) == 0x000280, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_3) == 0x0002C0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_4) == 0x000300, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_11) == 0x000310, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_4) == 0x000318, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_4) == 0x000328, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_5) == 0x000338, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_6) == 0x000340, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_5) == 0x000350, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_4) == 0x000360, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_5) == 0x0003A0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_struct_Variable) == 0x0003B0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_5) == 0x0003C0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, Temp_bool_Variable_12) == 0x0003D0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_5) == 0x0003D8, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_6) == 0x000418, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Array_Add_ReturnValue_2) == 0x000428, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_6) == 0x000430, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_7) == 0x000440, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_6) == 0x000450, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_7) == 0x000460, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_7) == 0x000470, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_7) == 0x000480, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_6) == 0x000490, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_8) == 0x0004D0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_7) == 0x0004E0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_7' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_FormatRewardItem_ItemString_8) == 0x000520, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_FormatRewardItem_ItemString_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetSolarGameMode_ReturnValue) == 0x000530, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_8) == 0x000538, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_GetMatchState_ReturnValue) == 0x000548, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_GetMatchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_Combine_Reward_Item_RewardString_8) == 0x000550, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_Combine_Reward_Item_RewardString_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000560, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_9) == 0x000568, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, CallFunc_BooleanOR_ReturnValue) == 0x000578, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_8) == 0x000580, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeStruct_SettlementParam_ExtraRewardInfo_8' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_MakeArray_Array_9) == 0x0005C0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetExtraRewards, K2Node_Select_Default_10) == 0x0005D0, "Member 'BP_Formula_BattleRoyale_C_GetExtraRewards::K2Node_Select_Default_10' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetPlayerData
// 0x0088 (0x0088 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetPlayerData final
{
public:
	class ASolarPlayerState*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillCount;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillDown;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Assist;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaveCount;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CauseDamage;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank;                                              // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamRank;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeathCount;                                        // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamAced;                                          // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMVP;                                             // 0x002D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCustomRoomActive;                                // 0x002E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          DefenderType;                                      // 0x002F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TeamName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerID;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCustomRoomMode_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetDataByte_OutValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataByte_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDataBool_OutValue;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDataBool_ReturnValue;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDataInt_OutValue_1;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataFloat_OutValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataFloat_ReturnValue;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetPlayerData) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetPlayerData");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetPlayerData) == 0x000088, "Wrong size on BP_Formula_BattleRoyale_C_GetPlayerData");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, Player) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::Player' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, KillCount) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, KillDown) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, Assist) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, SaveCount) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, LifeTime) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CauseDamage) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, Rank) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, TeamRank) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, DeathCount) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, TeamAced) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, IsMVP) == 0x00002D, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::IsMVP' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, IsCustomRoomActive) == 0x00002E, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, DefenderType) == 0x00002F, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, TeamName) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::TeamName' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, PlayerID) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_IsCustomRoomMode_ReturnValue) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_IsCustomRoomMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetTeamName_ReturnValue) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataByte_OutValue) == 0x000068, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataByte_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataByte_ReturnValue) == 0x000069, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataBool_OutValue) == 0x00006A, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataBool_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataBool_ReturnValue) == 0x00006B, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetValidValue_ReturnValue) == 0x00006C, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataInt_OutValue) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataInt_ReturnValue) == 0x000074, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataInt_OutValue_1) == 0x000078, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataInt_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataInt_ReturnValue_1) == 0x00007C, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataFloat_OutValue) == 0x000080, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataFloat_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetPlayerData, CallFunc_GetDataFloat_ReturnValue) == 0x000084, "Member 'BP_Formula_BattleRoyale_C_GetPlayerData::CallFunc_GetDataFloat_ReturnValue' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetZomborg
// 0x0148 (0x0148 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetZomborg final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleStateDealInt_ReturnValue;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetZomborg) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetZomborg");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetZomborg) == 0x000148, "Wrong size on BP_Formula_BattleRoyale_C_GetZomborg");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_KillCount) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_KillDown) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_Assist) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_SaveCount) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_LifeTime) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_CauseDamage) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_Rank) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_TeamRank) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_DeathCount) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_TeamAced) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_IsMvp) == 0x000045, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000046, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_GetPlayerData_DefenderType) == 0x000047, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, Temp_bool_Variable) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Conv_BoolToString_ReturnValue) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Conv_FloatToString_ReturnValue) == 0x000080, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_FTrunc_ReturnValue) == 0x0000A8, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, Temp_int_Variable) == 0x0000C0, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D8, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, Temp_bool_Variable_1) == 0x0000E8, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F0, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000100, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, Temp_int_Variable_1) == 0x000110, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, K2Node_Select_Default) == 0x000114, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Clamp_ReturnValue) == 0x00011C, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_BattleStateDealInt_ReturnValue) == 0x000120, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_BattleStateDealInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, K2Node_Select_Default_1) == 0x000124, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000128, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetZomborg, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000138, "Member 'BP_Formula_BattleRoyale_C_GetZomborg::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetCharacterExp
// 0x0110 (0x0110 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetCharacterExp final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutGetExp;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 OutReason;                                         // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 ExpReason;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Exp;                                               // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryGetRowData_HasKey;                     // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_GetPoint              CallFunc_TryGetRowData_ReturnValue;                // 0x0070(0x0020)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader_1;    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader_2;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetRowData_HasKey_1;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_GetPoint              CallFunc_TryGetRowData_ReturnValue_1;              // 0x00B0(0x0020)(ConstParm)
	bool                                          CallFunc_TryGetRowData_HasKey_2;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_GetPoint              CallFunc_TryGetRowData_ReturnValue_2;              // 0x00D8(0x0020)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetCharacterExp) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetCharacterExp");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetCharacterExp) == 0x000110, "Wrong size on BP_Formula_BattleRoyale_C_GetCharacterExp");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, OutGetExp) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::OutGetExp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, OutReason) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::OutReason' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, ExpReason) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::ExpReason' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, Exp) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::Exp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_KillCount) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_KillDown) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_Assist) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_SaveCount) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_LifeTime) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_CauseDamage) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_Rank) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_TeamRank) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_DeathCount) == 0x000054, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_TeamAced) == 0x000058, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_IsMvp) == 0x000059, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x00005A, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_GetPlayerData_DefenderType) == 0x00005B, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000060, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_HasKey) == 0x00006A, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_HasKey' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_ReturnValue) == 0x000070, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000091, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc__A_GetExcelTableReader_TablesReader_1) == 0x000098, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc__A_GetExcelTableReader_TablesReader_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc__A_GetExcelTableReader_TablesReader_2) == 0x0000A0, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc__A_GetExcelTableReader_TablesReader_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_HasKey_1) == 0x0000A8, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_HasKey_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_ReturnValue_1) == 0x0000B0, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_HasKey_2) == 0x0000D0, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_HasKey_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_TryGetRowData_ReturnValue_2) == 0x0000D8, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_TryGetRowData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Array_Add_ReturnValue_1) == 0x000100, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Array_Add_ReturnValue_2) == 0x000108, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetCharacterExp, CallFunc_Add_IntInt_ReturnValue_2) == 0x00010C, "Member 'BP_Formula_BattleRoyale_C_GetCharacterExp::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetAccountExp
// 0x0058 (0x0058 - 0x0000)
struct BP_Formula_BattleRoyale_C_GetAccountExp final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerData_KillCount;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_KillDown;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Assist;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_SaveCount;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_LifeTime;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerData_CauseDamage;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_Rank;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_TeamRank;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerData_DeathCount;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerData_TeamAced;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsMvp;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlayerData_IsCustomRoomActive;         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DefenderPlayerType                          CallFunc_GetPlayerData_DefenderType;               // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleStateDealInt_ReturnValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFixedLevelExp_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_BattleRoyale_C_GetAccountExp) == 0x000008, "Wrong alignment on BP_Formula_BattleRoyale_C_GetAccountExp");
static_assert(sizeof(BP_Formula_BattleRoyale_C_GetAccountExp) == 0x000058, "Wrong size on BP_Formula_BattleRoyale_C_GetAccountExp");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, InPS) == 0x000000, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, ReturnValue) == 0x000008, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, Temp_bool_Variable) == 0x00000C, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_KillCount) == 0x000010, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_KillCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_KillDown) == 0x000014, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_KillDown' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_Assist) == 0x000018, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_Assist' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_SaveCount) == 0x00001C, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_SaveCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_LifeTime) == 0x000020, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_CauseDamage) == 0x000024, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_Rank) == 0x000028, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_TeamRank) == 0x00002C, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_TeamRank' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_DeathCount) == 0x000030, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_DeathCount' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_TeamAced) == 0x000034, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_TeamAced' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_IsMvp) == 0x000035, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_IsMvp' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_IsCustomRoomActive) == 0x000036, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_IsCustomRoomActive' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetPlayerData_DefenderType) == 0x000037, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetPlayerData_DefenderType' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, Temp_int_Variable) == 0x000038, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_BattleStateDealInt_ReturnValue) == 0x00004C, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_BattleStateDealInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, CallFunc_GetFixedLevelExp_ReturnValue) == 0x000050, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::CallFunc_GetFixedLevelExp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_BattleRoyale_C_GetAccountExp, K2Node_Select_Default) == 0x000054, "Member 'BP_Formula_BattleRoyale_C_GetAccountExp::K2Node_Select_Default' has a wrong offset!");

}

