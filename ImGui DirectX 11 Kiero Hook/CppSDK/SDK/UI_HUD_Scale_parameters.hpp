#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Scale

#include "Basic.hpp"

#include "E_Scale_State_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Scale.UI_HUD_Scale_C.ExecuteUbergraph_UI_HUD_Scale
// 0x0020 (0x0020 - 0x0000)
struct UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Scale_State                                 Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInFly;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHasPassiveSkill;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Scale_State                                 K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale) == 0x000008, "Wrong alignment on UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale");
static_assert(sizeof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale) == 0x000020, "Wrong size on UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, EntryPoint) == 0x000000, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Event_InLayoutType) == 0x000004, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, Temp_byte_Variable) == 0x000005, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, Temp_byte_Variable_1) == 0x000007, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, Temp_bool_Variable) == 0x000008, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Event_IsDesignTime) == 0x000009, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Event_bInFly) == 0x00000A, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Event_bInFly' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Event_bHasPassiveSkill) == 0x00000B, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Event_bHasPassiveSkill' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, Temp_bool_Variable_1) == 0x00000C, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Select_Default) == 0x00000D, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, K2Node_Select_Default_1) == 0x000010, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'UI_HUD_Scale_C_ExecuteUbergraph_UI_HUD_Scale::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Scale_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Scale_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Scale_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Scale_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Scale_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Scale_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Scale_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.K2_OnSkydiveStateChanged
// 0x0002 (0x0002 - 0x0000)
struct UI_HUD_Scale_C_K2_OnSkydiveStateChanged final
{
public:
	bool                                          bInFly;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasPassiveSkill;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Scale_C_K2_OnSkydiveStateChanged) == 0x000001, "Wrong alignment on UI_HUD_Scale_C_K2_OnSkydiveStateChanged");
static_assert(sizeof(UI_HUD_Scale_C_K2_OnSkydiveStateChanged) == 0x000002, "Wrong size on UI_HUD_Scale_C_K2_OnSkydiveStateChanged");
static_assert(offsetof(UI_HUD_Scale_C_K2_OnSkydiveStateChanged, bInFly) == 0x000000, "Member 'UI_HUD_Scale_C_K2_OnSkydiveStateChanged::bInFly' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_K2_OnSkydiveStateChanged, bHasPassiveSkill) == 0x000001, "Member 'UI_HUD_Scale_C_K2_OnSkydiveStateChanged::bHasPassiveSkill' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Scale_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Scale_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Scale_C_PreConstruct");
static_assert(sizeof(UI_HUD_Scale_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Scale_C_PreConstruct");
static_assert(offsetof(UI_HUD_Scale_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Scale_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.UpdateAltitudeDisplayContent
// 0x0018 (0x0018 - 0x0000)
struct UI_HUD_Scale_C_UpdateAltitudeDisplayContent final
{
public:
	class FText                                   Content;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_HUD_Scale_C_UpdateAltitudeDisplayContent) == 0x000008, "Wrong alignment on UI_HUD_Scale_C_UpdateAltitudeDisplayContent");
static_assert(sizeof(UI_HUD_Scale_C_UpdateAltitudeDisplayContent) == 0x000018, "Wrong size on UI_HUD_Scale_C_UpdateAltitudeDisplayContent");
static_assert(offsetof(UI_HUD_Scale_C_UpdateAltitudeDisplayContent, Content) == 0x000000, "Member 'UI_HUD_Scale_C_UpdateAltitudeDisplayContent::Content' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.UpdateSpeedDisplayContent
// 0x0018 (0x0018 - 0x0000)
struct UI_HUD_Scale_C_UpdateSpeedDisplayContent final
{
public:
	class FText                                   Content;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_HUD_Scale_C_UpdateSpeedDisplayContent) == 0x000008, "Wrong alignment on UI_HUD_Scale_C_UpdateSpeedDisplayContent");
static_assert(sizeof(UI_HUD_Scale_C_UpdateSpeedDisplayContent) == 0x000018, "Wrong size on UI_HUD_Scale_C_UpdateSpeedDisplayContent");
static_assert(offsetof(UI_HUD_Scale_C_UpdateSpeedDisplayContent, Content) == 0x000000, "Member 'UI_HUD_Scale_C_UpdateSpeedDisplayContent::Content' has a wrong offset!");

// Function UI_HUD_Scale.UI_HUD_Scale_C.SetScaleState
// 0x0128 (0x0128 - 0x0000)
struct UI_HUD_Scale_C_SetScaleState final
{
public:
	E_Scale_State                                 ScaleState_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable_2;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable_3;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00C8(0x0028)()
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Scale_State                                 Temp_byte_Variable_6;                              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Scale_C_SetScaleState) == 0x000008, "Wrong alignment on UI_HUD_Scale_C_SetScaleState");
static_assert(sizeof(UI_HUD_Scale_C_SetScaleState) == 0x000128, "Wrong size on UI_HUD_Scale_C_SetScaleState");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, ScaleState_0) == 0x000000, "Member 'UI_HUD_Scale_C_SetScaleState::ScaleState_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable) == 0x000001, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable) == 0x000004, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_1) == 0x000014, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_1) == 0x000024, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_Select_Default) == 0x000028, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_2) == 0x000038, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_3) == 0x000070, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_2) == 0x000080, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_Select_Default_1) == 0x000084, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_4) == 0x000094, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_5) == 0x0000A4, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_3) == 0x0000B4, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_Select_Default_2) == 0x0000B8, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_MakeStruct_SlateColor_1) == 0x0000C8, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_4) == 0x0000F0, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_5) == 0x0000F1, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_Select_Default_3) == 0x0000F2, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_6) == 0x0000F4, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_struct_Variable_7) == 0x000104, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, Temp_byte_Variable_6) == 0x000114, "Member 'UI_HUD_Scale_C_SetScaleState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_HUD_Scale_C_SetScaleState, K2Node_Select_Default_4) == 0x000118, "Member 'UI_HUD_Scale_C_SetScaleState::K2Node_Select_Default_4' has a wrong offset!");

}

