#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Settings_Item_Title

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Settings_Item_Title.UI_Settings_Item_Title_C
// 0x0020 (0x0610 - 0x05F0)
class UUI_Settings_Item_Title_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               SizeBox;                                           // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_Title;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsFristTitle;                                      // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TitleID;                                           // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnSelection();
	void ClearSelection();
	void SetTitleText(const class FText& InText);
	void SetFristTitle(bool IsFristTitle_0);
	void SetTitle(int32 InLocID);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_UI_Settings_Item_Title(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Settings_Item_Title_C">();
	}
	static class UUI_Settings_Item_Title_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Settings_Item_Title_C>();
	}
};
static_assert(alignof(UUI_Settings_Item_Title_C) == 0x000008, "Wrong alignment on UUI_Settings_Item_Title_C");
static_assert(sizeof(UUI_Settings_Item_Title_C) == 0x000610, "Wrong size on UUI_Settings_Item_Title_C");
static_assert(offsetof(UUI_Settings_Item_Title_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Settings_Item_Title_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Settings_Item_Title_C, SizeBox) == 0x0005F8, "Member 'UUI_Settings_Item_Title_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_Settings_Item_Title_C, Text_Title) == 0x000600, "Member 'UUI_Settings_Item_Title_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UUI_Settings_Item_Title_C, IsFristTitle) == 0x000608, "Member 'UUI_Settings_Item_Title_C::IsFristTitle' has a wrong offset!");
static_assert(offsetof(UUI_Settings_Item_Title_C, TitleID) == 0x00060C, "Member 'UUI_Settings_Item_Title_C::TitleID' has a wrong offset!");

}

