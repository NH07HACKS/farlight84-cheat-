#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FX_BP_EnergyBubble

#include "Basic.hpp"

#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FX_BP_EnergyBubble.FX_BP_EnergyBubble_C
// 0x0030 (0x10C0 - 0x1090)
class AFX_BP_EnergyBubble_C : public ASolarEnergyBubble
{
public:
	class USceneComponent*                        VFX;                                               // 0x1090(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VFX_Decal;                                         // 0x1098(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PreviewMesh;                                       // 0x10A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VFX_Shield;                                        // 0x10A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FX_Collision;                                      // 0x10B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scale;                                             // 0x10B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FX_BP_EnergyBubble_C">();
	}
	static class AFX_BP_EnergyBubble_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFX_BP_EnergyBubble_C>();
	}
};
static_assert(alignof(AFX_BP_EnergyBubble_C) == 0x000010, "Wrong alignment on AFX_BP_EnergyBubble_C");
static_assert(sizeof(AFX_BP_EnergyBubble_C) == 0x0010C0, "Wrong size on AFX_BP_EnergyBubble_C");
static_assert(offsetof(AFX_BP_EnergyBubble_C, VFX) == 0x001090, "Member 'AFX_BP_EnergyBubble_C::VFX' has a wrong offset!");
static_assert(offsetof(AFX_BP_EnergyBubble_C, VFX_Decal) == 0x001098, "Member 'AFX_BP_EnergyBubble_C::VFX_Decal' has a wrong offset!");
static_assert(offsetof(AFX_BP_EnergyBubble_C, PreviewMesh) == 0x0010A0, "Member 'AFX_BP_EnergyBubble_C::PreviewMesh' has a wrong offset!");
static_assert(offsetof(AFX_BP_EnergyBubble_C, VFX_Shield) == 0x0010A8, "Member 'AFX_BP_EnergyBubble_C::VFX_Shield' has a wrong offset!");
static_assert(offsetof(AFX_BP_EnergyBubble_C, FX_Collision) == 0x0010B0, "Member 'AFX_BP_EnergyBubble_C::FX_Collision' has a wrong offset!");
static_assert(offsetof(AFX_BP_EnergyBubble_C, Scale) == 0x0010B8, "Member 'AFX_BP_EnergyBubble_C::Scale' has a wrong offset!");

}

