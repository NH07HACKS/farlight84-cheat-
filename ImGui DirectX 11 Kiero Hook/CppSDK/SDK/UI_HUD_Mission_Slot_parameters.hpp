#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Mission_Slot

#include "Basic.hpp"

#include "E_CircleTaskState_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.ExecuteUbergraph_UI_HUD_Mission_Slot
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot) == 0x000008, "Wrong alignment on UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot");
static_assert(sizeof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot) == 0x000010, "Wrong size on UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot");
static_assert(offsetof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot, EntryPoint) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot, K2Node_Event_bIsExpanded) == 0x000005, "Member 'UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot, K2Node_Event_bIsSelected) == 0x000006, "Member 'UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot, K2Node_Event_ListItemObject) == 0x000008, "Member 'UI_HUD_Mission_Slot_C_ExecuteUbergraph_UI_HUD_Mission_Slot::K2Node_Event_ListItemObject' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Mission_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_PreConstruct");
static_assert(sizeof(UI_HUD_Mission_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Mission_Slot_C_PreConstruct");
static_assert(offsetof(UI_HUD_Mission_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Mission_Slot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_HUD_Mission_Slot_C_OnListItemObjectSet");
static_assert(sizeof(UI_HUD_Mission_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_HUD_Mission_Slot_C_OnListItemObjectSet");
static_assert(offsetof(UI_HUD_Mission_Slot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BpSetTaskSlotHovered
// 0x0038 (0x0038 - 0x0000)
struct UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered final
{
public:
	bool                                          Hover_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered) == 0x000004, "Wrong alignment on UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered) == 0x000038, "Wrong size on UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, Hover_0) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::Hover_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, Temp_bool_Variable) == 0x000001, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, Temp_struct_Variable) == 0x000004, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, Temp_struct_Variable_1) == 0x000014, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000024, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered, K2Node_Select_Default) == 0x000028, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskSlotHovered::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BpSetTaskIsComplete
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Mission_Slot_C_BpSetTaskIsComplete final
{
public:
	bool                                          IsCompelte;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BpSetTaskIsComplete) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_BpSetTaskIsComplete");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BpSetTaskIsComplete) == 0x000001, "Wrong size on UI_HUD_Mission_Slot_C_BpSetTaskIsComplete");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetTaskIsComplete, IsCompelte) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BpSetTaskIsComplete::IsCompelte' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BpSetUpdateCircleTaskState
// 0x000F (0x000F - 0x0000)
struct UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState final
{
public:
	E_CircleTaskState                             TaskState_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CircleTaskState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CircleTaskState                             Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState) == 0x00000F, "Wrong size on UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, TaskState_0) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::TaskState_0' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable) == 0x000001, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_1) == 0x000002, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_2) == 0x000003, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_3) == 0x000004, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_4) == 0x000005, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_5) == 0x000006, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_6) == 0x000007, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_7) == 0x000008, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_8) == 0x000009, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_9) == 0x00000A, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_10) == 0x00000B, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, Temp_byte_Variable_11) == 0x00000C, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, K2Node_Select_Default) == 0x00000D, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState, K2Node_Select_Default_1) == 0x00000E, "Member 'UI_HUD_Mission_Slot_C_BpSetUpdateCircleTaskState::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_HUD_Mission_Slot.UI_HUD_Mission_Slot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_Mission_Slot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Mission_Slot_C_GetModuleName) == 0x000008, "Wrong alignment on UI_HUD_Mission_Slot_C_GetModuleName");
static_assert(sizeof(UI_HUD_Mission_Slot_C_GetModuleName) == 0x000010, "Wrong size on UI_HUD_Mission_Slot_C_GetModuleName");
static_assert(offsetof(UI_HUD_Mission_Slot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_HUD_Mission_Slot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

