#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicRepresentation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DynamicRepresentation_structs.hpp"


namespace SDK::Params
{

// Function DynamicRepresentation.DynamicRepresentationInterface.BeginRelevance
// 0x0028 (0x0028 - 0x0000)
struct DynamicRepresentationInterface_BeginRelevance final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDynamicRepresentationDefinition* InDefinition;                                      // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpatialLODLevel                              LOD;                                               // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InCustomData;                                      // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationInterface_BeginRelevance) == 0x000008, "Wrong alignment on DynamicRepresentationInterface_BeginRelevance");
static_assert(sizeof(DynamicRepresentationInterface_BeginRelevance) == 0x000028, "Wrong size on DynamicRepresentationInterface_BeginRelevance");
static_assert(offsetof(DynamicRepresentationInterface_BeginRelevance, ActorId) == 0x000000, "Member 'DynamicRepresentationInterface_BeginRelevance::ActorId' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_BeginRelevance, InDefinition) == 0x000010, "Member 'DynamicRepresentationInterface_BeginRelevance::InDefinition' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_BeginRelevance, LOD) == 0x000018, "Member 'DynamicRepresentationInterface_BeginRelevance::LOD' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_BeginRelevance, InCustomData) == 0x000020, "Member 'DynamicRepresentationInterface_BeginRelevance::InCustomData' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationInterface.EndRelevance
// 0x0020 (0x0020 - 0x0000)
struct DynamicRepresentationInterface_EndRelevance final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDynamicRepresentationDefinition* InDefinition;                                      // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                InCustomData;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationInterface_EndRelevance) == 0x000008, "Wrong alignment on DynamicRepresentationInterface_EndRelevance");
static_assert(sizeof(DynamicRepresentationInterface_EndRelevance) == 0x000020, "Wrong size on DynamicRepresentationInterface_EndRelevance");
static_assert(offsetof(DynamicRepresentationInterface_EndRelevance, ActorId) == 0x000000, "Member 'DynamicRepresentationInterface_EndRelevance::ActorId' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_EndRelevance, InDefinition) == 0x000010, "Member 'DynamicRepresentationInterface_EndRelevance::InDefinition' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_EndRelevance, InCustomData) == 0x000018, "Member 'DynamicRepresentationInterface_EndRelevance::InCustomData' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationInterface.LodChanged
// 0x0028 (0x0028 - 0x0000)
struct DynamicRepresentationInterface_LodChanged final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDynamicRepresentationDefinition* InDefinition;                                      // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpatialLODLevel                              OldLOD;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpatialLODLevel                              NewLOD;                                            // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                InCustomData;                                      // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationInterface_LodChanged) == 0x000008, "Wrong alignment on DynamicRepresentationInterface_LodChanged");
static_assert(sizeof(DynamicRepresentationInterface_LodChanged) == 0x000028, "Wrong size on DynamicRepresentationInterface_LodChanged");
static_assert(offsetof(DynamicRepresentationInterface_LodChanged, ActorId) == 0x000000, "Member 'DynamicRepresentationInterface_LodChanged::ActorId' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_LodChanged, InDefinition) == 0x000010, "Member 'DynamicRepresentationInterface_LodChanged::InDefinition' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_LodChanged, OldLOD) == 0x000018, "Member 'DynamicRepresentationInterface_LodChanged::OldLOD' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_LodChanged, NewLOD) == 0x000019, "Member 'DynamicRepresentationInterface_LodChanged::NewLOD' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_LodChanged, InCustomData) == 0x000020, "Member 'DynamicRepresentationInterface_LodChanged::InCustomData' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationInterface.PlayRepresentationAnimation
// 0x0018 (0x0018 - 0x0000)
struct DynamicRepresentationInterface_PlayRepresentationAnimation final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Animation;                                         // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationInterface_PlayRepresentationAnimation) == 0x000008, "Wrong alignment on DynamicRepresentationInterface_PlayRepresentationAnimation");
static_assert(sizeof(DynamicRepresentationInterface_PlayRepresentationAnimation) == 0x000018, "Wrong size on DynamicRepresentationInterface_PlayRepresentationAnimation");
static_assert(offsetof(DynamicRepresentationInterface_PlayRepresentationAnimation, ActorId) == 0x000000, "Member 'DynamicRepresentationInterface_PlayRepresentationAnimation::ActorId' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationInterface_PlayRepresentationAnimation, Animation) == 0x000010, "Member 'DynamicRepresentationInterface_PlayRepresentationAnimation::Animation' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationInterface.StopRepresentationAnimation
// 0x0010 (0x0010 - 0x0000)
struct DynamicRepresentationInterface_StopRepresentationAnimation final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationInterface_StopRepresentationAnimation) == 0x000008, "Wrong alignment on DynamicRepresentationInterface_StopRepresentationAnimation");
static_assert(sizeof(DynamicRepresentationInterface_StopRepresentationAnimation) == 0x000010, "Wrong size on DynamicRepresentationInterface_StopRepresentationAnimation");
static_assert(offsetof(DynamicRepresentationInterface_StopRepresentationAnimation, ActorId) == 0x000000, "Member 'DynamicRepresentationInterface_StopRepresentationAnimation::ActorId' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationFunctionLibrary.DynamicRepresentationSpawnActor
// 0x0050 (0x0050 - 0x0000)
struct DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDynamicRepresentationDefinition* Definition;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor) == 0x000010, "Wrong alignment on DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor");
static_assert(sizeof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor) == 0x000050, "Wrong size on DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor");
static_assert(offsetof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor, WorldContextObject) == 0x000000, "Member 'DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor, Definition) == 0x000008, "Member 'DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor::Definition' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor, Transform) == 0x000010, "Member 'DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor::Transform' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor, ReturnValue) == 0x000040, "Member 'DynamicRepresentationFunctionLibrary_DynamicRepresentationSpawnActor::ReturnValue' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationAnimationState.GetState
// 0x0018 (0x0018 - 0x0000)
struct DynamicRepresentationAnimationState_GetState final
{
public:
	struct FActorId                               ActorId;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DynamicRepresentationAnimationState_GetState) == 0x000008, "Wrong alignment on DynamicRepresentationAnimationState_GetState");
static_assert(sizeof(DynamicRepresentationAnimationState_GetState) == 0x000018, "Wrong size on DynamicRepresentationAnimationState_GetState");
static_assert(offsetof(DynamicRepresentationAnimationState_GetState, ActorId) == 0x000000, "Member 'DynamicRepresentationAnimationState_GetState::ActorId' has a wrong offset!");
static_assert(offsetof(DynamicRepresentationAnimationState_GetState, ReturnValue) == 0x000010, "Member 'DynamicRepresentationAnimationState_GetState::ReturnValue' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationSceneComponent.GetVisualizationActor
// 0x0008 (0x0008 - 0x0000)
struct DynamicRepresentationSceneComponent_GetVisualizationActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationSceneComponent_GetVisualizationActor) == 0x000008, "Wrong alignment on DynamicRepresentationSceneComponent_GetVisualizationActor");
static_assert(sizeof(DynamicRepresentationSceneComponent_GetVisualizationActor) == 0x000008, "Wrong size on DynamicRepresentationSceneComponent_GetVisualizationActor");
static_assert(offsetof(DynamicRepresentationSceneComponent_GetVisualizationActor, ReturnValue) == 0x000000, "Member 'DynamicRepresentationSceneComponent_GetVisualizationActor::ReturnValue' has a wrong offset!");

// Function DynamicRepresentation.DynamicRepresentationSceneComponent.PlayAnimation
// 0x0008 (0x0008 - 0x0000)
struct DynamicRepresentationSceneComponent_PlayAnimation final
{
public:
	class FName                                   Animation;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DynamicRepresentationSceneComponent_PlayAnimation) == 0x000004, "Wrong alignment on DynamicRepresentationSceneComponent_PlayAnimation");
static_assert(sizeof(DynamicRepresentationSceneComponent_PlayAnimation) == 0x000008, "Wrong size on DynamicRepresentationSceneComponent_PlayAnimation");
static_assert(offsetof(DynamicRepresentationSceneComponent_PlayAnimation, Animation) == 0x000000, "Member 'DynamicRepresentationSceneComponent_PlayAnimation::Animation' has a wrong offset!");

}

