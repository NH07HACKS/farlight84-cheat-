#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Mic_Btn

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_Mic_Speak_Btn_structs.hpp"
#include "E_Mic_UnopenedSpeak_Btn_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.GetVolumeByIDLuaCall
// 0x0004 (0x0004 - 0x0000)
struct UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall) == 0x000004, "Wrong alignment on UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall");
static_assert(sizeof(UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall) == 0x000004, "Wrong size on UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall");
static_assert(offsetof(UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall, ReturnValue) == 0x000000, "Member 'UI_Component_Mic_Btn_C_GetVolumeByIDLuaCall::ReturnValue' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.BpSetMicItemHovered
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Mic_Btn_C_BpSetMicItemHovered final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Mic_Btn_C_BpSetMicItemHovered) == 0x000001, "Wrong alignment on UI_Component_Mic_Btn_C_BpSetMicItemHovered");
static_assert(sizeof(UI_Component_Mic_Btn_C_BpSetMicItemHovered) == 0x000001, "Wrong size on UI_Component_Mic_Btn_C_BpSetMicItemHovered");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMicItemHovered, bHovered) == 0x000000, "Member 'UI_Component_Mic_Btn_C_BpSetMicItemHovered::bHovered' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.BpSetSpeak
// 0x0050 (0x0050 - 0x0000)
struct UI_Component_Mic_Btn_C_BpSetSpeak final
{
public:
	E_Mic_Speak_Btn                               Speak_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable_6;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable_11;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable_16;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_Speak_Btn                               Temp_byte_Variable_21;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_5;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Mic_Btn_C_BpSetSpeak) == 0x000008, "Wrong alignment on UI_Component_Mic_Btn_C_BpSetSpeak");
static_assert(sizeof(UI_Component_Mic_Btn_C_BpSetSpeak) == 0x000050, "Wrong size on UI_Component_Mic_Btn_C_BpSetSpeak");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Speak_0) == 0x000000, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Speak_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_1) == 0x000002, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_2) == 0x000003, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_3) == 0x000004, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_4) == 0x000005, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_5) == 0x000006, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_object_Variable) == 0x000008, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_object_Variable_1) == 0x000010, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_object_Variable_2) == 0x000018, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_object_Variable_3) == 0x000020, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_6) == 0x000028, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_7) == 0x000029, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_8) == 0x00002A, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_9) == 0x00002B, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_10) == 0x00002C, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_11) == 0x00002D, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_12) == 0x00002E, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_13) == 0x00002F, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_14) == 0x000030, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_15) == 0x000031, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_16) == 0x000032, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_17) == 0x000033, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_18) == 0x000034, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_19) == 0x000035, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_20) == 0x000036, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_21) == 0x000037, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_22) == 0x000038, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_23) == 0x000039, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_24) == 0x00003A, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, Temp_byte_Variable_25) == 0x00003B, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default) == 0x00003C, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default_1) == 0x00003E, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default_2) == 0x00003F, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default_3) == 0x000040, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default_4) == 0x000041, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetSpeak, K2Node_Select_Default_5) == 0x000048, "Member 'UI_Component_Mic_Btn_C_BpSetSpeak::K2Node_Select_Default_5' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.BpSetUnopenedSpeak
// 0x0040 (0x0040 - 0x0000)
struct UI_Component_Mic_Btn_C_BpSetUnopenedSpeak final
{
public:
	E_Mic_UnopenedSpeak_Btn                       UnopenedSpeak_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Mic_UnopenedSpeak_Btn                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak) == 0x000008, "Wrong alignment on UI_Component_Mic_Btn_C_BpSetUnopenedSpeak");
static_assert(sizeof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak) == 0x000040, "Wrong size on UI_Component_Mic_Btn_C_BpSetUnopenedSpeak");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, UnopenedSpeak_0) == 0x000000, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::UnopenedSpeak_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable) == 0x000008, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable_1) == 0x000010, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable_2) == 0x000018, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable_3) == 0x000020, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable_4) == 0x000028, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, Temp_object_Variable_5) == 0x000030, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetUnopenedSpeak, K2Node_Select_Default) == 0x000038, "Member 'UI_Component_Mic_Btn_C_BpSetUnopenedSpeak::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.BpSetMic
// 0x0009 (0x0009 - 0x0000)
struct UI_Component_Mic_Btn_C_BpSetMic final
{
public:
	bool                                          IsMic_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Mic_Btn_C_BpSetMic) == 0x000001, "Wrong alignment on UI_Component_Mic_Btn_C_BpSetMic");
static_assert(sizeof(UI_Component_Mic_Btn_C_BpSetMic) == 0x000009, "Wrong size on UI_Component_Mic_Btn_C_BpSetMic");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, IsMic_0) == 0x000000, "Member 'UI_Component_Mic_Btn_C_BpSetMic::IsMic_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_byte_Variable_2) == 0x000005, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, Temp_byte_Variable_3) == 0x000006, "Member 'UI_Component_Mic_Btn_C_BpSetMic::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, K2Node_Select_Default) == 0x000007, "Member 'UI_Component_Mic_Btn_C_BpSetMic::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_BpSetMic, K2Node_Select_Default_1) == 0x000008, "Member 'UI_Component_Mic_Btn_C_BpSetMic::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Mic_Btn_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Mic_Btn_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Mic_Btn_C_PreConstruct");
static_assert(sizeof(UI_Component_Mic_Btn_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Mic_Btn_C_PreConstruct");
static_assert(offsetof(UI_Component_Mic_Btn_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Mic_Btn_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.ExecuteUbergraph_UI_Component_Mic_Btn
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn) == 0x000004, "Wrong alignment on UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn");
static_assert(sizeof(UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn) == 0x000008, "Wrong size on UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn");
static_assert(offsetof(UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn, EntryPoint) == 0x000000, "Member 'UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Component_Mic_Btn_C_ExecuteUbergraph_UI_Component_Mic_Btn::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Component_Mic_Btn.UI_Component_Mic_Btn_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Mic_Btn_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Mic_Btn_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_Mic_Btn_C_GetModuleName");
static_assert(sizeof(UI_Component_Mic_Btn_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_Mic_Btn_C_GetModuleName");
static_assert(offsetof(UI_Component_Mic_Btn_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_Mic_Btn_C_GetModuleName::ReturnValue' has a wrong offset!");

}

