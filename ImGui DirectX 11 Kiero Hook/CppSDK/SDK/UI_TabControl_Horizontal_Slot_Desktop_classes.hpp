#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TabControl_Horizontal_Slot_Desktop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Tab_ItemBase_classes.hpp"
#include "UMG_structs.hpp"
#include "E_TabStyle_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_TabControl_Horizontal_Slot_Desktop.UI_TabControl_Horizontal_Slot_Desktop_C
// 0x0090 (0x0700 - 0x0670)
class UUI_TabControl_Horizontal_Slot_Desktop_C final : public UBP_Tab_ItemBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UI_TabControl_Horizontal_Slot_Desktop_C; // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0678(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Sel;                                          // 0x0680(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Icon;                                          // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line;                                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line_Right;                                    // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VerticalLine;                                  // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Activity;                                  // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Bg;                                        // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Hover;                                     // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_SelectAnim;                               // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Icon;                                      // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_SecendTab;                                 // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Txt;                                       // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarRedHint_General_C*                Solar_RedHintPoint;                                // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Tap;                                           // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              SizeMin;                                           // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TxtSize;                                           // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hover;                                             // 0x06FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Select;                                            // 0x06FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_TabControl_Horizontal_Slot_Desktop(int32 EntryPoint);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void SetSelected(bool IsSelected);
	void SetStyle(E_TabStyle Style_0);
	void InitWidget(class USolarRedHint_General_C** HintWidget_0, class USolarTextBlock** Text_0, class UImage** Icon_0);
	void OnHovered(bool IsHovered_0);
	void SetLineImage(bool IsEnd);
	void SetHover(bool Hover_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_TabControl_Horizontal_Slot_Desktop_C">();
	}
	static class UUI_TabControl_Horizontal_Slot_Desktop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_TabControl_Horizontal_Slot_Desktop_C>();
	}
};
static_assert(alignof(UUI_TabControl_Horizontal_Slot_Desktop_C) == 0x000008, "Wrong alignment on UUI_TabControl_Horizontal_Slot_Desktop_C");
static_assert(sizeof(UUI_TabControl_Horizontal_Slot_Desktop_C) == 0x000700, "Wrong size on UUI_TabControl_Horizontal_Slot_Desktop_C");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, UberGraphFrame_UI_TabControl_Horizontal_Slot_Desktop_C) == 0x000670, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::UberGraphFrame_UI_TabControl_Horizontal_Slot_Desktop_C' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Anim_Hover) == 0x000678, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Anim_Sel) == 0x000680, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Anim_Sel' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Img_Icon) == 0x000688, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Img_Line) == 0x000690, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Img_Line' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Img_Line_Right) == 0x000698, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Img_Line_Right' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Img_VerticalLine) == 0x0006A0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Img_VerticalLine' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Overlay_Activity) == 0x0006A8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Overlay_Activity' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Overlay_Bg) == 0x0006B0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Overlay_Bg' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Overlay_Hover) == 0x0006B8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Overlay_Hover' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, ScaleBox_SelectAnim) == 0x0006C0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::ScaleBox_SelectAnim' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, SizeBox_Icon) == 0x0006C8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::SizeBox_Icon' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, SizeBox_SecendTab) == 0x0006D0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::SizeBox_SecendTab' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, SizeBox_Txt) == 0x0006D8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::SizeBox_Txt' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Solar_RedHintPoint) == 0x0006E0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Solar_RedHintPoint' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Txt_Tap) == 0x0006E8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Txt_Tap' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, SizeMin) == 0x0006F0, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::SizeMin' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, TxtSize) == 0x0006F8, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::TxtSize' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Hover) == 0x0006FC, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Hover' has a wrong offset!");
static_assert(offsetof(UUI_TabControl_Horizontal_Slot_Desktop_C, Select) == 0x0006FD, "Member 'UUI_TabControl_Horizontal_Slot_Desktop_C::Select' has a wrong offset!");

}

