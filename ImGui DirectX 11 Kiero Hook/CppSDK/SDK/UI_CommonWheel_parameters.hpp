#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CommonWheel

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_CommonWheel.UI_CommonWheel_C.ExecuteUbergraph_UI_CommonWheel
// 0x00F0 (0x00F0 - 0x0000)
struct UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Page;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index_1;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Degree;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InGroupID;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSelectedIndex;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Publisher;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Payload;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_Metadata;                       // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndependentKeyUserSetting_ReturnValue; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurPage;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnter;                               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue_1;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue_2;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGlobalEventSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        CallFunc_SpawnObject_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)> K2Node_CreateDelegate_OutputDelegate; // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        CallFunc_SpawnObject_ReturnValue_1;                // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material_1;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material_2;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel) == 0x000008, "Wrong alignment on UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel");
static_assert(sizeof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel) == 0x0000F0, "Wrong size on UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, EntryPoint) == 0x000000, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, Temp_int_Variable) == 0x000004, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_Page) == 0x000010, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_Page' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_Index_1) == 0x000014, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_Index_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_Degree) == 0x000018, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_Degree' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_FClamp_ReturnValue) == 0x000024, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_InGroupID) == 0x000028, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_InGroupID' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_InSelectedIndex) == 0x00002C, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_InSelectedIndex' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_CustomEvent_Publisher) == 0x000030, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_CustomEvent_Publisher' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_CustomEvent_Payload) == 0x000038, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_CustomEvent_Metadata) == 0x000040, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_CustomEvent_Metadata' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GetIndependentKeyUserSetting_ReturnValue) == 0x000050, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GetIndependentKeyUserSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_CurPage) == 0x000054, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_CurPage' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_Index) == 0x000058, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_Event_bEnter) == 0x00005C, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_Event_bEnter' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000060, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000070, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000071, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_IsPlatformDesktop_ReturnValue_1) == 0x000072, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_IsPlatformDesktop_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_IsPlatformDesktop_ReturnValue_2) == 0x000073, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_IsPlatformDesktop_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000078, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_SpawnObject_ReturnValue) == 0x000088, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000090, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000098, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_SpawnObject_ReturnValue_1) == 0x0000B0, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, Temp_int_Variable_1) == 0x0000B8, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Array_Add_ReturnValue_1) == 0x0000BC, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C9, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GetMaterial_Material) == 0x0000D0, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GetMaterial_Material' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GetMaterial_Material_1) == 0x0000D8, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GetMaterial_Material_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_GetMaterial_Material_2) == 0x0000E0, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_GetMaterial_Material_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel, CallFunc_AddChild_ReturnValue) == 0x0000E8, "Member 'UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.InOutBufferZone
// 0x0001 (0x0001 - 0x0000)
struct UI_CommonWheel_C_InOutBufferZone final
{
public:
	bool                                          bEnter;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_InOutBufferZone) == 0x000001, "Wrong alignment on UI_CommonWheel_C_InOutBufferZone");
static_assert(sizeof(UI_CommonWheel_C_InOutBufferZone) == 0x000001, "Wrong size on UI_CommonWheel_C_InOutBufferZone");
static_assert(offsetof(UI_CommonWheel_C_InOutBufferZone, bEnter) == 0x000000, "Member 'UI_CommonWheel_C_InOutBufferZone::bEnter' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.PreSelectedWheelIndex
// 0x0008 (0x0008 - 0x0000)
struct UI_CommonWheel_C_PreSelectedWheelIndex final
{
public:
	int32                                         CurPage;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_PreSelectedWheelIndex) == 0x000004, "Wrong alignment on UI_CommonWheel_C_PreSelectedWheelIndex");
static_assert(sizeof(UI_CommonWheel_C_PreSelectedWheelIndex) == 0x000008, "Wrong size on UI_CommonWheel_C_PreSelectedWheelIndex");
static_assert(offsetof(UI_CommonWheel_C_PreSelectedWheelIndex, CurPage) == 0x000000, "Member 'UI_CommonWheel_C_PreSelectedWheelIndex::CurPage' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_PreSelectedWheelIndex, Index_0) == 0x000004, "Member 'UI_CommonWheel_C_PreSelectedWheelIndex::Index_0' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.UpdateQuickItemEvent
// 0x0020 (0x0020 - 0x0000)
struct UI_CommonWheel_C_UpdateQuickItemEvent final
{
public:
	class UObject*                                Publisher;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Payload;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         MetaData;                                          // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_UpdateQuickItemEvent) == 0x000008, "Wrong alignment on UI_CommonWheel_C_UpdateQuickItemEvent");
static_assert(sizeof(UI_CommonWheel_C_UpdateQuickItemEvent) == 0x000020, "Wrong size on UI_CommonWheel_C_UpdateQuickItemEvent");
static_assert(offsetof(UI_CommonWheel_C_UpdateQuickItemEvent, Publisher) == 0x000000, "Member 'UI_CommonWheel_C_UpdateQuickItemEvent::Publisher' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateQuickItemEvent, Payload) == 0x000008, "Member 'UI_CommonWheel_C_UpdateQuickItemEvent::Payload' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateQuickItemEvent, MetaData) == 0x000010, "Member 'UI_CommonWheel_C_UpdateQuickItemEvent::MetaData' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.OnCommandExec
// 0x0008 (0x0008 - 0x0000)
struct UI_CommonWheel_C_OnCommandExec final
{
public:
	int32                                         InGroupId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSelectedIndex;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_OnCommandExec) == 0x000004, "Wrong alignment on UI_CommonWheel_C_OnCommandExec");
static_assert(sizeof(UI_CommonWheel_C_OnCommandExec) == 0x000008, "Wrong size on UI_CommonWheel_C_OnCommandExec");
static_assert(offsetof(UI_CommonWheel_C_OnCommandExec, InGroupId) == 0x000000, "Member 'UI_CommonWheel_C_OnCommandExec::InGroupId' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_OnCommandExec, InSelectedIndex) == 0x000004, "Member 'UI_CommonWheel_C_OnCommandExec::InSelectedIndex' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.UpdateWheelArrowAngle
// 0x0004 (0x0004 - 0x0000)
struct UI_CommonWheel_C_UpdateWheelArrowAngle final
{
public:
	float                                         Degree;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_UpdateWheelArrowAngle) == 0x000004, "Wrong alignment on UI_CommonWheel_C_UpdateWheelArrowAngle");
static_assert(sizeof(UI_CommonWheel_C_UpdateWheelArrowAngle) == 0x000004, "Wrong size on UI_CommonWheel_C_UpdateWheelArrowAngle");
static_assert(offsetof(UI_CommonWheel_C_UpdateWheelArrowAngle, Degree) == 0x000000, "Member 'UI_CommonWheel_C_UpdateWheelArrowAngle::Degree' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SelecteActionWheelItem
// 0x0008 (0x0008 - 0x0000)
struct UI_CommonWheel_C_SelecteActionWheelItem final
{
public:
	int32                                         page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SelecteActionWheelItem) == 0x000004, "Wrong alignment on UI_CommonWheel_C_SelecteActionWheelItem");
static_assert(sizeof(UI_CommonWheel_C_SelecteActionWheelItem) == 0x000008, "Wrong size on UI_CommonWheel_C_SelecteActionWheelItem");
static_assert(offsetof(UI_CommonWheel_C_SelecteActionWheelItem, page) == 0x000000, "Member 'UI_CommonWheel_C_SelecteActionWheelItem::page' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SelecteActionWheelItem, Index_0) == 0x000004, "Member 'UI_CommonWheel_C_SelecteActionWheelItem::Index_0' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_CommonWheel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_PreConstruct) == 0x000001, "Wrong alignment on UI_CommonWheel_C_PreConstruct");
static_assert(sizeof(UI_CommonWheel_C_PreConstruct) == 0x000001, "Wrong size on UI_CommonWheel_C_PreConstruct");
static_assert(offsetof(UI_CommonWheel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_CommonWheel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetSelectedIndex
// 0x0050 (0x0050 - 0x0000)
struct UI_CommonWheel_C_SetSelectedIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        CallFunc_GetItemByIndex_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisableItemIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material_1;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material_2;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SetSelectedIndex) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetSelectedIndex");
static_assert(sizeof(UI_CommonWheel_C_SetSelectedIndex) == 0x000050, "Wrong size on UI_CommonWheel_C_SetSelectedIndex");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, Index_0) == 0x000000, "Member 'UI_CommonWheel_C_SetSelectedIndex::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, Temp_int_Variable) == 0x000008, "Member 'UI_CommonWheel_C_SetSelectedIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_GetItemByIndex_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_GetItemByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000021, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'UI_CommonWheel_C_SetSelectedIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_GetMaterial_Material) == 0x000028, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_GetMaterial_Material' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_IsDisableItemIndex_ReturnValue) == 0x000030, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_IsDisableItemIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_GetMaterial_Material_1) == 0x000040, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_GetMaterial_Material_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetSelectedIndex, CallFunc_GetMaterial_Material_2) == 0x000048, "Member 'UI_CommonWheel_C_SetSelectedIndex::CallFunc_GetMaterial_Material_2' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelStyle
// 0x0088 (0x0088 - 0x0000)
struct UI_CommonWheel_C_SetWheelStyle final
{
public:
	EActionWheelCommandType                       WheelStyleType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDesignTime;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelStyle                      K2Node_Select_Default;                             // 0x0010(0x0074)(ConstParm, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetWheelStyle) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetWheelStyle");
static_assert(sizeof(UI_CommonWheel_C_SetWheelStyle) == 0x000088, "Wrong size on UI_CommonWheel_C_SetWheelStyle");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, WheelStyleType) == 0x000000, "Member 'UI_CommonWheel_C_SetWheelStyle::WheelStyleType' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, IsDesignTime) == 0x000001, "Member 'UI_CommonWheel_C_SetWheelStyle::IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, Temp_bool_Variable) == 0x000002, "Member 'UI_CommonWheel_C_SetWheelStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'UI_CommonWheel_C_SetWheelStyle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, CallFunc_GetMaterial_Material) == 0x000008, "Member 'UI_CommonWheel_C_SetWheelStyle::CallFunc_GetMaterial_Material' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelStyle, K2Node_Select_Default) == 0x000010, "Member 'UI_CommonWheel_C_SetWheelStyle::K2Node_Select_Default' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetItemCount
// 0x00F8 (0x00F8 - 0x0000)
struct UI_CommonWheel_C_SetItemCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemAngle;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WheelAngle;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    CallFunc_Array_Get_Item;                           // 0x0060(0x0030)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPositionOfCircle_Position;             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x00BC(0x0010)(NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material_1;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SetItemCount) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetItemCount");
static_assert(sizeof(UI_CommonWheel_C_SetItemCount) == 0x0000F8, "Wrong size on UI_CommonWheel_C_SetItemCount");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Count) == 0x000000, "Member 'UI_CommonWheel_C_SetItemCount::Count' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, ItemAngle) == 0x000004, "Member 'UI_CommonWheel_C_SetItemCount::ItemAngle' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, WheelAngle) == 0x000008, "Member 'UI_CommonWheel_C_SetItemCount::WheelAngle' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_float_Variable) == 0x00000C, "Member 'UI_CommonWheel_C_SetItemCount::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_float_Variable_1) == 0x00001C, "Member 'UI_CommonWheel_C_SetItemCount::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_bool_Variable) == 0x000024, "Member 'UI_CommonWheel_C_SetItemCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_byte_Variable) == 0x000025, "Member 'UI_CommonWheel_C_SetItemCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_byte_Variable_1) == 0x000026, "Member 'UI_CommonWheel_C_SetItemCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_bool_Variable_1) == 0x000030, "Member 'UI_CommonWheel_C_SetItemCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Map_Find_Value) == 0x000038, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_Select_Default) == 0x000044, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_GetMaterial_Material) == 0x000048, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_GetMaterial_Material' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_Select_Default_1) == 0x000050, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_int_Variable) == 0x000054, "Member 'UI_CommonWheel_C_SetItemCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_int_Variable_1) == 0x000058, "Member 'UI_CommonWheel_C_SetItemCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_int_Variable_2) == 0x00005C, "Member 'UI_CommonWheel_C_SetItemCount::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Array_Get_Item) == 0x000060, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000094, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, Temp_bool_Variable_2) == 0x0000A8, "Member 'UI_CommonWheel_C_SetItemCount::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_Select_Default_2) == 0x0000AC, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_GetPositionOfCircle_Position) == 0x0000B4, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_GetPositionOfCircle_Position' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_MakeStruct_Anchors) == 0x0000BC, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_GetChildAt_ReturnValue) == 0x0000D0, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x0000E0, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'UI_CommonWheel_C_SetItemCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetItemCount, CallFunc_GetMaterial_Material_1) == 0x0000F0, "Member 'UI_CommonWheel_C_SetItemCount::CallFunc_GetMaterial_Material_1' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.GetMaterial
// 0x0130 (0x0130 - 0x0000)
struct UI_CommonWheel_C_GetMaterial final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x0110)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_GetMaterial) == 0x000010, "Wrong alignment on UI_CommonWheel_C_GetMaterial");
static_assert(sizeof(UI_CommonWheel_C_GetMaterial) == 0x000130, "Wrong size on UI_CommonWheel_C_GetMaterial");
static_assert(offsetof(UI_CommonWheel_C_GetMaterial, Material) == 0x000000, "Member 'UI_CommonWheel_C_GetMaterial::Material' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_GetMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetMaterial, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'UI_CommonWheel_C_GetMaterial::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000120, "Member 'UI_CommonWheel_C_GetMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.GetPosition
// 0x0034 (0x0034 - 0x0000)
struct UI_CommonWheel_C_GetPosition final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_GetPosition) == 0x000004, "Wrong alignment on UI_CommonWheel_C_GetPosition");
static_assert(sizeof(UI_CommonWheel_C_GetPosition) == 0x000034, "Wrong size on UI_CommonWheel_C_GetPosition");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, Radius) == 0x000000, "Member 'UI_CommonWheel_C_GetPosition::Radius' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, Angle) == 0x000004, "Member 'UI_CommonWheel_C_GetPosition::Angle' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, Position) == 0x000008, "Member 'UI_CommonWheel_C_GetPosition::Position' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_GetPI_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Cos_ReturnValue) == 0x00001C, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Sin_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'UI_CommonWheel_C_GetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.GetItemByIndex
// 0x0018 (0x0018 - 0x0000)
struct UI_CommonWheel_C_GetItemByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_GetItemByIndex) == 0x000008, "Wrong alignment on UI_CommonWheel_C_GetItemByIndex");
static_assert(sizeof(UI_CommonWheel_C_GetItemByIndex) == 0x000018, "Wrong size on UI_CommonWheel_C_GetItemByIndex");
static_assert(offsetof(UI_CommonWheel_C_GetItemByIndex, Index_0) == 0x000000, "Member 'UI_CommonWheel_C_GetItemByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetItemByIndex, ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_GetItemByIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetItemByIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'UI_CommonWheel_C_GetItemByIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetCurrentPage
// 0x00B0 (0x00B0 - 0x0000)
struct UI_CommonWheel_C_SetCurrentPage final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0048(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(UI_CommonWheel_C_SetCurrentPage) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetCurrentPage");
static_assert(sizeof(UI_CommonWheel_C_SetCurrentPage) == 0x0000B0, "Wrong size on UI_CommonWheel_C_SetCurrentPage");
static_assert(offsetof(UI_CommonWheel_C_SetCurrentPage, PageIndex) == 0x000000, "Member 'UI_CommonWheel_C_SetCurrentPage::PageIndex' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCurrentPage, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'UI_CommonWheel_C_SetCurrentPage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCurrentPage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000048, "Member 'UI_CommonWheel_C_SetCurrentPage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCurrentPage, K2Node_MakeArray_Array) == 0x000088, "Member 'UI_CommonWheel_C_SetCurrentPage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCurrentPage, CallFunc_Format_ReturnValue) == 0x000098, "Member 'UI_CommonWheel_C_SetCurrentPage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelItemStyle
// 0x0038 (0x0038 - 0x0000)
struct UI_CommonWheel_C_SetWheelItemStyle final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetWheelItemStyle) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetWheelItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetWheelItemStyle) == 0x000038, "Wrong size on UI_CommonWheel_C_SetWheelItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, Temp_int_Variable) == 0x000000, "Member 'UI_CommonWheel_C_SetWheelItemStyle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, Temp_int_Variable_1) == 0x000008, "Member 'UI_CommonWheel_C_SetWheelItemStyle::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Array_Get_Item) == 0x000010, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelItemStyle, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'UI_CommonWheel_C_SetWheelItemStyle::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetStyle
// 0x0034 (0x0034 - 0x0000)
struct UI_CommonWheel_C_SetStyle final
{
public:
	EActionWheelCommandType                       Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionWheelCommandType                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EActionWheelCommandType                       Temp_byte_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SetStyle) == 0x000004, "Wrong alignment on UI_CommonWheel_C_SetStyle");
static_assert(sizeof(UI_CommonWheel_C_SetStyle) == 0x000034, "Wrong size on UI_CommonWheel_C_SetStyle");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Style_0) == 0x000000, "Member 'UI_CommonWheel_C_SetStyle::Style_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable) == 0x000001, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_1) == 0x000002, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_2) == 0x000003, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_3) == 0x000004, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_4) == 0x000005, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_5) == 0x000006, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_6) == 0x000007, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_7) == 0x000008, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_8) == 0x000009, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_byte_Variable_9) == 0x00000A, "Member 'UI_CommonWheel_C_SetStyle::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable) == 0x00000C, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_1) == 0x000010, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_2) == 0x000014, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_3) == 0x000018, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_4) == 0x00001C, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_5) == 0x000020, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_6) == 0x000024, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, Temp_int_Variable_7) == 0x000028, "Member 'UI_CommonWheel_C_SetStyle::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, K2Node_Select_Default) == 0x00002C, "Member 'UI_CommonWheel_C_SetStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStyle, K2Node_Select_Default_1) == 0x000030, "Member 'UI_CommonWheel_C_SetStyle::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetCommandName
// 0x0090 (0x0090 - 0x0000)
struct UI_CommonWheel_C_SetCommandName final
{
public:
	int32                                         Dimension_1;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NameIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Temp_string_Variable;                              // 0x0008(0x0050)(ConstParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
};
static_assert(alignof(UI_CommonWheel_C_SetCommandName) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetCommandName");
static_assert(sizeof(UI_CommonWheel_C_SetCommandName) == 0x000090, "Wrong size on UI_CommonWheel_C_SetCommandName");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, Dimension_1) == 0x000000, "Member 'UI_CommonWheel_C_SetCommandName::Dimension_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, NameIndex) == 0x000004, "Member 'UI_CommonWheel_C_SetCommandName::NameIndex' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, Temp_string_Variable) == 0x000008, "Member 'UI_CommonWheel_C_SetCommandName::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000058, "Member 'UI_CommonWheel_C_SetCommandName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'UI_CommonWheel_C_SetCommandName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'UI_CommonWheel_C_SetCommandName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, CallFunc_GetNoticeFormatText_ReturnValue) == 0x000068, "Member 'UI_CommonWheel_C_SetCommandName::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCommandName, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'UI_CommonWheel_C_SetCommandName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetPageInfo
// 0x00F0 (0x00F0 - 0x0000)
struct UI_CommonWheel_C_SetPageInfo final
{
public:
	bool                                          MoreThanOne;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USolarCheckButton*>              K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarCheckButton*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(UI_CommonWheel_C_SetPageInfo) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetPageInfo");
static_assert(sizeof(UI_CommonWheel_C_SetPageInfo) == 0x0000F0, "Wrong size on UI_CommonWheel_C_SetPageInfo");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, MoreThanOne) == 0x000000, "Member 'UI_CommonWheel_C_SetPageInfo::MoreThanOne' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, Temp_bool_Variable) == 0x000001, "Member 'UI_CommonWheel_C_SetPageInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, Temp_byte_Variable) == 0x000002, "Member 'UI_CommonWheel_C_SetPageInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, Temp_byte_Variable_1) == 0x000003, "Member 'UI_CommonWheel_C_SetPageInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UI_CommonWheel_C_SetPageInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UI_CommonWheel_C_SetPageInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, K2Node_MakeArray_Array) == 0x000010, "Member 'UI_CommonWheel_C_SetPageInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, K2Node_Select_Default) == 0x000020, "Member 'UI_CommonWheel_C_SetPageInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Array_Get_Item) == 0x000028, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000035, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000036, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'UI_CommonWheel_C_SetPageInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'UI_CommonWheel_C_SetPageInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'UI_CommonWheel_C_SetPageInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPageInfo, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'UI_CommonWheel_C_SetPageInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.UpdateItemCountText
// 0x0040 (0x0040 - 0x0000)
struct UI_CommonWheel_C_UpdateItemCountText final
{
public:
	class UUI_WheelItem_C*                        Item;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableInfiniteAmountByItemID_ReturnValue; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemNumById_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_UpdateItemCountText) == 0x000008, "Wrong alignment on UI_CommonWheel_C_UpdateItemCountText");
static_assert(sizeof(UI_CommonWheel_C_UpdateItemCountText) == 0x000040, "Wrong size on UI_CommonWheel_C_UpdateItemCountText");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, Item) == 0x000000, "Member 'UI_CommonWheel_C_UpdateItemCountText::Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UI_CommonWheel_C_UpdateItemCountText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UI_CommonWheel_C_UpdateItemCountText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Array_Get_Item) == 0x000018, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_EnableInfiniteAmountByItemID_ReturnValue) == 0x000024, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_EnableInfiniteAmountByItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_GetItemNumById_ReturnValue) == 0x000028, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_GetItemNumById_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00002D, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Array_Length_ReturnValue_2) == 0x000034, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateItemCountText, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000039, "Member 'UI_CommonWheel_C_UpdateItemCountText::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetOperationTextVisibility
// 0x0001 (0x0001 - 0x0000)
struct UI_CommonWheel_C_SetOperationTextVisibility final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetOperationTextVisibility) == 0x000001, "Wrong alignment on UI_CommonWheel_C_SetOperationTextVisibility");
static_assert(sizeof(UI_CommonWheel_C_SetOperationTextVisibility) == 0x000001, "Wrong size on UI_CommonWheel_C_SetOperationTextVisibility");
static_assert(offsetof(UI_CommonWheel_C_SetOperationTextVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'UI_CommonWheel_C_SetOperationTextVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.UpdateLastSelectedIndex
// 0x0088 (0x0088 - 0x0000)
struct UI_CommonWheel_C_UpdateLastSelectedIndex final
{
public:
	class FString                                 ItemID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         GroupID_0;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActionWheelCommand                    CallFunc_Array_Get_Item;                           // 0x0038(0x0030)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_UpdateLastSelectedIndex) == 0x000008, "Wrong alignment on UI_CommonWheel_C_UpdateLastSelectedIndex");
static_assert(sizeof(UI_CommonWheel_C_UpdateLastSelectedIndex) == 0x000088, "Wrong size on UI_CommonWheel_C_UpdateLastSelectedIndex");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, ItemID) == 0x000000, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::ItemID' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, GroupID_0) == 0x000010, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::GroupID_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, ItemIndex) == 0x000014, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::ItemIndex' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_UpdateLastSelectedIndex, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000080, "Member 'UI_CommonWheel_C_UpdateLastSelectedIndex::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetEachWheeltemStyle
// 0x0080 (0x0080 - 0x0000)
struct UI_CommonWheel_C_SetEachWheeltemStyle final
{
public:
	class UUI_WheelItem_C*                        WheelItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_WheelItem_C*                        LocalUIWheel;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    LocalWheelCommand;                                 // 0x0018(0x0030)(Edit, BlueprintVisible)
	struct FActionWheelCommand                    CallFunc_GetActionWheelCommandByType_ActionWheelCommand; // 0x0048(0x0030)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetEachWheeltemStyle) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetEachWheeltemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetEachWheeltemStyle) == 0x000080, "Wrong size on UI_CommonWheel_C_SetEachWheeltemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, WheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::WheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, Index_0) == 0x000008, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, LocalUIWheel) == 0x000010, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::LocalUIWheel' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, LocalWheelCommand) == 0x000018, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::LocalWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, CallFunc_GetActionWheelCommandByType_ActionWheelCommand) == 0x000048, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::CallFunc_GetActionWheelCommandByType_ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachWheeltemStyle, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'UI_CommonWheel_C_SetEachWheeltemStyle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.GetActionWheelCommandByType
// 0x0040 (0x0040 - 0x0000)
struct UI_CommonWheel_C_GetActionWheelCommandByType final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(Parm, OutParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_GetActionWheelCommandByType) == 0x000008, "Wrong alignment on UI_CommonWheel_C_GetActionWheelCommandByType");
static_assert(sizeof(UI_CommonWheel_C_GetActionWheelCommandByType) == 0x000040, "Wrong size on UI_CommonWheel_C_GetActionWheelCommandByType");
static_assert(offsetof(UI_CommonWheel_C_GetActionWheelCommandByType, Index_0) == 0x000000, "Member 'UI_CommonWheel_C_GetActionWheelCommandByType::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetActionWheelCommandByType, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_GetActionWheelCommandByType::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetActionWheelCommandByType, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_GetActionWheelCommandByType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetActionWheelCommandByType, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'UI_CommonWheel_C_GetActionWheelCommandByType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetPlaySoundItemStyle
// 0x01E0 (0x01E0 - 0x0000)
struct UI_CommonWheel_C_SetPlaySoundItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommadn;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_WheelItem_C*                        PlaySoundUIItem;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Temp_string_Variable;                              // 0x0040(0x0050)(ConstParm)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A0(0x0110)()
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01C0(0x0018)()
};
static_assert(alignof(UI_CommonWheel_C_SetPlaySoundItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetPlaySoundItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetPlaySoundItemStyle) == 0x0001E0, "Wrong size on UI_CommonWheel_C_SetPlaySoundItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, ActionWheelCommadn) == 0x000008, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::ActionWheelCommadn' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, PlaySoundUIItem) == 0x000038, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::PlaySoundUIItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, Temp_string_Variable) == 0x000040, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000090, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, K2Node_MakeStruct_SlateBrush) == 0x0000A0, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, CallFunc_GetNoticeFormatText_ReturnValue) == 0x0001B0, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPlaySoundItemStyle, CallFunc_Conv_StringToText_ReturnValue) == 0x0001C0, "Member 'UI_CommonWheel_C_SetPlaySoundItemStyle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetBuddyBallItemStyle
// 0x0160 (0x0160 - 0x0000)
struct UI_CommonWheel_C_SetBuddyBallItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_WheelItem_C*                        BuddyBallUIItem;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0110)()
};
static_assert(alignof(UI_CommonWheel_C_SetBuddyBallItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetBuddyBallItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetBuddyBallItemStyle) == 0x000160, "Wrong size on UI_CommonWheel_C_SetBuddyBallItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, BuddyBallUIItem) == 0x000038, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::BuddyBallUIItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetBuddyBallItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'UI_CommonWheel_C_SetBuddyBallItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetUseItemStyle
// 0x0180 (0x0180 - 0x0000)
struct UI_CommonWheel_C_SetUseItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_WheelItem_C*                        UseItemUItem;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableInfiniteAmountByItemID_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0110)()
	int32                                         CallFunc_GetItemNumById_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0168(0x0018)()
};
static_assert(alignof(UI_CommonWheel_C_SetUseItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetUseItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetUseItemStyle) == 0x000180, "Wrong size on UI_CommonWheel_C_SetUseItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetUseItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetUseItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, UseItemUItem) == 0x000038, "Member 'UI_CommonWheel_C_SetUseItemStyle::UseItemUItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_EnableInfiniteAmountByItemID_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_EnableInfiniteAmountByItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'UI_CommonWheel_C_SetUseItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_GetItemNumById_ReturnValue) == 0x000160, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_GetItemNumById_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_Greater_IntInt_ReturnValue) == 0x000164, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetUseItemStyle, CallFunc_Conv_IntToText_ReturnValue) == 0x000168, "Member 'UI_CommonWheel_C_SetUseItemStyle::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetStickerItemStyle
// 0x0160 (0x0160 - 0x0000)
struct UI_CommonWheel_C_SetStickerItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_WheelItem_C*                        StickerUIItem;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0110)()
};
static_assert(alignof(UI_CommonWheel_C_SetStickerItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetStickerItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetStickerItemStyle) == 0x000160, "Wrong size on UI_CommonWheel_C_SetStickerItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetStickerItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetStickerItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, StickerUIItem) == 0x000038, "Member 'UI_CommonWheel_C_SetStickerItemStyle::StickerUIItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetStickerItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_SetStickerItemStyle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'UI_CommonWheel_C_SetStickerItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetStickerItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'UI_CommonWheel_C_SetStickerItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetDanceItemStyle
// 0x0160 (0x0160 - 0x0000)
struct UI_CommonWheel_C_SetDanceItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUI_WheelItem_C*                        DanceUIItem;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0110)()
};
static_assert(alignof(UI_CommonWheel_C_SetDanceItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetDanceItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetDanceItemStyle) == 0x000160, "Wrong size on UI_CommonWheel_C_SetDanceItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetDanceItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetDanceItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, DanceUIItem) == 0x000038, "Member 'UI_CommonWheel_C_SetDanceItemStyle::DanceUIItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetDanceItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_SetDanceItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetDanceItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'UI_CommonWheel_C_SetDanceItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetPreselectedndex
// 0x0028 (0x0028 - 0x0000)
struct UI_CommonWheel_C_SetPreselectedndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SetPreselectedndex) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetPreselectedndex");
static_assert(sizeof(UI_CommonWheel_C_SetPreselectedndex) == 0x000028, "Wrong size on UI_CommonWheel_C_SetPreselectedndex");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, Index_0) == 0x000000, "Member 'UI_CommonWheel_C_SetPreselectedndex::Index_0' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_SafeDivide_ReturnValue) == 0x000014, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetPreselectedndex, CallFunc_GetMaterial_Material) == 0x000020, "Member 'UI_CommonWheel_C_SetPreselectedndex::CallFunc_GetMaterial_Material' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.UpdateSelectedColor
// 0x0004 (0x0004 - 0x0000)
struct UI_CommonWheel_C_UpdateSelectedColor final
{
public:
	int32                                         SelectedIndex_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_UpdateSelectedColor) == 0x000004, "Wrong alignment on UI_CommonWheel_C_UpdateSelectedColor");
static_assert(sizeof(UI_CommonWheel_C_UpdateSelectedColor) == 0x000004, "Wrong size on UI_CommonWheel_C_UpdateSelectedColor");
static_assert(offsetof(UI_CommonWheel_C_UpdateSelectedColor, SelectedIndex_0) == 0x000000, "Member 'UI_CommonWheel_C_UpdateSelectedColor::SelectedIndex_0' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetEachItemAlpha
// 0x0020 (0x0020 - 0x0000)
struct UI_CommonWheel_C_SetEachItemAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActionWheelItem*                       WheelItem;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        K2Node_DynamicCast_AsUI_Wheel_Item;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetEachItemAlpha) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetEachItemAlpha");
static_assert(sizeof(UI_CommonWheel_C_SetEachItemAlpha) == 0x000020, "Wrong size on UI_CommonWheel_C_SetEachItemAlpha");
static_assert(offsetof(UI_CommonWheel_C_SetEachItemAlpha, Alpha) == 0x000000, "Member 'UI_CommonWheel_C_SetEachItemAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachItemAlpha, WheelItem) == 0x000008, "Member 'UI_CommonWheel_C_SetEachItemAlpha::WheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachItemAlpha, K2Node_DynamicCast_AsUI_Wheel_Item) == 0x000010, "Member 'UI_CommonWheel_C_SetEachItemAlpha::K2Node_DynamicCast_AsUI_Wheel_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetEachItemAlpha, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_CommonWheel_C_SetEachItemAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetWorldMarkItemStyle
// 0x0160 (0x0160 - 0x0000)
struct UI_CommonWheel_C_SetWorldMarkItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0110)()
};
static_assert(alignof(UI_CommonWheel_C_SetWorldMarkItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetWorldMarkItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetWorldMarkItemStyle) == 0x000160, "Wrong size on UI_CommonWheel_C_SetWorldMarkItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetWorldMarkItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetWorldMarkItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWorldMarkItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetWorldMarkItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWorldMarkItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_SetWorldMarkItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWorldMarkItemStyle, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetWorldMarkItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWorldMarkItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'UI_CommonWheel_C_SetWorldMarkItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetQuickVoiceItemStyle
// 0x0180 (0x0180 - 0x0000)
struct UI_CommonWheel_C_SetQuickVoiceItemStyle final
{
public:
	class UUI_WheelItem_C*                        UIWheelItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionWheelCommand;                                // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                CallFunc_TryLoadBySoftObjectPath_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0070(0x0110)()
};
static_assert(alignof(UI_CommonWheel_C_SetQuickVoiceItemStyle) == 0x000010, "Wrong alignment on UI_CommonWheel_C_SetQuickVoiceItemStyle");
static_assert(sizeof(UI_CommonWheel_C_SetQuickVoiceItemStyle) == 0x000180, "Wrong size on UI_CommonWheel_C_SetQuickVoiceItemStyle");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, UIWheelItem) == 0x000000, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::UIWheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, ActionWheelCommand) == 0x000008, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::ActionWheelCommand' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, CallFunc_TryLoadBySoftObjectPath_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::CallFunc_TryLoadBySoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, CallFunc_GetLocalText_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetQuickVoiceItemStyle, K2Node_MakeStruct_SlateBrush) == 0x000070, "Member 'UI_CommonWheel_C_SetQuickVoiceItemStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelBGIsHalfStyle
// 0x0010 (0x0010 - 0x0000)
struct UI_CommonWheel_C_SetWheelBGIsHalfStyle final
{
public:
	bool                                          IsHalfStyle;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMaterial_Material;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_CommonWheel_C_SetWheelBGIsHalfStyle) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetWheelBGIsHalfStyle");
static_assert(sizeof(UI_CommonWheel_C_SetWheelBGIsHalfStyle) == 0x000010, "Wrong size on UI_CommonWheel_C_SetWheelBGIsHalfStyle");
static_assert(offsetof(UI_CommonWheel_C_SetWheelBGIsHalfStyle, IsHalfStyle) == 0x000000, "Member 'UI_CommonWheel_C_SetWheelBGIsHalfStyle::IsHalfStyle' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetWheelBGIsHalfStyle, CallFunc_GetMaterial_Material) == 0x000008, "Member 'UI_CommonWheel_C_SetWheelBGIsHalfStyle::CallFunc_GetMaterial_Material' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.SetCrosshairVisible
// 0x0018 (0x0018 - 0x0000)
struct UI_CommonWheel_C_SetCrosshairVisible final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc__C_GetLocalCharacter_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_SetCrosshairVisible) == 0x000008, "Wrong alignment on UI_CommonWheel_C_SetCrosshairVisible");
static_assert(sizeof(UI_CommonWheel_C_SetCrosshairVisible) == 0x000018, "Wrong size on UI_CommonWheel_C_SetCrosshairVisible");
static_assert(offsetof(UI_CommonWheel_C_SetCrosshairVisible, bShow) == 0x000000, "Member 'UI_CommonWheel_C_SetCrosshairVisible::bShow' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCrosshairVisible, CallFunc__C_GetLocalCharacter_ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_SetCrosshairVisible::CallFunc__C_GetLocalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_SetCrosshairVisible, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_SetCrosshairVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.ResetWheelItem
// 0x0018 (0x0018 - 0x0000)
struct UI_CommonWheel_C_ResetWheelItem final
{
public:
	class UActionWheelItem*                       WheelItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        K2Node_DynamicCast_AsUI_Wheel_Item;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_ResetWheelItem) == 0x000008, "Wrong alignment on UI_CommonWheel_C_ResetWheelItem");
static_assert(sizeof(UI_CommonWheel_C_ResetWheelItem) == 0x000018, "Wrong size on UI_CommonWheel_C_ResetWheelItem");
static_assert(offsetof(UI_CommonWheel_C_ResetWheelItem, WheelItem) == 0x000000, "Member 'UI_CommonWheel_C_ResetWheelItem::WheelItem' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ResetWheelItem, K2Node_DynamicCast_AsUI_Wheel_Item) == 0x000008, "Member 'UI_CommonWheel_C_ResetWheelItem::K2Node_DynamicCast_AsUI_Wheel_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_ResetWheelItem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UI_CommonWheel_C_ResetWheelItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_CommonWheel.UI_CommonWheel_C.GetWorldMarkDotTargetPosition
// 0x0050 (0x0050 - 0x0000)
struct UI_CommonWheel_C_GetWorldMarkDotTargetPosition final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetScreenSize_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_WheelItem_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition) == 0x000008, "Wrong alignment on UI_CommonWheel_C_GetWorldMarkDotTargetPosition");
static_assert(sizeof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition) == 0x000050, "Wrong size on UI_CommonWheel_C_GetWorldMarkDotTargetPosition");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, ReturnValue) == 0x000000, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_GetScreenSize_ReturnValue) == 0x000010, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_GetScreenSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000018, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_Array_Get_Item) == 0x000020, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_GetPosition_ReturnValue) == 0x000038, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000040, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000049, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_CommonWheel_C_GetWorldMarkDotTargetPosition, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'UI_CommonWheel_C_GetWorldMarkDotTargetPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

