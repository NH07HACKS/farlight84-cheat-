#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_ShrinkCircle_Countdown

#include "Basic.hpp"

#include "UI_HUD_Notice_ShrinkCircle_Countdown_classes.hpp"
#include "UI_HUD_Notice_ShrinkCircle_Countdown_parameters.hpp"


namespace SDK
{

// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.ExecuteUbergraph_UI_HUD_Notice_ShrinkCircle_Countdown
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::ExecuteUbergraph_UI_HUD_Notice_ShrinkCircle_Countdown(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "ExecuteUbergraph_UI_HUD_Notice_ShrinkCircle_Countdown");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_ExecuteUbergraph_UI_HUD_Notice_ShrinkCircle_Countdown Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.StartNotice
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InRemainTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InRound                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::StartNotice(int32 InRemainTime, int32 InRound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "StartNotice");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_StartNotice Parms{};

	Parms.InRemainTime = InRemainTime;
	Parms.InRound = InRound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.ReceivePlatformLayout
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EUSolarWidgetLayoutType                 InLayoutType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "ReceivePlatformLayout");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_ReceivePlatformLayout Parms{};

	Parms.InLayoutType = InLayoutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.Update
// (BlueprintCallable, BlueprintEvent)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "PreConstruct");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.StartCountDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Round                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::StartCountDown(int32 Time, int32 Round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "StartCountDown");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_StartCountDown Parms{};

	Parms.Time = Time;
	Parms.Round = Round;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.GetRoundLocalId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::GetRoundLocalId(int32* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "GetRoundLocalId");

	Params::UI_HUD_Notice_ShrinkCircle_Countdown_C_GetRoundLocalId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.OnCountDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::OnCountDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "OnCountDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_ShrinkCircle_Countdown.UI_HUD_Notice_ShrinkCircle_Countdown_C.OnCountDownEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_HUD_Notice_ShrinkCircle_Countdown_C::OnCountDownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_ShrinkCircle_Countdown_C", "OnCountDownEnd");

	UObject::ProcessEvent(Func, nullptr);
}

}

