#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPSDK

#include "Basic.hpp"


namespace SDK::Params
{

// Function NPSDK.NPSDK.GetInstance
// 0x0008 (0x0008 - 0x0000)
struct NPSDK_GetInstance final
{
public:
	class UNPSDK*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPSDK_GetInstance) == 0x000008, "Wrong alignment on NPSDK_GetInstance");
static_assert(sizeof(NPSDK_GetInstance) == 0x000008, "Wrong size on NPSDK_GetInstance");
static_assert(offsetof(NPSDK_GetInstance, ReturnValue) == 0x000000, "Member 'NPSDK_GetInstance::ReturnValue' has a wrong offset!");

// Function NPSDK.NPSDK.NPHtpInit
// 0x0040 (0x0040 - 0x0000)
struct NPSDK_NPHtpInit final
{
public:
	class FString                                 ProductID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameKey;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ServerType;                                        // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Channel;                                           // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NPSDK_NPHtpInit) == 0x000008, "Wrong alignment on NPSDK_NPHtpInit");
static_assert(sizeof(NPSDK_NPHtpInit) == 0x000040, "Wrong size on NPSDK_NPHtpInit");
static_assert(offsetof(NPSDK_NPHtpInit, ProductID) == 0x000000, "Member 'NPSDK_NPHtpInit::ProductID' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpInit, GameKey) == 0x000010, "Member 'NPSDK_NPHtpInit::GameKey' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpInit, ServerType) == 0x000020, "Member 'NPSDK_NPHtpInit::ServerType' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpInit, Channel) == 0x000028, "Member 'NPSDK_NPHtpInit::Channel' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpInit, ReturnValue) == 0x000038, "Member 'NPSDK_NPHtpInit::ReturnValue' has a wrong offset!");

// Function NPSDK.NPSDK.NPHtpSetRoleInfo
// 0x0070 (0x0070 - 0x0000)
struct NPSDK_NPHtpSetRoleInfo final
{
public:
	class FString                                 BusinessId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleId;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleName;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleAccount;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RoleServer;                                        // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ServerID;                                          // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameJson;                                          // 0x0058(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NPSDK_NPHtpSetRoleInfo) == 0x000008, "Wrong alignment on NPSDK_NPHtpSetRoleInfo");
static_assert(sizeof(NPSDK_NPHtpSetRoleInfo) == 0x000070, "Wrong size on NPSDK_NPHtpSetRoleInfo");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, BusinessId) == 0x000000, "Member 'NPSDK_NPHtpSetRoleInfo::BusinessId' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, RoleId) == 0x000010, "Member 'NPSDK_NPHtpSetRoleInfo::RoleId' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, RoleName) == 0x000020, "Member 'NPSDK_NPHtpSetRoleInfo::RoleName' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, RoleAccount) == 0x000030, "Member 'NPSDK_NPHtpSetRoleInfo::RoleAccount' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, RoleServer) == 0x000040, "Member 'NPSDK_NPHtpSetRoleInfo::RoleServer' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, ServerID) == 0x000050, "Member 'NPSDK_NPHtpSetRoleInfo::ServerID' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, GameJson) == 0x000058, "Member 'NPSDK_NPHtpSetRoleInfo::GameJson' has a wrong offset!");
static_assert(offsetof(NPSDK_NPHtpSetRoleInfo, ReturnValue) == 0x000068, "Member 'NPSDK_NPHtpSetRoleInfo::ReturnValue' has a wrong offset!");

// Function NPSDK.NPSDK.GetMsg
// 0x0010 (0x0010 - 0x0000)
struct NPSDK_GetMsg final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPSDK_GetMsg) == 0x000008, "Wrong alignment on NPSDK_GetMsg");
static_assert(sizeof(NPSDK_GetMsg) == 0x000010, "Wrong size on NPSDK_GetMsg");
static_assert(offsetof(NPSDK_GetMsg, ReturnValue) == 0x000000, "Member 'NPSDK_GetMsg::ReturnValue' has a wrong offset!");

// Function NPSDK.NPSDK.OnRecvConfigNotify
// 0x0010 (0x0010 - 0x0000)
struct NPSDK_OnRecvConfigNotify final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPSDK_OnRecvConfigNotify) == 0x000008, "Wrong alignment on NPSDK_OnRecvConfigNotify");
static_assert(sizeof(NPSDK_OnRecvConfigNotify) == 0x000010, "Wrong size on NPSDK_OnRecvConfigNotify");
static_assert(offsetof(NPSDK_OnRecvConfigNotify, Data) == 0x000000, "Member 'NPSDK_OnRecvConfigNotify::Data' has a wrong offset!");

// Function NPSDK.NPSDK.OnRecvTokResultNotify
// 0x0010 (0x0010 - 0x0000)
struct NPSDK_OnRecvTokResultNotify final
{
public:
	class FString                                 Data;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPSDK_OnRecvTokResultNotify) == 0x000008, "Wrong alignment on NPSDK_OnRecvTokResultNotify");
static_assert(sizeof(NPSDK_OnRecvTokResultNotify) == 0x000010, "Wrong size on NPSDK_OnRecvTokResultNotify");
static_assert(offsetof(NPSDK_OnRecvTokResultNotify, Data) == 0x000000, "Member 'NPSDK_OnRecvTokResultNotify::Data' has a wrong offset!");

// Function NPSDK.NPSDK.GetStatus
// 0x0004 (0x0004 - 0x0000)
struct NPSDK_GetStatus final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NPSDK_GetStatus) == 0x000004, "Wrong alignment on NPSDK_GetStatus");
static_assert(sizeof(NPSDK_GetStatus) == 0x000004, "Wrong size on NPSDK_GetStatus");
static_assert(offsetof(NPSDK_GetStatus, ReturnValue) == 0x000000, "Member 'NPSDK_GetStatus::ReturnValue' has a wrong offset!");

}

