#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaGCBP_SwitchToRollingMesh

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh
// 0x0108 (0x0108 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh) == 0x000108, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, EntryPoint) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsPlaying_ReturnValue) == 0x000004, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, K2Node_Event_EndPlayReason) == 0x000021, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsMovingOnGround_ReturnValue) == 0x000022, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_VSizeXY_ReturnValue) == 0x000024, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000028, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_GetOwner_ReturnValue_1) == 0x000038, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue_3) == 0x000041, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_BreakTransform_Location) == 0x000044, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_ComposeRotators_ReturnValue) == 0x000068, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue_4) == 0x000074, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000078, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsValid_ReturnValue_5) == 0x000100, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh, CallFunc_IsPlaying_ReturnValue_1) == 0x000101, "Member 'ChaGCBP_SwitchToRollingMesh_C_ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay) == 0x000001, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_ReceiveTick) == 0x000004, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_ReceiveTick");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_ReceiveTick) == 0x000004, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_ReceiveTick");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.OnActiveInternal
// 0x00E0 (0x00E0 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal final
{
public:
	class ASolarCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnActiveInternal_ReturnValue;             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal) == 0x0000E0, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal, Character) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal::Character' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal, Parameters) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal::Parameters' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal, ReturnValue) == 0x0000D8, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal, CallFunc_OnActiveInternal_ReturnValue) == 0x0000D9, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnActiveInternal::CallFunc_OnActiveInternal_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.WhileActiveInternal
// 0x01A0 (0x01A0 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal final
{
public:
	class ASolarCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetCurrentSkeletalMeshComponent_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x010C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal) == 0x0001A0, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, Character) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::Character' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, Parameters) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::Parameters' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, ReturnValue) == 0x0000D8, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_GetCurrentSkeletalMeshComponent_ReturnValue) == 0x0000E0, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_GetCurrentSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_BreakTransform_Location) == 0x0000E8, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_BreakTransform_Rotation) == 0x0000F4, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x00010C, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_IsValid_ReturnValue_1) == 0x000194, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000195, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000198, "Member 'ChaGCBP_SwitchToRollingMesh_C_WhileActiveInternal::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.OnRemoveInternal
// 0x00F8 (0x00F8 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal final
{
public:
	class ASolarCharacter*                        NullableCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroup_ReturnValue;            // 0x00E0(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal) == 0x0000F8, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, NullableCharacter) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::NullableCharacter' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, Parameters) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::Parameters' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, ReturnValue) == 0x0000D8, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, CallFunc_K2_PlaySoundGroup_ReturnValue) == 0x0000E0, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::CallFunc_K2_PlaySoundGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'ChaGCBP_SwitchToRollingMesh_C_OnRemoveInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.UpdateParticleParamsBySpeed
// 0x000C (0x000C - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed) == 0x000004, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed) == 0x00000C, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed, Speed) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed::Speed' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed, CallFunc_GetFloatValue_ReturnValue) == 0x000004, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed, CallFunc_GetFloatValue_ReturnValue_1) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateParticleParamsBySpeed::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.UpdateRollingSound
// 0x0048 (0x0048 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound final
{
public:
	class USolarAkGameObject*                     AkGameObject;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRTPCValue_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacterBase*                    K2Node_DynamicCast_AsSolar_Character_Base;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarAkGameObject*                     CallFunc_GetSolarAkGameObject_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound) == 0x000048, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, AkGameObject) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::AkGameObject' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_IsMovingOnGround_ReturnValue) == 0x000010, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_GetMaxSpeed_ReturnValue) == 0x000014, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_SetRTPCValue_ReturnValue) == 0x000024, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_SetRTPCValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_IsValid_ReturnValue_2) == 0x000026, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, K2Node_DynamicCast_AsSolar_Character_Base) == 0x000030, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::K2Node_DynamicCast_AsSolar_Character_Base' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound, CallFunc_GetSolarAkGameObject_ReturnValue) == 0x000040, "Member 'ChaGCBP_SwitchToRollingMesh_C_UpdateRollingSound::CallFunc_GetSolarAkGameObject_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.TryStartRollingLoop
// 0x0010 (0x0010 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop final
{
public:
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroup_ReturnValue;            // 0x0000(0x0010)()
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop) == 0x000010, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop, CallFunc_K2_PlaySoundGroup_ReturnValue) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_TryStartRollingLoop::CallFunc_K2_PlaySoundGroup_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.TryStartAirLoop
// 0x0010 (0x0010 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop final
{
public:
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroup_ReturnValue;            // 0x0000(0x0010)()
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop) == 0x000010, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop, CallFunc_K2_PlaySoundGroup_ReturnValue) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_TryStartAirLoop::CallFunc_K2_PlaySoundGroup_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.TryStopRollingLoop
// 0x0010 (0x0010 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop final
{
public:
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroupByContext_ReturnValue;   // 0x0000(0x0010)()
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop) == 0x000010, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop, CallFunc_K2_PlaySoundGroupByContext_ReturnValue) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_TryStopRollingLoop::CallFunc_K2_PlaySoundGroupByContext_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C.TryStopAirLoop
// 0x0010 (0x0010 - 0x0000)
struct ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop final
{
public:
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroupByContext_ReturnValue;   // 0x0000(0x0010)()
};
static_assert(alignof(ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop) == 0x000008, "Wrong alignment on ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop");
static_assert(sizeof(ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop) == 0x000010, "Wrong size on ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop");
static_assert(offsetof(ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop, CallFunc_K2_PlaySoundGroupByContext_ReturnValue) == 0x000000, "Member 'ChaGCBP_SwitchToRollingMesh_C_TryStopAirLoop::CallFunc_K2_PlaySoundGroupByContext_ReturnValue' has a wrong offset!");

}

