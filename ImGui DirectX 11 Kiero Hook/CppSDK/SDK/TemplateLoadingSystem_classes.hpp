#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemplateLoadingSystem

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "UMG_classes.hpp"
#include "SolarUI_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class TemplateLoadingSystem.LoadingWidgetInterface
// 0x0000 (0x0000 - 0x0000)
class ILoadingWidgetInterface final
{
public:
	void OnLoadingFinished();
	void OnLoadingStarted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingWidgetInterface">();
	}
	static class ILoadingWidgetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ILoadingWidgetInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(ILoadingWidgetInterface) == 0x000001, "Wrong alignment on ILoadingWidgetInterface");
static_assert(sizeof(ILoadingWidgetInterface) == 0x000001, "Wrong size on ILoadingWidgetInterface");

// Class TemplateLoadingSystem.LoadingScreenSubsystem
// 0x0038 (0x0068 - 0x0030)
class ULoadingScreenSubsystem final : public UGameInstanceSubsystem
{
public:
	class UUserWidget*                            LoadingWidget;                                     // 0x0030(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_38[0x30];                                      // 0x0038(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadingScreenSubsystem* Get(const class UObject* WorldContextObject);

	void CloseLoadingScreen();
	void OnTransitionAnimFinished();
	class ULoadingWidgetBase* StartLoadingScreen(TSubclassOf<class ULoadingWidgetBase> InWidgetClass);
	void StartLoadingScreenByWidget(class UUserWidget* InUserWidget, const TArray<class FString>& InMoviePaths);
	void StopLoadingScreen(class UUserWidget* TransitionAnimWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingScreenSubsystem">();
	}
	static class ULoadingScreenSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingScreenSubsystem>();
	}
};
static_assert(alignof(ULoadingScreenSubsystem) == 0x000008, "Wrong alignment on ULoadingScreenSubsystem");
static_assert(sizeof(ULoadingScreenSubsystem) == 0x000068, "Wrong size on ULoadingScreenSubsystem");
static_assert(offsetof(ULoadingScreenSubsystem, LoadingWidget) == 0x000030, "Member 'ULoadingScreenSubsystem::LoadingWidget' has a wrong offset!");

// Class TemplateLoadingSystem.LoadingTransitionWidgetBase
// 0x0008 (0x0270 - 0x0268)
class ULoadingTransitionWidgetBase final : public UUserWidget
{
public:
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingTransitionWidgetBase">();
	}
	static class ULoadingTransitionWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingTransitionWidgetBase>();
	}
};
static_assert(alignof(ULoadingTransitionWidgetBase) == 0x000008, "Wrong alignment on ULoadingTransitionWidgetBase");
static_assert(sizeof(ULoadingTransitionWidgetBase) == 0x000270, "Wrong size on ULoadingTransitionWidgetBase");

// Class TemplateLoadingSystem.LoadingTransitionWidgetInterface
// 0x0000 (0x0000 - 0x0000)
class ILoadingTransitionWidgetInterface final
{
public:
	class UWidgetAnimation* GetTransitionAnimation();
	bool SetLoadingTransitionCallback(const TDelegate<void()>& InCallback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingTransitionWidgetInterface">();
	}
	static class ILoadingTransitionWidgetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ILoadingTransitionWidgetInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(ILoadingTransitionWidgetInterface) == 0x000001, "Wrong alignment on ILoadingTransitionWidgetInterface");
static_assert(sizeof(ILoadingTransitionWidgetInterface) == 0x000001, "Wrong size on ILoadingTransitionWidgetInterface");

// Class TemplateLoadingSystem.LoadingWidgetBase
// 0x0008 (0x03C0 - 0x03B8)
class ULoadingWidgetBase : public USolarUserWidgetBase
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingWidgetBase">();
	}
	static class ULoadingWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingWidgetBase>();
	}
};
static_assert(alignof(ULoadingWidgetBase) == 0x000008, "Wrong alignment on ULoadingWidgetBase");
static_assert(sizeof(ULoadingWidgetBase) == 0x0003C0, "Wrong size on ULoadingWidgetBase");

}

