#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_TrainingMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HUD_Notice_TrainingMode.UI_HUD_Notice_TrainingMode_C
// 0x0028 (0x0748 - 0x0720)
class UUI_HUD_Notice_TrainingMode_C final : public UUINoticeTrainingModeMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0728(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Enter;                                        // 0x0730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Txt_bg;                                        // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Txt_bg_1;                                      // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_HUD_Notice_TrainingMode(int32 EntryPoint);
	void ShowNoticeSlot(const int32 Index_0, const class FString& NoticeKey, const bool bIsOn);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void ShowNotice(const class FString& Text, float Duration);
	void Construct();
	void SetNoticeText(const class FString& InText);
	class UWidgetAnimation* GetEnterAnimation();
	class UWidgetAnimation* GetExitAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HUD_Notice_TrainingMode_C">();
	}
	static class UUI_HUD_Notice_TrainingMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HUD_Notice_TrainingMode_C>();
	}
};
static_assert(alignof(UUI_HUD_Notice_TrainingMode_C) == 0x000008, "Wrong alignment on UUI_HUD_Notice_TrainingMode_C");
static_assert(sizeof(UUI_HUD_Notice_TrainingMode_C) == 0x000748, "Wrong size on UUI_HUD_Notice_TrainingMode_C");
static_assert(offsetof(UUI_HUD_Notice_TrainingMode_C, UberGraphFrame) == 0x000720, "Member 'UUI_HUD_Notice_TrainingMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HUD_Notice_TrainingMode_C, Anim_Exit) == 0x000728, "Member 'UUI_HUD_Notice_TrainingMode_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_HUD_Notice_TrainingMode_C, Anim_Enter) == 0x000730, "Member 'UUI_HUD_Notice_TrainingMode_C::Anim_Enter' has a wrong offset!");
static_assert(offsetof(UUI_HUD_Notice_TrainingMode_C, Img_Txt_bg) == 0x000738, "Member 'UUI_HUD_Notice_TrainingMode_C::Img_Txt_bg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_Notice_TrainingMode_C, Img_Txt_bg_1) == 0x000740, "Member 'UUI_HUD_Notice_TrainingMode_C::Img_Txt_bg_1' has a wrong offset!");

}

