#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anim_LobbyCharacter_Default

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Anim_LobbyCharacter_Default.Anim_LobbyCharacter_Default_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Anim_LobbyCharacter_Default_C_AnimGraph final
{
public:
	struct FPoseLink                              bpp__AnimGraph__pf;                                // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anim_LobbyCharacter_Default_C_AnimGraph) == 0x000008, "Wrong alignment on Anim_LobbyCharacter_Default_C_AnimGraph");
static_assert(sizeof(Anim_LobbyCharacter_Default_C_AnimGraph) == 0x000010, "Wrong size on Anim_LobbyCharacter_Default_C_AnimGraph");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_AnimGraph, bpp__AnimGraph__pf) == 0x000000, "Member 'Anim_LobbyCharacter_Default_C_AnimGraph::bpp__AnimGraph__pf' has a wrong offset!");

// Function Anim_LobbyCharacter_Default.Anim_LobbyCharacter_Default_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation final
{
public:
	float                                         bpp__DeltaTimeX__pf;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation");
static_assert(sizeof(Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation, bpp__DeltaTimeX__pf) == 0x000000, "Member 'Anim_LobbyCharacter_Default_C_BlueprintUpdateAnimation::bpp__DeltaTimeX__pf' has a wrong offset!");

// Function Anim_LobbyCharacter_Default.Anim_LobbyCharacter_Default_C.SetCharacterCanBeLooked
// 0x0001 (0x0001 - 0x0000)
struct Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked final
{
public:
	bool                                          bpp__IsVisible__pf;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked) == 0x000001, "Wrong alignment on Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked");
static_assert(sizeof(Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked) == 0x000001, "Wrong size on Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked, bpp__IsVisible__pf) == 0x000000, "Member 'Anim_LobbyCharacter_Default_C_SetCharacterCanBeLooked::bpp__IsVisible__pf' has a wrong offset!");

// Function Anim_LobbyCharacter_Default.Anim_LobbyCharacter_Default_C.TurnTable_AnimLayer_forOverride
// 0x0020 (0x0020 - 0x0000)
struct Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride final
{
public:
	struct FPoseLink                              bpp__InPose__pf;                                   // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FPoseLink                              bpp__TurnTable_AnimLayer_forOverride__pf;          // 0x0010(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride) == 0x000008, "Wrong alignment on Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride");
static_assert(sizeof(Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride) == 0x000020, "Wrong size on Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride, bpp__InPose__pf) == 0x000000, "Member 'Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride::bpp__InPose__pf' has a wrong offset!");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride, bpp__TurnTable_AnimLayer_forOverride__pf) == 0x000010, "Member 'Anim_LobbyCharacter_Default_C_TurnTable_AnimLayer_forOverride::bpp__TurnTable_AnimLayer_forOverride__pf' has a wrong offset!");

// Function Anim_LobbyCharacter_Default.Anim_LobbyCharacter_Default_C.TurntablePhysics
// 0x0020 (0x0020 - 0x0000)
struct Anim_LobbyCharacter_Default_C_TurntablePhysics final
{
public:
	struct FPoseLink                              bpp__InPose__pf;                                   // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FPoseLink                              bpp__TurntablePhysics__pf;                         // 0x0010(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(Anim_LobbyCharacter_Default_C_TurntablePhysics) == 0x000008, "Wrong alignment on Anim_LobbyCharacter_Default_C_TurntablePhysics");
static_assert(sizeof(Anim_LobbyCharacter_Default_C_TurntablePhysics) == 0x000020, "Wrong size on Anim_LobbyCharacter_Default_C_TurntablePhysics");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_TurntablePhysics, bpp__InPose__pf) == 0x000000, "Member 'Anim_LobbyCharacter_Default_C_TurntablePhysics::bpp__InPose__pf' has a wrong offset!");
static_assert(offsetof(Anim_LobbyCharacter_Default_C_TurntablePhysics, bpp__TurntablePhysics__pf) == 0x000010, "Member 'Anim_LobbyCharacter_Default_C_TurntablePhysics::bpp__TurntablePhysics__pf' has a wrong offset!");

}

