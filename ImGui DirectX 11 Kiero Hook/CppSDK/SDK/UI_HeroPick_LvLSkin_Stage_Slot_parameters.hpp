#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HeroPick_LvLSkin_Stage_Slot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_HeroPick_SkinLevel_State_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot
// 0x0018 (0x0018 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHover;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot) == 0x000008, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot) == 0x000018, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, EntryPoint) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, K2Node_CustomEvent_IsHover) == 0x000004, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::K2Node_CustomEvent_IsHover' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, K2Node_Event_IsDesignTime) == 0x000005, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000006, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, K2Node_Event_ListItemObject) == 0x000008, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot, K2Node_Event_bIsSelected) == 0x000010, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_ExecuteUbergraph_UI_HeroPick_LvLSkin_Stage_Slot::K2Node_Event_bIsSelected' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.SetHover
// 0x0001 (0x0001 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover final
{
public:
	bool                                          IsHover;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover) == 0x000001, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover) == 0x000001, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover, IsHover) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetHover::IsHover' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.SetSelectState
// 0x0188 (0x0188 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState final
{
public:
	E_HeroPick_SkinLevel_State                    State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable_5;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable_6;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable_7;                              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00C0(0x0068)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0128(0x0028)()
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_4;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_SkinLevel_State                    Temp_byte_Variable_8;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState) == 0x000008, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState) == 0x000188, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, State) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::State' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable) == 0x000001, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_1) == 0x000002, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_2) == 0x000003, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_3) == 0x000004, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_4) == 0x000005, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable) == 0x000008, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_1) == 0x000018, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_2) == 0x000028, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_5) == 0x000038, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_int_Variable) == 0x00003C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_int_Variable_1) == 0x000040, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_int_Variable_2) == 0x000044, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_6) == 0x000048, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_3) == 0x00004C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_4) == 0x00005C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_5) == 0x00006C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_7) == 0x00007C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_object_Variable) == 0x000080, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_object_Variable_1) == 0x000088, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_object_Variable_2) == 0x000090, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default) == 0x000098, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default_1) == 0x00009C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default_2) == 0x0000AC, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default_3) == 0x0000B0, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_MakeStruct_SlateFontInfo) == 0x0000C0, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_MakeStruct_SlateColor) == 0x000128, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_6) == 0x000150, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default_4) == 0x000158, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_7) == 0x000160, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000168, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_struct_Variable_8) == 0x000170, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, Temp_byte_Variable_8) == 0x000178, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState, K2Node_Select_Default_5) == 0x00017C, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_SetSelectState::K2Node_Select_Default_5' has a wrong offset!");

// Function UI_HeroPick_LvLSkin_Stage_Slot.UI_HeroPick_LvLSkin_Stage_Slot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName) == 0x000008, "Wrong alignment on UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName");
static_assert(sizeof(UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName) == 0x000010, "Wrong size on UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName");
static_assert(offsetof(UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_HeroPick_LvLSkin_Stage_Slot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

