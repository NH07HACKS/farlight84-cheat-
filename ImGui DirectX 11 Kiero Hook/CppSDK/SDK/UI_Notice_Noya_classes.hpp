#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Notice_Noya

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_NoticeType_Noya_structs.hpp"
#include "S_NoyaNoticeInfo_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Notice_Noya.UI_Notice_Noya_C
// 0x0198 (0x0788 - 0x05F0)
class UUI_Notice_Noya_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        TypeSelect;                                        // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HUD_Notice_CutIn_Crash_C*           UI_HUD_Notice_CutIn_Crash;                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HUD_Notice_CutIn_Normal_C*          UI_HUD_Notice_CutIn_Normal;                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<E_NoticeType_Noya, class UUserWidget*>   提示类型;                                          // 0x0610(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<uint8, bool>                             条件列表;                                          // 0x0660(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_NoyaNoticeInfo>              NoticeList;                                        // 0x06B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         被动提示触发间隔;                                  // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NoyaNoticeInfo                      currentInfo;                                       // 0x06C8(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<uint8, bool>                             TempConditionList;                                 // 0x0738(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_UI_Notice_Noya(int32 EntryPoint);
	void 更新触发条件(const TMap<uint8, bool>& 触发条件);
	void 注册被动提示(const struct FS_NoyaNoticeInfo& NoticeInfo);
	void 刷新显示CD();
	void 触发被动提示();
	void 触发主动提示(const struct FS_NoyaNoticeInfo& 提示信息);
	void Construct();
	void 判断触发条件是否达成(const struct FS_NoyaNoticeInfo& S_NoyaNoticeInfo, bool* 是否触发);
	void 随机选择一个可触发的提示(struct FS_NoyaNoticeInfo* Output, bool* IsNotEmpty);
	void 移除已存在的提示(const struct FS_NoyaNoticeInfo& 提示内容);
	void Init();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Notice_Noya_C">();
	}
	static class UUI_Notice_Noya_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Notice_Noya_C>();
	}
};
static_assert(alignof(UUI_Notice_Noya_C) == 0x000008, "Wrong alignment on UUI_Notice_Noya_C");
static_assert(sizeof(UUI_Notice_Noya_C) == 0x000788, "Wrong size on UUI_Notice_Noya_C");
static_assert(offsetof(UUI_Notice_Noya_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Notice_Noya_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, TypeSelect) == 0x0005F8, "Member 'UUI_Notice_Noya_C::TypeSelect' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, UI_HUD_Notice_CutIn_Crash) == 0x000600, "Member 'UUI_Notice_Noya_C::UI_HUD_Notice_CutIn_Crash' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, UI_HUD_Notice_CutIn_Normal) == 0x000608, "Member 'UUI_Notice_Noya_C::UI_HUD_Notice_CutIn_Normal' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, 提示类型) == 0x000610, "Member 'UUI_Notice_Noya_C::提示类型' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, 条件列表) == 0x000660, "Member 'UUI_Notice_Noya_C::条件列表' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, NoticeList) == 0x0006B0, "Member 'UUI_Notice_Noya_C::NoticeList' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, 被动提示触发间隔) == 0x0006C0, "Member 'UUI_Notice_Noya_C::被动提示触发间隔' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, currentInfo) == 0x0006C8, "Member 'UUI_Notice_Noya_C::currentInfo' has a wrong offset!");
static_assert(offsetof(UUI_Notice_Noya_C, TempConditionList) == 0x000738, "Member 'UUI_Notice_Noya_C::TempConditionList' has a wrong offset!");

}

