#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Flame_New

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Crosshair_CarWeapon_Flame_New.Crosshair_CarWeapon_Flame_New_C
// 0x0068 (0x0918 - 0x08B0)
class UCrosshair_CarWeapon_Flame_New_C final : public UVehicleWeaponCrossHairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Overheat_Anim_Quit;                                // 0x08B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Overheat_Anim_Enter;                               // 0x08C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Container_SecondReticle;                           // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Coredot;                                           // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_normal;                                        // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_overload;                                      // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Overload_vx;                                   // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           panel_overload;                                    // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReticleDirection;                                  // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_coredot;                                 // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        wgs_status;                                        // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsOverloading;                                     // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Crosshair_CarWeapon_Flame_New(int32 EntryPoint);
	void OnCrosshairInNormalState();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnOverloadStateChanged(bool bEnter);
	void SetWidgetResources(class UCanvasPanel** InSecondReticlePanel, class UImage** InReticleDirectionImage, class UImage** InRangedImage, class USizeBox** InAssistLockSizeBox, class UCanvasPanel** InChangeNewAssistLockPawnPanel, class UCanvasPanel** InEnterLockPawnPanel, class UCanvasPanel** InCanvas_Dynamic);
	void OnOverloadChanged(bool InOverload);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Crosshair_CarWeapon_Flame_New_C">();
	}
	static class UCrosshair_CarWeapon_Flame_New_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrosshair_CarWeapon_Flame_New_C>();
	}
};
static_assert(alignof(UCrosshair_CarWeapon_Flame_New_C) == 0x000008, "Wrong alignment on UCrosshair_CarWeapon_Flame_New_C");
static_assert(sizeof(UCrosshair_CarWeapon_Flame_New_C) == 0x000918, "Wrong size on UCrosshair_CarWeapon_Flame_New_C");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, UberGraphFrame) == 0x0008B0, "Member 'UCrosshair_CarWeapon_Flame_New_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, Overheat_Anim_Quit) == 0x0008B8, "Member 'UCrosshair_CarWeapon_Flame_New_C::Overheat_Anim_Quit' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, Overheat_Anim_Enter) == 0x0008C0, "Member 'UCrosshair_CarWeapon_Flame_New_C::Overheat_Anim_Enter' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, Container_SecondReticle) == 0x0008C8, "Member 'UCrosshair_CarWeapon_Flame_New_C::Container_SecondReticle' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, Coredot) == 0x0008D0, "Member 'UCrosshair_CarWeapon_Flame_New_C::Coredot' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, img_normal) == 0x0008D8, "Member 'UCrosshair_CarWeapon_Flame_New_C::img_normal' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, img_overload) == 0x0008E0, "Member 'UCrosshair_CarWeapon_Flame_New_C::img_overload' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, Img_Overload_vx) == 0x0008E8, "Member 'UCrosshair_CarWeapon_Flame_New_C::Img_Overload_vx' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, panel_overload) == 0x0008F0, "Member 'UCrosshair_CarWeapon_Flame_New_C::panel_overload' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, ReticleDirection) == 0x0008F8, "Member 'UCrosshair_CarWeapon_Flame_New_C::ReticleDirection' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, SpreadImg_coredot) == 0x000900, "Member 'UCrosshair_CarWeapon_Flame_New_C::SpreadImg_coredot' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, wgs_status) == 0x000908, "Member 'UCrosshair_CarWeapon_Flame_New_C::wgs_status' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Flame_New_C, IsOverloading) == 0x000910, "Member 'UCrosshair_CarWeapon_Flame_New_C::IsOverloading' has a wrong offset!");

}

