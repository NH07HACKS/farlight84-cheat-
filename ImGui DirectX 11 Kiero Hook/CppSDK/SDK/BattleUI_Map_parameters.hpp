#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleUI_Map

#include "Basic.hpp"

#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BattleUI_Map.BattleUI_Map_C.ExecuteUbergraph_BattleUI_Map
// 0x0060 (0x0060 - 0x0000)
struct BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGlobalEventSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Publisher;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Payload;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_Metadata;                       // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)> K2Node_CreateDelegate_OutputDelegate; // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map) == 0x000008, "Wrong alignment on BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map");
static_assert(sizeof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map) == 0x000060, "Wrong size on BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, EntryPoint) == 0x000000, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_Event_InLayoutType) == 0x000010, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_CustomEvent_Publisher) == 0x000018, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_CustomEvent_Publisher' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_CustomEvent_Payload) == 0x000020, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_CustomEvent_Metadata) == 0x000028, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_CustomEvent_Metadata' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_ToUpper_ReturnValue) == 0x000038, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_Conv_StringToInt_ReturnValue) == 0x000048, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00004C, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_Conv_IntToByte_ReturnValue) == 0x00004D, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_GetValidValue_ReturnValue) == 0x00004E, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004F, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BattleUI_Map_C_ExecuteUbergraph_BattleUI_Map::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BattleUI_Map.BattleUI_Map_C.OnWidgetVisibilitySet
// 0x0020 (0x0020 - 0x0000)
struct BattleUI_Map_C_OnWidgetVisibilitySet final
{
public:
	class UObject*                                Publisher;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Payload;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         MetaData;                                          // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BattleUI_Map_C_OnWidgetVisibilitySet) == 0x000008, "Wrong alignment on BattleUI_Map_C_OnWidgetVisibilitySet");
static_assert(sizeof(BattleUI_Map_C_OnWidgetVisibilitySet) == 0x000020, "Wrong size on BattleUI_Map_C_OnWidgetVisibilitySet");
static_assert(offsetof(BattleUI_Map_C_OnWidgetVisibilitySet, Publisher) == 0x000000, "Member 'BattleUI_Map_C_OnWidgetVisibilitySet::Publisher' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_OnWidgetVisibilitySet, Payload) == 0x000008, "Member 'BattleUI_Map_C_OnWidgetVisibilitySet::Payload' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_OnWidgetVisibilitySet, MetaData) == 0x000010, "Member 'BattleUI_Map_C_OnWidgetVisibilitySet::MetaData' has a wrong offset!");

// Function BattleUI_Map.BattleUI_Map_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct BattleUI_Map_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUI_Map_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on BattleUI_Map_C_ReceivePlatformLayout");
static_assert(sizeof(BattleUI_Map_C_ReceivePlatformLayout) == 0x000001, "Wrong size on BattleUI_Map_C_ReceivePlatformLayout");
static_assert(offsetof(BattleUI_Map_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'BattleUI_Map_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function BattleUI_Map.BattleUI_Map_C.Set Extra Bg Visible
// 0x0050 (0x0050 - 0x0000)
struct BattleUI_Map_C_Set_Extra_Bg_Visible final
{
public:
	bool                                          IsExtraBgVisible_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleUI_Map_C_Set_Extra_Bg_Visible) == 0x000008, "Wrong alignment on BattleUI_Map_C_Set_Extra_Bg_Visible");
static_assert(sizeof(BattleUI_Map_C_Set_Extra_Bg_Visible) == 0x000050, "Wrong size on BattleUI_Map_C_Set_Extra_Bg_Visible");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, IsExtraBgVisible_0) == 0x000000, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::IsExtraBgVisible_0' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_bool_Variable) == 0x000001, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_struct_Variable) == 0x000004, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_struct_Variable_1) == 0x00000C, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_bool_Variable_1) == 0x000014, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_struct_Variable_2) == 0x000018, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_struct_Variable_3) == 0x000020, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, Temp_bool_Variable_2) == 0x000028, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000029, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, K2Node_Select_Default) == 0x00002C, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, K2Node_Select_Default_1) == 0x000034, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, K2Node_Select_Default_2) == 0x00003C, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleUI_Map_C_Set_Extra_Bg_Visible, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'BattleUI_Map_C_Set_Extra_Bg_Visible::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

}

