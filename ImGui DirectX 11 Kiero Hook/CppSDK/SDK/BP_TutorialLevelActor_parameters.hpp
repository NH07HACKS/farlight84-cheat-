#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialLevelActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ExecuteUbergraph_BP_TutorialLevelActor
// 0x0038 (0x0038 - 0x0000)
struct BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ActionID;                       // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_CustomEvent_Character;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor");
static_assert(sizeof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor) == 0x000038, "Wrong size on BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, EntryPoint) == 0x000000, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, K2Node_CustomEvent_ActionID) == 0x000014, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::K2Node_CustomEvent_ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, K2Node_CustomEvent_Character) == 0x000018, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, K2Node_Event_EndPlayReason) == 0x000030, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_TutorialLevelActor_C_ExecuteUbergraph_BP_TutorialLevelActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_TutorialLevelActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_TutorialLevelActor_C_ReceiveEndPlay");
static_assert(sizeof(BP_TutorialLevelActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_TutorialLevelActor_C_ReceiveEndPlay");
static_assert(offsetof(BP_TutorialLevelActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_TutorialLevelActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.OnCharacterAllReadyEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_OnCharacterAllReadyEvent final
{
public:
	class ASolarCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_OnCharacterAllReadyEvent) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_OnCharacterAllReadyEvent");
static_assert(sizeof(BP_TutorialLevelActor_C_OnCharacterAllReadyEvent) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_OnCharacterAllReadyEvent");
static_assert(offsetof(BP_TutorialLevelActor_C_OnCharacterAllReadyEvent, Character) == 0x000000, "Member 'BP_TutorialLevelActor_C_OnCharacterAllReadyEvent::Character' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.OnStepActionBegan
// 0x0004 (0x0004 - 0x0000)
struct BP_TutorialLevelActor_C_OnStepActionBegan final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_OnStepActionBegan) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_OnStepActionBegan");
static_assert(sizeof(BP_TutorialLevelActor_C_OnStepActionBegan) == 0x000004, "Wrong size on BP_TutorialLevelActor_C_OnStepActionBegan");
static_assert(offsetof(BP_TutorialLevelActor_C_OnStepActionBegan, ActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_OnStepActionBegan::ActionID' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.Register Event Internal
// 0x0020 (0x0020 - 0x0000)
struct BP_TutorialLevelActor_C_Register_Event_Internal final
{
public:
	TDelegate<void(int32 StepActionID)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_Register_Event_Internal) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_Register_Event_Internal");
static_assert(sizeof(BP_TutorialLevelActor_C_Register_Event_Internal) == 0x000020, "Wrong size on BP_TutorialLevelActor_C_Register_Event_Internal");
static_assert(offsetof(BP_TutorialLevelActor_C_Register_Event_Internal, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_TutorialLevelActor_C_Register_Event_Internal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Register_Event_Internal, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000010, "Member 'BP_TutorialLevelActor_C_Register_Event_Internal::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Register_Event_Internal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_TutorialLevelActor_C_Register_Event_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.CheckPlaySequencer
// 0x0070 (0x0070 - 0x0000)
struct BP_TutorialLevelActor_C_CheckPlaySequencer final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FilterSequence_OutActionID;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALevelSequenceActor*>            CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class ALevelSequenceActor*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_CheckPlaySequencer) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_CheckPlaySequencer");
static_assert(sizeof(BP_TutorialLevelActor_C_CheckPlaySequencer) == 0x000070, "Wrong size on BP_TutorialLevelActor_C_CheckPlaySequencer");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, ActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_FilterSequence_OutActionID) == 0x000004, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_FilterSequence_OutActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000020, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_GetSequencePlayer_ReturnValue) == 0x000050, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, CallFunc_ActorHasTag_ReturnValue) == 0x000059, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckPlaySequencer, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'BP_TutorialLevelActor_C_CheckPlaySequencer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.Check Play AISequences
// 0x0058 (0x0058 - 0x0000)
struct BP_TutorialLevelActor_C_Check_Play_AISequences final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALevelSequenceActor*>            CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_Check_Play_AISequences) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_Check_Play_AISequences");
static_assert(sizeof(BP_TutorialLevelActor_C_Check_Play_AISequences) == 0x000058, "Wrong size on BP_TutorialLevelActor_C_Check_Play_AISequences");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, ActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000020, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_GetSequencePlayer_ReturnValue) == 0x000048, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_Check_Play_AISequences, CallFunc_ActorHasTag_ReturnValue) == 0x000050, "Member 'BP_TutorialLevelActor_C_Check_Play_AISequences::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.SetStepFixedCameraAngle
// 0x0070 (0x0070 - 0x0000)
struct BP_TutorialLevelActor_C_SetStepFixedCameraAngle final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Map_Find_Value;                           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerController*                 K2Node_DynamicCast_AsSolar_Player_Controller;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCharacterViewRotation_ReturnValue;     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_SetStepFixedCameraAngle");
static_assert(sizeof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle) == 0x000070, "Wrong size on BP_TutorialLevelActor_C_SetStepFixedCameraAngle");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, ActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, K2Node_DynamicCast_AsSolar_Player_Controller) == 0x000020, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::K2Node_DynamicCast_AsSolar_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_GetCharacterViewRotation_ReturnValue) == 0x00002C, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_GetCharacterViewRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Roll_1) == 0x000044, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Pitch_1) == 0x000048, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_BreakRotator_Yaw_1) == 0x00004C, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Map_Contains_ReturnValue) == 0x000050, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_NormalizeAxis_ReturnValue) == 0x000058, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_NormalizeAxis_ReturnValue_1) == 0x000064, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepFixedCameraAngle, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_TutorialLevelActor_C_SetStepFixedCameraAngle::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.SetStepTaskPanelPos
// 0x0014 (0x0014 - 0x0000)
struct BP_TutorialLevelActor_C_SetStepTaskPanelPos final
{
public:
	int32                                         InActionID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_SetStepTaskPanelPos) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_SetStepTaskPanelPos");
static_assert(sizeof(BP_TutorialLevelActor_C_SetStepTaskPanelPos) == 0x000014, "Wrong size on BP_TutorialLevelActor_C_SetStepTaskPanelPos");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepTaskPanelPos, InActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_SetStepTaskPanelPos::InActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepTaskPanelPos, CallFunc_Map_Contains_ReturnValue) == 0x000004, "Member 'BP_TutorialLevelActor_C_SetStepTaskPanelPos::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepTaskPanelPos, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_TutorialLevelActor_C_SetStepTaskPanelPos::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepTaskPanelPos, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_TutorialLevelActor_C_SetStepTaskPanelPos::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ReceiveSetTaskPanelPos
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos final
{
public:
	struct FVector2D                              InPos;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos");
static_assert(sizeof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos");
static_assert(offsetof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos, InPos) == 0x000000, "Member 'BP_TutorialLevelActor_C_ReceiveSetTaskPanelPos::InPos' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.CheckStopAutoSprint
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_CheckStopAutoSprint final
{
public:
	int32                                         InActionID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_CheckStopAutoSprint) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_CheckStopAutoSprint");
static_assert(sizeof(BP_TutorialLevelActor_C_CheckStopAutoSprint) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_CheckStopAutoSprint");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopAutoSprint, InActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_CheckStopAutoSprint::InActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopAutoSprint, CallFunc_Map_Contains_ReturnValue) == 0x000004, "Member 'BP_TutorialLevelActor_C_CheckStopAutoSprint::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopAutoSprint, CallFunc_Map_Find_Value) == 0x000005, "Member 'BP_TutorialLevelActor_C_CheckStopAutoSprint::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopAutoSprint, CallFunc_Map_Find_ReturnValue) == 0x000006, "Member 'BP_TutorialLevelActor_C_CheckStopAutoSprint::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ReceiveStopAutoSprint
// 0x0001 (0x0001 - 0x0000)
struct BP_TutorialLevelActor_C_ReceiveStopAutoSprint final
{
public:
	bool                                          IsStop;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_ReceiveStopAutoSprint) == 0x000001, "Wrong alignment on BP_TutorialLevelActor_C_ReceiveStopAutoSprint");
static_assert(sizeof(BP_TutorialLevelActor_C_ReceiveStopAutoSprint) == 0x000001, "Wrong size on BP_TutorialLevelActor_C_ReceiveStopAutoSprint");
static_assert(offsetof(BP_TutorialLevelActor_C_ReceiveStopAutoSprint, IsStop) == 0x000000, "Member 'BP_TutorialLevelActor_C_ReceiveStopAutoSprint::IsStop' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.InitialCharacterValue
// 0x0030 (0x0030 - 0x0000)
struct BP_TutorialLevelActor_C_InitialCharacterValue final
{
public:
	TDelegate<void(class ASolarCharacter* Character)> K2Node_CreateDelegate_OutputDelegate;          // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerController*                 K2Node_DynamicCast_AsSolar_Player_Controller;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_InitialCharacterValue) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_InitialCharacterValue");
static_assert(sizeof(BP_TutorialLevelActor_C_InitialCharacterValue) == 0x000030, "Wrong size on BP_TutorialLevelActor_C_InitialCharacterValue");
static_assert(offsetof(BP_TutorialLevelActor_C_InitialCharacterValue, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_TutorialLevelActor_C_InitialCharacterValue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_InitialCharacterValue, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_TutorialLevelActor_C_InitialCharacterValue::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_InitialCharacterValue, K2Node_DynamicCast_AsSolar_Player_Controller) == 0x000018, "Member 'BP_TutorialLevelActor_C_InitialCharacterValue::K2Node_DynamicCast_AsSolar_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_InitialCharacterValue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TutorialLevelActor_C_InitialCharacterValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_InitialCharacterValue, CallFunc_GetSolarCharacter_ReturnValue) == 0x000028, "Member 'BP_TutorialLevelActor_C_InitialCharacterValue::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.BP_OnCharacterAllReady
// 0x0010 (0x0010 - 0x0000)
struct BP_TutorialLevelActor_C_BP_OnCharacterAllReady final
{
public:
	class ASolarCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetCurrShieldValue_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_BP_OnCharacterAllReady) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_BP_OnCharacterAllReady");
static_assert(sizeof(BP_TutorialLevelActor_C_BP_OnCharacterAllReady) == 0x000010, "Wrong size on BP_TutorialLevelActor_C_BP_OnCharacterAllReady");
static_assert(offsetof(BP_TutorialLevelActor_C_BP_OnCharacterAllReady, Character) == 0x000000, "Member 'BP_TutorialLevelActor_C_BP_OnCharacterAllReady::Character' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_BP_OnCharacterAllReady, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_BP_OnCharacterAllReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_BP_OnCharacterAllReady, CallFunc_SetCurrShieldValue_ReturnValue) == 0x00000C, "Member 'BP_TutorialLevelActor_C_BP_OnCharacterAllReady::CallFunc_SetCurrShieldValue_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.CheckStopScope
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_CheckStopScope final
{
public:
	int32                                         InActionID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_CheckStopScope) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_CheckStopScope");
static_assert(sizeof(BP_TutorialLevelActor_C_CheckStopScope) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_CheckStopScope");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopScope, InActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_CheckStopScope::InActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckStopScope, CallFunc_Map_Contains_ReturnValue) == 0x000004, "Member 'BP_TutorialLevelActor_C_CheckStopScope::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.CheckTeleportCharacter
// 0x0090 (0x0090 - 0x0000)
struct BP_TutorialLevelActor_C_CheckTeleportCharacter final
{
public:
	int32                                         InActionID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerController*                 K2Node_DynamicCast_AsSolar_Player_Controller;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_CheckTeleportCharacter) == 0x000010, "Wrong alignment on BP_TutorialLevelActor_C_CheckTeleportCharacter");
static_assert(sizeof(BP_TutorialLevelActor_C_CheckTeleportCharacter) == 0x000090, "Wrong size on BP_TutorialLevelActor_C_CheckTeleportCharacter");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, InActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::InActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, K2Node_DynamicCast_AsSolar_Player_Controller) == 0x000010, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::K2Node_DynamicCast_AsSolar_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_GetSolarCharacter_ReturnValue) == 0x000058, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_Map_Contains_ReturnValue) == 0x000084, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_CheckTeleportCharacter, CallFunc_K2_TeleportTo_ReturnValue) == 0x000085, "Member 'BP_TutorialLevelActor_C_CheckTeleportCharacter::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.SetStepCharacterVisible
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_SetStepCharacterVisible final
{
public:
	int32                                         InActionID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_SetStepCharacterVisible) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_SetStepCharacterVisible");
static_assert(sizeof(BP_TutorialLevelActor_C_SetStepCharacterVisible) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_SetStepCharacterVisible");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepCharacterVisible, InActionID) == 0x000000, "Member 'BP_TutorialLevelActor_C_SetStepCharacterVisible::InActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepCharacterVisible, CallFunc_Map_Contains_ReturnValue) == 0x000004, "Member 'BP_TutorialLevelActor_C_SetStepCharacterVisible::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepCharacterVisible, CallFunc_Map_Find_Value) == 0x000005, "Member 'BP_TutorialLevelActor_C_SetStepCharacterVisible::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepCharacterVisible, CallFunc_Map_Find_ReturnValue) == 0x000006, "Member 'BP_TutorialLevelActor_C_SetStepCharacterVisible::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_SetStepCharacterVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_TutorialLevelActor_C_SetStepCharacterVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.FilterSequence
// 0x0020 (0x0020 - 0x0000)
struct BP_TutorialLevelActor_C_FilterSequence final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutActionID;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLowLevelDevice_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebugTLSequence_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_FilterSequence) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_FilterSequence");
static_assert(sizeof(BP_TutorialLevelActor_C_FilterSequence) == 0x000020, "Wrong size on BP_TutorialLevelActor_C_FilterSequence");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, A) == 0x000000, "Member 'BP_TutorialLevelActor_C_FilterSequence::A' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, OutActionID) == 0x000004, "Member 'BP_TutorialLevelActor_C_FilterSequence::OutActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_IsLowLevelDevice_ReturnValue) == 0x000008, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_IsLowLevelDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000010, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_IsDebugTLSequence_ReturnValue) == 0x000019, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_IsDebugTLSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialLevelActor_C_FilterSequence, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_TutorialLevelActor_C_FilterSequence::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ReceiveSetTaskPanelPosCopy
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy final
{
public:
	struct FVector2D                              InPos;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy) == 0x000004, "Wrong alignment on BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy");
static_assert(sizeof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy) == 0x000008, "Wrong size on BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy");
static_assert(offsetof(BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy, InPos) == 0x000000, "Member 'BP_TutorialLevelActor_C_ReceiveSetTaskPanelPosCopy::InPos' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.ReceiveStopAutoSprintCopy
// 0x0001 (0x0001 - 0x0000)
struct BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy final
{
public:
	bool                                          IsStop;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy) == 0x000001, "Wrong alignment on BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy");
static_assert(sizeof(BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy) == 0x000001, "Wrong size on BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy");
static_assert(offsetof(BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy, IsStop) == 0x000000, "Member 'BP_TutorialLevelActor_C_ReceiveStopAutoSprintCopy::IsStop' has a wrong offset!");

// Function BP_TutorialLevelActor.BP_TutorialLevelActor_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_TutorialLevelActor_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialLevelActor_C_GetModuleName) == 0x000008, "Wrong alignment on BP_TutorialLevelActor_C_GetModuleName");
static_assert(sizeof(BP_TutorialLevelActor_C_GetModuleName) == 0x000010, "Wrong size on BP_TutorialLevelActor_C_GetModuleName");
static_assert(offsetof(BP_TutorialLevelActor_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_TutorialLevelActor_C_GetModuleName::ReturnValue' has a wrong offset!");

}

