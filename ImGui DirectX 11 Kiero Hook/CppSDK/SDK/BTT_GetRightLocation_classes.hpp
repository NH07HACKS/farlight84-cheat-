#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GetRightLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_GetRightLocation.BTT_GetRightLocation_C
// 0x0068 (0x0110 - 0x00A8)
class UBTT_GetRightLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 In;                                                // 0x00B0(0x0028)(Edit, BlueprintVisible)
	float                                         距离;                                              // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Out;                                               // 0x00E0(0x0028)(Edit, BlueprintVisible)
	float                                         RandomRadius;                                      // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTT_GetRightLocation(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_GetRightLocation_C">();
	}
	static class UBTT_GetRightLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_GetRightLocation_C>();
	}
};
static_assert(alignof(UBTT_GetRightLocation_C) == 0x000008, "Wrong alignment on UBTT_GetRightLocation_C");
static_assert(sizeof(UBTT_GetRightLocation_C) == 0x000110, "Wrong size on UBTT_GetRightLocation_C");
static_assert(offsetof(UBTT_GetRightLocation_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_GetRightLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_GetRightLocation_C, In) == 0x0000B0, "Member 'UBTT_GetRightLocation_C::In' has a wrong offset!");
static_assert(offsetof(UBTT_GetRightLocation_C, 距离) == 0x0000D8, "Member 'UBTT_GetRightLocation_C::距离' has a wrong offset!");
static_assert(offsetof(UBTT_GetRightLocation_C, Out) == 0x0000E0, "Member 'UBTT_GetRightLocation_C::Out' has a wrong offset!");
static_assert(offsetof(UBTT_GetRightLocation_C, RandomRadius) == 0x000108, "Member 'UBTT_GetRightLocation_C::RandomRadius' has a wrong offset!");

}

