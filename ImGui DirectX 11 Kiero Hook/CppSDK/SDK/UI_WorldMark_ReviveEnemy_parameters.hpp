#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WorldMark_ReviveEnemy

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_WorldMark_ReviveEnemy.UI_WorldMark_ReviveEnemy_C.GetVisibility_0
// 0x0010 (0x0010 - 0x0000)
struct UI_WorldMark_ReviveEnemy_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveEnemy_C_GetVisibility_0");
static_assert(sizeof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0) == 0x000010, "Wrong size on UI_WorldMark_ReviveEnemy_C_GetVisibility_0");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, CallFunc_GetDistance_ReturnValue) == 0x000004, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_GetVisibility_0, K2Node_Select_Default) == 0x00000D, "Member 'UI_WorldMark_ReviveEnemy_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function UI_WorldMark_ReviveEnemy.UI_WorldMark_ReviveEnemy_C.Get_Distance_Text
// 0x0058 (0x0058 - 0x0000)
struct UI_WorldMark_ReviveEnemy_C_Get_Distance_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveEnemy_C_Get_Distance_Text");
static_assert(sizeof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text) == 0x000058, "Wrong size on UI_WorldMark_ReviveEnemy_C_Get_Distance_Text");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, ReturnValue) == 0x000000, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, CallFunc_GetDistance_ReturnValue) == 0x000018, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, CallFunc_FFloor_ReturnValue) == 0x00001C, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_Get_Distance_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'UI_WorldMark_ReviveEnemy_C_Get_Distance_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveEnemy.UI_WorldMark_ReviveEnemy_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_WorldMark_ReviveEnemy_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveEnemy_C_PreConstruct) == 0x000001, "Wrong alignment on UI_WorldMark_ReviveEnemy_C_PreConstruct");
static_assert(sizeof(UI_WorldMark_ReviveEnemy_C_PreConstruct) == 0x000001, "Wrong size on UI_WorldMark_ReviveEnemy_C_PreConstruct");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_WorldMark_ReviveEnemy_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_WorldMark_ReviveEnemy.UI_WorldMark_ReviveEnemy_C.ExecuteUbergraph_UI_WorldMark_ReviveEnemy
// 0x0008 (0x0008 - 0x0000)
struct UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy");
static_assert(sizeof(UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy) == 0x000008, "Wrong size on UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy, EntryPoint) == 0x000000, "Member 'UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_WorldMark_ReviveEnemy_C_ExecuteUbergraph_UI_WorldMark_ReviveEnemy::K2Node_Event_IsDesignTime' has a wrong offset!");

}

