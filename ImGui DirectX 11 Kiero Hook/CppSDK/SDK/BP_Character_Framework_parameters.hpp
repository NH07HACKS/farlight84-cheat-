#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_Framework

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Character_Framework.BP_Character_Framework_C.GetWeaponLevelDamageBonus
// 0x0140 (0x0140 - 0x0000)
struct BP_Character_Framework_C_GetWeaponLevelDamageBonus final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCGMGameplayConfig*                     CallFunc__A_GetModeConfig_ModeConfig;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentActiveSlot_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarItemData                         CallFunc_GetBackpackWeaponBySlot_ItemData;         // 0x0018(0x0120)()
	bool                                          CallFunc_GetBackpackWeaponBySlot_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Framework_C_GetWeaponLevelDamageBonus) == 0x000008, "Wrong alignment on BP_Character_Framework_C_GetWeaponLevelDamageBonus");
static_assert(sizeof(BP_Character_Framework_C_GetWeaponLevelDamageBonus) == 0x000140, "Wrong size on BP_Character_Framework_C_GetWeaponLevelDamageBonus");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, Result) == 0x000000, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::Result' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, CallFunc__A_GetModeConfig_ModeConfig) == 0x000008, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::CallFunc__A_GetModeConfig_ModeConfig' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, CallFunc_GetCurrentActiveSlot_ReturnValue) == 0x000010, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::CallFunc_GetCurrentActiveSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, CallFunc_GetBackpackWeaponBySlot_ItemData) == 0x000018, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::CallFunc_GetBackpackWeaponBySlot_ItemData' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, CallFunc_GetBackpackWeaponBySlot_ReturnValue) == 0x000138, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::CallFunc_GetBackpackWeaponBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_GetWeaponLevelDamageBonus, K2Node_SwitchInteger_CmpSuccess) == 0x000139, "Member 'BP_Character_Framework_C_GetWeaponLevelDamageBonus::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.[A]GetHealthState
// 0x000A (0x000A - 0x0000)
struct BP_Character_Framework_C__A_GetHealthState final
{
public:
	ECharacterHealthState                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterHealthState                         Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterHealthState                         Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterHealthState                         Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsAlive_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterHealthState                         K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterHealthState                         K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Framework_C__A_GetHealthState) == 0x000001, "Wrong alignment on BP_Character_Framework_C__A_GetHealthState");
static_assert(sizeof(BP_Character_Framework_C__A_GetHealthState) == 0x00000A, "Wrong size on BP_Character_Framework_C__A_GetHealthState");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, ReturnValue) == 0x000000, "Member 'BP_Character_Framework_C__A_GetHealthState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, Temp_bool_Variable) == 0x000001, "Member 'BP_Character_Framework_C__A_GetHealthState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, Temp_byte_Variable) == 0x000002, "Member 'BP_Character_Framework_C__A_GetHealthState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, Temp_byte_Variable_1) == 0x000003, "Member 'BP_Character_Framework_C__A_GetHealthState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, Temp_bool_Variable_1) == 0x000004, "Member 'BP_Character_Framework_C__A_GetHealthState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, Temp_byte_Variable_2) == 0x000005, "Member 'BP_Character_Framework_C__A_GetHealthState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, CallFunc_IsDying_ReturnValue) == 0x000006, "Member 'BP_Character_Framework_C__A_GetHealthState::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, CallFunc_K2_IsAlive_ReturnValue) == 0x000007, "Member 'BP_Character_Framework_C__A_GetHealthState::CallFunc_K2_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, K2Node_Select_Default) == 0x000008, "Member 'BP_Character_Framework_C__A_GetHealthState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__A_GetHealthState, K2Node_Select_Default_1) == 0x000009, "Member 'BP_Character_Framework_C__A_GetHealthState::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.[S]SkyDiveFly
// 0x0040 (0x0040 - 0x0000)
struct BP_Character_Framework_C__S_SkyDiveFly final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_TeleportTo_ReturnValue;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Framework_C__S_SkyDiveFly) == 0x000004, "Wrong alignment on BP_Character_Framework_C__S_SkyDiveFly");
static_assert(sizeof(BP_Character_Framework_C__S_SkyDiveFly) == 0x000040, "Wrong size on BP_Character_Framework_C__S_SkyDiveFly");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, Location) == 0x000000, "Member 'BP_Character_Framework_C__S_SkyDiveFly::Location' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, Height) == 0x00000C, "Member 'BP_Character_Framework_C__S_SkyDiveFly::Height' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, ReturnValue) == 0x000010, "Member 'BP_Character_Framework_C__S_SkyDiveFly::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, Temp_bool_Variable) == 0x000011, "Member 'BP_Character_Framework_C__S_SkyDiveFly::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, Temp_bool_Variable_1) == 0x000020, "Member 'BP_Character_Framework_C__S_SkyDiveFly::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_K2_TeleportTo_ReturnValue) == 0x00003C, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_K2_TeleportTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x00003D, "Member 'BP_Character_Framework_C__S_SkyDiveFly::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_SkyDiveFly, K2Node_Select_Default) == 0x00003E, "Member 'BP_Character_Framework_C__S_SkyDiveFly::K2Node_Select_Default' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.[S]Set Sky Dive State
// 0x0002 (0x0002 - 0x0000)
struct BP_Character_Framework_C__S_Set_Sky_Dive_State final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Framework_C__S_Set_Sky_Dive_State) == 0x000001, "Wrong alignment on BP_Character_Framework_C__S_Set_Sky_Dive_State");
static_assert(sizeof(BP_Character_Framework_C__S_Set_Sky_Dive_State) == 0x000002, "Wrong size on BP_Character_Framework_C__S_Set_Sky_Dive_State");
static_assert(offsetof(BP_Character_Framework_C__S_Set_Sky_Dive_State, ReturnValue) == 0x000000, "Member 'BP_Character_Framework_C__S_Set_Sky_Dive_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__S_Set_Sky_Dive_State, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000001, "Member 'BP_Character_Framework_C__S_Set_Sky_Dive_State::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.OnCompleted_C9B9AA40496B70A95EF897A2092C6753
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753 final
{
public:
	class ASolarPlayerWeapon*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753) == 0x000008, "Wrong alignment on BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753");
static_assert(sizeof(BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753) == 0x000008, "Wrong size on BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753");
static_assert(offsetof(BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753, Weapon) == 0x000000, "Member 'BP_Character_Framework_C_OnCompleted_C9B9AA40496B70A95EF897A2092C6753::Weapon' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.OnCompleted_9F8149E84A6F3575574B32ADD8BF2960
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960 final
{
public:
	class ASolarPlayerWeapon*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960) == 0x000008, "Wrong alignment on BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960");
static_assert(sizeof(BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960) == 0x000008, "Wrong size on BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960");
static_assert(offsetof(BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960, Weapon) == 0x000000, "Member 'BP_Character_Framework_C_OnCompleted_9F8149E84A6F3575574B32ADD8BF2960::Weapon' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.SetWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_Character_Framework_C_SetWeapon final
{
public:
	EWeaponSlotType                               Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeapoinId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponPartsData                       Parts;                                             // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Character_Framework_C_SetWeapon) == 0x000004, "Wrong alignment on BP_Character_Framework_C_SetWeapon");
static_assert(sizeof(BP_Character_Framework_C_SetWeapon) == 0x000020, "Wrong size on BP_Character_Framework_C_SetWeapon");
static_assert(offsetof(BP_Character_Framework_C_SetWeapon, Slot) == 0x000000, "Member 'BP_Character_Framework_C_SetWeapon::Slot' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_SetWeapon, WeapoinId) == 0x000004, "Member 'BP_Character_Framework_C_SetWeapon::WeapoinId' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_SetWeapon, Parts) == 0x000008, "Member 'BP_Character_Framework_C_SetWeapon::Parts' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.[s]GiveWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_Character_Framework_C__s_GiveWeapon final
{
public:
	bool                                          bDestroyPrevWeapon;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponSlotType                               Slot;                                              // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemID;                                            // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Character_Framework_C__s_GiveWeapon) == 0x000004, "Wrong alignment on BP_Character_Framework_C__s_GiveWeapon");
static_assert(sizeof(BP_Character_Framework_C__s_GiveWeapon) == 0x000008, "Wrong size on BP_Character_Framework_C__s_GiveWeapon");
static_assert(offsetof(BP_Character_Framework_C__s_GiveWeapon, bDestroyPrevWeapon) == 0x000000, "Member 'BP_Character_Framework_C__s_GiveWeapon::bDestroyPrevWeapon' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__s_GiveWeapon, Slot) == 0x000001, "Member 'BP_Character_Framework_C__s_GiveWeapon::Slot' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C__s_GiveWeapon, ItemID) == 0x000004, "Member 'BP_Character_Framework_C__s_GiveWeapon::ItemID' has a wrong offset!");

// Function BP_Character_Framework.BP_Character_Framework_C.ExecuteUbergraph_BP_Character_Framework
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerWeapon*                     K2Node_CustomEvent_Weapon_1;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerWeapon*                     Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASolarPlayerWeapon* Weapon)> K2Node_CreateDelegate_OutputDelegate;          // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerWeapon*                     K2Node_CustomEvent_Weapon;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerWeapon*                     Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASolarPlayerWeapon* Weapon)> K2Node_CreateDelegate_OutputDelegate_1;        // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilitySpecHandle             CallFunc_K2_GiveAbility_ReturnValue;               // 0x0064(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponSlotType                               K2Node_CustomEvent_Slot_1;                         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_WeapoinId;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponPartsData                       K2Node_CustomEvent_Parts;                          // 0x0074(0x0018)(ConstParm, NoDestructor)
	bool                                          CallFunc_SetWeaponParts_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDestroyPrevWeapon;             // 0x0094(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponSlotType                               K2Node_CustomEvent_Slot;                           // 0x0095(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ItemID;                         // 0x0098(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGameModeWeaponAction*             CallFunc_SetCharacterWeaponBySeq_ReturnValue;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarGameModeWeaponAction*             CallFunc_SetCharacterWeaponBySeq_ReturnValue_1;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework) == 0x000008, "Wrong alignment on BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework");
static_assert(sizeof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework) == 0x0000B8, "Wrong size on BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, EntryPoint) == 0x000000, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_Weapon_1) == 0x000008, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, Temp_object_Variable) == 0x000010, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_Weapon) == 0x000030, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, Temp_object_Variable_1) == 0x000038, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_IsServer_ReturnValue) == 0x000054, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_K2_GiveAbility_ReturnValue) == 0x000064, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_K2_GiveAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_Slot_1) == 0x00006C, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_Slot_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_WeapoinId) == 0x000070, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_WeapoinId' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_Parts) == 0x000074, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_Parts' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_SetWeaponParts_ReturnValue) == 0x00008C, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_SetWeaponParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_bDestroyPrevWeapon) == 0x000094, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_bDestroyPrevWeapon' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_Slot) == 0x000095, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, K2Node_CustomEvent_ItemID) == 0x000098, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::K2Node_CustomEvent_ItemID' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_SetCharacterWeaponBySeq_ReturnValue) == 0x0000A0, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_SetCharacterWeaponBySeq_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_SetCharacterWeaponBySeq_ReturnValue_1) == 0x0000A8, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_SetCharacterWeaponBySeq_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework, CallFunc_IsValid_ReturnValue_2) == 0x0000B1, "Member 'BP_Character_Framework_C_ExecuteUbergraph_BP_Character_Framework::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

