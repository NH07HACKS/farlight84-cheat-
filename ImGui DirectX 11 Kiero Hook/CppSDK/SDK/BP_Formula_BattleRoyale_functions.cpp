#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Formula_BattleRoyale

#include "Basic.hpp"

#include "BP_Formula_BattleRoyale_classes.hpp"
#include "BP_Formula_BattleRoyale_parameters.hpp"


namespace SDK
{

// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetSettlementRewards
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSettlementReward>        ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

TArray<struct FSettlementReward> ABP_Formula_BattleRoyale_C::GetSettlementRewards(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetSettlementRewards");

	Params::BP_Formula_BattleRoyale_C_GetSettlementRewards Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.IsSettlementBagItem
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Formula_BattleRoyale_C::IsSettlementBagItem(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "IsSettlementBagItem");

	Params::BP_Formula_BattleRoyale_C_IsSettlementBagItem Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetDefenderManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_DefenderManager_C**           Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::GetDefenderManager(class ABP_DefenderManager_C** Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetDefenderManager");

	Params::BP_Formula_BattleRoyale_C_GetDefenderManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.MVPLifeTimeScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Life_Time                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  LTMVPScore                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::MVPLifeTimeScore(float Life_Time, float* LTMVPScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "MVPLifeTimeScore");

	Params::BP_Formula_BattleRoyale_C_MVPLifeTimeScore Parms{};

	Parms.Life_Time = Life_Time;

	UObject::ProcessEvent(Func, &Parms);

	if (LTMVPScore != nullptr)
		*LTMVPScore = Parms.LTMVPScore;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetStrategyGuideConditions
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          OutResult                                              (Parm, OutParm, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::GetStrategyGuideConditions(class ASolarPlayerState* InPS, TArray<int32>* OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetStrategyGuideConditions");

	Params::BP_Formula_BattleRoyale_C_GetStrategyGuideConditions Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	if (OutResult != nullptr)
		*OutResult = std::move(Parms.OutResult);
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.CalculateTeamRank
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Formula_BattleRoyale_C::CalculateTeamRank(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "CalculateTeamRank");

	Params::BP_Formula_BattleRoyale_C_CalculateTeamRank Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.CalculatePlayerRank
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Formula_BattleRoyale_C::CalculatePlayerRank(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "CalculatePlayerRank");

	Params::BP_Formula_BattleRoyale_C_CalculatePlayerRank Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.BattleStateDealFloat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Formula_BattleRoyale_C::BattleStateDealFloat(float Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "BattleStateDealFloat");

	Params::BP_Formula_BattleRoyale_C_BattleStateDealFloat Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.BattleStateDealInt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Formula_BattleRoyale_C::BattleStateDealInt(int32 Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "BattleStateDealInt");

	Params::BP_Formula_BattleRoyale_C_BattleStateDealInt Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetBattleState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BattleState_BattleRoyale*             State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::GetBattleState(E_BattleState_BattleRoyale* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetBattleState");

	Params::BP_Formula_BattleRoyale_C_GetBattleState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetKDA
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Formula_BattleRoyale_C::GetKDA(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetKDA");

	Params::BP_Formula_BattleRoyale_C_GetKDA Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetExtraRewards
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSettlementParam_ExtraRewardInfo>ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

TArray<struct FSettlementParam_ExtraRewardInfo> ABP_Formula_BattleRoyale_C::GetExtraRewards(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetExtraRewards");

	Params::BP_Formula_BattleRoyale_C_GetExtraRewards Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetPlayerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  KillCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  KillDown                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Assist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  SaveCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  LifeTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  CauseDamage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Rank                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  TeamRank                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  DeathCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   TeamAced                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   IsMVP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool*                                   IsCustomRoomActive                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DefenderPlayerType*                   DefenderType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::GetPlayerData(class ASolarPlayerState* Player, int32* KillCount, int32* KillDown, int32* Assist, int32* SaveCount, float* LifeTime, float* CauseDamage, int32* Rank, int32* TeamRank, int32* DeathCount, bool* TeamAced, bool* IsMVP, bool* IsCustomRoomActive, E_DefenderPlayerType* DefenderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetPlayerData");

	Params::BP_Formula_BattleRoyale_C_GetPlayerData Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (KillCount != nullptr)
		*KillCount = Parms.KillCount;

	if (KillDown != nullptr)
		*KillDown = Parms.KillDown;

	if (Assist != nullptr)
		*Assist = Parms.Assist;

	if (SaveCount != nullptr)
		*SaveCount = Parms.SaveCount;

	if (LifeTime != nullptr)
		*LifeTime = Parms.LifeTime;

	if (CauseDamage != nullptr)
		*CauseDamage = Parms.CauseDamage;

	if (Rank != nullptr)
		*Rank = Parms.Rank;

	if (TeamRank != nullptr)
		*TeamRank = Parms.TeamRank;

	if (DeathCount != nullptr)
		*DeathCount = Parms.DeathCount;

	if (TeamAced != nullptr)
		*TeamAced = Parms.TeamAced;

	if (IsMVP != nullptr)
		*IsMVP = Parms.IsMVP;

	if (IsCustomRoomActive != nullptr)
		*IsCustomRoomActive = Parms.IsCustomRoomActive;

	if (DefenderType != nullptr)
		*DefenderType = Parms.DefenderType;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetZomborg
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Formula_BattleRoyale_C::GetZomborg(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetZomborg");

	Params::BP_Formula_BattleRoyale_C_GetZomborg Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetCharacterExp
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  OutGetExp                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          OutReason                                              (Parm, OutParm, HasGetValueTypeHash)

void ABP_Formula_BattleRoyale_C::GetCharacterExp(class ASolarPlayerState* InPS, int32* OutGetExp, TArray<int32>* OutReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetCharacterExp");

	Params::BP_Formula_BattleRoyale_C_GetCharacterExp Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	if (OutGetExp != nullptr)
		*OutGetExp = Parms.OutGetExp;

	if (OutReason != nullptr)
		*OutReason = std::move(Parms.OutReason);
}


// Function BP_Formula_BattleRoyale.BP_Formula_BattleRoyale_C.GetAccountExp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarPlayerState*                InPS                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Formula_BattleRoyale_C::GetAccountExp(class ASolarPlayerState* InPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Formula_BattleRoyale_C", "GetAccountExp");

	Params::BP_Formula_BattleRoyale_C_GetAccountExp Parms{};

	Parms.InPS = InPS;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

