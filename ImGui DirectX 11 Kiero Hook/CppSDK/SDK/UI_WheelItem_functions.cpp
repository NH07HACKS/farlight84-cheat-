#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WheelItem

#include "Basic.hpp"

#include "UI_WheelItem_classes.hpp"
#include "UI_WheelItem_parameters.hpp"


namespace SDK
{

// Function UI_WheelItem.UI_WheelItem_C.ExecuteUbergraph_UI_WheelItem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::ExecuteUbergraph_UI_WheelItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "ExecuteUbergraph_UI_WheelItem");

	Params::UI_WheelItem_C_ExecuteUbergraph_UI_WheelItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_WheelItem_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "PreConstruct");

	Params::UI_WheelItem_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetSelection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_WheelItem_C::SetSelection(bool Selected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetSelection");

	Params::UI_WheelItem_C_SetSelection Parms{};

	Parms.Selected_0 = Selected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Icon_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetIcon(class UObject* Icon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetIcon");

	Params::UI_WheelItem_C_SetIcon Parms{};

	Parms.Icon_0 = Icon_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 InSize                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetSize(const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetSize");

	Params::UI_WheelItem_C_SetSize Parms{};

	Parms.InSize = std::move(InSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetAngle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SelectionOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetAngle(float Angle_0, float SelectionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetAngle");

	Params::UI_WheelItem_C_SetAngle Parms{};

	Parms.Angle_0 = Angle_0;
	Parms.SelectionOffset = SelectionOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActionWheelCommandType                 Style_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetStyle(EActionWheelCommandType Style_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetStyle");

	Params::UI_WheelItem_C_SetStyle Parms{};

	Parms.Style_0 = Style_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetEnabled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_WheelItem_C::SetEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetEnabled");

	Params::UI_WheelItem_C_SetEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.GetColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UUI_WheelItem_C::GetColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "GetColor");

	Params::UI_WheelItem_C_GetColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WheelItem.UI_WheelItem_C.SetCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_WheelItem_C::SetCount(const class FText& Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetCount");

	Params::UI_WheelItem_C_SetCount Parms{};

	Parms.Count = std::move(Count);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetIndex
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetIndex(int32 Param_Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetIndex");

	Params::UI_WheelItem_C_SetIndex Parms{};

	Parms.Param_Index_0 = Param_Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.InitData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionData_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FActionWheelStyle&         ActionWheelStyle                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UUI_WheelItem_C::InitData(int32 Param_Index_0, float Angle_0, const struct FActionWheelCommand& ActionData_0, const struct FActionWheelStyle& ActionWheelStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "InitData");

	Params::UI_WheelItem_C_InitData Parms{};

	Parms.Param_Index_0 = Param_Index_0;
	Parms.Angle_0 = Angle_0;
	Parms.ActionData_0 = std::move(ActionData_0);
	Parms.ActionWheelStyle = std::move(ActionWheelStyle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.UpdateItemCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_WheelItem_C::UpdateItemCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "UpdateItemCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_WheelItem.UI_WheelItem_C.GetWheelItemData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FActionWheelCommand              ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FActionWheelCommand UUI_WheelItem_C::GetWheelItemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "GetWheelItemData");

	Params::UI_WheelItem_C_GetWheelItemData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_WheelItem.UI_WheelItem_C.SetLongCDImg
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_WheelItem_C::SetLongCDImg(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetLongCDImg");

	Params::UI_WheelItem_C_SetLongCDImg Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_WheelItem.UI_WheelItem_C.SetBuddyCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FActionWheelCommand&       InData                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_WheelItem_C::SetBuddyCount(const struct FActionWheelCommand& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WheelItem_C", "SetBuddyCount");

	Params::UI_WheelItem_C_SetBuddyCount Parms{};

	Parms.InData = std::move(InData);

	UObject::ProcessEvent(Func, &Parms);
}

}

