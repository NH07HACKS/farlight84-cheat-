#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTDecorators_CoolDown

#include "Basic.hpp"

#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.PerformConditionCheckAI
// 0x0018 (0x0018 - 0x0000)
struct BTDecorators_CoolDown_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTDecorators_CoolDown_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_PerformConditionCheckAI");
static_assert(sizeof(BTDecorators_CoolDown_C_PerformConditionCheckAI) == 0x000018, "Wrong size on BTDecorators_CoolDown_C_PerformConditionCheckAI");
static_assert(offsetof(BTDecorators_CoolDown_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTDecorators_CoolDown_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ReceiveExecutionFinishAI
// 0x0018 (0x0018 - 0x0000)
struct BTDecorators_CoolDown_C_ReceiveExecutionFinishAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 NodeResult;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ReceiveExecutionFinishAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ReceiveExecutionFinishAI");
static_assert(sizeof(BTDecorators_CoolDown_C_ReceiveExecutionFinishAI) == 0x000018, "Wrong size on BTDecorators_CoolDown_C_ReceiveExecutionFinishAI");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveExecutionFinishAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_ReceiveExecutionFinishAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveExecutionFinishAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_ReceiveExecutionFinishAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveExecutionFinishAI, NodeResult) == 0x000010, "Member 'BTDecorators_CoolDown_C_ReceiveExecutionFinishAI::NodeResult' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTDecorators_CoolDown_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ReceiveTickAI");
static_assert(sizeof(BTDecorators_CoolDown_C_ReceiveTickAI) == 0x000018, "Wrong size on BTDecorators_CoolDown_C_ReceiveTickAI");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTDecorators_CoolDown_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ReceiveExecutionStartAI
// 0x0010 (0x0010 - 0x0000)
struct BTDecorators_CoolDown_C_ReceiveExecutionStartAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ReceiveExecutionStartAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ReceiveExecutionStartAI");
static_assert(sizeof(BTDecorators_CoolDown_C_ReceiveExecutionStartAI) == 0x000010, "Wrong size on BTDecorators_CoolDown_C_ReceiveExecutionStartAI");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveExecutionStartAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_ReceiveExecutionStartAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveExecutionStartAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_ReceiveExecutionStartAI::ControlledPawn' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ReceiveObserverDeactivatedAI
// 0x0010 (0x0010 - 0x0000)
struct BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI");
static_assert(sizeof(BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI) == 0x000010, "Wrong size on BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_ReceiveObserverDeactivatedAI::ControlledPawn' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ReceiveObserverActivatedAI
// 0x0010 (0x0010 - 0x0000)
struct BTDecorators_CoolDown_C_ReceiveObserverActivatedAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ReceiveObserverActivatedAI) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ReceiveObserverActivatedAI");
static_assert(sizeof(BTDecorators_CoolDown_C_ReceiveObserverActivatedAI) == 0x000010, "Wrong size on BTDecorators_CoolDown_C_ReceiveObserverActivatedAI");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveObserverActivatedAI, OwnerController) == 0x000000, "Member 'BTDecorators_CoolDown_C_ReceiveObserverActivatedAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ReceiveObserverActivatedAI, ControlledPawn) == 0x000008, "Member 'BTDecorators_CoolDown_C_ReceiveObserverActivatedAI::ControlledPawn' has a wrong offset!");

// Function BTDecorators_CoolDown.BTDecorators_CoolDown_C.ExecuteUbergraph_BTDecorators_CoolDown
// 0x0070 (0x0070 - 0x0000)
struct BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_4;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_4;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTNodeResult                                 K2Node_Event_NodeResult;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_3;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown) == 0x000008, "Wrong alignment on BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown");
static_assert(sizeof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown) == 0x000070, "Wrong size on BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, EntryPoint) == 0x000000, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_OwnerController_4) == 0x000008, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_OwnerController_4' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_ControlledPawn_4) == 0x000010, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_ControlledPawn_4' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_NodeResult) == 0x000018, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_NodeResult' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, CallFunc_Less_FloatFloat_ReturnValue) == 0x000019, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_OwnerController_3) == 0x000020, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_OwnerController_3' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_ControlledPawn_3) == 0x000028, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_OwnerController_2) == 0x000038, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_ControlledPawn_2) == 0x000040, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_OwnerController_1) == 0x000048, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_ControlledPawn_1) == 0x000050, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_OwnerController) == 0x000058, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, K2Node_Event_ControlledPawn) == 0x000060, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown, CallFunc_RandomFloatInRange_ReturnValue) == 0x000068, "Member 'BTDecorators_CoolDown_C_ExecuteUbergraph_BTDecorators_CoolDown::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

}

