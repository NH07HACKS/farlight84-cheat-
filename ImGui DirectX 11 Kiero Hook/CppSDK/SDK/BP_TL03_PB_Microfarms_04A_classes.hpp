#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TL03_PB_Microfarms_04A

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TL03_PB_Microfarms_04A.BP_TL03_PB_Microfarms_04A_C
// 0x0028 (0x0300 - 0x02D8)
class ABP_TL03_PB_Microfarms_04A_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_B4_PB_GHgrass03;                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B4_PB_GHgrass04;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B4_PB_GHgrass02;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B4_PB_GHgrass01;                                // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_TL03_PB_Microfarms_04A;                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TL03_PB_Microfarms_04A_C">();
	}
	static class ABP_TL03_PB_Microfarms_04A_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TL03_PB_Microfarms_04A_C>();
	}
};
static_assert(alignof(ABP_TL03_PB_Microfarms_04A_C) == 0x000008, "Wrong alignment on ABP_TL03_PB_Microfarms_04A_C");
static_assert(sizeof(ABP_TL03_PB_Microfarms_04A_C) == 0x000300, "Wrong size on ABP_TL03_PB_Microfarms_04A_C");
static_assert(offsetof(ABP_TL03_PB_Microfarms_04A_C, SM_B4_PB_GHgrass03) == 0x0002D8, "Member 'ABP_TL03_PB_Microfarms_04A_C::SM_B4_PB_GHgrass03' has a wrong offset!");
static_assert(offsetof(ABP_TL03_PB_Microfarms_04A_C, SM_B4_PB_GHgrass04) == 0x0002E0, "Member 'ABP_TL03_PB_Microfarms_04A_C::SM_B4_PB_GHgrass04' has a wrong offset!");
static_assert(offsetof(ABP_TL03_PB_Microfarms_04A_C, SM_B4_PB_GHgrass02) == 0x0002E8, "Member 'ABP_TL03_PB_Microfarms_04A_C::SM_B4_PB_GHgrass02' has a wrong offset!");
static_assert(offsetof(ABP_TL03_PB_Microfarms_04A_C, SM_B4_PB_GHgrass01) == 0x0002F0, "Member 'ABP_TL03_PB_Microfarms_04A_C::SM_B4_PB_GHgrass01' has a wrong offset!");
static_assert(offsetof(ABP_TL03_PB_Microfarms_04A_C, SM_TL03_PB_Microfarms_04A) == 0x0002F8, "Member 'ABP_TL03_PB_Microfarms_04A_C::SM_TL03_PB_Microfarms_04A' has a wrong offset!");

}

