#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DownloaderTool

#include "Basic.hpp"

#include "DownloaderTool_classes.hpp"
#include "DownloaderTool_parameters.hpp"


namespace SDK
{

// Function DownloaderTool.DownloaderHttpTask.CreateAndProcessHttpRequest
// (Final, Native, Public, BlueprintCallable)

void UDownloaderHttpTask::CreateAndProcessHttpRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderHttpTask", "CreateAndProcessHttpRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderHttpTask.OnWriteFileComplete
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bWriteResult                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderHttpTask::OnWriteFileComplete(bool bWriteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderHttpTask", "OnWriteFileComplete");

	Params::DownloaderHttpTask_OnWriteFileComplete Parms{};

	Parms.bWriteResult = bWriteResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderHttpTask.SetWriteFilePath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InWriteFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderHttpTask::SetWriteFilePath(const class FString& InWriteFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderHttpTask", "SetWriteFilePath");

	Params::DownloaderHttpTask_SetWriteFilePath Parms{};

	Parms.InWriteFilePath = std::move(InWriteFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderMainTask.OnUrlTaskCDNFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderCDNFailedInfo&  InCDNFailedInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderMainTask::OnUrlTaskCDNFailed(const struct FDownloaderCDNFailedInfo& InCDNFailedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderMainTask", "OnUrlTaskCDNFailed");

	Params::DownloaderMainTask_OnUrlTaskCDNFailed Parms{};

	Parms.InCDNFailedInfo = std::move(InCDNFailedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderMainTask.OnUrlTaskFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderFailedInfo&     InFailedInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderMainTask::OnUrlTaskFailed(const struct FDownloaderFailedInfo& InFailedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderMainTask", "OnUrlTaskFailed");

	Params::DownloaderMainTask_OnUrlTaskFailed Parms{};

	Parms.InFailedInfo = std::move(InFailedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderMainTask.OnUrlTaskProgress
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderProgressInfo&   InProgressInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderMainTask::OnUrlTaskProgress(const struct FDownloaderProgressInfo& InProgressInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderMainTask", "OnUrlTaskProgress");

	Params::DownloaderMainTask_OnUrlTaskProgress Parms{};

	Parms.InProgressInfo = std::move(InProgressInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderMainTask.OnUrlTaskSuccess
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderMainTask::OnUrlTaskSuccess(const struct FDownloaderResponse& InResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderMainTask", "OnUrlTaskSuccess");

	Params::DownloaderMainTask_OnUrlTaskSuccess Parms{};

	Parms.InResponse = std::move(InResponse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderMainTask.SetTaskReadyLaunch
// (Final, Native, Public, BlueprintCallable)

void UDownloaderMainTask::SetTaskReadyLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderMainTask", "SetTaskReadyLaunch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManagerLuaImpl.InitDownloaderMgrLuaInternal
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManagerLuaImpl::InitDownloaderMgrLuaInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManagerLuaImpl", "InitDownloaderMgrLuaInternal");

	Params::DownloaderManagerLuaImpl_InitDownloaderMgrLuaInternal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManagerLuaImpl.UnInitDownloaderMgrLuaInternal
// (Event, Public, BlueprintEvent)

void UDownloaderManagerLuaImpl::UnInitDownloaderMgrLuaInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManagerLuaImpl", "UnInitDownloaderMgrLuaInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DownloaderTool.DownloaderManager.Get
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDownloaderManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderManager* UDownloaderManager::Get(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderManager", "Get");

	Params::DownloaderManager_Get Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetMainTaskName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FDownloaderTaskInfo>&InAllTaskInfos                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UDownloaderManager::GetMainTaskName(const TArray<struct FDownloaderTaskInfo>& InAllTaskInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderManager", "GetMainTaskName");

	Params::DownloaderManager_GetMainTaskName Parms{};

	Parms.InAllTaskInfos = std::move(InAllTaskInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.AsyncLoadOrDownloadTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// const TDelegate<void(const class FString& FilePath, class UTexture2DDynamic* Texture)>&Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDownloaderManager::AsyncLoadOrDownloadTexture(const struct FDownloaderTaskInfo& InTaskInfo, const TDelegate<void(const class FString& FilePath, class UTexture2DDynamic* Texture)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "AsyncLoadOrDownloadTexture");

	Params::DownloaderManager_AsyncLoadOrDownloadTexture Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.Clear
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.ClearCache
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::ClearCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ClearCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.ClearCompletedLightWeightHttpTask
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::ClearCompletedLightWeightHttpTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ClearCompletedLightWeightHttpTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.ClearCompletedMainTask
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::ClearCompletedMainTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ClearCompletedMainTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.CreateBigFilesDownloadTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FDownloaderTaskInfo>&InAllTaskInfos                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDownloaderMainTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderMainTask* UDownloaderManager::CreateBigFilesDownloadTask(const TArray<struct FDownloaderTaskInfo>& InAllTaskInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "CreateBigFilesDownloadTask");

	Params::DownloaderManager_CreateBigFilesDownloadTask Parms{};

	Parms.InAllTaskInfos = std::move(InAllTaskInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.CreateJsonReqTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InNecessaryURL                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDownloaderReqJson&        InReqJson                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UDownloaderHttpTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderHttpTask* UDownloaderManager::CreateJsonReqTask(const class FString& InNecessaryURL, const struct FDownloaderReqJson& InReqJson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "CreateJsonReqTask");

	Params::DownloaderManager_CreateJsonReqTask Parms{};

	Parms.InNecessaryURL = std::move(InNecessaryURL);
	Parms.InReqJson = std::move(InReqJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.CreateLightWeightTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UDownloaderHttpTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderHttpTask* UDownloaderManager::CreateLightWeightTask(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "CreateLightWeightTask");

	Params::DownloaderManager_CreateLightWeightTask Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.CreateLuaAsyncLoadOrDownloadTextureTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// class ULuaAsyncLoadTextureBridge*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULuaAsyncLoadTextureBridge* UDownloaderManager::CreateLuaAsyncLoadOrDownloadTextureTask(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "CreateLuaAsyncLoadOrDownloadTextureTask");

	Params::DownloaderManager_CreateLuaAsyncLoadOrDownloadTextureTask Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.DeleteAllDefaultCacheDir
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::DeleteAllDefaultCacheDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "DeleteAllDefaultCacheDir");

	Params::DownloaderManager_DeleteAllDefaultCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.ForceClearAllTextureCaches
// (Final, Native, Private, BlueprintCallable)

void UDownloaderManager::ForceClearAllTextureCaches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ForceClearAllTextureCaches");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.GetDefaultPictureCacheFilePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetDefaultPictureCacheFilePath(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetDefaultPictureCacheFilePath");

	Params::DownloaderManager_GetDefaultPictureCacheFilePath Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetMainTaskByName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDownloaderMainTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderMainTask* UDownloaderManager::GetMainTaskByName(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetMainTaskByName");

	Params::DownloaderManager_GetMainTaskByName Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetMainTasksMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<class FName, class UDownloaderMainTask*>ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FName, class UDownloaderMainTask*> UDownloaderManager::GetMainTasksMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetMainTasksMap");

	Params::DownloaderManager_GetMainTasksMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetMainTaskStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDownloaderStatus                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDownloaderStatus UDownloaderManager::GetMainTaskStatus(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetMainTaskStatus");

	Params::DownloaderManager_GetMainTaskStatus Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetTextureBridge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, NativeAccessSpecifierPublic)
// class ULuaAsyncLoadTextureBridge*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULuaAsyncLoadTextureBridge* UDownloaderManager::GetTextureBridge(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetTextureBridge");

	Params::DownloaderManager_GetTextureBridge Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlEncodedStr
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetUrlEncodedStr(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlEncodedStr");

	Params::DownloaderManager_GetUrlEncodedStr Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlsCachedSize
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<struct FDownloaderTaskInfo>&InAllTaskInfos                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetUrlsCachedSize(const TArray<struct FDownloaderTaskInfo>& InAllTaskInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlsCachedSize");

	Params::DownloaderManager_GetUrlsCachedSize Parms{};

	Parms.InAllTaskInfos = std::move(InAllTaskInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlTaskCacheDirPath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetUrlTaskCacheDirPath(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlTaskCacheDirPath");

	Params::DownloaderManager_GetUrlTaskCacheDirPath Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlTaskRecordFilePath
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetUrlTaskRecordFilePath(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlTaskRecordFilePath");

	Params::DownloaderManager_GetUrlTaskRecordFilePath Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.HandleTextureConversionComplete
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::HandleTextureConversionComplete(const class FString& FilePath, class UTexture2DDynamic* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "HandleTextureConversionComplete");

	Params::DownloaderManager_HandleTextureConversionComplete Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.Init
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.IsMainTaskExist
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::IsMainTaskExist(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "IsMainTaskExist");

	Params::DownloaderManager_IsMainTaskExist Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.OnDownloadTextureFailed
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderFailedInfo&     InFailedInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderManager::OnDownloadTextureFailed(const struct FDownloaderFailedInfo& InFailedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "OnDownloadTextureFailed");

	Params::DownloaderManager_OnDownloadTextureFailed Parms{};

	Parms.InFailedInfo = std::move(InFailedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.OnDownloadTextureSuccess
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderResponse&       InResponses                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderManager::OnDownloadTextureSuccess(const struct FDownloaderResponse& InResponses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "OnDownloadTextureSuccess");

	Params::DownloaderManager_OnDownloadTextureSuccess Parms{};

	Parms.InResponses = std::move(InResponses);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.PauseMainTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::PauseMainTask(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "PauseMainTask");

	Params::DownloaderManager_PauseMainTask Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.PushBatchSubTasksToQueue
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class UDownloaderSubTask*>&InSubTasks                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              bInCutQueue                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::PushBatchSubTasksToQueue(const TArray<class UDownloaderSubTask*>& InSubTasks, const bool bInCutQueue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "PushBatchSubTasksToQueue");

	Params::DownloaderManager_PushBatchSubTasksToQueue Parms{};

	Parms.InSubTasks = std::move(InSubTasks);
	Parms.bInCutQueue = bInCutQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.ReadyMainTaskFinish
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::ReadyMainTaskFinish(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ReadyMainTaskFinish");

	Params::DownloaderManager_ReadyMainTaskFinish Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.ResumeMainTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::ResumeMainTask(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "ResumeMainTask");

	Params::DownloaderManager_ResumeMainTask Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetBackgroundDownloadMaxRetryTimes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InMaxRetryTimes                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetBackgroundDownloadMaxRetryTimes(const int32 InMaxRetryTimes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetBackgroundDownloadMaxRetryTimes");

	Params::DownloaderManager_SetBackgroundDownloadMaxRetryTimes Parms{};

	Parms.InMaxRetryTimes = InMaxRetryTimes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetByExpectedMaxDownloadingSubTaskNum
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::SetByExpectedMaxDownloadingSubTaskNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetByExpectedMaxDownloadingSubTaskNum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetCacheClearMaxSpacePercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InCacheClearMaxSpacePercent                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetCacheClearMaxSpacePercent(const int32 InCacheClearMaxSpacePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetCacheClearMaxSpacePercent");

	Params::DownloaderManager_SetCacheClearMaxSpacePercent Parms{};

	Parms.InCacheClearMaxSpacePercent = InCacheClearMaxSpacePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetCacheExpiredSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InCacheExpiredSeconds                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetCacheExpiredSeconds(const int32 InCacheExpiredSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetCacheExpiredSeconds");

	Params::DownloaderManager_SetCacheExpiredSeconds Parms{};

	Parms.InCacheExpiredSeconds = InCacheExpiredSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetIsBackgroundDownload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInBackgroundDownload                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetIsBackgroundDownload(const bool bInBackgroundDownload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetIsBackgroundDownload");

	Params::DownloaderManager_SetIsBackgroundDownload Parms{};

	Parms.bInBackgroundDownload = bInBackgroundDownload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetManagerEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const bool                              bInEnable                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetManagerEnable(const bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetManagerEnable");

	Params::DownloaderManager_SetManagerEnable Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetMaxDownloadingSubTaskNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InMaxDownloadingSubTaskNum                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetMaxDownloadingSubTaskNum(const int32 InMaxDownloadingSubTaskNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetMaxDownloadingSubTaskNum");

	Params::DownloaderManager_SetMaxDownloadingSubTaskNum Parms{};

	Parms.InMaxDownloadingSubTaskNum = InMaxDownloadingSubTaskNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetSubTaskChunkSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InSubTaskChunkSize                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetSubTaskChunkSize(const int32 InSubTaskChunkSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetSubTaskChunkSize");

	Params::DownloaderManager_SetSubTaskChunkSize Parms{};

	Parms.InSubTaskChunkSize = InSubTaskChunkSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetTextureCacheExpireTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InTextureCacheExpireTime                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetTextureCacheExpireTime(const float InTextureCacheExpireTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetTextureCacheExpireTime");

	Params::DownloaderManager_SetTextureCacheExpireTime Parms{};

	Parms.InTextureCacheExpireTime = InTextureCacheExpireTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetTextureMaxCacheNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const int32                             InTextureMaxCacheNum                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetTextureMaxCacheNum(const int32 InTextureMaxCacheNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetTextureMaxCacheNum");

	Params::DownloaderManager_SetTextureMaxCacheNum Parms{};

	Parms.InTextureMaxCacheNum = InTextureMaxCacheNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetTimeOutSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InTimeOutSeconds                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetTimeOutSeconds(const float InTimeOutSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetTimeOutSeconds");

	Params::DownloaderManager_SetTimeOutSeconds Parms{};

	Parms.InTimeOutSeconds = InTimeOutSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetUrlTaskCallbackTimeOutGrowFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InGrowFactor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetUrlTaskCallbackTimeOutGrowFactor(const float InGrowFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetUrlTaskCallbackTimeOutGrowFactor");

	Params::DownloaderManager_SetUrlTaskCallbackTimeOutGrowFactor Parms{};

	Parms.InGrowFactor = InGrowFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.SetUrlTaskCallbackTimeOutSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const float                             InTimeOutSeconds                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::SetUrlTaskCallbackTimeOutSeconds(const float InTimeOutSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "SetUrlTaskCallbackTimeOutSeconds");

	Params::DownloaderManager_SetUrlTaskCallbackTimeOutSeconds Parms{};

	Parms.InTimeOutSeconds = InTimeOutSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.StopAllMainTasks
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::StopAllMainTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "StopAllMainTasks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.StopMainTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FName&                      InMainTaskName                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderManager::StopMainTask(const class FName& InMainTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "StopMainTask");

	Params::DownloaderManager_StopMainTask Parms{};

	Parms.InMainTaskName = InMainTaskName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.TryLaunchSubTasksQueue
// (Final, Native, Public, BlueprintCallable)

void UDownloaderManager::TryLaunchSubTasksQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "TryLaunchSubTasksQueue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderManager.CheckTaskInfosValid
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FDownloaderTaskInfo>&InAllTaskInfos                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::CheckTaskInfosValid(const TArray<struct FDownloaderTaskInfo>& InAllTaskInfos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "CheckTaskInfosValid");

	Params::DownloaderManager_CheckTaskInfosValid Parms{};

	Parms.InAllTaskInfos = std::move(InAllTaskInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.DeleteDefaultLaunchCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::DeleteDefaultLaunchCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "DeleteDefaultLaunchCacheDir");

	Params::DownloaderManager_DeleteDefaultLaunchCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.DeleteDefaultLogsCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::DeleteDefaultLogsCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "DeleteDefaultLogsCacheDir");

	Params::DownloaderManager_DeleteDefaultLogsCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.DeleteDefaultPictureCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::DeleteDefaultPictureCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "DeleteDefaultPictureCacheDir");

	Params::DownloaderManager_DeleteDefaultPictureCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetBackgroundDownloadMaxRetryTimes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetBackgroundDownloadMaxRetryTimes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetBackgroundDownloadMaxRetryTimes");

	Params::DownloaderManager_GetBackgroundDownloadMaxRetryTimes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetCacheClearMaxSpacePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetCacheClearMaxSpacePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetCacheClearMaxSpacePercent");

	Params::DownloaderManager_GetCacheClearMaxSpacePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetCacheExpiredSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetCacheExpiredSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetCacheExpiredSeconds");

	Params::DownloaderManager_GetCacheExpiredSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetDefaultLaunchCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetDefaultLaunchCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetDefaultLaunchCacheDir");

	Params::DownloaderManager_GetDefaultLaunchCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetDefaultLogsCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetDefaultLogsCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetDefaultLogsCacheDir");

	Params::DownloaderManager_GetDefaultLogsCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetDefaultPictureCacheDir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderManager::GetDefaultPictureCacheDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetDefaultPictureCacheDir");

	Params::DownloaderManager_GetDefaultPictureCacheDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetIsBackgroundDownload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::GetIsBackgroundDownload() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetIsBackgroundDownload");

	Params::DownloaderManager_GetIsBackgroundDownload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetLightWeightHttpTaskByURL
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    InNecessaryURL                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDownloaderHttpTask*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDownloaderHttpTask* UDownloaderManager::GetLightWeightHttpTaskByURL(const class FString& InNecessaryURL) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetLightWeightHttpTaskByURL");

	Params::DownloaderManager_GetLightWeightHttpTaskByURL Parms{};

	Parms.InNecessaryURL = std::move(InNecessaryURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetMaxDownloadingSubTaskNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetMaxDownloadingSubTaskNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetMaxDownloadingSubTaskNum");

	Params::DownloaderManager_GetMaxDownloadingSubTaskNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetSubTaskChunkSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetSubTaskChunkSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetSubTaskChunkSize");

	Params::DownloaderManager_GetSubTaskChunkSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetTextureCacheExpireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDownloaderManager::GetTextureCacheExpireTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetTextureCacheExpireTime");

	Params::DownloaderManager_GetTextureCacheExpireTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetTextureMaxCacheNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UDownloaderManager::GetTextureMaxCacheNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetTextureMaxCacheNum");

	Params::DownloaderManager_GetTextureMaxCacheNum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetTimeOutSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDownloaderManager::GetTimeOutSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetTimeOutSeconds");

	Params::DownloaderManager_GetTimeOutSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlTaskCallbackTimeOutGrowFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDownloaderManager::GetUrlTaskCallbackTimeOutGrowFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlTaskCallbackTimeOutGrowFactor");

	Params::DownloaderManager_GetUrlTaskCallbackTimeOutGrowFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.GetUrlTaskCallbackTimeOutSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDownloaderManager::GetUrlTaskCallbackTimeOutSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "GetUrlTaskCallbackTimeOutSeconds");

	Params::DownloaderManager_GetUrlTaskCallbackTimeOutSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.IsManagerEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::IsManagerEnable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "IsManagerEnable");

	Params::DownloaderManager_IsManagerEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderManager.IsSystemSupportFileCache
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderManager::IsSystemSupportFileCache() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderManager", "IsSystemSupportFileCache");

	Params::DownloaderManager_IsSystemSupportFileCache Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderSubTask.OnRealHttpTaskCDNFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderCDNFailedInfo&  InCDNFailedInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderSubTask::OnRealHttpTaskCDNFailed(const struct FDownloaderCDNFailedInfo& InCDNFailedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderSubTask", "OnRealHttpTaskCDNFailed");

	Params::DownloaderSubTask_OnRealHttpTaskCDNFailed Parms{};

	Parms.InCDNFailedInfo = std::move(InCDNFailedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderSubTask.OnRealHttpTaskFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const EDTFailedType&                    InFailedType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InErrorCode                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderSubTask::OnRealHttpTaskFailed(const EDTFailedType& InFailedType, const int32 InErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderSubTask", "OnRealHttpTaskFailed");

	Params::DownloaderSubTask_OnRealHttpTaskFailed Parms{};

	Parms.InFailedType = InFailedType;
	Parms.InErrorCode = InErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderSubTask.OnRealHttpTaskProgress
// (Final, Native, Protected)
// Parameters:
// const int32                             InBytesSent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InBytesReceived                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderSubTask::OnRealHttpTaskProgress(const int32 InBytesSent, const int32 InBytesReceived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderSubTask", "OnRealHttpTaskProgress");

	Params::DownloaderSubTask_OnRealHttpTaskProgress Parms{};

	Parms.InBytesSent = InBytesSent;
	Parms.InBytesReceived = InBytesReceived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderSubTask.OnRealHttpTaskSuccess
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderSubTask::OnRealHttpTaskSuccess(const struct FDownloaderResponse& InResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderSubTask", "OnRealHttpTaskSuccess");

	Params::DownloaderSubTask_OnRealHttpTaskSuccess Parms{};

	Parms.InResponse = std::move(InResponse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.CheckUrlTaskSuccess
// (Final, Native, Protected)

void UDownloaderUrlTask::CheckUrlTaskSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "CheckUrlTaskSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.CreateSubTasksPerFrame
// (Final, Native, Protected)

void UDownloaderUrlTask::CreateSubTasksPerFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "CreateSubTasksPerFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnHashCheckFileComplete
// (Final, Native, Protected)
// Parameters:
// const bool                              bHashCheckResult                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnHashCheckFileComplete(const bool bHashCheckResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnHashCheckFileComplete");

	Params::DownloaderUrlTask_OnHashCheckFileComplete Parms{};

	Parms.bHashCheckResult = bHashCheckResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnMergeFileComplete
// (Final, Native, Protected)
// Parameters:
// const bool                              bMergeResult                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnMergeFileComplete(const bool bMergeResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnMergeFileComplete");

	Params::DownloaderUrlTask_OnMergeFileComplete Parms{};

	Parms.bMergeResult = bMergeResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnMoveOrCopyFileComplete
// (Final, Native, Protected)
// Parameters:
// const bool                              bMoveOrCopyResult                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnMoveOrCopyFileComplete(const bool bMoveOrCopyResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnMoveOrCopyFileComplete");

	Params::DownloaderUrlTask_OnMoveOrCopyFileComplete Parms{};

	Parms.bMoveOrCopyResult = bMoveOrCopyResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnSubTaskCDNFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderCDNFailedInfo&  InCDNFailedInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnSubTaskCDNFailed(const struct FDownloaderCDNFailedInfo& InCDNFailedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnSubTaskCDNFailed");

	Params::DownloaderUrlTask_OnSubTaskCDNFailed Parms{};

	Parms.InCDNFailedInfo = std::move(InCDNFailedInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnSubTaskFailed
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const EDTFailedType&                    InFailedType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InErrorCode                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnSubTaskFailed(const EDTFailedType& InFailedType, const int32 InErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnSubTaskFailed");

	Params::DownloaderUrlTask_OnSubTaskFailed Parms{};

	Parms.InFailedType = InFailedType;
	Parms.InErrorCode = InErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnSubTaskProgress
// (Final, Native, Protected)
// Parameters:
// const int32                             InCurBytesSent                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             InCurBytesReceived                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnSubTaskProgress(const int32 InCurBytesSent, const int32 InCurBytesReceived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnSubTaskProgress");

	Params::DownloaderUrlTask_OnSubTaskProgress Parms{};

	Parms.InCurBytesSent = InCurBytesSent;
	Parms.InCurBytesReceived = InCurBytesReceived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUrlTask.OnSubTaskSuccess
// (Final, Native, Protected, HasOutParams)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDownloaderUrlTask::OnSubTaskSuccess(const struct FDownloaderResponse& InResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DownloaderUrlTask", "OnSubTaskSuccess");

	Params::DownloaderUrlTask_OnSubTaskSuccess Parms{};

	Parms.InResponse = std::move(InResponse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUtils.AsyncCopyFileFromPak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SourceFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    TargetFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUtils::AsyncCopyFileFromPak(const class FString& SourceFilePath, const class FString& TargetFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "AsyncCopyFileFromPak");

	Params::DownloaderUtils_AsyncCopyFileFromPak Parms{};

	Parms.SourceFilePath = std::move(SourceFilePath);
	Parms.TargetFilePath = std::move(TargetFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUtils.DecodeFileRawData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::DecodeFileRawData(const struct FDownloaderResponse& InResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "DecodeFileRawData");

	Params::DownloaderUtils_DecodeFileRawData Parms{};

	Parms.InResponse = std::move(InResponse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.EncodeUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InUnencodeUrl                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::EncodeUrl(const class FString& InUnencodeUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "EncodeUrl");

	Params::DownloaderUtils_EncodeUrl Parms{};

	Parms.InUnencodeUrl = std::move(InUnencodeUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.ExtractFileNameAndExtensionFromFileFullName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InFileFullName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutFileName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString*                          OutFileExtension                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUtils::ExtractFileNameAndExtensionFromFileFullName(const class FString& InFileFullName, class FString* OutFileName, class FString* OutFileExtension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "ExtractFileNameAndExtensionFromFileFullName");

	Params::DownloaderUtils_ExtractFileNameAndExtensionFromFileFullName Parms{};

	Parms.InFileFullName = std::move(InFileFullName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFileName != nullptr)
		*OutFileName = std::move(Parms.OutFileName);

	if (OutFileExtension != nullptr)
		*OutFileExtension = std::move(Parms.OutFileExtension);
}


// Function DownloaderTool.DownloaderUtils.GetAllTaskNameLogStr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InMainTaskName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InUrlTaskName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InSubTaskName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InHttpTaskName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetAllTaskNameLogStr(const class FString& InMainTaskName, const class FString& InUrlTaskName, const class FString& InSubTaskName, const class FString& InHttpTaskName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetAllTaskNameLogStr");

	Params::DownloaderUtils_GetAllTaskNameLogStr Parms{};

	Parms.InMainTaskName = std::move(InMainTaskName);
	Parms.InUrlTaskName = std::move(InUrlTaskName);
	Parms.InSubTaskName = std::move(InSubTaskName);
	Parms.InHttpTaskName = std::move(InHttpTaskName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetBodyFromJsonRequestStr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonRequestStr                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetBodyFromJsonRequestStr(const class FString& JsonRequestStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetBodyFromJsonRequestStr");

	Params::DownloaderUtils_GetBodyFromJsonRequestStr Parms{};

	Parms.JsonRequestStr = std::move(JsonRequestStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetCurTimeMilliSecond
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UDownloaderUtils::GetCurTimeMilliSecond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetCurTimeMilliSecond");

	Params::DownloaderUtils_GetCurTimeMilliSecond Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetFailedTypeStr
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EDTFailedType&                    InFailedType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetFailedTypeStr(const EDTFailedType& InFailedType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetFailedTypeStr");

	Params::DownloaderUtils_GetFailedTypeStr Parms{};

	Parms.InFailedType = InFailedType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetHeadersFromJsonRequestStr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonRequestStr                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, class FString> UDownloaderUtils::GetHeadersFromJsonRequestStr(const class FString& JsonRequestStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetHeadersFromJsonRequestStr");

	Params::DownloaderUtils_GetHeadersFromJsonRequestStr Parms{};

	Parms.JsonRequestStr = std::move(JsonRequestStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetHttpMethodTypeStr
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const EDownloaderHttpMethod&            InHttpMethod                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetHttpMethodTypeStr(const EDownloaderHttpMethod& InHttpMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetHttpMethodTypeStr");

	Params::DownloaderUtils_GetHttpMethodTypeStr Parms{};

	Parms.InHttpMethod = InHttpMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetQueriesFromJsonRequestStr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonRequestStr                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, class FString> UDownloaderUtils::GetQueriesFromJsonRequestStr(const class FString& JsonRequestStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetQueriesFromJsonRequestStr");

	Params::DownloaderUtils_GetQueriesFromJsonRequestStr Parms{};

	Parms.JsonRequestStr = std::move(JsonRequestStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetTaskInfoLogStr
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetTaskInfoLogStr(const struct FDownloaderTaskInfo& InTaskInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetTaskInfoLogStr");

	Params::DownloaderUtils_GetTaskInfoLogStr Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.GetVerbFromJsonRequestStr
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonRequestStr                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::GetVerbFromJsonRequestStr(const class FString& JsonRequestStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "GetVerbFromJsonRequestStr");

	Params::DownloaderUtils_GetVerbFromJsonRequestStr Parms{};

	Parms.JsonRequestStr = std::move(JsonRequestStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.HashCheckFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InHashStr                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::HashCheckFile(const class FString& InFilePath, const class FString& InHashStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "HashCheckFile");

	Params::DownloaderUtils_HashCheckFile Parms{};

	Parms.InFilePath = std::move(InFilePath);
	Parms.InHashStr = std::move(InHashStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.HashStringWithSHA1
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    inString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::HashStringWithSHA1(const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "HashStringWithSHA1");

	Params::DownloaderUtils_HashStringWithSHA1 Parms{};

	Parms.inString = std::move(inString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.SafeWriteToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InContent                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAppend                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReplaceOld                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDownloaderUtils::SafeWriteToFile(const class FString& InFilePath, const class FString& InContent, bool bInAppend, bool bInReplaceOld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "SafeWriteToFile");

	Params::DownloaderUtils_SafeWriteToFile Parms{};

	Parms.InFilePath = std::move(InFilePath);
	Parms.InContent = std::move(InContent);
	Parms.bInAppend = bInAppend;
	Parms.bInReplaceOld = bInReplaceOld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function DownloaderTool.DownloaderUtils.StringFileRawData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDownloaderUtils::StringFileRawData(const struct FDownloaderResponse& InResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "StringFileRawData");

	Params::DownloaderUtils_StringFileRawData Parms{};

	Parms.InResponse = std::move(InResponse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TryDeleteOldFileAndCreateDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFileFullPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TryDeleteOldFileAndCreateDir(const class FString& InFileFullPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TryDeleteOldFileAndCreateDir");

	Params::DownloaderUtils_TryDeleteOldFileAndCreateDir Parms{};

	Parms.InFileFullPath = std::move(InFileFullPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TryGetJsonStrFromDownloaderReqJson
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderReqJson&        InReqJson                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString*                          OutReqStr                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TryGetJsonStrFromDownloaderReqJson(const struct FDownloaderReqJson& InReqJson, class FString* OutReqStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TryGetJsonStrFromDownloaderReqJson");

	Params::DownloaderUtils_TryGetJsonStrFromDownloaderReqJson Parms{};

	Parms.InReqJson = std::move(InReqJson);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutReqStr != nullptr)
		*OutReqStr = std::move(Parms.OutReqStr);

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TryGetResponseFromCache
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderTaskInfo&       InTaskInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InCachePath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDownloaderResponse*             OutResponse                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TryGetResponseFromCache(const struct FDownloaderTaskInfo& InTaskInfo, const class FString& InCachePath, struct FDownloaderResponse* OutResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TryGetResponseFromCache");

	Params::DownloaderUtils_TryGetResponseFromCache Parms{};

	Parms.InTaskInfo = std::move(InTaskInfo);
	Parms.InCachePath = std::move(InCachePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutResponse != nullptr)
		*OutResponse = std::move(Parms.OutResponse);

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TryGetUrlTaskRecordFromFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InUrlTaskRecordFilePath                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUrlTaskRecordInfo*              OutUrlTaskRecordInfo                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TryGetUrlTaskRecordFromFile(const class FString& InUrlTaskRecordFilePath, struct FUrlTaskRecordInfo* OutUrlTaskRecordInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TryGetUrlTaskRecordFromFile");

	Params::DownloaderUtils_TryGetUrlTaskRecordFromFile Parms{};

	Parms.InUrlTaskRecordFilePath = std::move(InUrlTaskRecordFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUrlTaskRecordInfo != nullptr)
		*OutUrlTaskRecordInfo = std::move(Parms.OutUrlTaskRecordInfo);

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TrySaveResponseToCache
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FDownloaderResponse&       InResponse                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const class FString&                    InCachePath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TrySaveResponseToCache(const struct FDownloaderResponse& InResponse, const class FString& InCachePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TrySaveResponseToCache");

	Params::DownloaderUtils_TrySaveResponseToCache Parms{};

	Parms.InResponse = std::move(InResponse);
	Parms.InCachePath = std::move(InCachePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function DownloaderTool.DownloaderUtils.TryUpdateUrlTaskRecordFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InUrlTaskRecordFilePath                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUrlTaskRecordInfo&        InUrlTaskRecordInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDownloaderUtils::TryUpdateUrlTaskRecordFile(const class FString& InUrlTaskRecordFilePath, const struct FUrlTaskRecordInfo& InUrlTaskRecordInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DownloaderUtils", "TryUpdateUrlTaskRecordFile");

	Params::DownloaderUtils_TryUpdateUrlTaskRecordFile Parms{};

	Parms.InUrlTaskRecordFilePath = std::move(InUrlTaskRecordFilePath);
	Parms.InUrlTaskRecordInfo = std::move(InUrlTaskRecordInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

