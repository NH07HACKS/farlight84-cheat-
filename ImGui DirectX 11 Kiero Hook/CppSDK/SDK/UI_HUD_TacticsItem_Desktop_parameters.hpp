#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_TacticsItem_Desktop

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_TacticsItem_Desktop.UI_HUD_TacticsItem_Desktop_C.ExecuteUbergraph_UI_HUD_TacticsItem_Desktop
// 0x00F0 (0x00F0 - 0x0000)
struct UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETEUILockState                                K2Node_Event_InLockState;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETEUILockState                                Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	ETEUILockState                                Temp_byte_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x00B0(0x0028)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop) == 0x000008, "Wrong alignment on UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop");
static_assert(sizeof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop) == 0x0000F0, "Wrong size on UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, EntryPoint) == 0x000000, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, K2Node_Event_InLockState) == 0x000004, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::K2Node_Event_InLockState' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_bool_Variable) == 0x000005, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_struct_Variable) == 0x000008, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_struct_Variable_1) == 0x000018, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_byte_Variable) == 0x000028, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_softobject_Variable) == 0x000030, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_softobject_Variable_1) == 0x000058, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_softobject_Variable_2) == 0x000080, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_byte_Variable_1) == 0x0000A8, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, K2Node_Select_Default) == 0x0000B0, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_byte_Variable_2) == 0x0000D8, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_byte_Variable_3) == 0x0000D9, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, Temp_byte_Variable_4) == 0x0000DA, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, K2Node_Event_IsDesignTime) == 0x0000DB, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, K2Node_Select_Default_1) == 0x0000DC, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop, K2Node_Select_Default_2) == 0x0000E0, "Member 'UI_HUD_TacticsItem_Desktop_C_ExecuteUbergraph_UI_HUD_TacticsItem_Desktop::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_HUD_TacticsItem_Desktop.UI_HUD_TacticsItem_Desktop_C.BP_UpdateLockView
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView final
{
public:
	ETEUILockState                                InLockState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView) == 0x000001, "Wrong alignment on UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView");
static_assert(sizeof(UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView) == 0x000001, "Wrong size on UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView, InLockState) == 0x000000, "Member 'UI_HUD_TacticsItem_Desktop_C_BP_UpdateLockView::InLockState' has a wrong offset!");

// Function UI_HUD_TacticsItem_Desktop.UI_HUD_TacticsItem_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_TacticsItem_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_TacticsItem_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_TacticsItem_Desktop_C_PreConstruct");
static_assert(sizeof(UI_HUD_TacticsItem_Desktop_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_TacticsItem_Desktop_C_PreConstruct");
static_assert(offsetof(UI_HUD_TacticsItem_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_TacticsItem_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

