#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Weapon_Model_Desktop

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function UI_Weapon_Model_Desktop.UI_Weapon_Model_Desktop_C.SwitchShootPattern
// 0x0018 (0x0018 - 0x0000)
struct UI_Weapon_Model_Desktop_C_SwitchShootPattern final
{
public:
	EWeaponShootPattern                           ShootPattern;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShootPattern                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Weapon_Model_Desktop_C_SwitchShootPattern) == 0x000004, "Wrong alignment on UI_Weapon_Model_Desktop_C_SwitchShootPattern");
static_assert(sizeof(UI_Weapon_Model_Desktop_C_SwitchShootPattern) == 0x000018, "Wrong size on UI_Weapon_Model_Desktop_C_SwitchShootPattern");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, ShootPattern) == 0x000000, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::ShootPattern' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, Temp_byte_Variable) == 0x000001, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, Temp_int_Variable) == 0x000004, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, Temp_int_Variable_1) == 0x000008, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, Temp_int_Variable_2) == 0x00000C, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, Temp_int_Variable_3) == 0x000010, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SwitchShootPattern, K2Node_Select_Default) == 0x000014, "Member 'UI_Weapon_Model_Desktop_C_SwitchShootPattern::K2Node_Select_Default' has a wrong offset!");

// Function UI_Weapon_Model_Desktop.UI_Weapon_Model_Desktop_C.SetSelecState
// 0x0007 (0x0007 - 0x0000)
struct UI_Weapon_Model_Desktop_C_SetSelecState final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponShootPattern                           ShootPattern;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsOwningCharacterPlayerLocallyControlled_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Weapon_Model_Desktop_C_SetSelecState) == 0x000001, "Wrong alignment on UI_Weapon_Model_Desktop_C_SetSelecState");
static_assert(sizeof(UI_Weapon_Model_Desktop_C_SetSelecState) == 0x000007, "Wrong size on UI_Weapon_Model_Desktop_C_SetSelecState");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, bEnabled) == 0x000000, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::bEnabled' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, ShootPattern) == 0x000001, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::ShootPattern' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, Temp_bool_Variable) == 0x000002, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, Temp_byte_Variable) == 0x000003, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, Temp_byte_Variable_1) == 0x000004, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, CallFunc_K2_IsOwningCharacterPlayerLocallyControlled_ReturnValue) == 0x000005, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::CallFunc_K2_IsOwningCharacterPlayerLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Model_Desktop_C_SetSelecState, K2Node_Select_Default) == 0x000006, "Member 'UI_Weapon_Model_Desktop_C_SetSelecState::K2Node_Select_Default' has a wrong offset!");

}

