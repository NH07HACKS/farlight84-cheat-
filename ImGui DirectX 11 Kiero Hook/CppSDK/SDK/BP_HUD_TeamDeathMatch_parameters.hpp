#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_TeamDeathMatch

#include "Basic.hpp"

#include "E_NoticeType_TDM_structs.hpp"
#include "E_SoundType_TDM_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.ExecuteUbergraph_BP_HUD_TeamDeathMatch
// 0x0068 (0x0068 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_InvalidateTimerHandle_ReturnValue;     // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFX_Widget_Buff_Treat_C*                CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlaySound2Dbyname_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_ShowSolarWidget_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_SingleDeathMatch_HUD_ChangeBtn_C*   K2Node_DynamicCast_AsUI_Single_Death_Match_HUD_Change_Btn; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_SDM_ChooseHero*                     K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch) == 0x000008, "Wrong alignment on BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch) == 0x000068, "Wrong size on BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, EntryPoint) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, Temp_bool_Variable) == 0x000004, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_K2_InvalidateTimerHandle_ReturnValue) == 0x000028, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_K2_InvalidateTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000030, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_PlaySound2Dbyname_ReturnValue) == 0x000040, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_PlaySound2Dbyname_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, K2Node_Event_EndPlayReason) == 0x000044, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000045, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, CallFunc_ShowSolarWidget_ReturnValue) == 0x000048, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::CallFunc_ShowSolarWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, K2Node_DynamicCast_AsUI_Single_Death_Match_HUD_Change_Btn) == 0x000050, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::K2Node_DynamicCast_AsUI_Single_Death_Match_HUD_Change_Btn' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch, K2Node_Select_Default) == 0x000060, "Member 'BP_HUD_TeamDeathMatch_C_ExecuteUbergraph_BP_HUD_TeamDeathMatch::K2Node_Select_Default' has a wrong offset!");

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_HUD_TeamDeathMatch_C_ReceiveEndPlay");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_HUD_TeamDeathMatch_C_ReceiveEndPlay");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.Init UIWidget Ref
// 0x0018 (0x0018 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref final
{
public:
	class USolarUserWidget*                       CallFunc__c__Create_Widget_And_Display_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_TDM_HUD_C*                          K2Node_DynamicCast_AsUI_TDM_HUD;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref) == 0x000008, "Wrong alignment on BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref) == 0x000018, "Wrong size on BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref, CallFunc__c__Create_Widget_And_Display_ReturnValue) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref::CallFunc__c__Create_Widget_And_Display_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref, K2Node_DynamicCast_AsUI_TDM_HUD) == 0x000008, "Member 'BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref::K2Node_DynamicCast_AsUI_TDM_HUD' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_HUD_TeamDeathMatch_C_Init_UIWidget_Ref::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.Play Sound HUD
// 0x0070 (0x0070 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_Play_Sound_HUD final
{
public:
	E_SoundType_TDM                               SoundType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SoundType_TDM                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlaySound2Dbyname_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD) == 0x000008, "Wrong alignment on BP_HUD_TeamDeathMatch_C_Play_Sound_HUD");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD) == 0x000070, "Wrong size on BP_HUD_TeamDeathMatch_C_Play_Sound_HUD");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, SoundType) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::SoundType' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_byte_Variable) == 0x000001, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_string_Variable) == 0x000008, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_string_Variable_1) == 0x000018, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_string_Variable_2) == 0x000028, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_string_Variable_3) == 0x000038, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, Temp_string_Variable_4) == 0x000048, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, K2Node_Select_Default) == 0x000058, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Play_Sound_HUD, CallFunc_PlaySound2Dbyname_ReturnValue) == 0x000068, "Member 'BP_HUD_TeamDeathMatch_C_Play_Sound_HUD::CallFunc_PlaySound2Dbyname_ReturnValue' has a wrong offset!");

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.Show Notice Death Match
// 0x0070 (0x0070 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match final
{
public:
	E_NoticeType_TDM                              Notice类型;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            FormatContext;                                     // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsNoticeDM;                                        // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowNoticeDM_Icon;                                 // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NoticeType_TDM                              Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match) == 0x000008, "Wrong alignment on BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match) == 0x000070, "Wrong size on BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, Notice类型) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::Notice类型' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, FormatContext) == 0x000008, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::FormatContext' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, IsNoticeDM) == 0x000058, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::IsNoticeDM' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, ShowNoticeDM_Icon) == 0x000059, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::ShowNoticeDM_Icon' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, Temp_int_Variable) == 0x00005C, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, Temp_int_Variable_1) == 0x000060, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, Temp_int_Variable_2) == 0x000064, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, Temp_byte_Variable) == 0x000068, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match, K2Node_Select_Default) == 0x00006C, "Member 'BP_HUD_TeamDeathMatch_C_Show_Notice_Death_Match::K2Node_Select_Default' has a wrong offset!");

// Function BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C.HiddenCrossHair
// 0x0008 (0x0008 - 0x0000)
struct BP_HUD_TeamDeathMatch_C_HiddenCrossHair final
{
public:
	class ASolarCharacter*                        CallFunc__C_GetLocalCharacter_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_TeamDeathMatch_C_HiddenCrossHair) == 0x000008, "Wrong alignment on BP_HUD_TeamDeathMatch_C_HiddenCrossHair");
static_assert(sizeof(BP_HUD_TeamDeathMatch_C_HiddenCrossHair) == 0x000008, "Wrong size on BP_HUD_TeamDeathMatch_C_HiddenCrossHair");
static_assert(offsetof(BP_HUD_TeamDeathMatch_C_HiddenCrossHair, CallFunc__C_GetLocalCharacter_ReturnValue) == 0x000000, "Member 'BP_HUD_TeamDeathMatch_C_HiddenCrossHair::CallFunc__C_GetLocalCharacter_ReturnValue' has a wrong offset!");

}

