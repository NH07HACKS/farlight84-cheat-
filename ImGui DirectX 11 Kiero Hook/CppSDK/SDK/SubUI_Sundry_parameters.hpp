#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubUI_Sundry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_Type_HUD_Settings_structs.hpp"


namespace SDK::Params
{

// Function SubUI_Sundry.SubUI_Sundry_C.ExecuteUbergraph_SubUI_Sundry
// 0x0008 (0x0008 - 0x0000)
struct SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry) == 0x000004, "Wrong alignment on SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry");
static_assert(sizeof(SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry) == 0x000008, "Wrong size on SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry");
static_assert(offsetof(SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry, EntryPoint) == 0x000000, "Member 'SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry, K2Node_ComponentBoundEvent_IsChecked) == 0x000004, "Member 'SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry, K2Node_Event_IsDesignTime) == 0x000005, "Member 'SubUI_Sundry_C_ExecuteUbergraph_SubUI_Sundry::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function SubUI_Sundry.SubUI_Sundry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SubUI_Sundry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_Sundry_C_PreConstruct) == 0x000001, "Wrong alignment on SubUI_Sundry_C_PreConstruct");
static_assert(sizeof(SubUI_Sundry_C_PreConstruct) == 0x000001, "Wrong size on SubUI_Sundry_C_PreConstruct");
static_assert(offsetof(SubUI_Sundry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SubUI_Sundry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SubUI_Sundry.SubUI_Sundry_C.BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature");
static_assert(sizeof(SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature");
static_assert(offsetof(SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'SubUI_Sundry_C_BndEvt__UI_SolarBattle_ChatHUD_K2Node_ComponentBoundEvent_0_OnChatCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function SubUI_Sundry.SubUI_Sundry_C.Update
// 0x001F (0x001F - 0x0000)
struct SubUI_Sundry_C_Update final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_HUD_Settings                           Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_HUD_Settings                           Temp_byte_Variable_8;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_HUD_Settings                           Temp_byte_Variable_13;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_HUD_Settings                           Temp_byte_Variable_18;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformMobile_ReturnValue;             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_HUD_Settings                           Temp_byte_Variable_24;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_Sundry_C_Update) == 0x000001, "Wrong alignment on SubUI_Sundry_C_Update");
static_assert(sizeof(SubUI_Sundry_C_Update) == 0x00001F, "Wrong size on SubUI_Sundry_C_Update");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable) == 0x000000, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_1) == 0x000001, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_2) == 0x000002, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_3) == 0x000003, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_4) == 0x000004, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_5) == 0x000005, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_6) == 0x000006, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_7) == 0x000007, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_8) == 0x000008, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_9) == 0x000009, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_10) == 0x00000A, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_11) == 0x00000B, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_12) == 0x00000C, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_13) == 0x00000D, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_14) == 0x00000E, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_15) == 0x00000F, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_16) == 0x000010, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_17) == 0x000011, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_18) == 0x000012, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_19) == 0x000013, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_20) == 0x000014, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_21) == 0x000015, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_22) == 0x000016, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, CallFunc_IsPlatformMobile_ReturnValue) == 0x000017, "Member 'SubUI_Sundry_C_Update::CallFunc_IsPlatformMobile_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_23) == 0x000018, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, Temp_byte_Variable_24) == 0x000019, "Member 'SubUI_Sundry_C_Update::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, K2Node_Select_Default) == 0x00001A, "Member 'SubUI_Sundry_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, K2Node_Select_Default_1) == 0x00001B, "Member 'SubUI_Sundry_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, K2Node_Select_Default_2) == 0x00001C, "Member 'SubUI_Sundry_C_Update::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, K2Node_Select_Default_3) == 0x00001D, "Member 'SubUI_Sundry_C_Update::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SubUI_Sundry_C_Update, K2Node_Select_Default_4) == 0x00001E, "Member 'SubUI_Sundry_C_Update::K2Node_Select_Default_4' has a wrong offset!");

// Function SubUI_Sundry.SubUI_Sundry_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct SubUI_Sundry_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_Sundry_C_GetModuleName) == 0x000008, "Wrong alignment on SubUI_Sundry_C_GetModuleName");
static_assert(sizeof(SubUI_Sundry_C_GetModuleName) == 0x000010, "Wrong size on SubUI_Sundry_C_GetModuleName");
static_assert(offsetof(SubUI_Sundry_C_GetModuleName, ReturnValue) == 0x000000, "Member 'SubUI_Sundry_C_GetModuleName::ReturnValue' has a wrong offset!");

}

