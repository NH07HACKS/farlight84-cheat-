#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarWebBrowser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SolarWebBrowser.WebBrowser.Bind
// 0x0018 (0x0018 - 0x0000)
struct WebBrowser_Bind final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_Bind) == 0x000008, "Wrong alignment on WebBrowser_Bind");
static_assert(sizeof(WebBrowser_Bind) == 0x000018, "Wrong size on WebBrowser_Bind");
static_assert(offsetof(WebBrowser_Bind, Name_0) == 0x000000, "Member 'WebBrowser_Bind::Name_0' has a wrong offset!");
static_assert(offsetof(WebBrowser_Bind, Object) == 0x000010, "Member 'WebBrowser_Bind::Object' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.CallJavascriptFunction
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_CallJavascriptFunction final
{
public:
	class FString                                 Function;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Data;                                              // 0x0010(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_CallJavascriptFunction) == 0x000008, "Wrong alignment on WebBrowser_CallJavascriptFunction");
static_assert(sizeof(WebBrowser_CallJavascriptFunction) == 0x000020, "Wrong size on WebBrowser_CallJavascriptFunction");
static_assert(offsetof(WebBrowser_CallJavascriptFunction, Function) == 0x000000, "Member 'WebBrowser_CallJavascriptFunction::Function' has a wrong offset!");
static_assert(offsetof(WebBrowser_CallJavascriptFunction, Data) == 0x000010, "Member 'WebBrowser_CallJavascriptFunction::Data' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.ExecuteJavascript
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_ExecuteJavascript final
{
public:
	class FString                                 ScriptText;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_ExecuteJavascript) == 0x000008, "Wrong alignment on WebBrowser_ExecuteJavascript");
static_assert(sizeof(WebBrowser_ExecuteJavascript) == 0x000010, "Wrong size on WebBrowser_ExecuteJavascript");
static_assert(offsetof(WebBrowser_ExecuteJavascript, ScriptText) == 0x000000, "Member 'WebBrowser_ExecuteJavascript::ScriptText' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.Focus
// 0x0001 (0x0001 - 0x0000)
struct WebBrowser_Focus final
{
public:
	EMouseLockMode                                MouseLockMode;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_Focus) == 0x000001, "Wrong alignment on WebBrowser_Focus");
static_assert(sizeof(WebBrowser_Focus) == 0x000001, "Wrong size on WebBrowser_Focus");
static_assert(offsetof(WebBrowser_Focus, MouseLockMode) == 0x000000, "Member 'WebBrowser_Focus::MouseLockMode' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.LoadString
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_LoadString final
{
public:
	class FString                                 Contents;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DummyURL;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_LoadString) == 0x000008, "Wrong alignment on WebBrowser_LoadString");
static_assert(sizeof(WebBrowser_LoadString) == 0x000020, "Wrong size on WebBrowser_LoadString");
static_assert(offsetof(WebBrowser_LoadString, Contents) == 0x000000, "Member 'WebBrowser_LoadString::Contents' has a wrong offset!");
static_assert(offsetof(WebBrowser_LoadString, DummyURL) == 0x000010, "Member 'WebBrowser_LoadString::DummyURL' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.LoadURL
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_LoadURL final
{
public:
	class FString                                 NewURL;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_LoadURL) == 0x000008, "Wrong alignment on WebBrowser_LoadURL");
static_assert(sizeof(WebBrowser_LoadURL) == 0x000010, "Wrong size on WebBrowser_LoadURL");
static_assert(offsetof(WebBrowser_LoadURL, NewURL) == 0x000000, "Member 'WebBrowser_LoadURL::NewURL' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.ReadTexturePixel
// 0x000C (0x000C - 0x0000)
struct WebBrowser_ReadTexturePixel final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_ReadTexturePixel) == 0x000004, "Wrong alignment on WebBrowser_ReadTexturePixel");
static_assert(sizeof(WebBrowser_ReadTexturePixel) == 0x00000C, "Wrong size on WebBrowser_ReadTexturePixel");
static_assert(offsetof(WebBrowser_ReadTexturePixel, X) == 0x000000, "Member 'WebBrowser_ReadTexturePixel::X' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixel, Y) == 0x000004, "Member 'WebBrowser_ReadTexturePixel::Y' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixel, ReturnValue) == 0x000008, "Member 'WebBrowser_ReadTexturePixel::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.ReadTexturePixels
// 0x0020 (0x0020 - 0x0000)
struct WebBrowser_ReadTexturePixels final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_ReadTexturePixels) == 0x000008, "Wrong alignment on WebBrowser_ReadTexturePixels");
static_assert(sizeof(WebBrowser_ReadTexturePixels) == 0x000020, "Wrong size on WebBrowser_ReadTexturePixels");
static_assert(offsetof(WebBrowser_ReadTexturePixels, X) == 0x000000, "Member 'WebBrowser_ReadTexturePixels::X' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixels, Y) == 0x000004, "Member 'WebBrowser_ReadTexturePixels::Y' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixels, Width) == 0x000008, "Member 'WebBrowser_ReadTexturePixels::Width' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixels, Height) == 0x00000C, "Member 'WebBrowser_ReadTexturePixels::Height' has a wrong offset!");
static_assert(offsetof(WebBrowser_ReadTexturePixels, ReturnValue) == 0x000010, "Member 'WebBrowser_ReadTexturePixels::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.SetURLWithoutNavigation
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_SetURLWithoutNavigation final
{
public:
	TArray<class FString>                         URLs;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_SetURLWithoutNavigation) == 0x000008, "Wrong alignment on WebBrowser_SetURLWithoutNavigation");
static_assert(sizeof(WebBrowser_SetURLWithoutNavigation) == 0x000010, "Wrong size on WebBrowser_SetURLWithoutNavigation");
static_assert(offsetof(WebBrowser_SetURLWithoutNavigation, URLs) == 0x000000, "Member 'WebBrowser_SetURLWithoutNavigation::URLs' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.Unbind
// 0x0018 (0x0018 - 0x0000)
struct WebBrowser_Unbind final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_Unbind) == 0x000008, "Wrong alignment on WebBrowser_Unbind");
static_assert(sizeof(WebBrowser_Unbind) == 0x000018, "Wrong size on WebBrowser_Unbind");
static_assert(offsetof(WebBrowser_Unbind, Name_0) == 0x000000, "Member 'WebBrowser_Unbind::Name_0' has a wrong offset!");
static_assert(offsetof(WebBrowser_Unbind, Object) == 0x000010, "Member 'WebBrowser_Unbind::Object' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.Unfocus
// 0x0001 (0x0001 - 0x0000)
struct WebBrowser_Unfocus final
{
public:
	EMouseCaptureMode                             MouseCaptureMode;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_Unfocus) == 0x000001, "Wrong alignment on WebBrowser_Unfocus");
static_assert(sizeof(WebBrowser_Unfocus) == 0x000001, "Wrong size on WebBrowser_Unfocus");
static_assert(offsetof(WebBrowser_Unfocus, MouseCaptureMode) == 0x000000, "Member 'WebBrowser_Unfocus::MouseCaptureMode' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.GetTextureHeight
// 0x0004 (0x0004 - 0x0000)
struct WebBrowser_GetTextureHeight final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetTextureHeight) == 0x000004, "Wrong alignment on WebBrowser_GetTextureHeight");
static_assert(sizeof(WebBrowser_GetTextureHeight) == 0x000004, "Wrong size on WebBrowser_GetTextureHeight");
static_assert(offsetof(WebBrowser_GetTextureHeight, ReturnValue) == 0x000000, "Member 'WebBrowser_GetTextureHeight::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.GetTextureWidth
// 0x0004 (0x0004 - 0x0000)
struct WebBrowser_GetTextureWidth final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetTextureWidth) == 0x000004, "Wrong alignment on WebBrowser_GetTextureWidth");
static_assert(sizeof(WebBrowser_GetTextureWidth) == 0x000004, "Wrong size on WebBrowser_GetTextureWidth");
static_assert(offsetof(WebBrowser_GetTextureWidth, ReturnValue) == 0x000000, "Member 'WebBrowser_GetTextureWidth::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.GetTitleText
// 0x0018 (0x0018 - 0x0000)
struct WebBrowser_GetTitleText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetTitleText) == 0x000008, "Wrong alignment on WebBrowser_GetTitleText");
static_assert(sizeof(WebBrowser_GetTitleText) == 0x000018, "Wrong size on WebBrowser_GetTitleText");
static_assert(offsetof(WebBrowser_GetTitleText, ReturnValue) == 0x000000, "Member 'WebBrowser_GetTitleText::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct WebBrowser_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_GetUrl) == 0x000008, "Wrong alignment on WebBrowser_GetUrl");
static_assert(sizeof(WebBrowser_GetUrl) == 0x000010, "Wrong size on WebBrowser_GetUrl");
static_assert(offsetof(WebBrowser_GetUrl, ReturnValue) == 0x000000, "Member 'WebBrowser_GetUrl::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.IsMouseTransparencyEnabled
// 0x0001 (0x0001 - 0x0000)
struct WebBrowser_IsMouseTransparencyEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_IsMouseTransparencyEnabled) == 0x000001, "Wrong alignment on WebBrowser_IsMouseTransparencyEnabled");
static_assert(sizeof(WebBrowser_IsMouseTransparencyEnabled) == 0x000001, "Wrong size on WebBrowser_IsMouseTransparencyEnabled");
static_assert(offsetof(WebBrowser_IsMouseTransparencyEnabled, ReturnValue) == 0x000000, "Member 'WebBrowser_IsMouseTransparencyEnabled::ReturnValue' has a wrong offset!");

// Function SolarWebBrowser.WebBrowser.IsVirtualPointerTransparencyEnabled
// 0x0001 (0x0001 - 0x0000)
struct WebBrowser_IsVirtualPointerTransparencyEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WebBrowser_IsVirtualPointerTransparencyEnabled) == 0x000001, "Wrong alignment on WebBrowser_IsVirtualPointerTransparencyEnabled");
static_assert(sizeof(WebBrowser_IsVirtualPointerTransparencyEnabled) == 0x000001, "Wrong size on WebBrowser_IsVirtualPointerTransparencyEnabled");
static_assert(offsetof(WebBrowser_IsVirtualPointerTransparencyEnabled, ReturnValue) == 0x000000, "Member 'WebBrowser_IsVirtualPointerTransparencyEnabled::ReturnValue' has a wrong offset!");

}

