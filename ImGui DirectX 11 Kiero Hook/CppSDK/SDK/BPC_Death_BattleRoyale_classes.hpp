#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Death_BattleRoyale

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "BPC_Death_Framework_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Death_BattleRoyale.BPC_Death_BattleRoyale_C
// 0x0148 (0x02C8 - 0x0180)
class UBPC_Death_BattleRoyale_C final : public UBPC_Death_Framework_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BPC_Death_BattleRoyale_C;           // 0x0180(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_ReviveItemManger_BattleRoyale_C*    ReviveItemManger;                                  // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        Killer;                                            // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        Killed;                                            // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarPointDamageEvent                 DeathDamageEvent;                                  // 0x01A0(0x0128)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_BPC_Death_BattleRoyale(int32 EntryPoint);
	void ReceivePlayerKill(class ASCMPlayerState* Killer_0, class ASCMPlayerState* Killed_0, const TArray<class ASCMPlayerState*>& Assists, const struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser);
	void ReceivePlayerDeathVerge(class ASCMPlayerState* InAttacker, class ASCMPlayerState* InDeathVergePlayer, const struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser);
	void ReceivePlayerResurrect(class ASolarCharacter* ResurrectCharacter, class ASCMPlayerState* ResurrectPlayer);
	void Out_Put_Kill_Log(bool InBool);
	void TryRevivePlayerByCoin(class ABP_PlayerState_BattleRoyale_C* Player, bool* Succeed);
	bool CanPlayerBattle(class ASCMPlayerState* Player);
	class UBP_Logic_BattleRoyale_C* GetMainLogic();
	void GetConiReviveManager(class ABP_ReviveItemManger_BattleRoyale_C** Output_Get);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Death_BattleRoyale_C">();
	}
	static class UBPC_Death_BattleRoyale_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_Death_BattleRoyale_C>();
	}
};
static_assert(alignof(UBPC_Death_BattleRoyale_C) == 0x000008, "Wrong alignment on UBPC_Death_BattleRoyale_C");
static_assert(sizeof(UBPC_Death_BattleRoyale_C) == 0x0002C8, "Wrong size on UBPC_Death_BattleRoyale_C");
static_assert(offsetof(UBPC_Death_BattleRoyale_C, UberGraphFrame_BPC_Death_BattleRoyale_C) == 0x000180, "Member 'UBPC_Death_BattleRoyale_C::UberGraphFrame_BPC_Death_BattleRoyale_C' has a wrong offset!");
static_assert(offsetof(UBPC_Death_BattleRoyale_C, ReviveItemManger) == 0x000188, "Member 'UBPC_Death_BattleRoyale_C::ReviveItemManger' has a wrong offset!");
static_assert(offsetof(UBPC_Death_BattleRoyale_C, Killer) == 0x000190, "Member 'UBPC_Death_BattleRoyale_C::Killer' has a wrong offset!");
static_assert(offsetof(UBPC_Death_BattleRoyale_C, Killed) == 0x000198, "Member 'UBPC_Death_BattleRoyale_C::Killed' has a wrong offset!");
static_assert(offsetof(UBPC_Death_BattleRoyale_C, DeathDamageEvent) == 0x0001A0, "Member 'UBPC_Death_BattleRoyale_C::DeathDamageEvent' has a wrong offset!");

}

