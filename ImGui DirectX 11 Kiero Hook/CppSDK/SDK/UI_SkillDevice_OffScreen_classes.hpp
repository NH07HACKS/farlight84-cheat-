#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SkillDevice_OffScreen

#include "Basic.hpp"

#include "E_OffScreen_ArrowColorState_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_SkillDevice_OffScreen.UI_SkillDevice_OffScreen_C
// 0x0050 (0x0880 - 0x0830)
class UUI_SkillDevice_OffScreen_C final : public UWorldMark_HeroSubItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0830(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0838(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hit;                                          // 0x0840(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_FindEnemy;                                    // 0x0848(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Root;                                              // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Key;                                      // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        UI_KeyPrompt_Super;                                // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        UI_KeyPrompt_Tactical;                             // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_OffScreen_ArrowColorState                   ArrowColor;                                        // 0x0870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_SkillDevice_OffScreen(int32 EntryPoint);
	void OnRemove();
	void SetSwitcherKey(bool bVisible, int32 ActiveIndex);
	void SetItemImageByResourceObject(class UObject* ResourceObject);
	void SetArrowColor(const struct FLinearColor& InColor);
	void OnDeviceStateChange(EHeroSubItemDeviceState OldState, EHeroSubItemDeviceState NewState);
	void SetItemImage(class UTexture2D* InTexture, const struct FVector2D& SizeOverride);
	void OnOutOfScreenChanged(bool bNewOutOfScreen);
	void PreConstruct(bool IsDesignTime);
	void Finished_011295C74059082DDDE5018E380D4332();
	void Finished_F8BE061343DC36B2840D3DA58003B920();
	void Finished_026373ED491835E8F8B211935946690D();
	void SetDefaultColor(E_OffScreen_ArrowColorState ArrowColor_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_SkillDevice_OffScreen_C">();
	}
	static class UUI_SkillDevice_OffScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_SkillDevice_OffScreen_C>();
	}
};
static_assert(alignof(UUI_SkillDevice_OffScreen_C) == 0x000010, "Wrong alignment on UUI_SkillDevice_OffScreen_C");
static_assert(sizeof(UUI_SkillDevice_OffScreen_C) == 0x000880, "Wrong size on UUI_SkillDevice_OffScreen_C");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, UberGraphFrame) == 0x000830, "Member 'UUI_SkillDevice_OffScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, Anim_Exit) == 0x000838, "Member 'UUI_SkillDevice_OffScreen_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, Anim_Hit) == 0x000840, "Member 'UUI_SkillDevice_OffScreen_C::Anim_Hit' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, Anim_FindEnemy) == 0x000848, "Member 'UUI_SkillDevice_OffScreen_C::Anim_FindEnemy' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, Root) == 0x000850, "Member 'UUI_SkillDevice_OffScreen_C::Root' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, Switcher_Key) == 0x000858, "Member 'UUI_SkillDevice_OffScreen_C::Switcher_Key' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, UI_KeyPrompt_Super) == 0x000860, "Member 'UUI_SkillDevice_OffScreen_C::UI_KeyPrompt_Super' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, UI_KeyPrompt_Tactical) == 0x000868, "Member 'UUI_SkillDevice_OffScreen_C::UI_KeyPrompt_Tactical' has a wrong offset!");
static_assert(offsetof(UUI_SkillDevice_OffScreen_C, ArrowColor) == 0x000870, "Member 'UUI_SkillDevice_OffScreen_C::ArrowColor' has a wrong offset!");

}

