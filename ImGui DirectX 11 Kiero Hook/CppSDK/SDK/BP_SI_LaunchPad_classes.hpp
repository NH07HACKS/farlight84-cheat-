#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SI_LaunchPad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SI_LaunchPad.BP_SI_LaunchPad_C
// 0x00B0 (0x0830 - 0x0780)
class ABP_SI_LaunchPad_C final : public ASolarInteractableJumpPad
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   FX_Center_Logo;                                    // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_P_JumpPad_002;                                  // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VFX_Dark;                                          // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VFX;                                               // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        point001;                                          // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Progress;                                          // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_0_Scale_5D13061F42E17A3C2C7E09A9978FF46D; // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_alpha_5D13061F42E17A3C2C7E09A9978FF46D; // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_5D13061F42E17A3C2C7E09A9978FF46D; // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zvelority;                                         // 0x07E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalXY;                                        // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OriginalZ;                                         // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CD;                                                // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CooldownTime;                                      // 0x07F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInCD;                                            // 0x07FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASolarCharacter*>                Characters;                                        // 0x0800(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          TransientLaunch;                                   // 0x0810(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_811[0x3];                                      // 0x0811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CharacterLastIndex;                                // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    NewVar_0;                                          // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBegun;                                          // 0x0820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SI_LaunchPad(int32 EntryPoint);
	void CustomEvent_0();
	void OnCharacterLaunched(class ASolarCharacter* Character);
	void Set_State(bool InCD, float CD_0);
	void Set_CD(float CD_0);
	void LaunchEffect();
	void ClientFinishLaunch();
	void BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BreakLoop();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Show_in_CD(bool InCD);
	void UpdateProgress(float Percent);
	void ServerCheckLaunch(bool* Launch_0);
	void Launch(const TArray<class ASolarCharacter*>& Characters_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SI_LaunchPad_C">();
	}
	static class ABP_SI_LaunchPad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SI_LaunchPad_C>();
	}
};
static_assert(alignof(ABP_SI_LaunchPad_C) == 0x000010, "Wrong alignment on ABP_SI_LaunchPad_C");
static_assert(sizeof(ABP_SI_LaunchPad_C) == 0x000830, "Wrong size on ABP_SI_LaunchPad_C");
static_assert(offsetof(ABP_SI_LaunchPad_C, UberGraphFrame) == 0x000780, "Member 'ABP_SI_LaunchPad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, FX_Center_Logo) == 0x000788, "Member 'ABP_SI_LaunchPad_C::FX_Center_Logo' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Box) == 0x000790, "Member 'ABP_SI_LaunchPad_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, FX_P_JumpPad_002) == 0x000798, "Member 'ABP_SI_LaunchPad_C::FX_P_JumpPad_002' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, VFX_Dark) == 0x0007A0, "Member 'ABP_SI_LaunchPad_C::VFX_Dark' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, VFX) == 0x0007A8, "Member 'ABP_SI_LaunchPad_C::VFX' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, point001) == 0x0007B0, "Member 'ABP_SI_LaunchPad_C::point001' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Progress) == 0x0007B8, "Member 'ABP_SI_LaunchPad_C::Progress' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, StaticMesh) == 0x0007C0, "Member 'ABP_SI_LaunchPad_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Timeline_0_Scale_5D13061F42E17A3C2C7E09A9978FF46D) == 0x0007C8, "Member 'ABP_SI_LaunchPad_C::Timeline_0_Scale_5D13061F42E17A3C2C7E09A9978FF46D' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Timeline_0_alpha_5D13061F42E17A3C2C7E09A9978FF46D) == 0x0007D4, "Member 'ABP_SI_LaunchPad_C::Timeline_0_alpha_5D13061F42E17A3C2C7E09A9978FF46D' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Timeline_0__Direction_5D13061F42E17A3C2C7E09A9978FF46D) == 0x0007D8, "Member 'ABP_SI_LaunchPad_C::Timeline_0__Direction_5D13061F42E17A3C2C7E09A9978FF46D' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Timeline_0) == 0x0007E0, "Member 'ABP_SI_LaunchPad_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Zvelority) == 0x0007E8, "Member 'ABP_SI_LaunchPad_C::Zvelority' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, OriginalXY) == 0x0007EC, "Member 'ABP_SI_LaunchPad_C::OriginalXY' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, OriginalZ) == 0x0007F0, "Member 'ABP_SI_LaunchPad_C::OriginalZ' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, CD) == 0x0007F4, "Member 'ABP_SI_LaunchPad_C::CD' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, CooldownTime) == 0x0007F8, "Member 'ABP_SI_LaunchPad_C::CooldownTime' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, IsInCD) == 0x0007FC, "Member 'ABP_SI_LaunchPad_C::IsInCD' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, Characters) == 0x000800, "Member 'ABP_SI_LaunchPad_C::Characters' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, TransientLaunch) == 0x000810, "Member 'ABP_SI_LaunchPad_C::TransientLaunch' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, CharacterLastIndex) == 0x000814, "Member 'ABP_SI_LaunchPad_C::CharacterLastIndex' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, NewVar_0) == 0x000818, "Member 'ABP_SI_LaunchPad_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_SI_LaunchPad_C, HasBegun) == 0x000820, "Member 'ABP_SI_LaunchPad_C::HasBegun' has a wrong offset!");

}

