#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Interact_ExpSpring

#include "Basic.hpp"

#include "UI_Interact_ExpSpring_classes.hpp"
#include "UI_Interact_ExpSpring_parameters.hpp"


namespace SDK
{

// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.ExecuteUbergraph_UI_Interact_ExpSpring
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ExpSpring_C::ExecuteUbergraph_UI_Interact_ExpSpring(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "ExecuteUbergraph_UI_Interact_ExpSpring");

	Params::UI_Interact_ExpSpring_C_ExecuteUbergraph_UI_Interact_ExpSpring Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ExpSpring_C::BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_0_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ExpSpring_C::BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ExpSpring_C::BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.StopCountdownProgress
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InActionID                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ExpSpring_C::StopCountdownProgress(const int32 InActionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "StopCountdownProgress");

	Params::UI_Interact_ExpSpring_C_StopCountdownProgress Parms{};

	Parms.InActionID = InActionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.StartCountdownProgress
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FCountDownInfo&            InCountInfo                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Interact_ExpSpring_C::StartCountdownProgress(const struct FCountDownInfo& InCountInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "StartCountdownProgress");

	Params::UI_Interact_ExpSpring_C_StartCountdownProgress Parms{};

	Parms.InCountInfo = std::move(InCountInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.RefreshToPreInteracting
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ExpSpring_C::RefreshToPreInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "RefreshToPreInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.RefreshToCancellableInteracting
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ExpSpring_C::RefreshToCancellableInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "RefreshToCancellableInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.FadeOut
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ExpSpring_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.FadeIn
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ExpSpring_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ExpSpring_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "Tick");

	Params::UI_Interact_ExpSpring_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Interact_ExpSpring_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.GetPanelInteractProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarProgressiveInteractButton** ProgressButton                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ExpSpring_C::GetPanelInteractProgress(class USolarProgressiveInteractButton** ProgressButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "GetPanelInteractProgress");

	Params::UI_Interact_ExpSpring_C_GetPanelInteractProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressButton != nullptr)
		*ProgressButton = Parms.ProgressButton;
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.EnableActiveButtonByConfig
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_Interact_ExpSpring_C::EnableActiveButtonByConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "EnableActiveButtonByConfig");

	Params::UI_Interact_ExpSpring_C_EnableActiveButtonByConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Interact_ExpSpring.UI_Interact_ExpSpring_C.CanTriggerInteract
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_Interact_ExpSpring_C::CanTriggerInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ExpSpring_C", "CanTriggerInteract");

	Params::UI_Interact_ExpSpring_C_CanTriggerInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

