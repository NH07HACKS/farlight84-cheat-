#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Anim_Lobby_Character_Pose

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// DynamicClass Anim_Lobby_Character_Pose.Anim_Lobby_Character_Pose_C
// 0x0520 (0x07D0 - 0x02B0)
class UAnim_Lobby_Character_Pose_C : public UAnimInstance
{
public:
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02A8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x02D8(0x00D0)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03A8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03D0(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03F8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0480(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04B0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0538(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0568(0x00B0)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0618(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x06A0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x06D0(0x00B0)(NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      ApearAnim;                                         // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      IdleAnim;                                          // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLobby;                                           // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  OwnerPawn;                                         // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarLobbyCharacter*                   K2Node_DynamicCast_AsSolar_Lobby_Character;        // 0x07A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07A8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x07AC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarLobbyEntryCard*                   K2Node_DynamicCast_AsBP_Lobby_Entry_Card;          // 0x07B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x07B8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarLobbyEntryCard*                   K2Node_DynamicCast_AsBP_Lobby_Entry_Card_1;        // 0x07C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x07C8(0x0001)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void AnimNotify_OnApearAnimLeft();
	void AnimNotify_OnIdleAnimStart();
	void BlueprintUpdateAnimation(float bpp__DeltaTimeX__pf);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_Lobby_Character_Pose_AnimGraphNode_SequencePlayer_59A285604E57A4202E408399AF923472();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_Lobby_Character_Pose_AnimGraphNode_SequencePlayer_87C0765146616935205674AD23E81644();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_Lobby_Character_Pose_AnimGraphNode_SequencePlayer_FBACB989487ABF8D73A25CBE1BF4BD9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_Lobby_Character_Pose_AnimGraphNode_TransitionResult_038E876D4E8703099A7909AB0BD8D631();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_Lobby_Character_Pose_AnimGraphNode_TransitionResult_A3377DBA416BE80777A31BBCA3448B2F();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Anim_Lobby_Character_Pose_C">();
	}
	static class UAnim_Lobby_Character_Pose_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnim_Lobby_Character_Pose_C>();
	}
};
static_assert(alignof(UAnim_Lobby_Character_Pose_C) == 0x000010, "Wrong alignment on UAnim_Lobby_Character_Pose_C");
static_assert(sizeof(UAnim_Lobby_Character_Pose_C) == 0x0007D0, "Wrong size on UAnim_Lobby_Character_Pose_C");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_Root) == 0x0002A8, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_TwoWayBlend) == 0x0002D8, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_TransitionResult_1) == 0x0003A8, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_TransitionResult) == 0x0003D0, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_SequencePlayer_2) == 0x0003F8, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_StateResult_2) == 0x000480, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_SequencePlayer_1) == 0x0004B0, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_StateResult_1) == 0x000538, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_StateMachine_1) == 0x000568, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_SequencePlayer) == 0x000618, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_StateResult) == 0x0006A0, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, AnimGraphNode_StateMachine) == 0x0006D0, "Member 'UAnim_Lobby_Character_Pose_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, ApearAnim) == 0x000780, "Member 'UAnim_Lobby_Character_Pose_C::ApearAnim' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, IdleAnim) == 0x000788, "Member 'UAnim_Lobby_Character_Pose_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, IsLobby) == 0x000790, "Member 'UAnim_Lobby_Character_Pose_C::IsLobby' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, OwnerPawn) == 0x000798, "Member 'UAnim_Lobby_Character_Pose_C::OwnerPawn' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_AsSolar_Lobby_Character) == 0x0007A0, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_AsSolar_Lobby_Character' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_bSuccess) == 0x0007A8, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_Event_DeltaTimeX) == 0x0007AC, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_AsBP_Lobby_Entry_Card) == 0x0007B0, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_AsBP_Lobby_Entry_Card' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_bSuccess_1) == 0x0007B8, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_AsBP_Lobby_Entry_Card_1) == 0x0007C0, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_AsBP_Lobby_Entry_Card_1' has a wrong offset!");
static_assert(offsetof(UAnim_Lobby_Character_Pose_C, K2Node_DynamicCast_bSuccess_2) == 0x0007C8, "Member 'UAnim_Lobby_Character_Pose_C::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

