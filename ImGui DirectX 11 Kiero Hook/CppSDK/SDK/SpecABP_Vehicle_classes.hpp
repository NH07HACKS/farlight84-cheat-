#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecABP_Vehicle

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// DynamicClass SpecABP_Vehicle.SpecABP_Vehicle_C
// 0x4CB0 (0x50E0 - 0x0430)
class USpecABP_Vehicle_C final : public USolarSpecABP_Vehicle
{
public:
	uint8                                         Pad_430[0x8];                                      // 0x0430(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0438(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0468(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0490(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x04B8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x04E0(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0508(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0530(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0558(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0580(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x05A8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x05D0(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x05F0(0x01F0)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x07E0(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x0800(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0848(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0870(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0898(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x08C0(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x08E8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0910(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_18;                 // 0x0938(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0A30(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x0AA8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0B30(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x0B60(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_17;                 // 0x0BA8(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x0CA0(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_16;                 // 0x0CE8(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x0DE0(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x0E28(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0E70(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend_1;                     // 0x0EB8(0x0050)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_15;                 // 0x0F08(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_14;                 // 0x1000(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_13;                 // 0x10F8(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x11F0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x1220(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x12A8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_12;                 // 0x12D8(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x13D0(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x1418(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x1510(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x1608(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x1700(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x17F8(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1840(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1888(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x18D0(0x0048)(NativeAccessSpecifierPublic)
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend;                       // 0x1918(0x0050)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1968(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x1998(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1A90(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x1B08(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1C00(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1C30(0x00B0)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1CE0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x1D10(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1D98(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x1DC8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x1E50(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x1ED8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x1F60(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_5;          // 0x1FE8(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x2188(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x2328(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x24C8(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_13;                  // 0x2668(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x26F0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x2778(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_12;                  // 0x2918(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x29A0(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x2B40(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2BC8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x2BF8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x2C80(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x2D08(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x2D90(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_11;                  // 0x2E18(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x2EA0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x2F28(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_10;                  // 0x2FB0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_9;                   // 0x3038(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x30C0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x3148(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x31D0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_8;                   // 0x3258(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x32E0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_7;                   // 0x3368(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x33F0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x3478(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x3500(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x3588(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x3610(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x3708(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x3800(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_6;                   // 0x38F8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x3980(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x3A08(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x3A90(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x3B18(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x3BA0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x3C28(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x3CB0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x3D38(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3DC0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3E48(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3ED0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x3F58(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3FE0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x4010(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x4098(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x4120(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x4140(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x4160(0x0110)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x4270(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x42F8(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x4370(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x43F8(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x44F0(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x4510(0x0020)(NativeAccessSpecifierPublic)
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x4530(0x01F0)(NativeAccessSpecifierPublic)
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x4720(0x01F0)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x4910(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x4A08(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x4B00(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x4B88(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x4BE0(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x4C38(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x4CC0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x4D48(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x4DA0(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x4DF8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x4E80(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x4F08(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4F38(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x4F60(0x00B0)(NativeAccessSpecifierPublic)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x5010(0x0030)(NativeAccessSpecifierPublic)
	struct FVector                                MotorBikeDriverOffset;                             // 0x5040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X;                          // 0x504C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x5050(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x5054(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x5058(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x505C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x5060(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x5064(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x5068(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x506C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x5070(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x5074(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x5078(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x507C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x5080(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_7;                        // 0x5084(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_7;                        // 0x5088(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_8;                        // 0x508C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_8;                        // 0x5090(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_9;                        // 0x5094(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_9;                        // 0x5098(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_10;                       // 0x509C(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_10;                       // 0x50A0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_11;                       // 0x50A4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_11;                       // 0x50A8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_12;                       // 0x50AC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_12;                       // 0x50B0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_13;                       // 0x50B4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_13;                       // 0x50B8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_14;                       // 0x50BC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_14;                       // 0x50C0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_15;                       // 0x50C4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_15;                       // 0x50C8(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_X_16;                       // 0x50CC(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CallFunc_BreakVector2D_Y_16;                       // 0x50D0(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50D4[0xC];                                     // 0x50D4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void AnimNotify_EnterIronManBrakeState();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByBool_1883EB8A4F7D581A300CD98232E84D73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByBool_3F2622DB40EB4E393E7482B3D396E87E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByBool_5AC86A344A0A103389969CAE00B75B98();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_0A9A0A6D4FD35E96180CAD9777F65876();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_0C0D1DC74A85E3EA544598A0B00DCDDF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_571A583444F829CC670BAD95425B78C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_6ED2DE8A40BF6371727EBAA21F775201();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_803525AE49F66BA1BE0A858C938EB8CD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_8613B2DF4C5D25916CCE4F826C4489F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_A44CAF894D5C5E62938CD69D950BBAED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_B18E4C66488B1B888CBEC7B40C70FE95();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_DE68AE1549E1E9F8B545D3B31289231D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_DEA6A8A54C6770746FDD24B92C910704();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_E0A02960419F6121F45D1AA8CB63B48B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_E44DDCE942EF746B7D29328C1E136FE2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_EF3F614D44265BD4FB16AAB350D61377();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendListByEnum_F0F440C04F0A4132B39741BBB3EC2CFD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_1BF2799B495CA840C075E9A16D547713();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_2618A2234D2E868647C7EAA02D2792EE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_36649B2148A532C2E45046A32DC5599B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_56BFEF4B4C3E3EDD47B896A88EC316AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_58402FBC41C07F9EA92CEC9898DFEEFF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_643A40EA48DA47EE66905E8E0336E51A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_6D12CC854A8A4EC58EDED098500FA1B3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_7362EA5E4ABCB217F344359A557CA439();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_84685D214BA481F42FB2A58F202B7BDD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_AAB977C945C99954E681D58E1EE7204D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_AD7F7D7A43AB65D3BF022BADADCA471A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_B07BAB8E4C0DE2191B1E1383A947931D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_C2B780A3470FF33E90C343AABCB908EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_CC8CF8434B7DBAFE2DDF6A883713FC15();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_D4318FF84EF2D17633DDA9A2D2E5A533();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_E95C9CA54C44F724CB95EC8F11A87489();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_EDD0AF7B46D55462B24312B62E2EFC90();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_F1A7EFCF4D3CCDD4FD70C9B516658E37();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_BlendSpacePlayer_F1D53BE74B3582B719235D97CEB01024();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_ModifyBone_8D47F0534DB2AD98BC7DA39AC1255B1F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_MultiWayBlend_20930588403BA211DB5840B65D62A86D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_MultiWayBlend_8F5D66904DCBA740F5ACBCACBE17DB04();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_1B661D9040003F4C7A9E1EA2929F5BD0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_68F8463149C6AB5FD10161B50DAC43D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_954ACDF547A5FD23C4716D9612E86F46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_ACCB41014C7BA03EC73E9C851E78CDB5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_C93BBD6F4E4E408950E3EEB0B2ABCF4D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_RotationOffsetBlendSpace_F201154C422F6DF3F8D671A1746AD81A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_SequenceEvaluator_11BCD0B5483922F670C11BACECBB4AF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_SequenceEvaluator_34A426DD4561007BA44B93B2C729336E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_SequenceEvaluator_5FCEC9C74B7AA7EDFB24A8B85C653678();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_SequenceEvaluator_D3E868134287EB51919A618F35FE7E1B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_0161E461448EF1E4D23F6A992B7B5C30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_0667AFD44BE2EA0A6774E0AA2FE2C72B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_0BA4BEC7408D64678BC4369B651D1E59();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_0F4023F341DE5B95FE773BA275825F6F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_35034AA7485F327C1889E7B9106CCDDF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_42092C794B43C321620EEFADCCA15C7C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_95F42B514D5E3E04946D2B94055EF956();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_9675DB2443FF99F00F649E98D13D6E91();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_96C9884440FCBAF8D8FA0C9C5C84E18A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_A41BFA1D439AF315717DA0BABC1C363D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_B2B3C4D04EBBACBF28F384A24DB94D26();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_B556C8FB44EB284ABDC197B21446D0FA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_D5D7698743D98473A591B398F0318DEB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_D677C00945E71C30C03881B3F3791B76();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TransitionResult_F4723ADD4AA947DC1294A99E4FC4A171();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TwoBoneIK_2F835BAA4D173726DBC2F3B96015EEEA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TwoBoneIK_72F9137D41CA9D7FA79887A6A79E7AF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Vehicle_AnimGraphNode_TwoBoneIK_F5F948B24895D518310532A77D67A56C();
	void VehicleLocamotion(struct FPoseLink* bpp__VehicleLocamotion__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecABP_Vehicle_C">();
	}
	static class USpecABP_Vehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecABP_Vehicle_C>();
	}
};
static_assert(alignof(USpecABP_Vehicle_C) == 0x000010, "Wrong alignment on USpecABP_Vehicle_C");
static_assert(sizeof(USpecABP_Vehicle_C) == 0x0050E0, "Wrong size on USpecABP_Vehicle_C");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Root_1) == 0x000438, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_15) == 0x000468, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_14) == 0x000490, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_13) == 0x0004B8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_12) == 0x0004E0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_11) == 0x000508, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_10) == 0x000530, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_9) == 0x000558, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_8) == 0x000580, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_7) == 0x0005A8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0005D0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TwoBoneIK_2) == 0x0005F0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0007E0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_10) == 0x000800, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_6) == 0x000848, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_5) == 0x000870, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_4) == 0x000898, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_3) == 0x0008C0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_2) == 0x0008E8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult_1) == 0x000910, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_18) == 0x000938, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_18' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByBool_2) == 0x000A30, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_37) == 0x000AA8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_9) == 0x000B30, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_9) == 0x000B60, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_17) == 0x000BA8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_17' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_8) == 0x000CA0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_16) == 0x000CE8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_16' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_7) == 0x000DE0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_6) == 0x000E28, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_5) == 0x000E70, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_MultiWayBlend_1) == 0x000EB8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_MultiWayBlend_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_15) == 0x000F08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_15' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_14) == 0x001000, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_14' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_13) == 0x0010F8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_8) == 0x0011F0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_36) == 0x001220, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_7) == 0x0012A8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_12) == 0x0012D8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_4) == 0x0013D0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_11) == 0x001418, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_10) == 0x001510, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_9) == 0x001608, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_8) == 0x001700, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_3) == 0x0017F8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_2) == 0x001840, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot_1) == 0x001888, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Slot) == 0x0018D0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_MultiWayBlend) == 0x001918, "Member 'USpecABP_Vehicle_C::AnimGraphNode_MultiWayBlend' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_6) == 0x001968, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_7) == 0x001998, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByBool_1) == 0x001A90, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_6) == 0x001B08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_5) == 0x001C00, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateMachine_1) == 0x001C30, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_4) == 0x001CE0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_35) == 0x001D10, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_3) == 0x001D98, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_34) == 0x001DC8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_33) == 0x001E50, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_32) == 0x001ED8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_31) == 0x001F60, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace_5) == 0x001FE8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x002188, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x002328, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x0024C8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_13) == 0x002668, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_30) == 0x0026F0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x002778, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_12) == 0x002918, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0029A0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_29) == 0x002B40, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_2) == 0x002BC8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_28) == 0x002BF8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_27) == 0x002C80, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_26) == 0x002D08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_25) == 0x002D90, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_11) == 0x002E18, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_24) == 0x002EA0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_23) == 0x002F28, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_10) == 0x002FB0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_9) == 0x003038, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_22) == 0x0030C0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_21) == 0x003148, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_20) == 0x0031D0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_8) == 0x003258, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_19) == 0x0032E0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_7) == 0x003368, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_18) == 0x0033F0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_17) == 0x003478, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_16) == 0x003500, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_15) == 0x003588, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_5) == 0x003610, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_4) == 0x003708, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_3) == 0x003800, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_6) == 0x0038F8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_14) == 0x003980, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_13) == 0x003A08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_12) == 0x003A90, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_5) == 0x003B18, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_11) == 0x003BA0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_10) == 0x003C28, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_9) == 0x003CB0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_4) == 0x003D38, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_8) == 0x003DC0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_7) == 0x003E48, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_6) == 0x003ED0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_3) == 0x003F58, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult_1) == 0x003FE0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_5) == 0x004010, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_4) == 0x004098, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x004120, "Member 'USpecABP_Vehicle_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_LocalToComponentSpace_1) == 0x004140, "Member 'USpecABP_Vehicle_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_ModifyBone) == 0x004160, "Member 'USpecABP_Vehicle_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_3) == 0x004270, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByBool) == 0x0042F8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_2) == 0x004370, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0043F8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_LocalToComponentSpace) == 0x0044F0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_ComponentToLocalSpace) == 0x004510, "Member 'USpecABP_Vehicle_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TwoBoneIK_1) == 0x004530, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TwoBoneIK) == 0x004720, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer_1) == 0x004910, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendSpacePlayer) == 0x004A08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer_1) == 0x004B00, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequenceEvaluator_3) == 0x004B88, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequenceEvaluator_2) == 0x004BE0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_2) == 0x004C38, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum_1) == 0x004CC0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequenceEvaluator_1) == 0x004D48, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequenceEvaluator) == 0x004DA0, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_BlendListByEnum) == 0x004DF8, "Member 'USpecABP_Vehicle_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_SequencePlayer) == 0x004E80, "Member 'USpecABP_Vehicle_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateResult) == 0x004F08, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_TransitionResult) == 0x004F38, "Member 'USpecABP_Vehicle_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_StateMachine) == 0x004F60, "Member 'USpecABP_Vehicle_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, AnimGraphNode_Root) == 0x005010, "Member 'USpecABP_Vehicle_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, MotorBikeDriverOffset) == 0x005040, "Member 'USpecABP_Vehicle_C::MotorBikeDriverOffset' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X) == 0x00504C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y) == 0x005050, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_1) == 0x005054, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_1) == 0x005058, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_2) == 0x00505C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_2) == 0x005060, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_3) == 0x005064, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_3) == 0x005068, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_4) == 0x00506C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_4) == 0x005070, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_5) == 0x005074, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_5) == 0x005078, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_6) == 0x00507C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_6) == 0x005080, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_7) == 0x005084, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_7) == 0x005088, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_8) == 0x00508C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_8) == 0x005090, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_9) == 0x005094, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_9) == 0x005098, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_10) == 0x00509C, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_10) == 0x0050A0, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_11) == 0x0050A4, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_11) == 0x0050A8, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_12) == 0x0050AC, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_12) == 0x0050B0, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_13) == 0x0050B4, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_13) == 0x0050B8, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_13' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_14) == 0x0050BC, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_14' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_14) == 0x0050C0, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_14' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_15) == 0x0050C4, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_15' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_15) == 0x0050C8, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_15' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_X_16) == 0x0050CC, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_X_16' has a wrong offset!");
static_assert(offsetof(USpecABP_Vehicle_C, CallFunc_BreakVector2D_Y_16) == 0x0050D0, "Member 'USpecABP_Vehicle_C::CallFunc_BreakVector2D_Y_16' has a wrong offset!");

}

