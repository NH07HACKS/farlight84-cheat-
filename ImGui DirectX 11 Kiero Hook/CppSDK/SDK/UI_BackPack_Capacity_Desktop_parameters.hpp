#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BackPack_Capacity_Desktop

#include "Basic.hpp"

#include "E_CapacityAnimationState_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.ExecuteUbergraph_UI_BackPack_Capacity_Desktop
// 0x0058 (0x0058 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFull;                                // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CapacityAnimationState                      CallFunc_GetCapcityWidgetState_State;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop) == 0x000008, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop) == 0x000058, "Wrong size on UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, EntryPoint) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, K2Node_Event_IsDesignTime) == 0x000030, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, K2Node_Event_bFull) == 0x000031, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::K2Node_Event_bFull' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000033, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000038, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000040, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_GetCapcityWidgetState_State) == 0x000049, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_GetCapcityWidgetState_State' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, K2Node_SwitchEnum_CmpSuccess) == 0x00004A, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'UI_BackPack_Capacity_Desktop_C_ExecuteUbergraph_UI_BackPack_Capacity_Desktop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.BP_SetCapacityState
// 0x0001 (0x0001 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState final
{
public:
	bool                                          bFull;                                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState) == 0x000001, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState) == 0x000001, "Wrong size on UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState, bFull) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_BP_SetCapacityState::bFull' has a wrong offset!");

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_PreConstruct");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_PreConstruct) == 0x000001, "Wrong size on UI_BackPack_Capacity_Desktop_C_PreConstruct");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.SetCapacityState
// 0x0009 (0x0009 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_SetCapacityState final
{
public:
	bool                                          IsNomal_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_SetCapacityState) == 0x000001, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_SetCapacityState");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_SetCapacityState) == 0x000009, "Wrong size on UI_BackPack_Capacity_Desktop_C_SetCapacityState");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, IsNomal_0) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::IsNomal_0' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_bool_Variable) == 0x000001, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_byte_Variable) == 0x000002, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_byte_Variable_1) == 0x000003, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_bool_Variable_1) == 0x000004, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_byte_Variable_2) == 0x000005, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, Temp_byte_Variable_3) == 0x000006, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, K2Node_Select_Default) == 0x000007, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetCapacityState, K2Node_Select_Default_1) == 0x000008, "Member 'UI_BackPack_Capacity_Desktop_C_SetCapacityState::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.SetSelfVis
// 0x0001 (0x0001 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_SetSelfVis final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_SetSelfVis) == 0x000001, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_SetSelfVis");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_SetSelfVis) == 0x000001, "Wrong size on UI_BackPack_Capacity_Desktop_C_SetSelfVis");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_SetSelfVis, bShow) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_SetSelfVis::bShow' has a wrong offset!");

// Function UI_BackPack_Capacity_Desktop.UI_BackPack_Capacity_Desktop_C.GetCapcityWidgetState
// 0x0004 (0x0004 - 0x0000)
struct UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState final
{
public:
	E_CapacityAnimationState                      State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState) == 0x000001, "Wrong alignment on UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState");
static_assert(sizeof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState) == 0x000004, "Wrong size on UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState, State) == 0x000000, "Member 'UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState::State' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000001, "Member 'UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000002, "Member 'UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState, CallFunc_IsVisible_ReturnValue) == 0x000003, "Member 'UI_BackPack_Capacity_Desktop_C_GetCapcityWidgetState::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

}

