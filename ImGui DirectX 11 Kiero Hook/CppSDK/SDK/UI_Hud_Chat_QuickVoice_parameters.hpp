#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Hud_Chat_QuickVoice

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.ExecuteUbergraph_UI_Hud_Chat_QuickVoice
// 0x0020 (0x0020 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice) == 0x000008, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice) == 0x000020, "Wrong size on UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, EntryPoint) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, Temp_byte_Variable) == 0x000004, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, Temp_bool_Variable) == 0x000005, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, Temp_bool_Variable_1) == 0x000006, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, K2Node_Event_bIsExpanded) == 0x000007, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, K2Node_Event_bIsSelected) == 0x000008, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, K2Node_Event_ListItemObject) == 0x000010, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, K2Node_Event_InLayoutType) == 0x000018, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice, K2Node_Select_Default) == 0x000019, "Member 'UI_Hud_Chat_QuickVoice_C_ExecuteUbergraph_UI_Hud_Chat_QuickVoice::K2Node_Select_Default' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.SetBgColorByContentType
// 0x0118 (0x0118 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType final
{
public:
	int32                                         ContentType;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractiveQuickChatContentType              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00F0(0x0028)()
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType) == 0x000008, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType) == 0x000118, "Wrong size on UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, ContentType) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::ContentType' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_byte_Variable) == 0x000004, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, CallFunc_Conv_IntToByte_ReturnValue) == 0x000005, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable) == 0x000008, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_1) == 0x00001C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_2) == 0x00002C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_3) == 0x00003C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_4) == 0x00004C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_5) == 0x00005C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_6) == 0x00006C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_7) == 0x00007C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_8) == 0x00008C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_9) == 0x00009C, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_10) == 0x0000AC, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_11) == 0x0000BC, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, Temp_struct_Variable_12) == 0x0000CC, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, K2Node_Select_Default) == 0x0000DC, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType, K2Node_MakeStruct_SlateColor) == 0x0000F0, "Member 'UI_Hud_Chat_QuickVoice_C_SetBgColorByContentType::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.SetMessageIconColorbyPosinTeam
// 0x0008 (0x0008 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam final
{
public:
	int32                                         PosInTeam;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam) == 0x000004, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam) == 0x000008, "Wrong size on UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam, PosInTeam) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam::PosInTeam' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'UI_Hud_Chat_QuickVoice_C_SetMessageIconColorbyPosinTeam::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.OnListItemObjectSetCopy
// 0x0008 (0x0008 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy) == 0x000008, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy) == 0x000008, "Wrong size on UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy, ListItemObject) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_OnListItemObjectSetCopy::ListItemObject' has a wrong offset!");

// Function UI_Hud_Chat_QuickVoice.UI_Hud_Chat_QuickVoice_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Hud_Chat_QuickVoice_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_QuickVoice_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Hud_Chat_QuickVoice_C_GetModuleName");
static_assert(sizeof(UI_Hud_Chat_QuickVoice_C_GetModuleName) == 0x000010, "Wrong size on UI_Hud_Chat_QuickVoice_C_GetModuleName");
static_assert(offsetof(UI_Hud_Chat_QuickVoice_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Hud_Chat_QuickVoice_C_GetModuleName::ReturnValue' has a wrong offset!");

}

