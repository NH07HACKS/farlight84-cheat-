#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialLevel_AirWall

#include "Basic.hpp"

#include "BP_TutorialLevel_AirWall_classes.hpp"
#include "BP_TutorialLevel_AirWall_parameters.hpp"


namespace SDK
{

// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.AppearWallTimeline__FinishedFunc
// (Native, Public)

void ABP_TutorialLevel_AirWall_C::AppearWallTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "AppearWallTimeline__FinishedFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.AppearWallTimeline__UpdateFunc
// (Native, Public)

void ABP_TutorialLevel_AirWall_C::AppearWallTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "AppearWallTimeline__UpdateFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.Disable Airwall
// (Native, Public, BlueprintCallable)

void ABP_TutorialLevel_AirWall_C::Disable_Airwall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "Disable Airwall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.DisappearWallTimeline__FinishedFunc
// (Native, Public)

void ABP_TutorialLevel_AirWall_C::DisappearWallTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "DisappearWallTimeline__FinishedFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.DisappearWallTimeline__UpdateFunc
// (Native, Public)

void ABP_TutorialLevel_AirWall_C::DisappearWallTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "DisappearWallTimeline__UpdateFunc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.Enable Airwall
// (Native, Public, BlueprintCallable)

void ABP_TutorialLevel_AirWall_C::Enable_Airwall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "Enable Airwall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.OnStepActionBegan
// (Native, Public, BlueprintCallable)
// Parameters:
// const int32                             bpp__ActionID__pf__const                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_TutorialLevel_AirWall_C::OnStepActionBegan(const int32 bpp__ActionID__pf__const)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "OnStepActionBegan");

	Params::BP_TutorialLevel_AirWall_C_OnStepActionBegan Parms{};

	Parms.bpp__ActionID__pf__const = bpp__ActionID__pf__const;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.OnStepActionEnded
// (Native, Public, BlueprintCallable)
// Parameters:
// const int32                             bpp__ActionID__pf__const                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_TutorialLevel_AirWall_C::OnStepActionEnded(const int32 bpp__ActionID__pf__const)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "OnStepActionEnded");

	Params::BP_TutorialLevel_AirWall_C_OnStepActionEnded Parms{};

	Parms.bpp__ActionID__pf__const = bpp__ActionID__pf__const;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.OnStepActionReset
// (Native, Public, BlueprintCallable)
// Parameters:
// const int32                             bpp__ActionID__pf__const                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABP_TutorialLevel_AirWall_C::OnStepActionReset(const int32 bpp__ActionID__pf__const)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "OnStepActionReset");

	Params::BP_TutorialLevel_AirWall_C_OnStepActionReset Parms{};

	Parms.bpp__ActionID__pf__const = bpp__ActionID__pf__const;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.ReceiveBeginPlay
// (Native, Event, Public)

void ABP_TutorialLevel_AirWall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.RegisterEvent
// (Native, Event, Public)

void ABP_TutorialLevel_AirWall_C::RegisterEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "RegisterEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.Register Event Internal
// (Native, Public, BlueprintCallable)

void ABP_TutorialLevel_AirWall_C::Register_Event_Internal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "Register Event Internal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.UnregisterEvent
// (Native, Event, Public)

void ABP_TutorialLevel_AirWall_C::UnregisterEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "UnregisterEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BP_TutorialLevel_AirWall.BP_TutorialLevel_AirWall_C.UnregisterEventInternal
// (Native, Public, BlueprintCallable)

void ABP_TutorialLevel_AirWall_C::UnregisterEventInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialLevel_AirWall_C", "UnregisterEventInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

