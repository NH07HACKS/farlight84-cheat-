#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AirlineCruise

#include "Basic.hpp"

#include "BPC_AirlineCruise_classes.hpp"
#include "BPC_AirlineCruise_parameters.hpp"


namespace SDK
{

// Function BPC_AirlineCruise.BPC_AirlineCruise_C.GetPlayerLandLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class ASolarPlayerState*&         TargetPlayer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Succeed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_AirlineCruise_C::GetPlayerLandLocation(const class ASolarPlayerState*& TargetPlayer, struct FVector* Location, bool* Succeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "GetPlayerLandLocation");

	Params::BPC_AirlineCruise_C_GetPlayerLandLocation Parms{};

	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Succeed != nullptr)
		*Succeed = Parms.Succeed;
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.GetPlayerEjectLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class ASolarPlayerState*&         TargetPlayer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Succeed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_AirlineCruise_C::GetPlayerEjectLocation(const class ASolarPlayerState*& TargetPlayer, struct FVector* Location, bool* Succeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "GetPlayerEjectLocation");

	Params::BPC_AirlineCruise_C_GetPlayerEjectLocation Parms{};

	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Succeed != nullptr)
		*Succeed = Parms.Succeed;
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.GetAirlineData_RealWorld
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FAirlineData&              AirlineData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FVector2D*                       LineStart                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineEnd                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       JumpStart                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       JumpEnd                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  hight                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AirlineCruise_C::GetAirlineData_RealWorld(const struct FAirlineData& AirlineData, struct FVector2D* LineStart, struct FVector2D* LineEnd, struct FVector2D* JumpStart, struct FVector2D* JumpEnd, float* Speed, float* hight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "GetAirlineData_RealWorld");

	Params::BPC_AirlineCruise_C_GetAirlineData_RealWorld Parms{};

	Parms.AirlineData = std::move(AirlineData);

	UObject::ProcessEvent(Func, &Parms);

	if (LineStart != nullptr)
		*LineStart = std::move(Parms.LineStart);

	if (LineEnd != nullptr)
		*LineEnd = std::move(Parms.LineEnd);

	if (JumpStart != nullptr)
		*JumpStart = std::move(Parms.JumpStart);

	if (JumpEnd != nullptr)
		*JumpEnd = std::move(Parms.JumpEnd);

	if (Speed != nullptr)
		*Speed = Parms.Speed;

	if (hight != nullptr)
		*hight = Parms.hight;
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.MiniMap2RealWorld
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector2D&                 JumpStart                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 JumpEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 LineStart                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 LineEnd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       JumpStartR                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       JumpEndR                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineStartR                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       LineEndR                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AirlineCruise_C::MiniMap2RealWorld(const struct FVector2D& JumpStart, const struct FVector2D& JumpEnd, const struct FVector2D& LineStart, const struct FVector2D& LineEnd, struct FVector2D* JumpStartR, struct FVector2D* JumpEndR, struct FVector2D* LineStartR, struct FVector2D* LineEndR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "MiniMap2RealWorld");

	Params::BPC_AirlineCruise_C_MiniMap2RealWorld Parms{};

	Parms.JumpStart = std::move(JumpStart);
	Parms.JumpEnd = std::move(JumpEnd);
	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);

	UObject::ProcessEvent(Func, &Parms);

	if (JumpStartR != nullptr)
		*JumpStartR = std::move(Parms.JumpStartR);

	if (JumpEndR != nullptr)
		*JumpEndR = std::move(Parms.JumpEndR);

	if (LineStartR != nullptr)
		*LineStartR = std::move(Parms.LineStartR);

	if (LineEndR != nullptr)
		*LineEndR = std::move(Parms.LineEndR);
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.OnPlayerEjectingStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterEjectState                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASolarCharacter*                  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AirlineCruise_C::OnPlayerEjectingStateChanged(ECharacterEjectState State, class ASolarCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "OnPlayerEjectingStateChanged");

	Params::BPC_AirlineCruise_C_OnPlayerEjectingStateChanged Parms{};

	Parms.State = State;
	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.SetSpecificAirlineData
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAirlineData&              AirlineData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBPC_AirlineCruise_C::SetSpecificAirlineData(const struct FAirlineData& AirlineData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "SetSpecificAirlineData");

	Params::BPC_AirlineCruise_C_SetSpecificAirlineData Parms{};

	Parms.AirlineData = std::move(AirlineData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.ReceiveOnBoarding
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<class ASolarCharacter*>&   Characters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBPC_AirlineCruise_C::ReceiveOnBoarding(const TArray<class ASolarCharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "ReceiveOnBoarding");

	Params::BPC_AirlineCruise_C_ReceiveOnBoarding Parms{};

	Parms.Characters = std::move(Characters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.ExecuteUbergraph_BPC_AirlineCruise
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AirlineCruise_C::ExecuteUbergraph_BPC_AirlineCruise(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "ExecuteUbergraph_BPC_AirlineCruise");

	Params::BPC_AirlineCruise_C_ExecuteUbergraph_BPC_AirlineCruise Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AirlineCruise.BPC_AirlineCruise_C.GetPlayerForceJumped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class ASolarPlayerState*&         TargetPlayer                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBPC_AirlineCruise_C::GetPlayerForceJumped(const class ASolarPlayerState*& TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AirlineCruise_C", "GetPlayerForceJumped");

	Params::BPC_AirlineCruise_C_GetPlayerForceJumped Parms{};

	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

