#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SingleExp

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_SingleExp.UI_SingleExp_C.ExecuteUbergraph_UI_SingleExp
// 0x000C (0x000C - 0x0000)
struct UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp) == 0x000004, "Wrong alignment on UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp");
static_assert(sizeof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp) == 0x00000C, "Wrong size on UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, EntryPoint) == 0x000000, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, Temp_byte_Variable) == 0x000004, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, Temp_bool_Variable) == 0x000005, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, Temp_bool_Variable_1) == 0x000006, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, K2Node_Event_InLayoutType) == 0x000007, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp, K2Node_Select_Default) == 0x000008, "Member 'UI_SingleExp_C_ExecuteUbergraph_UI_SingleExp::K2Node_Select_Default' has a wrong offset!");

// Function UI_SingleExp.UI_SingleExp_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_SingleExp_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SingleExp_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_SingleExp_C_ReceivePlatformLayout");
static_assert(sizeof(UI_SingleExp_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_SingleExp_C_ReceivePlatformLayout");
static_assert(offsetof(UI_SingleExp_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_SingleExp_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

}

