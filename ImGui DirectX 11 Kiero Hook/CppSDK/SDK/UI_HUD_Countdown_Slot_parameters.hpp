#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Countdown_Slot

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Countdown_Slot.UI_HUD_Countdown_Slot_C.ExecuteUbergraph_UI_HUD_Countdown_Slot
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot) == 0x000004, "Wrong alignment on UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot");
static_assert(sizeof(UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot) == 0x000008, "Wrong size on UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot");
static_assert(offsetof(UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot, EntryPoint) == 0x000000, "Member 'UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot, K2Node_Event_InLayoutType) == 0x000004, "Member 'UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'UI_HUD_Countdown_Slot_C_ExecuteUbergraph_UI_HUD_Countdown_Slot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_HUD_Countdown_Slot.UI_HUD_Countdown_Slot_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Countdown_Slot_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Countdown_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Countdown_Slot_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Countdown_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Countdown_Slot_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Countdown_Slot_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Countdown_Slot_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

}

