#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SI_LaunchPad

#include "Basic.hpp"

#include "BP_SI_LaunchPad_classes.hpp"
#include "BP_SI_LaunchPad_parameters.hpp"


namespace SDK
{

// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.ExecuteUbergraph_BP_SI_LaunchPad
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::ExecuteUbergraph_BP_SI_LaunchPad(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "ExecuteUbergraph_BP_SI_LaunchPad");

	Params::BP_SI_LaunchPad_C_ExecuteUbergraph_BP_SI_LaunchPad Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ABP_SI_LaunchPad_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.OnCharacterLaunched
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASolarCharacter*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::OnCharacterLaunched(class ASolarCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "OnCharacterLaunched");

	Params::BP_SI_LaunchPad_C_OnCharacterLaunched Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Set_State
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCD                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CD_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::Set_State(bool InCD, float CD_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Set_State");

	Params::BP_SI_LaunchPad_C_Set_State Parms{};

	Parms.InCD = InCD;
	Parms.CD_0 = CD_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Set_CD
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CD_0                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::Set_CD(float CD_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Set_CD");

	Params::BP_SI_LaunchPad_C_Set_CD Parms{};

	Parms.CD_0 = CD_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.LaunchEffect
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SI_LaunchPad_C::LaunchEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "LaunchEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.ClientFinishLaunch
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_SI_LaunchPad_C::ClientFinishLaunch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "ClientFinishLaunch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_SI_LaunchPad_C_BndEvt__Box_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SI_LaunchPad_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_SI_LaunchPad_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.BreakLoop
// (BlueprintCallable, BlueprintEvent)

void ABP_SI_LaunchPad_C::BreakLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "BreakLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "ReceiveTick");

	Params::BP_SI_LaunchPad_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SI_LaunchPad_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_SI_LaunchPad_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_SI_LaunchPad_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Show in CD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCD                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SI_LaunchPad_C::Show_in_CD(bool InCD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Show in CD");

	Params::BP_SI_LaunchPad_C_Show_in_CD Parms{};

	Parms.InCD = InCD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.UpdateProgress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::UpdateProgress(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "UpdateProgress");

	Params::BP_SI_LaunchPad_C_UpdateProgress Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.ServerCheckLaunch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Launch_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SI_LaunchPad_C::ServerCheckLaunch(bool* Launch_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "ServerCheckLaunch");

	Params::BP_SI_LaunchPad_C_ServerCheckLaunch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Launch_0 != nullptr)
		*Launch_0 = Parms.Launch_0;
}


// Function BP_SI_LaunchPad.BP_SI_LaunchPad_C.Launch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class ASolarCharacter*>&   Characters_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_SI_LaunchPad_C::Launch(const TArray<class ASolarCharacter*>& Characters_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SI_LaunchPad_C", "Launch");

	Params::BP_SI_LaunchPad_C_Launch Parms{};

	Parms.Characters_0 = std::move(Characters_0);

	UObject::ProcessEvent(Func, &Parms);
}

}

