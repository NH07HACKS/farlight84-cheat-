#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SDM_BattlePrepareCountDown

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_SDM_BattlePrepareCountDown.UI_SDM_BattlePrepareCountDown_C.ExecuteUbergraph_UI_SDM_BattlePrepareCountDown
// 0x0008 (0x0008 - 0x0000)
struct UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown) == 0x000004, "Wrong alignment on UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown");
static_assert(sizeof(UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown) == 0x000008, "Wrong size on UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown, EntryPoint) == 0x000000, "Member 'UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_SDM_BattlePrepareCountDown_C_ExecuteUbergraph_UI_SDM_BattlePrepareCountDown::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_SDM_BattlePrepareCountDown.UI_SDM_BattlePrepareCountDown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_SDM_BattlePrepareCountDown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SDM_BattlePrepareCountDown_C_PreConstruct) == 0x000001, "Wrong alignment on UI_SDM_BattlePrepareCountDown_C_PreConstruct");
static_assert(sizeof(UI_SDM_BattlePrepareCountDown_C_PreConstruct) == 0x000001, "Wrong size on UI_SDM_BattlePrepareCountDown_C_PreConstruct");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_SDM_BattlePrepareCountDown_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_SDM_BattlePrepareCountDown.UI_SDM_BattlePrepareCountDown_C.NewFunction_0
// 0x0018 (0x0018 - 0x0000)
struct UI_SDM_BattlePrepareCountDown_C_NewFunction_0 final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarGameState*                        K2Node_DynamicCast_AsSolar_Game_State;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_SDM_BattlePrepareCountDown_C_NewFunction_0) == 0x000008, "Wrong alignment on UI_SDM_BattlePrepareCountDown_C_NewFunction_0");
static_assert(sizeof(UI_SDM_BattlePrepareCountDown_C_NewFunction_0) == 0x000018, "Wrong size on UI_SDM_BattlePrepareCountDown_C_NewFunction_0");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_NewFunction_0, Object) == 0x000000, "Member 'UI_SDM_BattlePrepareCountDown_C_NewFunction_0::Object' has a wrong offset!");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_NewFunction_0, K2Node_DynamicCast_AsSolar_Game_State) == 0x000008, "Member 'UI_SDM_BattlePrepareCountDown_C_NewFunction_0::K2Node_DynamicCast_AsSolar_Game_State' has a wrong offset!");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_NewFunction_0, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UI_SDM_BattlePrepareCountDown_C_NewFunction_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_SDM_BattlePrepareCountDown.UI_SDM_BattlePrepareCountDown_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation");
static_assert(sizeof(UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_SDM_BattlePrepareCountDown_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_SDM_BattlePrepareCountDown.UI_SDM_BattlePrepareCountDown_C.GetCDAnim
// 0x0008 (0x0008 - 0x0000)
struct UI_SDM_BattlePrepareCountDown_C_GetCDAnim final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SDM_BattlePrepareCountDown_C_GetCDAnim) == 0x000008, "Wrong alignment on UI_SDM_BattlePrepareCountDown_C_GetCDAnim");
static_assert(sizeof(UI_SDM_BattlePrepareCountDown_C_GetCDAnim) == 0x000008, "Wrong size on UI_SDM_BattlePrepareCountDown_C_GetCDAnim");
static_assert(offsetof(UI_SDM_BattlePrepareCountDown_C_GetCDAnim, ReturnValue) == 0x000000, "Member 'UI_SDM_BattlePrepareCountDown_C_GetCDAnim::ReturnValue' has a wrong offset!");

}

