#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DamageText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_DamageText.UI_DamageText_C.ExecuteUbergraph_UI_DamageText
// 0x0030 (0x0030 - 0x0000)
struct UI_DamageText_C_ExecuteUbergraph_UI_DamageText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText) == 0x000008, "Wrong alignment on UI_DamageText_C_ExecuteUbergraph_UI_DamageText");
static_assert(sizeof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText) == 0x000030, "Wrong size on UI_DamageText_C_ExecuteUbergraph_UI_DamageText");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, EntryPoint) == 0x000000, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, K2Node_MakeStruct_Margin) == 0x000004, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, K2Node_Event_InLayoutType) == 0x000014, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, K2Node_SwitchEnum_CmpSuccess) == 0x000015, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_ExecuteUbergraph_UI_DamageText, K2Node_MakeStruct_Margin_1) == 0x000020, "Member 'UI_DamageText_C_ExecuteUbergraph_UI_DamageText::K2Node_MakeStruct_Margin_1' has a wrong offset!");

// Function UI_DamageText.UI_DamageText_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_DamageText_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageText_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_DamageText_C_ReceivePlatformLayout");
static_assert(sizeof(UI_DamageText_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_DamageText_C_ReceivePlatformLayout");
static_assert(offsetof(UI_DamageText_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_DamageText_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_DamageText.UI_DamageText_C.SetShieldIconColor
// 0x0028 (0x0028 - 0x0000)
struct UI_DamageText_C_SetShieldIconColor final
{
public:
	struct FSlateColor                            InColor;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_DamageText_C_SetShieldIconColor) == 0x000008, "Wrong alignment on UI_DamageText_C_SetShieldIconColor");
static_assert(sizeof(UI_DamageText_C_SetShieldIconColor) == 0x000028, "Wrong size on UI_DamageText_C_SetShieldIconColor");
static_assert(offsetof(UI_DamageText_C_SetShieldIconColor, InColor) == 0x000000, "Member 'UI_DamageText_C_SetShieldIconColor::InColor' has a wrong offset!");

// Function UI_DamageText.UI_DamageText_C.GetDamageText
// 0x0030 (0x0030 - 0x0000)
struct UI_DamageText_C_GetDamageText final
{
public:
	class FText                                   OutText;                                           // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
};
static_assert(alignof(UI_DamageText_C_GetDamageText) == 0x000008, "Wrong alignment on UI_DamageText_C_GetDamageText");
static_assert(sizeof(UI_DamageText_C_GetDamageText) == 0x000030, "Wrong size on UI_DamageText_C_GetDamageText");
static_assert(offsetof(UI_DamageText_C_GetDamageText, OutText) == 0x000000, "Member 'UI_DamageText_C_GetDamageText::OutText' has a wrong offset!");
static_assert(offsetof(UI_DamageText_C_GetDamageText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'UI_DamageText_C_GetDamageText::CallFunc_GetText_ReturnValue' has a wrong offset!");

}

