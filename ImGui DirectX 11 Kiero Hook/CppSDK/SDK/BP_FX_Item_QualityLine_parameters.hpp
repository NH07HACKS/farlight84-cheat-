#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_Item_QualityLine

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FX_Item_QualityLine.BP_FX_Item_QualityLine_C.ExecuteUbergraph_BP_FX_Item_QualityLine
// 0x0004 (0x0004 - 0x0000)
struct BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine) == 0x000004, "Wrong alignment on BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine");
static_assert(sizeof(BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine) == 0x000004, "Wrong size on BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine");
static_assert(offsetof(BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine, EntryPoint) == 0x000000, "Member 'BP_FX_Item_QualityLine_C_ExecuteUbergraph_BP_FX_Item_QualityLine::EntryPoint' has a wrong offset!");

// Function BP_FX_Item_QualityLine.BP_FX_Item_QualityLine_C.SetLineQuality
// 0x0150 (0x0150 - 0x0000)
struct BP_FX_Item_QualityLine_C_SetLineQuality final
{
public:
	EItemQualityType                              Quality;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              Temp_byte_Variable_2;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_Item_QualityLine_C_SetLineQuality) == 0x000004, "Wrong alignment on BP_FX_Item_QualityLine_C_SetLineQuality");
static_assert(sizeof(BP_FX_Item_QualityLine_C_SetLineQuality) == 0x000150, "Wrong size on BP_FX_Item_QualityLine_C_SetLineQuality");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Quality) == 0x000000, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Quality' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_byte_Variable) == 0x000001, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable) == 0x000004, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_1) == 0x000008, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_2) == 0x00000C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_3) == 0x000010, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_4) == 0x000014, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_5) == 0x000018, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_6) == 0x00001C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_float_Variable_7) == 0x000020, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_byte_Variable_1) == 0x000024, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, K2Node_Select_Default) == 0x000028, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable) == 0x00002C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_1) == 0x00003C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_2) == 0x00004C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_3) == 0x00005C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_4) == 0x00006C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_5) == 0x00007C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_6) == 0x00008C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_7) == 0x00009C, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_byte_Variable_2) == 0x0000AC, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, K2Node_Select_Default_1) == 0x0000B0, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_8) == 0x0000C0, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_9) == 0x0000D0, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_10) == 0x0000E0, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_11) == 0x0000F0, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_12) == 0x000100, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_13) == 0x000110, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_14) == 0x000120, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, Temp_struct_Variable_15) == 0x000130, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_FX_Item_QualityLine_C_SetLineQuality, K2Node_Select_Default_2) == 0x000140, "Member 'BP_FX_Item_QualityLine_C_SetLineQuality::K2Node_Select_Default_2' has a wrong offset!");

}

