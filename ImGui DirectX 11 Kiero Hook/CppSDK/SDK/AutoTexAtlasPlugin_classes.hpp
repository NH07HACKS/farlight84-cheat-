#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoTexAtlasPlugin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AutoTexAtlasPlugin.AutoPluginFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UAutoPluginFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FSlateBrush CopyBrushWithSlateTexture(class UAutoSlateTexture* Texture, const struct FSlateBrush& SourceBrush);
	static void DrawSlateTexture(class AHUD* Target, class UAutoSlateTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, const struct FLinearColor& Tint, EBlendMode BlendMode, float Scale, bool bScalePosition, float Rotation, const struct FVector2D& RotPivot, bool bFlipX, bool bFlipY);
	static void DrawSlateTexture9Slice(class AHUD* Target, class UAutoSlateTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, float MarginLeft, float MarginTop, float MarginRight, float MarginBottom, float OriginalWidth, float OriginalHeight, const struct FLinearColor& Tint, EBlendMode BlendMode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoPluginFunctionLibrary">();
	}
	static class UAutoPluginFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoPluginFunctionLibrary>();
	}
};
static_assert(alignof(UAutoPluginFunctionLibrary) == 0x000008, "Wrong alignment on UAutoPluginFunctionLibrary");
static_assert(sizeof(UAutoPluginFunctionLibrary) == 0x000028, "Wrong size on UAutoPluginFunctionLibrary");

// Class AutoTexAtlasPlugin.AutoSlateTexture
// 0x0020 (0x0048 - 0x0028)
class UAutoSlateTexture final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               AtlasTexture;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              StartUV;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              SizeUV;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	class UAutoSlateTexture* CreateRegion(const struct FMargin& Margin);

	struct FVector2D GetDimensions() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AutoSlateTexture">();
	}
	static class UAutoSlateTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAutoSlateTexture>();
	}
};
static_assert(alignof(UAutoSlateTexture) == 0x000008, "Wrong alignment on UAutoSlateTexture");
static_assert(sizeof(UAutoSlateTexture) == 0x000048, "Wrong size on UAutoSlateTexture");
static_assert(offsetof(UAutoSlateTexture, AtlasTexture) == 0x000030, "Member 'UAutoSlateTexture::AtlasTexture' has a wrong offset!");
static_assert(offsetof(UAutoSlateTexture, StartUV) == 0x000038, "Member 'UAutoSlateTexture::StartUV' has a wrong offset!");
static_assert(offsetof(UAutoSlateTexture, SizeUV) == 0x000040, "Member 'UAutoSlateTexture::SizeUV' has a wrong offset!");

}

