#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_Simple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Crosshair_Simple.Crosshair_Simple_C
// 0x0038 (0x0760 - 0x0728)
class UCrosshair_Simple_C final : public UCrossHairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Simple_Anim;                                       // 0x0730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_coredot;                                 // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_downarrow;                               // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_leftarrow;                               // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_rightarrow;                              // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_uparrow;                                 // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Crosshair_Simple(int32 EntryPoint);
	void SetCrosshairSprite(class UPaperSprite* InCenterSprite, class UPaperSprite* InSprite);
	void InitializeCrosshairSpread(float Spread);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Crosshair_Simple_C">();
	}
	static class UCrosshair_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrosshair_Simple_C>();
	}
};
static_assert(alignof(UCrosshair_Simple_C) == 0x000008, "Wrong alignment on UCrosshair_Simple_C");
static_assert(sizeof(UCrosshair_Simple_C) == 0x000760, "Wrong size on UCrosshair_Simple_C");
static_assert(offsetof(UCrosshair_Simple_C, UberGraphFrame) == 0x000728, "Member 'UCrosshair_Simple_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, Simple_Anim) == 0x000730, "Member 'UCrosshair_Simple_C::Simple_Anim' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, SpreadImg_coredot) == 0x000738, "Member 'UCrosshair_Simple_C::SpreadImg_coredot' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, SpreadImg_downarrow) == 0x000740, "Member 'UCrosshair_Simple_C::SpreadImg_downarrow' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, SpreadImg_leftarrow) == 0x000748, "Member 'UCrosshair_Simple_C::SpreadImg_leftarrow' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, SpreadImg_rightarrow) == 0x000750, "Member 'UCrosshair_Simple_C::SpreadImg_rightarrow' has a wrong offset!");
static_assert(offsetof(UCrosshair_Simple_C, SpreadImg_uparrow) == 0x000758, "Member 'UCrosshair_Simple_C::SpreadImg_uparrow' has a wrong offset!");

}

