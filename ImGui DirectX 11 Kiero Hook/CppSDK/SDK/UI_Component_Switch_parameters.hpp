#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Switch

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Switch.UI_Component_Switch_C.GetValue
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Switch_C_GetValue final
{
public:
	bool                                          bOutSwitchOn;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Switch_C_GetValue) == 0x000001, "Wrong alignment on UI_Component_Switch_C_GetValue");
static_assert(sizeof(UI_Component_Switch_C_GetValue) == 0x000001, "Wrong size on UI_Component_Switch_C_GetValue");
static_assert(offsetof(UI_Component_Switch_C_GetValue, bOutSwitchOn) == 0x000000, "Member 'UI_Component_Switch_C_GetValue::bOutSwitchOn' has a wrong offset!");

// Function UI_Component_Switch.UI_Component_Switch_C.SetType
// 0x0168 (0x0168 - 0x0000)
struct UI_Component_Switch_C_SetType final
{
public:
	bool                                          IsCircleType_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_4;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0110(0x0010)(NoDestructor)
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_6;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0138(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_10;                          // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Switch_C_SetType) == 0x000008, "Wrong alignment on UI_Component_Switch_C_SetType");
static_assert(sizeof(UI_Component_Switch_C_SetType) == 0x000168, "Wrong size on UI_Component_Switch_C_SetType");
static_assert(offsetof(UI_Component_Switch_C_SetType, IsCircleType_0) == 0x000000, "Member 'UI_Component_Switch_C_SetType::IsCircleType_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable) == 0x000008, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_1) == 0x000010, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_2) == 0x000018, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_2) == 0x00001C, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_3) == 0x000024, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_3) == 0x00002C, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_4) == 0x000030, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_5) == 0x000038, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_4) == 0x000040, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_6) == 0x000044, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_7) == 0x00004C, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_5) == 0x000054, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_object_Variable) == 0x000058, "Member 'UI_Component_Switch_C_SetType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_object_Variable_1) == 0x000060, "Member 'UI_Component_Switch_C_SetType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_6) == 0x000068, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_8) == 0x00006C, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_struct_Variable_9) == 0x00007C, "Member 'UI_Component_Switch_C_SetType::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_7) == 0x00008C, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Margin) == 0x000090, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Margin_1) == 0x0000A0, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_8) == 0x0000B0, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Margin_2) == 0x0000B4, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Margin_3) == 0x0000C4, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_9) == 0x0000D4, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable_2) == 0x0000D5, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable_3) == 0x0000D6, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_bool_Variable_10) == 0x0000D7, "Member 'UI_Component_Switch_C_SetType::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable_4) == 0x0000D8, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, Temp_byte_Variable_5) == 0x0000D9, "Member 'UI_Component_Switch_C_SetType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default) == 0x0000E0, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_1) == 0x0000E8, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_2) == 0x0000F0, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_3) == 0x0000F8, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_4) == 0x000100, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Anchors) == 0x000110, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_5) == 0x000120, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_6) == 0x000128, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_MakeStruct_Anchors_1) == 0x000138, "Member 'UI_Component_Switch_C_SetType::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000148, "Member 'UI_Component_Switch_C_SetType::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_7) == 0x000150, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_8) == 0x000151, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_9) == 0x000152, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetType, K2Node_Select_Default_10) == 0x000154, "Member 'UI_Component_Switch_C_SetType::K2Node_Select_Default_10' has a wrong offset!");

// Function UI_Component_Switch.UI_Component_Switch_C.InitValue
// 0x0110 (0x0110 - 0x0000)
struct UI_Component_Switch_C_InitValue final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAnimation_0;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0068(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0090(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_2;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue_1;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E8(0x0028)()
};
static_assert(alignof(UI_Component_Switch_C_InitValue) == 0x000008, "Wrong alignment on UI_Component_Switch_C_InitValue");
static_assert(sizeof(UI_Component_Switch_C_InitValue) == 0x000110, "Wrong size on UI_Component_Switch_C_InitValue");
static_assert(offsetof(UI_Component_Switch_C_InitValue, InValue) == 0x000000, "Member 'UI_Component_Switch_C_InitValue::InValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, PlayAnimation_0) == 0x000001, "Member 'UI_Component_Switch_C_InitValue::PlayAnimation_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable) == 0x000002, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable) == 0x000004, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_1) == 0x000008, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable_1) == 0x00000C, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default) == 0x000010, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_2) == 0x000014, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_3) == 0x000018, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable_2) == 0x00001C, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_4) == 0x000020, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_5) == 0x000024, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable_3) == 0x000028, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_6) == 0x00002C, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default_1) == 0x000030, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_float_Variable_7) == 0x000034, "Member 'UI_Component_Switch_C_InitValue::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable_4) == 0x000038, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_int_Variable) == 0x00003C, "Member 'UI_Component_Switch_C_InitValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_int_Variable_1) == 0x000040, "Member 'UI_Component_Switch_C_InitValue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_bool_Variable_5) == 0x000044, "Member 'UI_Component_Switch_C_InitValue::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_struct_Variable) == 0x000048, "Member 'UI_Component_Switch_C_InitValue::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, Temp_struct_Variable_1) == 0x000058, "Member 'UI_Component_Switch_C_InitValue::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_MakeStruct_Anchors) == 0x000068, "Member 'UI_Component_Switch_C_InitValue::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'UI_Component_Switch_C_InitValue::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_MakeStruct_Margin) == 0x000080, "Member 'UI_Component_Switch_C_InitValue::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_MakeStruct_Anchors_1) == 0x000090, "Member 'UI_Component_Switch_C_InitValue::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000A0, "Member 'UI_Component_Switch_C_InitValue::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_MakeStruct_Margin_1) == 0x0000A8, "Member 'UI_Component_Switch_C_InitValue::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default_2) == 0x0000B8, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default_3) == 0x0000BC, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x0000C0, "Member 'UI_Component_Switch_C_InitValue::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, CallFunc_PlayAnimationTimeRange_ReturnValue_1) == 0x0000C8, "Member 'UI_Component_Switch_C_InitValue::CallFunc_PlayAnimationTimeRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default_4) == 0x0000D0, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_Select_Default_5) == 0x0000D4, "Member 'UI_Component_Switch_C_InitValue::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_InitValue, K2Node_MakeStruct_SlateColor) == 0x0000E8, "Member 'UI_Component_Switch_C_InitValue::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Component_Switch.UI_Component_Switch_C.SetValue
// 0x0028 (0x0028 - 0x0000)
struct UI_Component_Switch_C_SetValue final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallChangeEvent;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAnimation_0;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Switch_C_SetValue) == 0x000008, "Wrong alignment on UI_Component_Switch_C_SetValue");
static_assert(sizeof(UI_Component_Switch_C_SetValue) == 0x000028, "Wrong size on UI_Component_Switch_C_SetValue");
static_assert(offsetof(UI_Component_Switch_C_SetValue, InValue) == 0x000000, "Member 'UI_Component_Switch_C_SetValue::InValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, CallChangeEvent) == 0x000001, "Member 'UI_Component_Switch_C_SetValue::CallChangeEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, PlayAnimation_0) == 0x000002, "Member 'UI_Component_Switch_C_SetValue::PlayAnimation_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_bool_Variable) == 0x000003, "Member 'UI_Component_Switch_C_SetValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_byte_Variable) == 0x000004, "Member 'UI_Component_Switch_C_SetValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_byte_Variable_1) == 0x000005, "Member 'UI_Component_Switch_C_SetValue::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_bool_Variable_1) == 0x000006, "Member 'UI_Component_Switch_C_SetValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_byte_Variable_2) == 0x000007, "Member 'UI_Component_Switch_C_SetValue::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, Temp_byte_Variable_3) == 0x000008, "Member 'UI_Component_Switch_C_SetValue::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, K2Node_Select_Default) == 0x000009, "Member 'UI_Component_Switch_C_SetValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UI_Component_Switch_C_SetValue::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, K2Node_Select_Default_1) == 0x000018, "Member 'UI_Component_Switch_C_SetValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_SetValue, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'UI_Component_Switch_C_SetValue::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function UI_Component_Switch.UI_Component_Switch_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Switch_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Switch_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Switch_C_PreConstruct");
static_assert(sizeof(UI_Component_Switch_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Switch_C_PreConstruct");
static_assert(offsetof(UI_Component_Switch_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Switch_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Switch.UI_Component_Switch_C.ExecuteUbergraph_UI_Component_Switch
// 0x0058 (0x0058 - 0x0000)
struct UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch) == 0x000008, "Wrong alignment on UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch");
static_assert(sizeof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch) == 0x000058, "Wrong size on UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, EntryPoint) == 0x000000, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, Temp_bool_Variable) == 0x000004, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, Temp_struct_Variable) == 0x000008, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, Temp_struct_Variable_1) == 0x000018, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, K2Node_Event_IsDesignTime) == 0x000028, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, K2Node_Select_Default) == 0x000038, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'UI_Component_Switch_C_ExecuteUbergraph_UI_Component_Switch::CallFunc_BreakVector2D_Y' has a wrong offset!");

}

