#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_RoundReviveReturn

#include "Basic.hpp"

#include "UI_HUD_Notice_RoundReviveReturn_classes.hpp"
#include "UI_HUD_Notice_RoundReviveReturn_parameters.hpp"


namespace SDK
{

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_RoundReviveReturn_C::ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn");

	Params::UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.ReceivePlatformLayout
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EUSolarWidgetLayoutType                 InLayoutType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_RoundReviveReturn_C::ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "ReceivePlatformLayout");

	Params::UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout Parms{};

	Parms.InLayoutType = InLayoutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.Update
// (BlueprintCallable, BlueprintEvent)

void UUI_HUD_Notice_RoundReviveReturn_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_HUD_Notice_RoundReviveReturn_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_HUD_Notice_RoundReviveReturn_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "PreConstruct");

	Params::UI_HUD_Notice_RoundReviveReturn_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.GetEnterAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidgetAnimation* UUI_HUD_Notice_RoundReviveReturn_C::GetEnterAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "GetEnterAnimation");

	Params::UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.GetExitAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidgetAnimation* UUI_HUD_Notice_RoundReviveReturn_C::GetExitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "GetExitAnimation");

	Params::UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.SetStyleForRevivalMode
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentRoundIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentRevivalTime                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanInfiniteRevival                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_HUD_Notice_RoundReviveReturn_C::SetStyleForRevivalMode(int32 CurrentRoundIndex, int32 CurrentRevivalTime, bool bCanInfiniteRevival)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_RoundReviveReturn_C", "SetStyleForRevivalMode");

	Params::UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode Parms{};

	Parms.CurrentRoundIndex = CurrentRoundIndex;
	Parms.CurrentRevivalTime = CurrentRevivalTime;
	Parms.bCanInfiniteRevival = bCanInfiniteRevival;

	UObject::ProcessEvent(Func, &Parms);
}

}

