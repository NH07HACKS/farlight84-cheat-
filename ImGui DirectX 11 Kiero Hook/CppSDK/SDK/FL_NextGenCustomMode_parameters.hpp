#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_NextGenCustomMode

#include "Basic.hpp"

#include "E_UI_Root_structs.hpp"
#include "E_BigMapSlot_structs.hpp"
#include "Solarland_structs.hpp"
#include "E_BattleControlWidgets_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_BackPackSlot_structs.hpp"
#include "Engine_structs.hpp"
#include "E_PlayerType_structs.hpp"
#include "E_BattleControllerSlot_structs.hpp"


namespace SDK::Params
{

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]InsertWidgetToBattleUI
// 0x0050 (0x0050 - 0x0000)
struct FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleControllerSlot                        Slot;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReplaceOldWidget;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             OutResultSlot;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_InsertWidgetToBattleUISlot_OutResultSlot; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InsertWidgetToBattleUISlot_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI) == 0x000050, "Wrong size on FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, Widget) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::Widget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, Slot) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, bReplaceOldWidget) == 0x000009, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::bReplaceOldWidget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, OutResultSlot) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, Success) == 0x000020, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, CallFunc_InsertWidgetToBattleUISlot_OutResultSlot) == 0x000040, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::CallFunc_InsertWidgetToBattleUISlot_OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI, CallFunc_InsertWidgetToBattleUISlot_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBattleUI::CallFunc_InsertWidgetToBattleUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]RemoveAllWidgetsFromBattleUI
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI final
{
public:
	E_BattleControllerSlot                        Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearBattleUISlot_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, Slot) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, Success) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI, CallFunc_ClearBattleUISlot_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBattleUI::CallFunc_ClearBattleUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[s] Get Logic Component
// 0x0028 (0x0028 - 0x0000)
struct FL_NextGenCustomMode_C__s__Get_Logic_Component final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCGMLogicComponent*                     Logic_Component;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCustomGameMode*                       K2Node_DynamicCast_AsSCustom_Game_Mode;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__s__Get_Logic_Component) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__s__Get_Logic_Component");
static_assert(sizeof(FL_NextGenCustomMode_C__s__Get_Logic_Component) == 0x000028, "Wrong size on FL_NextGenCustomMode_C__s__Get_Logic_Component");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Get_Logic_Component, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__s__Get_Logic_Component::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Get_Logic_Component, Logic_Component) == 0x000008, "Member 'FL_NextGenCustomMode_C__s__Get_Logic_Component::Logic_Component' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Get_Logic_Component, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__s__Get_Logic_Component::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Get_Logic_Component, K2Node_DynamicCast_AsSCustom_Game_Mode) == 0x000018, "Member 'FL_NextGenCustomMode_C__s__Get_Logic_Component::K2Node_DynamicCast_AsSCustom_Game_Mode' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Get_Logic_Component, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FL_NextGenCustomMode_C__s__Get_Logic_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[s] Set Global Damage Enable
// 0x0018 (0x0018 - 0x0000)
struct FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameModeGlobalSetting*                 CallFunc_GetGameModeSetting_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable");
static_assert(sizeof(FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable) == 0x000018, "Wrong size on FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable, Enabled) == 0x000000, "Member 'FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable::Enabled' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable, CallFunc_GetGameModeSetting_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__s__Set_Global_Damage_Enable::CallFunc_GetGameModeSetting_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetExcelTableReader
// 0x0018 (0x0018 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetExcelTableReader final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              TablesReader;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables*                           CallFunc_GetInstance_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetExcelTableReader) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetExcelTableReader");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetExcelTableReader) == 0x000018, "Wrong size on FL_NextGenCustomMode_C__A_GetExcelTableReader");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetExcelTableReader, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetExcelTableReader::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetExcelTableReader, TablesReader) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetExcelTableReader::TablesReader' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetExcelTableReader, CallFunc_GetInstance_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetExcelTableReader::CallFunc_GetInstance_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetBotTemplete
// 0x00F8 (0x00F8 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetBotTemplete final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, int32>                            Templete;                                          // 0x0008(0x0050)(Parm, OutParm)
	TMap<int32, int32>                            NewLocalVar_0;                                     // 0x0058(0x0050)(Edit, BlueprintVisible)
	TMap<int32, int32>                            K2Node_MakeVariable_MakeVariableOutput;            // 0x00A8(0x0050)()
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetBotTemplete) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetBotTemplete");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetBotTemplete) == 0x0000F8, "Wrong size on FL_NextGenCustomMode_C__A_GetBotTemplete");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBotTemplete, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetBotTemplete::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBotTemplete, Templete) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetBotTemplete::Templete' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBotTemplete, NewLocalVar_0) == 0x000058, "Member 'FL_NextGenCustomMode_C__A_GetBotTemplete::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBotTemplete, K2Node_MakeVariable_MakeVariableOutput) == 0x0000A8, "Member 'FL_NextGenCustomMode_C__A_GetBotTemplete::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]PlayInEditor
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C__S_PlayInEditor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEditor;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGameInstanceBase*                 CallFunc_GetSolarGameInstanceBase_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGIsEditor_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_PlayInEditor) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_PlayInEditor");
static_assert(sizeof(FL_NextGenCustomMode_C__S_PlayInEditor) == 0x000020, "Wrong size on FL_NextGenCustomMode_C__S_PlayInEditor");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, bIsEditor) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::bIsEditor' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, Temp_bool_Variable) == 0x000009, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, Temp_bool_Variable_1) == 0x00000A, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00000B, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, CallFunc_GetSolarGameInstanceBase_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::CallFunc_GetSolarGameInstanceBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, CallFunc_IsGIsEditor_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::CallFunc_IsGIsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_PlayInEditor, K2Node_Select_Default) == 0x000019, "Member 'FL_NextGenCustomMode_C__S_PlayInEditor::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[s]GetWarmGameInfo
// 0x0190 (0x0190 - 0x0000)
struct FL_NextGenCustomMode_C__s_GetWarmGameInfo final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWarmGame;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_WarmGameMode          WarmGameInfo;                                      // 0x0010(0x0078)(ConstParm, Parm, OutParm)
	struct FSolarTablesData_WarmGameMode          K2Node_MakeStruct_SolarTablesData_WarmGameMode;    // 0x0088(0x0078)()
	int32                                         CallFunc_GetWramGameType_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarTablesData_WarmGameMode          CallFunc_GetRowData_ReturnValue;                   // 0x0110(0x0078)(ConstParm)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__s_GetWarmGameInfo) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__s_GetWarmGameInfo");
static_assert(sizeof(FL_NextGenCustomMode_C__s_GetWarmGameInfo) == 0x000190, "Wrong size on FL_NextGenCustomMode_C__s_GetWarmGameInfo");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, bIsWarmGame) == 0x000008, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::bIsWarmGame' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, WarmGameInfo) == 0x000010, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::WarmGameInfo' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, K2Node_MakeStruct_SolarTablesData_WarmGameMode) == 0x000088, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::K2Node_MakeStruct_SolarTablesData_WarmGameMode' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, CallFunc_GetWramGameType_ReturnValue) == 0x000100, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::CallFunc_GetWramGameType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000104, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000108, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, CallFunc_GetRowData_ReturnValue) == 0x000110, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_GetWarmGameInfo, CallFunc_HasRowKey_ReturnValue) == 0x000188, "Member 'FL_NextGenCustomMode_C__s_GetWarmGameInfo::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]GetLocalCharacter
// 0x0028 (0x0028 - 0x0000)
struct FL_NextGenCustomMode_C__C_GetLocalCharacter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_GetLocalPlayer_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_GetLocalCharacter) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_GetLocalCharacter");
static_assert(sizeof(FL_NextGenCustomMode_C__C_GetLocalCharacter) == 0x000028, "Wrong size on FL_NextGenCustomMode_C__C_GetLocalCharacter");
static_assert(offsetof(FL_NextGenCustomMode_C__C_GetLocalCharacter, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_GetLocalCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_GetLocalCharacter, ReturnValue) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_GetLocalCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_GetLocalCharacter, CallFunc_GetLocalPlayer_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_GetLocalCharacter::CallFunc_GetLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_GetLocalCharacter, CallFunc_GetSolarCharacter_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_GetLocalCharacter::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_GetLocalCharacter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__C_GetLocalCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetMapManager
// 0x0030 (0x0030 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetMapManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarMapManager*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarGameInstanceBase*                 K2Node_DynamicCast_AsSolar_Game_Instance_Base;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarMapManager*                       CallFunc_GetSolarMapManager_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetMapManager) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetMapManager");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetMapManager) == 0x000030, "Wrong size on FL_NextGenCustomMode_C__A_GetMapManager");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, ReturnValue) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, K2Node_DynamicCast_AsSolar_Game_Instance_Base) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::K2Node_DynamicCast_AsSolar_Game_Instance_Base' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMapManager, CallFunc_GetSolarMapManager_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_GetMapManager::CallFunc_GetSolarMapManager_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[c] Create Widget And Display
// 0x0048 (0x0048 - 0x0000)
struct FL_NextGenCustomMode_C__c__Create_Widget_And_Display final
{
public:
	const class UClass*                           WidgetClass;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     DisplayLayer;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarUserWidget*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_1;                              // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_2;                              // 0x0022(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_3;                              // 0x0023(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_4;                              // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_5;                              // 0x0025(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_6;                              // 0x0026(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_7;                              // 0x0027(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_8;                              // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       K2Node_Select_Default;                             // 0x0029(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_ShowSolarWidget_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarUserWidget*                       K2Node_DynamicCast_AsSolar_User_Widget;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__c__Create_Widget_And_Display");
static_assert(sizeof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display) == 0x000048, "Wrong size on FL_NextGenCustomMode_C__c__Create_Widget_And_Display");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, WidgetClass) == 0x000000, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::WidgetClass' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, DisplayLayer) == 0x000008, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::DisplayLayer' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable) == 0x000020, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_1) == 0x000021, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_2) == 0x000022, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_3) == 0x000023, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_4) == 0x000024, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_5) == 0x000025, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_6) == 0x000026, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_7) == 0x000027, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, Temp_byte_Variable_8) == 0x000028, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, K2Node_Select_Default) == 0x000029, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, CallFunc_ShowSolarWidget_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::CallFunc_ShowSolarWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, K2Node_DynamicCast_AsSolar_User_Widget) == 0x000038, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::K2Node_DynamicCast_AsSolar_User_Widget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c__Create_Widget_And_Display, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'FL_NextGenCustomMode_C__c__Create_Widget_And_Display::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]DeployPlayer
// 0x00E0 (0x00E0 - 0x0000)
struct FL_NextGenCustomMode_C__S_DeployPlayer final
{
public:
	class ASolarPlayerState*                      TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           PlayerStart;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearPlayerItems;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_DeployPlayer) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_DeployPlayer");
static_assert(sizeof(FL_NextGenCustomMode_C__S_DeployPlayer) == 0x0000E0, "Wrong size on FL_NextGenCustomMode_C__S_DeployPlayer");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, TargetPlayer) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::TargetPlayer' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, PlayerStart) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::PlayerStart' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, ClearPlayerItems) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::ClearPlayerItems' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, __WorldContext) == 0x000018, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, K2Node_DynamicCast_AsSolar_Character) == 0x000028, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00004C, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_DeployPlayer, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000D8, "Member 'FL_NextGenCustomMode_C__S_DeployPlayer::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]GetModeMainLogic
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C__S_GetModeMainLogic final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCGMLogicComponent*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCGMLogicComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_GetModeMainLogic) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_GetModeMainLogic");
static_assert(sizeof(FL_NextGenCustomMode_C__S_GetModeMainLogic) == 0x000020, "Wrong size on FL_NextGenCustomMode_C__S_GetModeMainLogic");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetModeMainLogic, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_GetModeMainLogic::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetModeMainLogic, ReturnValue) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_GetModeMainLogic::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetModeMainLogic, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_GetModeMainLogic::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetModeMainLogic, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__S_GetModeMainLogic::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]GetMapIDByName
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__S_GetMapIDByName final
{
public:
	class FString                                 LevelName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapID;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCustomGameState*                      K2Node_DynamicCast_AsSCustom_Game_State;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapIDByName_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_GetMapIDByName) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_GetMapIDByName");
static_assert(sizeof(FL_NextGenCustomMode_C__S_GetMapIDByName) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__S_GetMapIDByName");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, LevelName) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::LevelName' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, MapID) == 0x000018, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::MapID' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, K2Node_DynamicCast_AsSCustom_Game_State) == 0x000028, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::K2Node_DynamicCast_AsSCustom_Game_State' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetMapIDByName, CallFunc_GetMapIDByName_ReturnValue) == 0x000034, "Member 'FL_NextGenCustomMode_C__S_GetMapIDByName::CallFunc_GetMapIDByName_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetMiniMapSize
// 0x00F8 (0x00F8 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetMiniMapSize final
{
public:
	int32                                         MapID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarTablesData_GameMap               CallFunc_GetRowData_ReturnValue;                   // 0x0020(0x00C0)(ConstParm)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetMiniMapSize) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetMiniMapSize");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetMiniMapSize) == 0x0000F8, "Wrong size on FL_NextGenCustomMode_C__A_GetMiniMapSize");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, MapID) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::MapID' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, Size) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::Size' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc_GetRowData_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc_HasRowKey_ReturnValue) == 0x0000E0, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc_Array_Get_Item) == 0x0000E4, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetMiniMapSize, CallFunc_MakeVector2D_ReturnValue) == 0x0000EC, "Member 'FL_NextGenCustomMode_C__A_GetMiniMapSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.ToInt(StringArray)
// 0x0068 (0x0068 - 0x0000)
struct FL_NextGenCustomMode_C_ToInt_StringArray_ final
{
public:
	TArray<class FString>                         str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Int;                                               // 0x0018(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 Temp;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_ToInt_StringArray_) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_ToInt_StringArray_");
static_assert(sizeof(FL_NextGenCustomMode_C_ToInt_StringArray_) == 0x000068, "Wrong size on FL_NextGenCustomMode_C_ToInt_StringArray_");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, str) == 0x000000, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, Int) == 0x000018, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::Int' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, Temp) == 0x000028, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::Temp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Array_Get_Item) == 0x000048, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Conv_StringToInt_ReturnValue) == 0x000058, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToInt_StringArray_, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'FL_NextGenCustomMode_C_ToInt_StringArray_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.获取地面高度
// 0x01B8 (0x01B8 - 0x0000)
struct FL_NextGenCustomMode_C_获取地面高度 final
{
public:
	struct FVector                                位置;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          从上到下;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                地面位置;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否在水中;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x006C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0088(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11F[0x1];                                      // 0x011F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SolarWaterActor_C*                  K2Node_DynamicCast_AsBP_Solar_Water_Actor;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_获取地面高度) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_获取地面高度");
static_assert(sizeof(FL_NextGenCustomMode_C_获取地面高度) == 0x0001B8, "Wrong size on FL_NextGenCustomMode_C_获取地面高度");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, 位置) == 0x000000, "Member 'FL_NextGenCustomMode_C_获取地面高度::位置' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, 从上到下) == 0x00000C, "Member 'FL_NextGenCustomMode_C_获取地面高度::从上到下' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_获取地面高度::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, 地面位置) == 0x000018, "Member 'FL_NextGenCustomMode_C_获取地面高度::地面位置' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, Z) == 0x000024, "Member 'FL_NextGenCustomMode_C_获取地面高度::Z' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, 是否在水中) == 0x000028, "Member 'FL_NextGenCustomMode_C_获取地面高度::是否在水中' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, Temp_object_Variable) == 0x000030, "Member 'FL_NextGenCustomMode_C_获取地面高度::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_X) == 0x000040, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_Y) == 0x000044, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_Z) == 0x000048, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, Temp_bool_Variable) == 0x00004C, "Member 'FL_NextGenCustomMode_C_获取地面高度::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, Temp_bool_Variable_1) == 0x000068, "Member 'FL_NextGenCustomMode_C_获取地面高度::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, K2Node_Select_Default) == 0x00006C, "Member 'FL_NextGenCustomMode_C_获取地面高度::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, K2Node_MakeArray_Array) == 0x000078, "Member 'FL_NextGenCustomMode_C_获取地面高度::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, K2Node_Select_Default_1) == 0x000088, "Member 'FL_NextGenCustomMode_C_获取地面高度::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000094, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00011C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_bBlockingHit) == 0x00011D, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011E, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_Time) == 0x000120, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_Distance) == 0x000124, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_Location) == 0x000128, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_ImpactPoint) == 0x000134, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_Normal) == 0x000140, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_ImpactNormal) == 0x00014C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_X_1) == 0x000198, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_Y_1) == 0x00019C, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, CallFunc_BreakVector_Z_1) == 0x0001A0, "Member 'FL_NextGenCustomMode_C_获取地面高度::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, K2Node_DynamicCast_AsBP_Solar_Water_Actor) == 0x0001A8, "Member 'FL_NextGenCustomMode_C_获取地面高度::K2Node_DynamicCast_AsBP_Solar_Water_Actor' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_获取地面高度, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'FL_NextGenCustomMode_C_获取地面高度::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.Bool2String
// 0x0058 (0x0058 - 0x0000)
struct FL_NextGenCustomMode_C_Bool2String final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_Bool2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_Bool2String");
static_assert(sizeof(FL_NextGenCustomMode_C_Bool2String) == 0x000058, "Wrong size on FL_NextGenCustomMode_C_Bool2String");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, Bool) == 0x000000, "Member 'FL_NextGenCustomMode_C_Bool2String::Bool' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C_Bool2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, String) == 0x000010, "Member 'FL_NextGenCustomMode_C_Bool2String::String' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, Temp_bool_Variable) == 0x000020, "Member 'FL_NextGenCustomMode_C_Bool2String::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, Temp_string_Variable) == 0x000028, "Member 'FL_NextGenCustomMode_C_Bool2String::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, Temp_string_Variable_1) == 0x000038, "Member 'FL_NextGenCustomMode_C_Bool2String::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Bool2String, K2Node_Select_Default) == 0x000048, "Member 'FL_NextGenCustomMode_C_Bool2String::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.Vector2String
// 0x00A8 (0x00A8 - 0x0000)
struct FL_NextGenCustomMode_C_Vector2String final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 str;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_Vector2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_Vector2String");
static_assert(sizeof(FL_NextGenCustomMode_C_Vector2String) == 0x0000A8, "Wrong size on FL_NextGenCustomMode_C_Vector2String");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, Vector) == 0x000000, "Member 'FL_NextGenCustomMode_C_Vector2String::Vector' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_Vector2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, str) == 0x000018, "Member 'FL_NextGenCustomMode_C_Vector2String::str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_BreakVector_X) == 0x000028, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_BreakVector_Y) == 0x00002C, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_BreakVector_Z) == 0x000030, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000048, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000068, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2String, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'FL_NextGenCustomMode_C_Vector2String::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]Number2Letter
// 0x01F0 (0x01F0 - 0x0000)
struct FL_NextGenCustomMode_C__S_Number2Letter final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Letter;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_13;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_14;                           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_15;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_16;                           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_17;                           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_18;                           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_19;                           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_20;                           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_21;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_22;                           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_23;                           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_24;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_25;                           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_26;                           // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_Number2Letter) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_Number2Letter");
static_assert(sizeof(FL_NextGenCustomMode_C__S_Number2Letter) == 0x0001F0, "Wrong size on FL_NextGenCustomMode_C__S_Number2Letter");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Number) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Number' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Letter) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Letter' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Valid) == 0x000020, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Valid' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_int_Variable) == 0x000024, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, CallFunc_InRange_IntInt_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable) == 0x000030, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_1) == 0x000040, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_2) == 0x000050, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_3) == 0x000060, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_4) == 0x000070, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_5) == 0x000080, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_6) == 0x000090, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_7) == 0x0000A0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_8) == 0x0000B0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_9) == 0x0000C0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_10) == 0x0000D0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_11) == 0x0000E0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_12) == 0x0000F0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_13) == 0x000100, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_14) == 0x000110, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_15) == 0x000120, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_15' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_16) == 0x000130, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_16' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_17) == 0x000140, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_17' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_18) == 0x000150, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_18' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_19) == 0x000160, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_19' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_20) == 0x000170, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_20' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_21) == 0x000180, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_21' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_22) == 0x000190, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_22' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_23) == 0x0001A0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_23' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_24) == 0x0001B0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_24' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_25) == 0x0001C0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_25' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, Temp_string_Variable_26) == 0x0001D0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::Temp_string_Variable_26' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_Number2Letter, K2Node_Select_Default) == 0x0001E0, "Member 'FL_NextGenCustomMode_C__S_Number2Letter::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]GetBuildPackageType
// 0x0010 (0x0010 - 0x0000)
struct FL_NextGenCustomMode_C__S_GetBuildPackageType final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESolarBuildConfiguration                      打包类型;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESolarBuildConfiguration                      CallFunc_GetBuildConfiguration_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_GetBuildPackageType) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_GetBuildPackageType");
static_assert(sizeof(FL_NextGenCustomMode_C__S_GetBuildPackageType) == 0x000010, "Wrong size on FL_NextGenCustomMode_C__S_GetBuildPackageType");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetBuildPackageType, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_GetBuildPackageType::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetBuildPackageType, 打包类型) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_GetBuildPackageType::打包类型' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetBuildPackageType, CallFunc_GetBuildConfiguration_ReturnValue) == 0x000009, "Member 'FL_NextGenCustomMode_C__S_GetBuildPackageType::CallFunc_GetBuildConfiguration_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.抽选随机数字
// 0x0058 (0x0058 - 0x0000)
struct FL_NextGenCustomMode_C_抽选随机数字 final
{
public:
	int32                                         下限;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         上限;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 排除;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LOCAL_备选数字组;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_抽选随机数字) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_抽选随机数字");
static_assert(sizeof(FL_NextGenCustomMode_C_抽选随机数字) == 0x000058, "Wrong size on FL_NextGenCustomMode_C_抽选随机数字");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, 下限) == 0x000000, "Member 'FL_NextGenCustomMode_C_抽选随机数字::下限' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, 上限) == 0x000004, "Member 'FL_NextGenCustomMode_C_抽选随机数字::上限' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, 排除) == 0x000008, "Member 'FL_NextGenCustomMode_C_抽选随机数字::排除' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, __WorldContext) == 0x000018, "Member 'FL_NextGenCustomMode_C_抽选随机数字::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, Result) == 0x000020, "Member 'FL_NextGenCustomMode_C_抽选随机数字::Result' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, LOCAL_备选数字组) == 0x000028, "Member 'FL_NextGenCustomMode_C_抽选随机数字::LOCAL_备选数字组' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, Temp_int_Variable) == 0x000038, "Member 'FL_NextGenCustomMode_C_抽选随机数字::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Array_Contains_ReturnValue) == 0x00003C, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003D, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Array_Get_Item) == 0x000044, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Array_AddUnique_ReturnValue) == 0x00004C, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_抽选随机数字, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'FL_NextGenCustomMode_C_抽选随机数字::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.Vector2D2String
// 0x0068 (0x0068 - 0x0000)
struct FL_NextGenCustomMode_C_Vector2D2String final
{
public:
	struct FVector2D                              Vector;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 str;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_Vector2D2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_Vector2D2String");
static_assert(sizeof(FL_NextGenCustomMode_C_Vector2D2String) == 0x000068, "Wrong size on FL_NextGenCustomMode_C_Vector2D2String");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, Vector) == 0x000000, "Member 'FL_NextGenCustomMode_C_Vector2D2String::Vector' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C_Vector2D2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, str) == 0x000010, "Member 'FL_NextGenCustomMode_C_Vector2D2String::str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_BreakVector2D_X) == 0x000020, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000038, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2D2String, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'FL_NextGenCustomMode_C_Vector2D2String::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.VectorArray2String
// 0x00A8 (0x00A8 - 0x0000)
struct FL_NextGenCustomMode_C_VectorArray2String final
{
public:
	TArray<struct FVector>                        Vector;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 str;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Vector2String_Str;                        // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_VectorArray2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_VectorArray2String");
static_assert(sizeof(FL_NextGenCustomMode_C_VectorArray2String) == 0x0000A8, "Wrong size on FL_NextGenCustomMode_C_VectorArray2String");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, Vector) == 0x000000, "Member 'FL_NextGenCustomMode_C_VectorArray2String::Vector' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_VectorArray2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, str) == 0x000018, "Member 'FL_NextGenCustomMode_C_VectorArray2String::str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, Temp) == 0x000028, "Member 'FL_NextGenCustomMode_C_VectorArray2String::Temp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'FL_NextGenCustomMode_C_VectorArray2String::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'FL_NextGenCustomMode_C_VectorArray2String::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Array_Get_Item) == 0x000044, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Vector2String_Str) == 0x000050, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Vector2String_Str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Len_ReturnValue) == 0x00008C, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Subtract_IntInt_ReturnValue) == 0x000090, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_VectorArray2String, CallFunc_Mid_ReturnValue) == 0x000098, "Member 'FL_NextGenCustomMode_C_VectorArray2String::CallFunc_Mid_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.Vector2DArray2String
// 0x00A8 (0x00A8 - 0x0000)
struct FL_NextGenCustomMode_C_Vector2DArray2String final
{
public:
	TArray<struct FVector2D>                      Vector;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 str;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Vector2D2String_Str;                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_Vector2DArray2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_Vector2DArray2String");
static_assert(sizeof(FL_NextGenCustomMode_C_Vector2DArray2String) == 0x0000A8, "Wrong size on FL_NextGenCustomMode_C_Vector2DArray2String");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, Vector) == 0x000000, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::Vector' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, str) == 0x000018, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, Temp) == 0x000028, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::Temp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Array_Get_Item) == 0x000044, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Vector2D2String_Str) == 0x000050, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Vector2D2String_Str' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Len_ReturnValue) == 0x00008C, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Subtract_IntInt_ReturnValue) == 0x000090, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_Vector2DArray2String, CallFunc_Mid_ReturnValue) == 0x000098, "Member 'FL_NextGenCustomMode_C_Vector2DArray2String::CallFunc_Mid_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]GetOutcomIDByChestID
// 0x0138 (0x0138 - 0x0000)
struct FL_NextGenCustomMode_C__S_GetOutcomIDByChestID final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutcomeID;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_1;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRowKey_ReturnValue_1;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_Chest                 CallFunc_GetRowData_ReturnValue;                   // 0x0030(0x00B8)(ConstParm)
	struct FSolarTablesData_ChestSpawn            CallFunc_GetRowData_ReturnValue_1;                 // 0x00E8(0x0040)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_GetOutcomIDByChestID");
static_assert(sizeof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID) == 0x000138, "Wrong size on FL_NextGenCustomMode_C__S_GetOutcomIDByChestID");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, Key) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::Key' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, OutcomeID) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::OutcomeID' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, NewLocalVar_1) == 0x000014, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, NewLocalVar_0) == 0x000018, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000020, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_HasRowKey_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_HasRowKey_ReturnValue_1) == 0x000029, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_HasRowKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_GetRowData_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_GetRowData_ReturnValue_1) == 0x0000E8, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_GetRowData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_RandomInteger_ReturnValue) == 0x00012C, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_Greater_IntInt_ReturnValue) == 0x000134, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000135, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_GetOutcomIDByChestID, CallFunc_BooleanAND_ReturnValue) == 0x000136, "Member 'FL_NextGenCustomMode_C__S_GetOutcomIDByChestID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetPlayerType
// 0x0030 (0x0030 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetPlayerType final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerType                                  PlayerType;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBotAIType                                    Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarBotAIController*                  K2Node_DynamicCast_AsSolar_Bot_AIController;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_PlayerType                                  Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerType                                  Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerType                                  Temp_byte_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerType                                  Temp_byte_Variable_4;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerType                                  K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetPlayerType) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetPlayerType");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetPlayerType) == 0x000030, "Wrong size on FL_NextGenCustomMode_C__A_GetPlayerType");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Player) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Player' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, PlayerType) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::PlayerType' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Temp_byte_Variable) == 0x000011, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, CallFunc_GetAIController_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, K2Node_DynamicCast_AsSolar_Bot_AIController) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::K2Node_DynamicCast_AsSolar_Bot_AIController' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Temp_byte_Variable_1) == 0x000029, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Temp_byte_Variable_2) == 0x00002A, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Temp_byte_Variable_3) == 0x00002B, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, Temp_byte_Variable_4) == 0x00002C, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetPlayerType, K2Node_Select_Default) == 0x00002D, "Member 'FL_NextGenCustomMode_C__A_GetPlayerType::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.DeathReason2String
// 0x01F8 (0x01F8 - 0x0000)
struct FL_NextGenCustomMode_C_DeathReason2String final
{
public:
	ESCMDamageType                                DamageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TraceString;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESCMDamageType                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_11;                           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_12;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_13;                           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_14;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_15;                           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_16;                           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_17;                           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_18;                           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_19;                           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_20;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_21;                           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_22;                           // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_23;                           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_24;                           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_DeathReason2String) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_DeathReason2String");
static_assert(sizeof(FL_NextGenCustomMode_C_DeathReason2String) == 0x0001F8, "Wrong size on FL_NextGenCustomMode_C_DeathReason2String");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, DamageType) == 0x000000, "Member 'FL_NextGenCustomMode_C_DeathReason2String::DamageType' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C_DeathReason2String::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, TraceString) == 0x000010, "Member 'FL_NextGenCustomMode_C_DeathReason2String::TraceString' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_bool_Variable) == 0x000020, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, CallFunc_Conv_ByteToString_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C_DeathReason2String::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_byte_Variable) == 0x000038, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable) == 0x000040, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_1) == 0x000050, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_2) == 0x000060, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_3) == 0x000070, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_4) == 0x000080, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_5) == 0x000090, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_6) == 0x0000A0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_7) == 0x0000B0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_8) == 0x0000C0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_9) == 0x0000D0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_10) == 0x0000E0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_11) == 0x0000F0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_11' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_12) == 0x000100, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_12' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_13) == 0x000110, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_13' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_14) == 0x000120, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_14' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_15) == 0x000130, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_15' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_16) == 0x000140, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_16' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_17) == 0x000150, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_17' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_18) == 0x000160, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_18' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_19) == 0x000170, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_19' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_20) == 0x000180, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_20' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_21) == 0x000190, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_21' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_22) == 0x0001A0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_22' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_23) == 0x0001B0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_23' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, Temp_string_Variable_24) == 0x0001C0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::Temp_string_Variable_24' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, K2Node_Select_Default) == 0x0001D0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, CallFunc_IsEmpty_ReturnValue) == 0x0001E0, "Member 'FL_NextGenCustomMode_C_DeathReason2String::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_DeathReason2String, K2Node_Select_Default_1) == 0x0001E8, "Member 'FL_NextGenCustomMode_C_DeathReason2String::K2Node_Select_Default_1' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.BattleOver
// 0x0008 (0x0008 - 0x0000)
struct FL_NextGenCustomMode_C_BattleOver final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_BattleOver) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_BattleOver");
static_assert(sizeof(FL_NextGenCustomMode_C_BattleOver) == 0x000008, "Wrong size on FL_NextGenCustomMode_C_BattleOver");
static_assert(offsetof(FL_NextGenCustomMode_C_BattleOver, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C_BattleOver::__WorldContext' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetRandomLocationNearby
// 0x0350 (0x0350 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetRandomLocationNearby final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation1;                                   // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        ValidTarget;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ASolarCharacter*>                Ignore;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASolarCharacter*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0278(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetRandomLocationNearby");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby) == 0x000350, "Wrong size on FL_NextGenCustomMode_C__A_GetRandomLocationNearby");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, Center) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::Center' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, Radius) == 0x00000C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::Radius' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, TargetLocation1) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::TargetLocation1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, TargetLocation) == 0x000024, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::TargetLocation' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, ValidTarget) == 0x000030, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::ValidTarget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, Ignore) == 0x000040, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::Ignore' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, Temp_bool_Variable) == 0x000050, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, Temp_int_Variable) == 0x000068, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00006C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, K2Node_MakeArray_Array) == 0x000078, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_RandomInteger_ReturnValue) == 0x00008C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000094, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_X) == 0x000098, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Y) == 0x00009C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_MakeVector2D_ReturnValue) == 0x0000A4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000AC, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_GetRotated2D_ReturnValue) == 0x0000B4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Normal2D_ReturnValue) == 0x0000D0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000D8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Y_1) == 0x0000E4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000EC, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector2D_X) == 0x000100, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector2D_Y) == 0x000104, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000108, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000190, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_MakeVector_ReturnValue_1) == 0x000194, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Array_Add_ReturnValue) == 0x0001A0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x0001A4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x00022C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_bBlockingHit) == 0x00022D, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_bInitialOverlap) == 0x00022E, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Time) == 0x000230, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Distance) == 0x000234, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Location) == 0x000238, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_ImpactPoint) == 0x000244, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Normal) == 0x000250, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_ImpactNormal) == 0x00025C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_PhysMat) == 0x000268, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitActor) == 0x000270, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitComponent) == 0x000278, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitBoneName) == 0x000280, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitItem) == 0x000288, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_FaceIndex) == 0x00028C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_TraceEnd) == 0x00029C, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_X_2) == 0x0002A8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Y_2) == 0x0002AC, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakVector_Z_2) == 0x0002B0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0002B4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0002B5, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Time_1) == 0x0002B8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Distance_1) == 0x0002BC, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Location_1) == 0x0002C0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002CC, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_Normal_1) == 0x0002D8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002E4, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_PhysMat_1) == 0x0002F0, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitActor_1) == 0x0002F8, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitComponent_1) == 0x000300, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitBoneName_1) == 0x000308, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_HitItem_1) == 0x000310, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_FaceIndex_1) == 0x000314, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_TraceStart_1) == 0x000318, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_BreakHitResult_TraceEnd_1) == 0x000324, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_Add_FloatFloat_ReturnValue) == 0x000330, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, CallFunc_MakeVector_ReturnValue_2) == 0x000334, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetRandomLocationNearby, K2Node_Select_Default) == 0x000340, "Member 'FL_NextGenCustomMode_C__A_GetRandomLocationNearby::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]DataInt++
// 0x0048 (0x0048 - 0x0000)
struct FL_NextGenCustomMode_C__A_DataInt__ final
{
public:
	ESCMHostType                                  HostType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HostID;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DataName;                                          // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         InValue;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDataInt_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_DataInt__) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_DataInt__");
static_assert(sizeof(FL_NextGenCustomMode_C__A_DataInt__) == 0x000048, "Wrong size on FL_NextGenCustomMode_C__A_DataInt__");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, HostType) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_DataInt__::HostType' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, HostID) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_DataInt__::HostID' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, DataName) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_DataInt__::DataName' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, InValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_DataInt__::InValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, __WorldContext) == 0x000030, "Member 'FL_NextGenCustomMode_C__A_DataInt__::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, CallFunc_GetDataInt_OutValue) == 0x000038, "Member 'FL_NextGenCustomMode_C__A_DataInt__::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, CallFunc_GetDataInt_ReturnValue) == 0x00003C, "Member 'FL_NextGenCustomMode_C__A_DataInt__::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'FL_NextGenCustomMode_C__A_DataInt__::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_DataInt__, CallFunc_SetDataInt_ReturnValue) == 0x000044, "Member 'FL_NextGenCustomMode_C__A_DataInt__::CallFunc_SetDataInt_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]PrintStringArray
// 0x00B8 (0x00B8 - 0x0000)
struct FL_NextGenCustomMode_C__A_PrintStringArray final
{
public:
	class FString                                 Prefix;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Array;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Final;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_PrintStringArray) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_PrintStringArray");
static_assert(sizeof(FL_NextGenCustomMode_C__A_PrintStringArray) == 0x0000B8, "Wrong size on FL_NextGenCustomMode_C__A_PrintStringArray");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, Prefix) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::Prefix' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, Array) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::Array' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, __WorldContext) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, Final) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::Final' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, Temp_int_Array_Index_Variable) == 0x000060, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Array_Get_Item) == 0x000068, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintStringArray, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'FL_NextGenCustomMode_C__A_PrintStringArray::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetAllRealPlayers
// 0x0090 (0x0090 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetAllRealPlayers final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                RealPlayers;                                       // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                NewLocalVar_0;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_1;                              // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetAllRealPlayers) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetAllRealPlayers");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetAllRealPlayers) == 0x000090, "Wrong size on FL_NextGenCustomMode_C__A_GetAllRealPlayers");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, RealPlayers) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::RealPlayers' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, NewLocalVar_0) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, Temp_byte_Variable) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, Temp_int_Array_Index_Variable) == 0x000038, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, Temp_string_Variable) == 0x000048, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, Temp_byte_Variable_1) == 0x000058, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_FindPlayers_ReturnValue) == 0x000068, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_Array_Get_Item) == 0x000078, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetAllRealPlayers, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C__A_GetAllRealPlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[s]IsTesting
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C__s_IsTesting final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Testing;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarGameplayConfigComponent*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__s_IsTesting) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__s_IsTesting");
static_assert(sizeof(FL_NextGenCustomMode_C__s_IsTesting) == 0x000020, "Wrong size on FL_NextGenCustomMode_C__s_IsTesting");
static_assert(offsetof(FL_NextGenCustomMode_C__s_IsTesting, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__s_IsTesting::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_IsTesting, Testing) == 0x000008, "Member 'FL_NextGenCustomMode_C__s_IsTesting::Testing' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_IsTesting, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__s_IsTesting::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__s_IsTesting, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__s_IsTesting::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]InsertWidgetToBackpackUI
// 0x0050 (0x0050 - 0x0000)
struct FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BackPackSlot                                Slot;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReplaceOldWidget;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             OutResultSlot;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_InsertWidgetToBackpackUISlot_OutResultSlot; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InsertWidgetToBackpackUISlot_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI) == 0x000050, "Wrong size on FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, Widget) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::Widget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, Slot) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, bReplaceOldWidget) == 0x000009, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::bReplaceOldWidget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, OutResultSlot) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, Success) == 0x000020, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, CallFunc_InsertWidgetToBackpackUISlot_OutResultSlot) == 0x000040, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::CallFunc_InsertWidgetToBackpackUISlot_OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI, CallFunc_InsertWidgetToBackpackUISlot_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBackpackUI::CallFunc_InsertWidgetToBackpackUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]RemoveAllWidgetsFromBackpackUI
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI final
{
public:
	E_BackPackSlot                                Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearBackpackUISlot_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, Slot) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, Success) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI, CallFunc_ClearBackpackUISlot_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBackpackUI::CallFunc_ClearBackpackUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]InsertWidgetToBigMapUI
// 0x0050 (0x0050 - 0x0000)
struct FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BigMapSlot                                  Slot;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReplaceOldWidget;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             OutResultSlot;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_InsertWidgetToMapUISlot_OutResultSlot;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InsertWidgetToMapUISlot_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI) == 0x000050, "Wrong size on FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, Widget) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::Widget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, Slot) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, bReplaceOldWidget) == 0x000009, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::bReplaceOldWidget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, OutResultSlot) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, Success) == 0x000020, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, CallFunc_InsertWidgetToMapUISlot_OutResultSlot) == 0x000040, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::CallFunc_InsertWidgetToMapUISlot_OutResultSlot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI, CallFunc_InsertWidgetToMapUISlot_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C__C_InsertWidgetToBigMapUI::CallFunc_InsertWidgetToMapUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]RemoveAllWidgetsFromBigMapUI
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI final
{
public:
	E_BigMapSlot                                  Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearMapUISlot_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI");
static_assert(sizeof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, Slot) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, Success) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::Success' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI, CallFunc_ClearMapUISlot_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__C_RemoveAllWidgetsFromBigMapUI::CallFunc_ClearMapUISlot_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[c]FillInCanvas
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__c_FillInCanvas final
{
public:
	class UCanvasPanelSlot*                       Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0014(0x0010)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__c_FillInCanvas) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__c_FillInCanvas");
static_assert(sizeof(FL_NextGenCustomMode_C__c_FillInCanvas) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__c_FillInCanvas");
static_assert(offsetof(FL_NextGenCustomMode_C__c_FillInCanvas, Slot) == 0x000000, "Member 'FL_NextGenCustomMode_C__c_FillInCanvas::Slot' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_FillInCanvas, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__c_FillInCanvas::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_FillInCanvas, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__c_FillInCanvas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_FillInCanvas, K2Node_MakeStruct_Anchors) == 0x000014, "Member 'FL_NextGenCustomMode_C__c_FillInCanvas::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_FillInCanvas, K2Node_MakeStruct_Margin) == 0x000024, "Member 'FL_NextGenCustomMode_C__c_FillInCanvas::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[S]SetTeamCountMax
// 0x0018 (0x0018 - 0x0000)
struct FL_NextGenCustomMode_C__S_SetTeamCountMax final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDataInt_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__S_SetTeamCountMax) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__S_SetTeamCountMax");
static_assert(sizeof(FL_NextGenCustomMode_C__S_SetTeamCountMax) == 0x000018, "Wrong size on FL_NextGenCustomMode_C__S_SetTeamCountMax");
static_assert(offsetof(FL_NextGenCustomMode_C__S_SetTeamCountMax, InValue) == 0x000000, "Member 'FL_NextGenCustomMode_C__S_SetTeamCountMax::InValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_SetTeamCountMax, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__S_SetTeamCountMax::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__S_SetTeamCountMax, CallFunc_SetDataInt_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__S_SetTeamCountMax::CallFunc_SetDataInt_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetTeamCountMax
// 0x0018 (0x0018 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetTeamCountMax final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetTeamCountMax) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetTeamCountMax");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetTeamCountMax) == 0x000018, "Wrong size on FL_NextGenCustomMode_C__A_GetTeamCountMax");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetTeamCountMax, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetTeamCountMax::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetTeamCountMax, OutValue) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetTeamCountMax::OutValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetTeamCountMax, CallFunc_GetDataInt_OutValue) == 0x00000C, "Member 'FL_NextGenCustomMode_C__A_GetTeamCountMax::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetTeamCountMax, CallFunc_GetDataInt_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetTeamCountMax::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetCharacters
// 0x00A8 (0x00A8 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetCharacters final
{
public:
	bool                                          OnlyRealPlayers;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASolarCharacter*>                Characters;                                        // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ASolarCharacter*>                Temp;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_1;                              // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOBPlayer_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetCharacters) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetCharacters");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetCharacters) == 0x0000A8, "Wrong size on FL_NextGenCustomMode_C__A_GetCharacters");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, OnlyRealPlayers) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::OnlyRealPlayers' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Characters) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Characters' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp_byte_Variable) == 0x000030, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp_int_Array_Index_Variable) == 0x000040, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp_string_Variable) == 0x000050, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, Temp_byte_Variable_1) == 0x000060, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_FindPlayers_ReturnValue) == 0x000070, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Array_Get_Item) == 0x000080, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_GetSolarCharacter_ReturnValue) == 0x000090, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_IsOBPlayer_ReturnValue) == 0x0000A0, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_IsOBPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetCharacters, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A2, "Member 'FL_NextGenCustomMode_C__A_GetCharacters::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]PrintLog
// 0x0160 (0x0160 - 0x0000)
struct FL_NextGenCustomMode_C__A_PrintLog final
{
public:
	class FString                                 Prefix;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            InputPin;                                          // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameModeID_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0110(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_PrintLog) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_PrintLog");
static_assert(sizeof(FL_NextGenCustomMode_C__A_PrintLog) == 0x000160, "Wrong size on FL_NextGenCustomMode_C__A_PrintLog");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, Prefix) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_PrintLog::Prefix' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, InputPin) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_PrintLog::InputPin' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, __WorldContext) == 0x000060, "Member 'FL_NextGenCustomMode_C__A_PrintLog::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, Temp) == 0x000068, "Member 'FL_NextGenCustomMode_C__A_PrintLog::Temp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_GetGameModeID_ReturnValue) == 0x000078, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_GetGameModeID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'FL_NextGenCustomMode_C__A_PrintLog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'FL_NextGenCustomMode_C__A_PrintLog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000100, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, Temp_string_Variable) == 0x000110, "Member 'FL_NextGenCustomMode_C__A_PrintLog::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000130, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_PrintLog, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'FL_NextGenCustomMode_C__A_PrintLog::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.ToBool
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C_ToBool final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_ToBool) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_ToBool");
static_assert(sizeof(FL_NextGenCustomMode_C_ToBool) == 0x000020, "Wrong size on FL_NextGenCustomMode_C_ToBool");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, String) == 0x000000, "Member 'FL_NextGenCustomMode_C_ToBool::String' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_ToBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, Bool) == 0x000018, "Member 'FL_NextGenCustomMode_C_ToBool::Bool' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000019, "Member 'FL_NextGenCustomMode_C_ToBool::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00001A, "Member 'FL_NextGenCustomMode_C_ToBool::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_ToBool, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'FL_NextGenCustomMode_C_ToBool::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetBattleTime
// 0x0018 (0x0018 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetBattleTime final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Time;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurBattleTime_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetBattleTime) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetBattleTime");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetBattleTime) == 0x000018, "Wrong size on FL_NextGenCustomMode_C__A_GetBattleTime");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBattleTime, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetBattleTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBattleTime, Time) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetBattleTime::Time' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBattleTime, CallFunc_GetCurBattleTime_ReturnValue) == 0x00000C, "Member 'FL_NextGenCustomMode_C__A_GetBattleTime::CallFunc_GetCurBattleTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetBattleTime, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetBattleTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[C]SetWidgetVisibility
// 0x0070 (0x0070 - 0x0000)
struct FL_NextGenCustomMode_C__C_SetWidgetVisibility final
{
public:
	E_BattleControlWidgets                        Widget;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visibility;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGlobalEventSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__C_SetWidgetVisibility) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__C_SetWidgetVisibility");
static_assert(sizeof(FL_NextGenCustomMode_C__C_SetWidgetVisibility) == 0x000070, "Wrong size on FL_NextGenCustomMode_C__C_SetWidgetVisibility");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, Widget) == 0x000000, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::Widget' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, Visibility) == 0x000001, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, __WorldContext) == 0x000008, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, Temp_bool_Variable) == 0x000010, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, CallFunc_Conv_ByteToString_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, Temp_string_Variable) == 0x000030, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, Temp_string_Variable_1) == 0x000040, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, K2Node_Select_Default) == 0x000050, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__C_SetWidgetVisibility, K2Node_MakeArray_Array) == 0x000060, "Member 'FL_NextGenCustomMode_C__C_SetWidgetVisibility::K2Node_MakeArray_Array' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]GetModeConfig
// 0x0030 (0x0030 - 0x0000)
struct FL_NextGenCustomMode_C__A_GetModeConfig final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCGMGameplayConfig*                     ModeConfig;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCustomGameState*                      K2Node_DynamicCast_AsSCustom_Game_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCGMGameplayConfig*                     CallFunc_GetCGMGameplayConfig_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_GetModeConfig) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_GetModeConfig");
static_assert(sizeof(FL_NextGenCustomMode_C__A_GetModeConfig) == 0x000030, "Wrong size on FL_NextGenCustomMode_C__A_GetModeConfig");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, ModeConfig) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::ModeConfig' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, K2Node_DynamicCast_AsSCustom_Game_State) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::K2Node_DynamicCast_AsSCustom_Game_State' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_GetModeConfig, CallFunc_GetCGMGameplayConfig_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_GetModeConfig::CallFunc_GetCGMGameplayConfig_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.GetTeamPlayerCount
// 0x00E0 (0x00E0 - 0x0000)
struct FL_NextGenCustomMode_C_GetTeamPlayerCount final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num_Mode;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMatchRuleID_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_MatchRule             CallFunc_GetRowData_ReturnValue;                   // 0x0020(0x00B8)(ConstParm)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_GetTeamPlayerCount) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_GetTeamPlayerCount");
static_assert(sizeof(FL_NextGenCustomMode_C_GetTeamPlayerCount) == 0x0000E0, "Wrong size on FL_NextGenCustomMode_C_GetTeamPlayerCount");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, Num_Mode) == 0x000008, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::Num_Mode' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000010, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, CallFunc_GetMatchRuleID_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::CallFunc_GetMatchRuleID_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, CallFunc_GetRowData_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetTeamPlayerCount, CallFunc_HasRowKey_ReturnValue) == 0x0000D8, "Member 'FL_NextGenCustomMode_C_GetTeamPlayerCount::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.GetRandomKeyInWidget
// 0x00C0 (0x00C0 - 0x0000)
struct FL_NextGenCustomMode_C_GetRandomKeyInWidget final
{
public:
	TMap<int32, int32>                            Key_Weight;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitKey;                                            // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SumWeight;                                         // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_SumOfIntArray_Sum;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_GetRandomKeyInWidget) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_GetRandomKeyInWidget");
static_assert(sizeof(FL_NextGenCustomMode_C_GetRandomKeyInWidget) == 0x0000C0, "Wrong size on FL_NextGenCustomMode_C_GetRandomKeyInWidget");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, Key_Weight) == 0x000000, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::Key_Weight' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, __WorldContext) == 0x000050, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, HitKey) == 0x000058, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::HitKey' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, SumWeight) == 0x00005C, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::SumWeight' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_RandomInteger_ReturnValue) == 0x000080, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Map_Values_Values) == 0x000090, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_SumOfIntArray_Sum) == 0x0000A0, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_SumOfIntArray_Sum' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Map_Find_Value) == 0x0000AC, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000B4, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetRandomKeyInWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'FL_NextGenCustomMode_C_GetRandomKeyInWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[c]CreateWidget
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__c_CreateWidget final
{
public:
	const class UClass*                           WidgetClass;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     Layer;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            WidgetObject;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_1;                              // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_2;                              // 0x0022(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_3;                              // 0x0023(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_4;                              // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_5;                              // 0x0025(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_6;                              // 0x0026(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_7;                              // 0x0027(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_8;                              // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       K2Node_Select_Default;                             // 0x0029(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateSolarWidget_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__c_CreateWidget) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__c_CreateWidget");
static_assert(sizeof(FL_NextGenCustomMode_C__c_CreateWidget) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__c_CreateWidget");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, WidgetClass) == 0x000000, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::WidgetClass' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Layer) == 0x000008, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Layer' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, WidgetObject) == 0x000018, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::WidgetObject' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable) == 0x000020, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_1) == 0x000021, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_2) == 0x000022, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_3) == 0x000023, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_4) == 0x000024, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_5) == 0x000025, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_6) == 0x000026, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_7) == 0x000027, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, Temp_byte_Variable_8) == 0x000028, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, K2Node_Select_Default) == 0x000029, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_CreateWidget, CallFunc_CreateSolarWidget_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__c_CreateWidget::CallFunc_CreateSolarWidget_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[c]ShowWidget
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C__c_ShowWidget final
{
public:
	const class UClass*                           WidgetClass;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     Layer;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_Root                                     Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_1;                              // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_2;                              // 0x0022(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_3;                              // 0x0023(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_4;                              // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_5;                              // 0x0025(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_6;                              // 0x0026(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_7;                              // 0x0027(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       Temp_byte_Variable_8;                              // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUIRoot                                       K2Node_Select_Default;                             // 0x0029(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_ShowSolarWidget_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__c_ShowWidget) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__c_ShowWidget");
static_assert(sizeof(FL_NextGenCustomMode_C__c_ShowWidget) == 0x000038, "Wrong size on FL_NextGenCustomMode_C__c_ShowWidget");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, WidgetClass) == 0x000000, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::WidgetClass' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Layer) == 0x000008, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Layer' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable) == 0x000020, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_1) == 0x000021, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_2) == 0x000022, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_3) == 0x000023, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_4) == 0x000024, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_5) == 0x000025, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_6) == 0x000026, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_7) == 0x000027, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, Temp_byte_Variable_8) == 0x000028, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, K2Node_Select_Default) == 0x000029, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__c_ShowWidget, CallFunc_ShowSolarWidget_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__c_ShowWidget::CallFunc_ShowSolarWidget_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.SortMap
// 0x01B0 (0x01B0 - 0x0000)
struct FL_NextGenCustomMode_C_SortMap final
{
public:
	TMap<class FString, float>                    MapIn;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Ascending;                                         // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, float>                    Sorted;                                            // 0x0060(0x0050)(Parm, OutParm)
	TMap<class FString, float>                    sortResult;                                        // 0x00B0(0x0050)(Edit, BlueprintVisible)
	TArray<class FString>                         KeyMap;                                            // 0x0100(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_1;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_2;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C_SortMap) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_SortMap");
static_assert(sizeof(FL_NextGenCustomMode_C_SortMap) == 0x0001B0, "Wrong size on FL_NextGenCustomMode_C_SortMap");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, MapIn) == 0x000000, "Member 'FL_NextGenCustomMode_C_SortMap::MapIn' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Ascending) == 0x000050, "Member 'FL_NextGenCustomMode_C_SortMap::Ascending' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, __WorldContext) == 0x000058, "Member 'FL_NextGenCustomMode_C_SortMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Sorted) == 0x000060, "Member 'FL_NextGenCustomMode_C_SortMap::Sorted' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, sortResult) == 0x0000B0, "Member 'FL_NextGenCustomMode_C_SortMap::sortResult' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, KeyMap) == 0x000100, "Member 'FL_NextGenCustomMode_C_SortMap::KeyMap' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Temp_int_Array_Index_Variable) == 0x000110, "Member 'FL_NextGenCustomMode_C_SortMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Keys_Keys) == 0x000118, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Length_ReturnValue) == 0x000128, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Temp_bool_Variable) == 0x00012C, "Member 'FL_NextGenCustomMode_C_SortMap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Subtract_IntInt_ReturnValue) == 0x000130, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Temp_int_Variable) == 0x000134, "Member 'FL_NextGenCustomMode_C_SortMap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00013C, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000140, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Add_IntInt_ReturnValue_1) == 0x000144, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Temp_int_Variable_1) == 0x000148, "Member 'FL_NextGenCustomMode_C_SortMap::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000150, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Add_IntInt_ReturnValue_3) == 0x000154, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Array_Get_Item) == 0x000158, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_Value) == 0x00016C, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, Temp_int_Loop_Counter_Variable) == 0x000174, "Member 'FL_NextGenCustomMode_C_SortMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_Value_1) == 0x000188, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_ReturnValue_1) == 0x00018C, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Less_IntInt_ReturnValue) == 0x00018D, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Add_IntInt_ReturnValue_4) == 0x000190, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Array_Get_Item_2) == 0x000198, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_Value_2) == 0x0001A8, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Map_Find_ReturnValue_2) == 0x0001AC, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001AD, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, CallFunc_Not_PreBool_ReturnValue) == 0x0001AE, "Member 'FL_NextGenCustomMode_C_SortMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SortMap, K2Node_Select_Default) == 0x0001AF, "Member 'FL_NextGenCustomMode_C_SortMap::K2Node_Select_Default' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.GetAiComp
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C_GetAiComp final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBattleRoyaleGameModeAIComp*           AiComp;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBattleRoyaleGameModeAIComp*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_GetAiComp) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_GetAiComp");
static_assert(sizeof(FL_NextGenCustomMode_C_GetAiComp) == 0x000020, "Wrong size on FL_NextGenCustomMode_C_GetAiComp");
static_assert(offsetof(FL_NextGenCustomMode_C_GetAiComp, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C_GetAiComp::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetAiComp, AiComp) == 0x000008, "Member 'FL_NextGenCustomMode_C_GetAiComp::AiComp' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetAiComp, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C_GetAiComp::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_GetAiComp, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C_GetAiComp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.UseNewAiComp
// 0x0020 (0x0020 - 0x0000)
struct FL_NextGenCustomMode_C_UseNewAiComp final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCGMLogicComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_UseNewAiComp) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_UseNewAiComp");
static_assert(sizeof(FL_NextGenCustomMode_C_UseNewAiComp) == 0x000020, "Wrong size on FL_NextGenCustomMode_C_UseNewAiComp");
static_assert(offsetof(FL_NextGenCustomMode_C_UseNewAiComp, __WorldContext) == 0x000000, "Member 'FL_NextGenCustomMode_C_UseNewAiComp::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_UseNewAiComp, ReturnValue) == 0x000008, "Member 'FL_NextGenCustomMode_C_UseNewAiComp::ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_UseNewAiComp, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'FL_NextGenCustomMode_C_UseNewAiComp::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_UseNewAiComp, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'FL_NextGenCustomMode_C_UseNewAiComp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[ A]BindOnBasicSystemReady
// 0x0038 (0x0038 - 0x0000)
struct FL_NextGenCustomMode_C___A_BindOnBasicSystemReady final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReady;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCustomGameState*                      K2Node_DynamicCast_AsSCustom_Game_State;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C___A_BindOnBasicSystemReady");
static_assert(sizeof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady) == 0x000038, "Wrong size on FL_NextGenCustomMode_C___A_BindOnBasicSystemReady");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, Event) == 0x000000, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::Event' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, bReady) == 0x000018, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::bReady' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, CallFunc_IsServer_ReturnValue) == 0x000019, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, K2Node_DynamicCast_AsSCustom_Game_State) == 0x000028, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::K2Node_DynamicCast_AsSCustom_Game_State' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C___A_BindOnBasicSystemReady, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FL_NextGenCustomMode_C___A_BindOnBasicSystemReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]MiniMapToWorldLocation
// 0x0040 (0x0040 - 0x0000)
struct FL_NextGenCustomMode_C__A_MiniMapToWorldLocation final
{
public:
	struct FVector2D                              MiniMapPosition;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarMapManager*                       CallFunc__A_GetMapManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MiniMapToWorldLocation_ReturnValue;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_MiniMapToWorldLocation");
static_assert(sizeof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation) == 0x000040, "Wrong size on FL_NextGenCustomMode_C__A_MiniMapToWorldLocation");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, MiniMapPosition) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::MiniMapPosition' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, Z) == 0x000008, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::Z' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, WorldLocation) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::WorldLocation' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, CallFunc__A_GetMapManager_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::CallFunc__A_GetMapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_MiniMapToWorldLocation, CallFunc_MiniMapToWorldLocation_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C__A_MiniMapToWorldLocation::CallFunc_MiniMapToWorldLocation_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.[A]WorldLocationToMiniMap
// 0x0030 (0x0030 - 0x0000)
struct FL_NextGenCustomMode_C__A_WorldLocationToMiniMap final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MiniMapPosition;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarMapManager*                       CallFunc__A_GetMapManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_WorldLocationToMiniMap_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C__A_WorldLocationToMiniMap");
static_assert(sizeof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap) == 0x000030, "Wrong size on FL_NextGenCustomMode_C__A_WorldLocationToMiniMap");
static_assert(offsetof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap, WorldLocation) == 0x000000, "Member 'FL_NextGenCustomMode_C__A_WorldLocationToMiniMap::WorldLocation' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C__A_WorldLocationToMiniMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap, MiniMapPosition) == 0x000018, "Member 'FL_NextGenCustomMode_C__A_WorldLocationToMiniMap::MiniMapPosition' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap, CallFunc__A_GetMapManager_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C__A_WorldLocationToMiniMap::CallFunc__A_GetMapManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C__A_WorldLocationToMiniMap, CallFunc_WorldLocationToMiniMap_ReturnValue) == 0x000028, "Member 'FL_NextGenCustomMode_C__A_WorldLocationToMiniMap::CallFunc_WorldLocationToMiniMap_ReturnValue' has a wrong offset!");

// Function FL_NextGenCustomMode.FL_NextGenCustomMode_C.SumOfIntArray
// 0x0040 (0x0040 - 0x0000)
struct FL_NextGenCustomMode_C_SumOfIntArray final
{
public:
	TArray<int32>                                 Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sum;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_NextGenCustomMode_C_SumOfIntArray) == 0x000008, "Wrong alignment on FL_NextGenCustomMode_C_SumOfIntArray");
static_assert(sizeof(FL_NextGenCustomMode_C_SumOfIntArray) == 0x000040, "Wrong size on FL_NextGenCustomMode_C_SumOfIntArray");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, Array) == 0x000000, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::Array' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, __WorldContext) == 0x000010, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, Sum) == 0x000018, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::Sum' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, NewLocalVar_0) == 0x00001C, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, Temp_int_Array_Index_Variable) == 0x000024, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, CallFunc_Array_Get_Item) == 0x00002C, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_NextGenCustomMode_C_SumOfIntArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'FL_NextGenCustomMode_C_SumOfIntArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

