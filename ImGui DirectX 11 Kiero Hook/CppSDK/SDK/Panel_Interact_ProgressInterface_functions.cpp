#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_Interact_ProgressInterface

#include "Basic.hpp"

#include "Panel_Interact_ProgressInterface_classes.hpp"
#include "Panel_Interact_ProgressInterface_parameters.hpp"


namespace SDK
{

// Function Panel_Interact_ProgressInterface.Panel_Interact_ProgressInterface_C.DoPlayFadeInAnim
// (Public, BlueprintCallable, BlueprintEvent)

void IPanel_Interact_ProgressInterface_C::DoPlayFadeInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Panel_Interact_ProgressInterface_C", "DoPlayFadeInAnim");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_ProgressInterface.Panel_Interact_ProgressInterface_C.DoSetInteractType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InteractTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void IPanel_Interact_ProgressInterface_C::DoSetInteractType(const struct FGameplayTag& InteractTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Panel_Interact_ProgressInterface_C", "DoSetInteractType");

	Params::Panel_Interact_ProgressInterface_C_DoSetInteractType Parms{};

	Parms.InteractTag = std::move(InteractTag);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_ProgressInterface.Panel_Interact_ProgressInterface_C.DoGetInteractType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    NewParam                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void IPanel_Interact_ProgressInterface_C::DoGetInteractType(struct FGameplayTag* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Panel_Interact_ProgressInterface_C", "DoGetInteractType");

	Params::Panel_Interact_ProgressInterface_C_DoGetInteractType Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function Panel_Interact_ProgressInterface.Panel_Interact_ProgressInterface_C.DoEnablePassiveBuffDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocalTextID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IPanel_Interact_ProgressInterface_C::DoEnablePassiveBuffDisplay(int32 CharacterID, int32 LocalTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Panel_Interact_ProgressInterface_C", "DoEnablePassiveBuffDisplay");

	Params::Panel_Interact_ProgressInterface_C_DoEnablePassiveBuffDisplay Parms{};

	Parms.CharacterID = CharacterID;
	Parms.LocalTextID = LocalTextID;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_ProgressInterface.Panel_Interact_ProgressInterface_C.DoGetTagToInteractType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGameplayTag, E_Interact_Type>*NewParam                                               (Parm, OutParm)

void IPanel_Interact_ProgressInterface_C::DoGetTagToInteractType(TMap<struct FGameplayTag, E_Interact_Type>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("Panel_Interact_ProgressInterface_C", "DoGetTagToInteractType");

	Params::Panel_Interact_ProgressInterface_C_DoGetTagToInteractType Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}

