#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Logic_TeamDeathMatch

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_Shop_TDM_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.ExecuteUbergraph_BP_Logic_TeamDeathMatch
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Side;                                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RPCId;                                // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESCMDataChangeType                            K2Node_CustomEvent_ChangeType;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mode_TeamDeathMatch_C*              K2Node_DynamicCast_AsBP_Mode_Team_Death_Match;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATDMGameState*                          K2Node_DynamicCast_AsTDMGame_State;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCustomRoomMode_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0068(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         Temp_string_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_1;                              // 0x0088(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch) == 0x0000D8, "Wrong size on BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, EntryPoint) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_Event_Side) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_Event_Side' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_Event_RPCId) == 0x000024, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_Event_RPCId' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_CustomEvent_ChangeType) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_CustomEvent_ChangeType' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_CustomEvent_OldValue) == 0x00002C, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_CustomEvent_NewValue) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_GetSolarGameMode_ReturnValue) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_DynamicCast_AsBP_Mode_Team_Death_Match) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_DynamicCast_AsBP_Mode_Team_Death_Match' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_DynamicCast_AsTDMGame_State) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_DynamicCast_AsTDMGame_State' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_IsCustomRoomMode_ReturnValue) == 0x000061, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_IsCustomRoomMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, Temp_byte_Variable) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, Temp_string_Variable) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, Temp_byte_Variable_1) == 0x000088, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_FindPlayers_ReturnValue) == 0x000098, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_GetSolarCharacter_ReturnValue) == 0x0000C8, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.TrySupplementAiBySide
// 0x0010 (0x0010 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide final
{
public:
	class FString                                 Side;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide) == 0x000010, "Wrong size on BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide, Side) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide::Side' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_ChangeInKillCount
// 0x000C (0x000C - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount final
{
public:
	ESCMDataChangeType                            ChangeType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount) == 0x000004, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount) == 0x00000C, "Wrong size on BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount, ChangeType) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount::ChangeType' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount, OldValue) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount::OldValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount, NewValue) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount::NewValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.OnMatchingClosed
// 0x0004 (0x0004 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_OnMatchingClosed final
{
public:
	int32                                         RPCId;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_OnMatchingClosed) == 0x000004, "Wrong alignment on BP_Logic_TeamDeathMatch_C_OnMatchingClosed");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_OnMatchingClosed) == 0x000004, "Wrong size on BP_Logic_TeamDeathMatch_C_OnMatchingClosed");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnMatchingClosed, RPCId) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_OnMatchingClosed::RPCId' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Check to See if ATeam Has Reached the Winning Kill Count
// 0x0038 (0x0038 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count final
{
public:
	bool                                          Has_Winner;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count) == 0x000038, "Wrong size on BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, Has_Winner) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::Has_Winner' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_GetDataInt_OutValue) == 0x00002C, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_GetDataInt_ReturnValue) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000031, "Member 'BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Join Process
// 0x0230 (0x0230 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Player_Join_Process final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRevive;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Local_Team;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PlayerState_TeamDeathMatch_C*       K2Node_DynamicCast_AsBP_Player_State_Team_Death_Match; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASolarPlayerStart*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOBPlayer_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerStart*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Character_TeamDeathMatch_C*         K2Node_DynamicCast_AsBP_Character_Team_Death_Match; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASolarPlayerStart*>              CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameMode*                              K2Node_DynamicCast_AsGame_Mode;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMatchState_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASolarPlayerStart*                      CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResurrectCharacter_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AElement_TargetPointsManger_TDM_C*      CallFunc_GetActorOfClass_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0xE];                                      // 0x01F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0200(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Player_Join_Process) == 0x000010, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Player_Join_Process");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Player_Join_Process) == 0x000230, "Wrong size on BP_Logic_TeamDeathMatch_C_Player_Join_Process");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, Player) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::Player' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, IsRevive) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::IsRevive' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, Local_Team) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::Local_Team' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Conv_BoolToString_ReturnValue) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_AsBP_Player_State_Team_Death_Match) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_AsBP_Player_State_Team_Death_Match' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_IsOBPlayer_ReturnValue) == 0x000054, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_IsOBPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_RandomInteger_ReturnValue) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetTeamName_ReturnValue) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetSolarCharacter_ReturnValue) == 0x0000B0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_AsBP_Character_Team_Death_Match) == 0x0000C0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_AsBP_Character_Team_Death_Match' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetDisplayName_ReturnValue) == 0x0000D0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x0000F8, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetGameMode_ReturnValue) == 0x000108, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_AsGame_Mode) == 0x000118, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_AsGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Conv_IntToString_ReturnValue) == 0x000128, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetMatchState_ReturnValue) == 0x000138, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetMatchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_NotEqual_NameName_ReturnValue) == 0x000150, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000158, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000168, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_RandomInteger_ReturnValue_1) == 0x000178, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000180, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000198, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetTransform_ReturnValue_1) == 0x0001B0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_ResurrectCharacter_ReturnValue) == 0x0001E0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_ResurrectCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_GetActorOfClass_ReturnValue) == 0x0001E8, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, CallFunc_IsValid_ReturnValue_2) == 0x0001F0, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, Temp_bool_Variable) == 0x0001F1, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Join_Process, K2Node_Select_Default) == 0x000200, "Member 'BP_Logic_TeamDeathMatch_C_Player_Join_Process::K2Node_Select_Default' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.AddProps
// 0x0088 (0x0088 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_AddProps final
{
public:
	class ASolarCharacter*                        SolarCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, int32>                            ItemID;                                            // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_AddProps) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_AddProps");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_AddProps) == 0x000088, "Wrong size on BP_Logic_TeamDeathMatch_C_AddProps");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, SolarCharacter) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::SolarCharacter' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, ItemID) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::ItemID' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Map_Find_Value) == 0x000074, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_AddProps, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_Logic_TeamDeathMatch_C_AddProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Revive Process
// 0x0008 (0x0008 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Player_Revive_Process final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Player_Revive_Process) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Player_Revive_Process");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Player_Revive_Process) == 0x000008, "Wrong size on BP_Logic_TeamDeathMatch_C_Player_Revive_Process");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Revive_Process, Player) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Player_Revive_Process::Player' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Update Battle Time
// 0x0088 (0x0088 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Update_Battle_Time final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESCMPlayerState>                       Temp_byte_Variable;                                // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ASolarGameState*                        CallFunc_GetSolarGameState_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_string_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Temp_byte_Variable_1;                              // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDataInt_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Update_Battle_Time");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time) == 0x000088, "Wrong size on BP_Logic_TeamDeathMatch_C_Update_Battle_Time");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Time) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Time' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_byte_Variable) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_GetSolarGameState_ReturnValue) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_GetSolarGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_string_Variable) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_int_Variable) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, K2Node_SwitchName_CmpSuccess) == 0x000044, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, Temp_byte_Variable_1) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_FindPlayers_ReturnValue) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_SetDataInt_ReturnValue) == 0x000079, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_SetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_GetDataInt_OutValue) == 0x00007C, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_GetDataInt_ReturnValue) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_Time, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_Time::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Update Battle State
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Update_Battle_State final
{
public:
	class ASolarGameMode*                         CallFunc_GetGameModeOwner_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMatchState_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATDMGameState*                          K2Node_DynamicCast_AsTDMGame_State;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarGameMode*                         CallFunc_GetGameModeOwner_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count_Has_Winner; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mode_TeamDeathMatch_C*              K2Node_DynamicCast_AsBP_Mode_Team_Death_Match;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Mode_TeamDeathMatch_C*              K2Node_DynamicCast_AsBP_Mode_Team_Death_Match_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATDMGameState*                          K2Node_DynamicCast_AsTDMGame_State_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue_1;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue_1;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Update_Battle_State) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Update_Battle_State");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Update_Battle_State) == 0x0000A0, "Wrong size on BP_Logic_TeamDeathMatch_C_Update_Battle_State");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetGameModeOwner_ReturnValue) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetGameModeOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetMatchState_ReturnValue) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetMatchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_AsTDMGame_State) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_AsTDMGame_State' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_SwitchName_CmpSuccess) == 0x000021, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetGameModeOwner_ReturnValue_1) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetGameModeOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count_Has_Winner) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count_Has_Winner' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_AsBP_Mode_Team_Death_Match) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_AsBP_Mode_Team_Death_Match' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_AsBP_Mode_Team_Death_Match_1) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_AsBP_Mode_Team_Death_Match_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetGameState_ReturnValue_1) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_AsTDMGame_State_1) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_AsTDMGame_State_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetDataInt_OutValue) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetDataInt_ReturnValue) == 0x000084, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetDataInt_OutValue_1) == 0x000098, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetDataInt_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_GetDataInt_ReturnValue_1) == 0x00009C, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_GetDataInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Update_Battle_State, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009D, "Member 'BP_Logic_TeamDeathMatch_C_Update_Battle_State::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.OnBattleEndBuriedPoint
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Temp_byte_Variable;                                // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_1;                              // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         Temp_string_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0068(0x0050)(ConstParm)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint) == 0x0000B8, "Wrong size on BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, Temp_byte_Variable) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, Temp_byte_Variable_1) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, Temp_string_Variable) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_FindPlayers_ReturnValue) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint, K2Node_MakeMap_Map) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_OnBattleEndBuriedPoint::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.On Role Position Reporting
// 0x0200 (0x0200 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting final
{
public:
	class ASCMPlayerState*                        NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESCMPlayerState>                       Temp_byte_Variable;                                // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable_1;                              // 0x0020(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_string_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Side_TDM_Output_Get;                  // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x01B0(0x0050)(ConstParm)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting) == 0x000200, "Wrong size on BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, NewLocalVar_0) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, Temp_byte_Variable) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, Temp_byte_Variable_1) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, Temp_string_Variable) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_FindPlayers_ReturnValue) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_GetTeamName_ReturnValue) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_IsEmpty_ReturnValue) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Get_Side_TDM_Output_Get) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Get_Side_TDM_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_GetSolarCharacter_ReturnValue) == 0x000090, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Less_IntInt_ReturnValue) == 0x00009D, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_BreakVector_X) == 0x0000AC, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_BreakVector_Z) == 0x0000B4, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Format_ReturnValue) == 0x000188, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, CallFunc_Conv_TextToString_ReturnValue) == 0x0001A0, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting, K2Node_MakeMap_Map) == 0x0001B0, "Member 'BP_Logic_TeamDeathMatch_C_On_Role_Position_Reporting::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.On Take the Initiative to Exit Reporting
// 0x0190 (0x0190 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Side_TDM_Output_Get;                  // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataInt_OutValue_1;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataInt_ReturnValue_1;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0140(0x0050)(ConstParm)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting) == 0x000190, "Wrong size on BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, Player) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::Player' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Get_Side_TDM_Output_Get) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Get_Side_TDM_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_GetDataInt_OutValue) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_GetDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_GetDataInt_ReturnValue) == 0x00002C, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_GetDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_GetTimeSeconds_ReturnValue) == 0x000088, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000A0, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_GetDataInt_OutValue_1) == 0x0000B0, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_GetDataInt_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_GetDataInt_ReturnValue_1) == 0x0000B4, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_GetDataInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000B5, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Format_ReturnValue) == 0x000110, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting, K2Node_MakeMap_Map) == 0x000140, "Member 'BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetRealPlayerNumInDM
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM final
{
public:
	int32                                         TeamRedPlayerNum;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamBluePlayerNum;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_TeamBluePlayerNum;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_TeamRedPlayerNum;                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESCMPlayerState>                       Temp_byte_Variable;                                // 0x0020(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable_1;                              // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_2;                              // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable_3;                              // 0x0060(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue_1;                // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM) == 0x0000E0, "Wrong size on BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, TeamRedPlayerNum) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::TeamRedPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, TeamBluePlayerNum) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::TeamBluePlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Local_TeamBluePlayerNum) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Local_TeamBluePlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Local_TeamRedPlayerNum) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Local_TeamRedPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_byte_Variable) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_byte_Variable_1) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_byte_Variable_2) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Variable) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_byte_Variable_3) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, Temp_int_Variable_1) == 0x000074, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, K2Node_MakeArray_Array_1) == 0x000090, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_FindPlayers_ReturnValue) == 0x0000A0, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_FindPlayers_ReturnValue_1) == 0x0000B0, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_FindPlayers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_IsAIPlayer_ReturnValue) == 0x0000D0, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_IsAIPlayer_ReturnValue_1) == 0x0000D1, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_IsAIPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DD, "Member 'BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Quit Process
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Player_Quit_Process final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESCMPlayerOutType                             OutType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Team_temp;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ASolarGameMode*                         CallFunc_GetGameModeOwner_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetMatchState_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharacterID_CharacterID;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterID_SkinID;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterID_ColorID;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Side_TDM_Output_Get;                  // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASolarGameMode*                         CallFunc_GetSolarGameMode_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerNumInDM_RedAllPlayerNum;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerNumInDM_RedRealPlayerNum;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerNumInDM_BlueAllPlayerNum;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerNumInDM_BlueRealPlayerNum;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mode_TeamDeathMatch_C*              K2Node_DynamicCast_AsBP_Mode_Team_Death_Match;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Player_Quit_Process");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process) == 0x0000A0, "Wrong size on BP_Logic_TeamDeathMatch_C_Player_Quit_Process");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, Player) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::Player' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, OutType) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::OutType' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, Team_temp) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::Team_temp' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetGameModeOwner_ReturnValue) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetGameModeOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetMatchState_ReturnValue) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetMatchState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_NotEqual_NameName_ReturnValue) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetSolarCharacter_ReturnValue) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetCharacterID_CharacterID) == 0x000054, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetCharacterID_CharacterID' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetCharacterID_SkinID) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetCharacterID_SkinID' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetCharacterID_ColorID) == 0x00005C, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetCharacterID_ColorID' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_Get_Side_TDM_Output_Get) == 0x000060, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_Get_Side_TDM_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetSolarGameMode_ReturnValue) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetSolarGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetPlayerNumInDM_RedAllPlayerNum) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetPlayerNumInDM_RedAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetPlayerNumInDM_RedRealPlayerNum) == 0x00007C, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetPlayerNumInDM_RedRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetPlayerNumInDM_BlueAllPlayerNum) == 0x000080, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetPlayerNumInDM_BlueAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_GetPlayerNumInDM_BlueRealPlayerNum) == 0x000084, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_GetPlayerNumInDM_BlueRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, K2Node_DynamicCast_AsBP_Mode_Team_Death_Match) == 0x000088, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::K2Node_DynamicCast_AsBP_Mode_Team_Death_Match' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000099, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00009A, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_BooleanOR_ReturnValue_1) == 0x00009C, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Player_Quit_Process, CallFunc_BooleanAND_ReturnValue) == 0x00009D, "Member 'BP_Logic_TeamDeathMatch_C_Player_Quit_Process::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.InitModeData
// 0x0140 (0x0140 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_InitModeData final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_____;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData______;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_Loading__;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_______;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData______1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_______1;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Shop_TDM>                    CallFunc_Get_TDMGMData________4;                   // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_AILevel;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            CallFunc_Get_TDMGMData___ItemID;                   // 0x0048(0x0050)()
	TMap<int32, int32>                            CallFunc_Get_TDMGMData___ItemID_1;                 // 0x0098(0x0050)()
	TMap<int32, int32>                            CallFunc_Get_TDMGMData_AITempleteMap;              // 0x00E8(0x0050)()
	int32                                         CallFunc_Get_TDMGMData_________;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_TDMGMData_ReportingInterval;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_InitModeData) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_InitModeData");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_InitModeData) == 0x000140, "Wrong size on BP_Logic_TeamDeathMatch_C_InitModeData");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_____) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_____' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData______) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData______' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_Loading__) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_Loading__' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_______) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_______' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData________1) == 0x000014, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData________1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData______1) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData______1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData________) == 0x00001C, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData________' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_______1) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_______1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData________2) == 0x000024, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData________2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData________3) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData________3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData________4) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData________4' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_AILevel) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_AILevel' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData___ItemID) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData___ItemID' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData___ItemID_1) == 0x000098, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData___ItemID_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_AITempleteMap) == 0x0000E8, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_AITempleteMap' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_________) == 0x000138, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_________' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_InitModeData, CallFunc_Get_TDMGMData_ReportingInterval) == 0x00013C, "Member 'BP_Logic_TeamDeathMatch_C_InitModeData::CallFunc_Get_TDMGMData_ReportingInterval' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Get AILevel
// 0x0004 (0x0004 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_Get_AILevel final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_Get_AILevel) == 0x000004, "Wrong alignment on BP_Logic_TeamDeathMatch_C_Get_AILevel");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_Get_AILevel) == 0x000004, "Wrong size on BP_Logic_TeamDeathMatch_C_Get_AILevel");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_Get_AILevel, NewParam) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_Get_AILevel::NewParam' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetRandomPlayerStartLocation
// 0x0058 (0x0058 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation final
{
public:
	class FString                                 Side;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                NextLocation;                                      // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASolarPlayerStart*>              CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerStart*                      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation) == 0x000058, "Wrong size on BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, Side) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::Side' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, NextLocation) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::NextLocation' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_RandomInteger_ReturnValue) == 0x00003C, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetPlayerNumInDM
// 0x0100 (0x0100 - 0x0000)
struct BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM final
{
public:
	int32                                         RedAllPlayerNum;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RedRealPlayerNum;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlueAllPlayerNum;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlueRealPlayerNum;                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LBlueRealPlayerNum;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LBlueAllPlayerNum;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LRedRealPlayerNum;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LRedAllPlayerNum;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESCMPlayerState>                       Temp_byte_Variable;                                // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable_1;                              // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<uint8>                                 Temp_byte_Variable_2;                              // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ESCMPlayerState>                       Temp_byte_Variable_3;                              // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue;                  // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCMPlayerState*                        CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIPlayer_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCMPlayerState*>                CallFunc_FindPlayers_ReturnValue_1;                // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAIPlayer_ReturnValue_1;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM) == 0x000008, "Wrong alignment on BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM");
static_assert(sizeof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM) == 0x000100, "Wrong size on BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, RedAllPlayerNum) == 0x000000, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::RedAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, RedRealPlayerNum) == 0x000004, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::RedRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, BlueAllPlayerNum) == 0x000008, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::BlueAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, BlueRealPlayerNum) == 0x00000C, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::BlueRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, LBlueRealPlayerNum) == 0x000010, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::LBlueRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, LBlueAllPlayerNum) == 0x000014, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::LBlueAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, LRedRealPlayerNum) == 0x000018, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::LRedRealPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, LRedAllPlayerNum) == 0x00001C, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::LRedAllPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_byte_Variable) == 0x000038, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_byte_Variable_1) == 0x000048, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_byte_Variable_2) == 0x000058, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Variable) == 0x000068, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_3) == 0x000070, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_byte_Variable_3) == 0x000078, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, Temp_int_Variable_1) == 0x000088, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_4) == 0x00008C, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_FindPlayers_ReturnValue) == 0x0000A0, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_FindPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_IsAIPlayer_ReturnValue) == 0x0000C0, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_IsAIPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_FindPlayers_ReturnValue_1) == 0x0000E0, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_FindPlayers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM, CallFunc_IsAIPlayer_ReturnValue_1) == 0x0000FD, "Member 'BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM::CallFunc_IsAIPlayer_ReturnValue_1' has a wrong offset!");

}

