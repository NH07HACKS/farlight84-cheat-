#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotSpawner_TrainingMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BotSpawner_TrainingMode.BP_BotSpawner_TrainingMode_C
// 0x0068 (0x03C8 - 0x0360)
class ABP_BotSpawner_TrainingMode_C final : public ASolarBotSpawnerTraining
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnDelay;                                        // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriWeaponID;                                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecWeaponID;                                       // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarBotAIConfig*                      ConfigPreset;                                      // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLockHealth;                                       // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATriggerBox*                            BoundingBox;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatrolIndex;                                       // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PatrolDelay;                                       // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanRespawn;                                       // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTree*                          BehaviorTree;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        PatrolPoints;                                      // 0x03B0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bFocusForward;                                     // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsMoving;                                         // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPatrolReverse;                                    // 0x03C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_BotSpawner_TrainingMode(int32 EntryPoint);
	void TimerCheckBehavior();
	void OnBotSpawned(class ASolarBotAIController* BotController, class ASolarCharacter* BotCharacter);
	void TimerCheckBotAlive();
	void PatrolMove();
	void TimerCheckBoundingBox();
	void ReceiveBeginPlay();
	void OnRequestFailed_74D37B0048C2730CF70334B35DF1BA38();
	void OnMoveFinished_74D37B0048C2730CF70334B35DF1BA38(EPathFollowingResult Result, class AAIController* AIController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BotSpawner_TrainingMode_C">();
	}
	static class ABP_BotSpawner_TrainingMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BotSpawner_TrainingMode_C>();
	}
};
static_assert(alignof(ABP_BotSpawner_TrainingMode_C) == 0x000008, "Wrong alignment on ABP_BotSpawner_TrainingMode_C");
static_assert(sizeof(ABP_BotSpawner_TrainingMode_C) == 0x0003C8, "Wrong size on ABP_BotSpawner_TrainingMode_C");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, UberGraphFrame) == 0x000360, "Member 'ABP_BotSpawner_TrainingMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, DefaultSceneRoot) == 0x000368, "Member 'ABP_BotSpawner_TrainingMode_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, SpawnDelay) == 0x000370, "Member 'ABP_BotSpawner_TrainingMode_C::SpawnDelay' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, PriWeaponID) == 0x000374, "Member 'ABP_BotSpawner_TrainingMode_C::PriWeaponID' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, SecWeaponID) == 0x000378, "Member 'ABP_BotSpawner_TrainingMode_C::SecWeaponID' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, ConfigPreset) == 0x000380, "Member 'ABP_BotSpawner_TrainingMode_C::ConfigPreset' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, bLockHealth) == 0x000388, "Member 'ABP_BotSpawner_TrainingMode_C::bLockHealth' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, BoundingBox) == 0x000390, "Member 'ABP_BotSpawner_TrainingMode_C::BoundingBox' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, PatrolIndex) == 0x000398, "Member 'ABP_BotSpawner_TrainingMode_C::PatrolIndex' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, PatrolDelay) == 0x00039C, "Member 'ABP_BotSpawner_TrainingMode_C::PatrolDelay' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, bCanRespawn) == 0x0003A0, "Member 'ABP_BotSpawner_TrainingMode_C::bCanRespawn' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, BehaviorTree) == 0x0003A8, "Member 'ABP_BotSpawner_TrainingMode_C::BehaviorTree' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, PatrolPoints) == 0x0003B0, "Member 'ABP_BotSpawner_TrainingMode_C::PatrolPoints' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, bFocusForward) == 0x0003C0, "Member 'ABP_BotSpawner_TrainingMode_C::bFocusForward' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, bIsMoving) == 0x0003C1, "Member 'ABP_BotSpawner_TrainingMode_C::bIsMoving' has a wrong offset!");
static_assert(offsetof(ABP_BotSpawner_TrainingMode_C, bPatrolReverse) == 0x0003C2, "Member 'ABP_BotSpawner_TrainingMode_C::bPatrolReverse' has a wrong offset!");

}

