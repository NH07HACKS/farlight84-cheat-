#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialLevelActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TutorialLevelActor.BP_TutorialLevelActor_C
// 0x0200 (0x04D8 - 0x02D8)
class ABP_TutorialLevelActor_C final : public ATutorialLevelInteractableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FRotator>                  指定步骤相机角度;                                  // 0x02E8(0x0050)(Edit, BlueprintVisible)
	TMap<int32, struct FVector2D>                 指定步骤任务面板位置;                              // 0x0338(0x0050)(Edit, BlueprintVisible)
	float                                         初始护盾值;                                        // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, bool>                             指定步骤停止疾跑;                                  // 0x0390(0x0050)(Edit, BlueprintVisible)
	TMap<int32, bool>                             指定步骤停止开镜;                                  // 0x03E0(0x0050)(Edit, BlueprintVisible)
	TMap<int32, struct FTransform>                指定步骤传送人物位置;                              // 0x0430(0x0050)(Edit, BlueprintVisible)
	TMap<int32, bool>                             指定步骤人物显隐;                                  // 0x0480(0x0050)(Edit, BlueprintVisible)
	class ULevelSequencePlayer*                   CurrentSequencePlayer;                             // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TutorialLevelActor(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnCharacterAllReadyEvent(class ASolarCharacter* Character);
	void OnStepActionBegan(const int32 ActionID);
	void ReceiveBeginPlay();
	void OnReceiveBeginPlay();
	void Register_Event_Internal();
	void CheckPlaySequencer(int32 ActionID);
	void OnLevelSequencePlayerBegin();
	void OnLevelSequencePlayerEnd();
	void Check_Play_AISequences(int32 ActionID);
	void SetStepFixedCameraAngle(int32 ActionID);
	void SetStepTaskPanelPos(int32 InActionID);
	void ReceiveSetTaskPanelPos(const struct FVector2D& InPos);
	void CheckStopAutoSprint(int32 InActionID);
	void ReceiveStopAutoSprint(bool IsStop);
	void InitialCharacterValue();
	void BP_OnCharacterAllReady(class ASolarCharacter* Character);
	void CheckStopScope(int32 InActionID);
	void ReceiveStopScope();
	void CheckTeleportCharacter(int32 InActionID);
	void SetStepCharacterVisible(int32 InActionID);
	void FilterSequence(int32 A, int32* OutActionID);
	void OnReceiveBeginPlayCopy();
	void OnLevelSequencePlayerEndCopy();
	void ReceiveSetTaskPanelPosCopy(const struct FVector2D& InPos);
	void ReceiveStopScopeCopy();
	void OnLevelSequencePlayerBeginCopy();
	void ReceiveStopAutoSprintCopy(bool IsStop);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TutorialLevelActor_C">();
	}
	static class ABP_TutorialLevelActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TutorialLevelActor_C>();
	}
};
static_assert(alignof(ABP_TutorialLevelActor_C) == 0x000008, "Wrong alignment on ABP_TutorialLevelActor_C");
static_assert(sizeof(ABP_TutorialLevelActor_C) == 0x0004D8, "Wrong size on ABP_TutorialLevelActor_C");
static_assert(offsetof(ABP_TutorialLevelActor_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_TutorialLevelActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_TutorialLevelActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤相机角度) == 0x0002E8, "Member 'ABP_TutorialLevelActor_C::指定步骤相机角度' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤任务面板位置) == 0x000338, "Member 'ABP_TutorialLevelActor_C::指定步骤任务面板位置' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 初始护盾值) == 0x000388, "Member 'ABP_TutorialLevelActor_C::初始护盾值' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤停止疾跑) == 0x000390, "Member 'ABP_TutorialLevelActor_C::指定步骤停止疾跑' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤停止开镜) == 0x0003E0, "Member 'ABP_TutorialLevelActor_C::指定步骤停止开镜' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤传送人物位置) == 0x000430, "Member 'ABP_TutorialLevelActor_C::指定步骤传送人物位置' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, 指定步骤人物显隐) == 0x000480, "Member 'ABP_TutorialLevelActor_C::指定步骤人物显隐' has a wrong offset!");
static_assert(offsetof(ABP_TutorialLevelActor_C, CurrentSequencePlayer) == 0x0004D0, "Member 'ABP_TutorialLevelActor_C::CurrentSequencePlayer' has a wrong offset!");

}

