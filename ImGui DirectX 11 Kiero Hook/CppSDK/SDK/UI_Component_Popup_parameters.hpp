#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Popup

#include "Basic.hpp"

#include "E_Type_Btn_structs.hpp"
#include "UMG_structs.hpp"
#include "E_State_Btn_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Popup.UI_Component_Popup_C.SetMainBtnState
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Popup_C_SetMainBtnState final
{
public:
	E_State_Btn                                   NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_SetMainBtnState) == 0x000001, "Wrong alignment on UI_Component_Popup_C_SetMainBtnState");
static_assert(sizeof(UI_Component_Popup_C_SetMainBtnState) == 0x000001, "Wrong size on UI_Component_Popup_C_SetMainBtnState");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnState, NewState) == 0x000000, "Member 'UI_Component_Popup_C_SetMainBtnState::NewState' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetTitle
// 0x0028 (0x0028 - 0x0000)
struct UI_Component_Popup_C_SetTitle final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(UI_Component_Popup_C_SetTitle) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetTitle");
static_assert(sizeof(UI_Component_Popup_C_SetTitle) == 0x000028, "Wrong size on UI_Component_Popup_C_SetTitle");
static_assert(offsetof(UI_Component_Popup_C_SetTitle, NewParam) == 0x000000, "Member 'UI_Component_Popup_C_SetTitle::NewParam' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetTitle, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'UI_Component_Popup_C_SetTitle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_Component_Popup_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_Tick) == 0x000004, "Wrong alignment on UI_Component_Popup_C_Tick");
static_assert(sizeof(UI_Component_Popup_C_Tick) == 0x00003C, "Wrong size on UI_Component_Popup_C_Tick");
static_assert(offsetof(UI_Component_Popup_C_Tick, MyGeometry) == 0x000000, "Member 'UI_Component_Popup_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_Component_Popup_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Popup_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Popup_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Popup_C_PreConstruct");
static_assert(sizeof(UI_Component_Popup_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Popup_C_PreConstruct");
static_assert(offsetof(UI_Component_Popup_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Popup_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Popup_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Component_Popup_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Component_Popup_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Component_Popup_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Component_Popup_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Component_Popup_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Popup_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_OnAnimationFinished) == 0x000008, "Wrong alignment on UI_Component_Popup_C_OnAnimationFinished");
static_assert(sizeof(UI_Component_Popup_C_OnAnimationFinished) == 0x000008, "Wrong size on UI_Component_Popup_C_OnAnimationFinished");
static_assert(offsetof(UI_Component_Popup_C_OnAnimationFinished, Animation) == 0x000000, "Member 'UI_Component_Popup_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.ExecuteUbergraph_UI_Component_Popup
// 0x0130 (0x0130 - 0x0000)
struct UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0054(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_7;                           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation_1;                          // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_11;                          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLocalText_ReturnValue_1;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00E8(0x0018)()
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_12;                          // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0118(0x0018)()
};
static_assert(alignof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup) == 0x000008, "Wrong alignment on UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup");
static_assert(sizeof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup) == 0x000130, "Wrong size on UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, EntryPoint) == 0x000000, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable) == 0x000004, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable) == 0x000005, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_1) == 0x000006, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_1) == 0x000007, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_2) == 0x000008, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_3) == 0x000009, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_2) == 0x00000A, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_4) == 0x00000B, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_5) == 0x00000C, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_3) == 0x00000D, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_6) == 0x00000E, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_7) == 0x00000F, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_4) == 0x000010, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_8) == 0x000011, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_9) == 0x000012, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_5) == 0x000013, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_10) == 0x000014, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_11) == 0x000015, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_6) == 0x000016, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_12) == 0x000028, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_13) == 0x000029, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_7) == 0x00002A, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_8) == 0x00002B, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_9) == 0x00002C, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_10) == 0x00002D, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_14) == 0x00002E, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_15) == 0x00002F, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_11) == 0x000030, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_16) == 0x000031, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_17) == 0x000032, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_12) == 0x000033, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_18) == 0x000034, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_byte_Variable_19) == 0x000035, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_13) == 0x000036, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, Temp_bool_Variable_14) == 0x000037, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default) == 0x000050, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_1) == 0x000051, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_MyGeometry) == 0x000054, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_InDeltaTime) == 0x00008C, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_IsDesignTime) == 0x000090, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_2) == 0x000091, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_3) == 0x000092, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_4) == 0x000093, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_5) == 0x000094, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_InLayoutType) == 0x000095, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_SwitchEnum_CmpSuccess) == 0x000096, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_6) == 0x000097, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_BooleanOR_ReturnValue_1) == 0x000099, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_7) == 0x00009A, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_8) == 0x00009B, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_9) == 0x00009C, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_Animation_1) == 0x0000A0, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_Animation_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Event_Animation) == 0x0000A8, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_10) == 0x0000B0, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_GetLocalText_ReturnValue) == 0x0000B8, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_11) == 0x0000C8, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_GetLocalText_ReturnValue_1) == 0x0000D8, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_GetLocalText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000E8, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000100, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, K2Node_Select_Default_12) == 0x000108, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000118, "Member 'UI_Component_Popup_C_ExecuteUbergraph_UI_Component_Popup::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.OnAnimationStarted
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Popup_C_OnAnimationStarted final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_OnAnimationStarted) == 0x000008, "Wrong alignment on UI_Component_Popup_C_OnAnimationStarted");
static_assert(sizeof(UI_Component_Popup_C_OnAnimationStarted) == 0x000008, "Wrong size on UI_Component_Popup_C_OnAnimationStarted");
static_assert(offsetof(UI_Component_Popup_C_OnAnimationStarted, Animation) == 0x000000, "Member 'UI_Component_Popup_C_OnAnimationStarted::Animation' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetNeedExitAnim
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Popup_C_SetNeedExitAnim final
{
public:
	bool                                          bNeedExitAnim_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Popup_C_SetNeedExitAnim) == 0x000001, "Wrong alignment on UI_Component_Popup_C_SetNeedExitAnim");
static_assert(sizeof(UI_Component_Popup_C_SetNeedExitAnim) == 0x000001, "Wrong size on UI_Component_Popup_C_SetNeedExitAnim");
static_assert(offsetof(UI_Component_Popup_C_SetNeedExitAnim, bNeedExitAnim_0) == 0x000000, "Member 'UI_Component_Popup_C_SetNeedExitAnim::bNeedExitAnim_0' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetSecondBtnType
// 0x00C8 (0x00C8 - 0x0000)
struct UI_Component_Popup_C_SetSecondBtnType final
{
public:
	E_Type_Btn                                    BtnType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Btn                                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Btn                                    Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_Btn                                   Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0028)()
};
static_assert(alignof(UI_Component_Popup_C_SetSecondBtnType) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetSecondBtnType");
static_assert(sizeof(UI_Component_Popup_C_SetSecondBtnType) == 0x0000C8, "Wrong size on UI_Component_Popup_C_SetSecondBtnType");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, BtnType) == 0x000000, "Member 'UI_Component_Popup_C_SetSecondBtnType::BtnType' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable) == 0x000004, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_byte_Variable_1) == 0x000034, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, K2Node_Select_Default) == 0x000038, "Member 'UI_Component_Popup_C_SetSecondBtnType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable_3) == 0x000048, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable_4) == 0x000058, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_struct_Variable_5) == 0x000068, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, Temp_byte_Variable_2) == 0x000078, "Member 'UI_Component_Popup_C_SetSecondBtnType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, K2Node_Select_Default_1) == 0x00007C, "Member 'UI_Component_Popup_C_SetSecondBtnType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, K2Node_Select_Default_2) == 0x00008C, "Member 'UI_Component_Popup_C_SetSecondBtnType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecondBtnType, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'UI_Component_Popup_C_SetSecondBtnType::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetMainBtnType
// 0x00C8 (0x00C8 - 0x0000)
struct UI_Component_Popup_C_SetMainBtnType final
{
public:
	E_Type_Btn                                    BtnType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Btn                                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Btn                                    Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_Btn                                   Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0028)()
};
static_assert(alignof(UI_Component_Popup_C_SetMainBtnType) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetMainBtnType");
static_assert(sizeof(UI_Component_Popup_C_SetMainBtnType) == 0x0000C8, "Wrong size on UI_Component_Popup_C_SetMainBtnType");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, BtnType) == 0x000000, "Member 'UI_Component_Popup_C_SetMainBtnType::BtnType' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable) == 0x000004, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_byte_Variable_1) == 0x000034, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, K2Node_Select_Default) == 0x000038, "Member 'UI_Component_Popup_C_SetMainBtnType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable_3) == 0x000048, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable_4) == 0x000058, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_struct_Variable_5) == 0x000068, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, Temp_byte_Variable_2) == 0x000078, "Member 'UI_Component_Popup_C_SetMainBtnType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, K2Node_Select_Default_1) == 0x00007C, "Member 'UI_Component_Popup_C_SetMainBtnType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, K2Node_Select_Default_2) == 0x00008C, "Member 'UI_Component_Popup_C_SetMainBtnType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnType, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'UI_Component_Popup_C_SetMainBtnType::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetMainBtnTextWithString
// 0x0028 (0x0028 - 0x0000)
struct UI_Component_Popup_C_SetMainBtnTextWithString final
{
public:
	class FString                                 LocalTextID;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(UI_Component_Popup_C_SetMainBtnTextWithString) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetMainBtnTextWithString");
static_assert(sizeof(UI_Component_Popup_C_SetMainBtnTextWithString) == 0x000028, "Wrong size on UI_Component_Popup_C_SetMainBtnTextWithString");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnTextWithString, LocalTextID) == 0x000000, "Member 'UI_Component_Popup_C_SetMainBtnTextWithString::LocalTextID' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnTextWithString, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'UI_Component_Popup_C_SetMainBtnTextWithString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetSecBtnText
// 0x0030 (0x0030 - 0x0000)
struct UI_Component_Popup_C_SetSecBtnText final
{
public:
	int32                                         主按钮本地化ID_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(UI_Component_Popup_C_SetSecBtnText) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetSecBtnText");
static_assert(sizeof(UI_Component_Popup_C_SetSecBtnText) == 0x000030, "Wrong size on UI_Component_Popup_C_SetSecBtnText");
static_assert(offsetof(UI_Component_Popup_C_SetSecBtnText, 主按钮本地化ID_0) == 0x000000, "Member 'UI_Component_Popup_C_SetSecBtnText::主按钮本地化ID_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecBtnText, CallFunc_GetLocalText_ReturnValue) == 0x000008, "Member 'UI_Component_Popup_C_SetSecBtnText::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetSecBtnText, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'UI_Component_Popup_C_SetSecBtnText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetMainBtnShow
// 0x0005 (0x0005 - 0x0000)
struct UI_Component_Popup_C_SetMainBtnShow final
{
public:
	bool                                          FirstButton_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_SetMainBtnShow) == 0x000001, "Wrong alignment on UI_Component_Popup_C_SetMainBtnShow");
static_assert(sizeof(UI_Component_Popup_C_SetMainBtnShow) == 0x000005, "Wrong size on UI_Component_Popup_C_SetMainBtnShow");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnShow, FirstButton_0) == 0x000000, "Member 'UI_Component_Popup_C_SetMainBtnShow::FirstButton_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnShow, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Popup_C_SetMainBtnShow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnShow, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Popup_C_SetMainBtnShow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnShow, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Popup_C_SetMainBtnShow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnShow, K2Node_Select_Default) == 0x000004, "Member 'UI_Component_Popup_C_SetMainBtnShow::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetMobileCloseBtnShow
// 0x0006 (0x0006 - 0x0000)
struct UI_Component_Popup_C_SetMobileCloseBtnShow final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformMobile_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_SetMobileCloseBtnShow) == 0x000001, "Wrong alignment on UI_Component_Popup_C_SetMobileCloseBtnShow");
static_assert(sizeof(UI_Component_Popup_C_SetMobileCloseBtnShow) == 0x000006, "Wrong size on UI_Component_Popup_C_SetMobileCloseBtnShow");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, bShow) == 0x000000, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::bShow' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, CallFunc_IsPlatformMobile_ReturnValue) == 0x000004, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::CallFunc_IsPlatformMobile_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMobileCloseBtnShow, K2Node_Select_Default) == 0x000005, "Member 'UI_Component_Popup_C_SetMobileCloseBtnShow::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetBgSize
// 0x0028 (0x0028 - 0x0000)
struct UI_Component_Popup_C_SetBgSize final
{
public:
	int32                                         Top_0;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bottom_0;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCustomizeBgSize_0;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_SetBgSize) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetBgSize");
static_assert(sizeof(UI_Component_Popup_C_SetBgSize) == 0x000028, "Wrong size on UI_Component_Popup_C_SetBgSize");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, Top_0) == 0x000000, "Member 'UI_Component_Popup_C_SetBgSize::Top_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, Bottom_0) == 0x000004, "Member 'UI_Component_Popup_C_SetBgSize::Bottom_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, IsCustomizeBgSize_0) == 0x000008, "Member 'UI_Component_Popup_C_SetBgSize::IsCustomizeBgSize_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000010, "Member 'UI_Component_Popup_C_SetBgSize::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'UI_Component_Popup_C_SetBgSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'UI_Component_Popup_C_SetBgSize::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetBgSize, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000020, "Member 'UI_Component_Popup_C_SetBgSize::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.ShowBtnBg
// 0x00B8 (0x00B8 - 0x0000)
struct UI_Component_Popup_C_ShowBtnBg final
{
public:
	bool                                          IsShowBtnBg_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBtnBgWithPrice_0;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPC_0;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerticalAlignment                            Temp_byte_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_1;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerticalAlignment                            K2Node_Select_Default_2;                           // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerticalAlignment                            Temp_byte_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_3;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVerticalAlignment                            K2Node_Select_Default_4;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_7;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_ShowBtnBg) == 0x000008, "Wrong alignment on UI_Component_Popup_C_ShowBtnBg");
static_assert(sizeof(UI_Component_Popup_C_ShowBtnBg) == 0x0000B8, "Wrong size on UI_Component_Popup_C_ShowBtnBg");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, IsShowBtnBg_0) == 0x000000, "Member 'UI_Component_Popup_C_ShowBtnBg::IsShowBtnBg_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, IsBtnBgWithPrice_0) == 0x000001, "Member 'UI_Component_Popup_C_ShowBtnBg::IsBtnBgWithPrice_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, IsPC_0) == 0x000002, "Member 'UI_Component_Popup_C_ShowBtnBg::IsPC_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable) == 0x000004, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable) == 0x000008, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_1) == 0x00000C, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_2) == 0x000010, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_1) == 0x000014, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default) == 0x000018, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_3) == 0x00001C, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_4) == 0x000020, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_2) == 0x000024, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_1) == 0x000028, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_MakeStruct_Margin) == 0x00002C, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_byte_Variable) == 0x00003C, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_byte_Variable_1) == 0x00003D, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_3) == 0x00003E, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_2) == 0x00003F, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_5) == 0x000040, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_6) == 0x000044, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_4) == 0x000048, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_3) == 0x00004C, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_MakeStruct_Margin_1) == 0x000050, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_byte_Variable_2) == 0x000060, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_byte_Variable_3) == 0x000061, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_5) == 0x000062, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_4) == 0x000063, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_struct_Variable) == 0x000064, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_struct_Variable_1) == 0x00006C, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_6) == 0x000074, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_5) == 0x000078, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_struct_Variable_2) == 0x000080, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_struct_Variable_3) == 0x000088, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_6) == 0x000090, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_float_Variable_7) == 0x000098, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000A0, "Member 'UI_Component_Popup_C_ShowBtnBg::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, Temp_bool_Variable_7) == 0x0000A8, "Member 'UI_Component_Popup_C_ShowBtnBg::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, K2Node_Select_Default_7) == 0x0000AC, "Member 'UI_Component_Popup_C_ShowBtnBg::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_ShowBtnBg, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x0000B0, "Member 'UI_Component_Popup_C_ShowBtnBg::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.SetMainBtnText
// 0x0030 (0x0030 - 0x0000)
struct UI_Component_Popup_C_SetMainBtnText final
{
public:
	int32                                         LocalTextID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(UI_Component_Popup_C_SetMainBtnText) == 0x000008, "Wrong alignment on UI_Component_Popup_C_SetMainBtnText");
static_assert(sizeof(UI_Component_Popup_C_SetMainBtnText) == 0x000030, "Wrong size on UI_Component_Popup_C_SetMainBtnText");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnText, LocalTextID) == 0x000000, "Member 'UI_Component_Popup_C_SetMainBtnText::LocalTextID' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnText, CallFunc_GetLocalText_ReturnValue) == 0x000008, "Member 'UI_Component_Popup_C_SetMainBtnText::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Popup_C_SetMainBtnText, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'UI_Component_Popup_C_SetMainBtnText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_Component_Popup.UI_Component_Popup_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Popup_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Popup_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_Popup_C_GetModuleName");
static_assert(sizeof(UI_Component_Popup_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_Popup_C_GetModuleName");
static_assert(offsetof(UI_Component_Popup_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_Popup_C_GetModuleName::ReturnValue' has a wrong offset!");

}

