#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_TeamDeathMatch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_Shop_TDM_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_BulletType_TDM_structs.hpp"
#include "E_PlayerState_TDM_structs.hpp"
#include "BP_Character_Framework_classes.hpp"
#include "Solarland_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Character_TeamDeathMatch.BP_Character_TeamDeathMatch_C
// 0x0070 (0x3EA0 - 0x3E30)
class ABP_Character_TeamDeathMatch_C final : public ABP_Character_Framework_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Character_TeamDeathMatch_C;      // 0x3E28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FS_Shop_TDM>                    武器数据;                                          // 0x3E30(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle_Rebirth;                               // 0x3E40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_Logic_TeamDeathMatch_C*             TDM_ModeMainLogic;                                 // 0x3E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HUD_TeamDeathMatch_C*               BP_HUD_TDM;                                        // 0x3E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PlayerState_TDM                             E_Playerstate;                                     // 0x3E58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E59[0x7];                                     // 0x3E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        RouteLocation;                                     // 0x3E60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         AI_PointNum;                                       // 0x3E70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReviveLocation;                                    // 0x3E74(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurReviveCountDown;                                // 0x3E80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E84[0x4];                                     // 0x3E84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Handle_CountDown;                                  // 0x3E88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Handle_IncincibleCountDown;                        // 0x3E90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurIncincibleCountDown;                            // 0x3E98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Pick_Blood_Bag;                                // 0x3E9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Character_TeamDeathMatch(int32 EntryPoint);
	void Event_Blood_Bag_Fx();
	void Event_Invincible();
	void Event_RevivePlayer();
	void BeginPlayBlueprint();
	void OnResurrectionFinished_Event_0(class ASCMPlayerState* Player, EResurrectType Type);
	void ReceiveBeginPlay();
	void Update_IncincibleCountDown();
	void EventCloseReviveUI();
	void Event_UpdateReviveCountDown();
	void Event_StartWeaponPanelCountdown(int32 CurReviveCountDown_0);
	void GetTDM_ModeMainLogic(class UBP_Logic_TeamDeathMatch_C** AsBP_Logic_Team_Death_Match);
	void Get_TDM_HUD(class ABP_HUD_TeamDeathMatch_C** HUD);
	void Revive_Process();
	void AddBullet(E_BulletType_TDM GunType);
	void GetWeaponLevelDamagBonus(float* Result);
	void Set_Can_Pick_Blood_Bag(bool Can_Pick_Blood_Bag_0);
	void GetPlayerState(class ASCMPlayerState** Player);
	void Get_Revive_Location(struct FVector* Location);
	void Get_Battle_Time(int32* BattleTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Character_TeamDeathMatch_C">();
	}
	static class ABP_Character_TeamDeathMatch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Character_TeamDeathMatch_C>();
	}
};
static_assert(alignof(ABP_Character_TeamDeathMatch_C) == 0x000010, "Wrong alignment on ABP_Character_TeamDeathMatch_C");
static_assert(sizeof(ABP_Character_TeamDeathMatch_C) == 0x003EA0, "Wrong size on ABP_Character_TeamDeathMatch_C");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, UberGraphFrame_BP_Character_TeamDeathMatch_C) == 0x003E28, "Member 'ABP_Character_TeamDeathMatch_C::UberGraphFrame_BP_Character_TeamDeathMatch_C' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, 武器数据) == 0x003E30, "Member 'ABP_Character_TeamDeathMatch_C::武器数据' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, TimerHandle_Rebirth) == 0x003E40, "Member 'ABP_Character_TeamDeathMatch_C::TimerHandle_Rebirth' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, TDM_ModeMainLogic) == 0x003E48, "Member 'ABP_Character_TeamDeathMatch_C::TDM_ModeMainLogic' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, BP_HUD_TDM) == 0x003E50, "Member 'ABP_Character_TeamDeathMatch_C::BP_HUD_TDM' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, E_Playerstate) == 0x003E58, "Member 'ABP_Character_TeamDeathMatch_C::E_Playerstate' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, RouteLocation) == 0x003E60, "Member 'ABP_Character_TeamDeathMatch_C::RouteLocation' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, AI_PointNum) == 0x003E70, "Member 'ABP_Character_TeamDeathMatch_C::AI_PointNum' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, ReviveLocation) == 0x003E74, "Member 'ABP_Character_TeamDeathMatch_C::ReviveLocation' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, CurReviveCountDown) == 0x003E80, "Member 'ABP_Character_TeamDeathMatch_C::CurReviveCountDown' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, Handle_CountDown) == 0x003E88, "Member 'ABP_Character_TeamDeathMatch_C::Handle_CountDown' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, Handle_IncincibleCountDown) == 0x003E90, "Member 'ABP_Character_TeamDeathMatch_C::Handle_IncincibleCountDown' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, CurIncincibleCountDown) == 0x003E98, "Member 'ABP_Character_TeamDeathMatch_C::CurIncincibleCountDown' has a wrong offset!");
static_assert(offsetof(ABP_Character_TeamDeathMatch_C, Can_Pick_Blood_Bag) == 0x003E9C, "Member 'ABP_Character_TeamDeathMatch_C::Can_Pick_Blood_Bag' has a wrong offset!");

}

