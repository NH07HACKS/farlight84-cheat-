#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattleChat_Appointment_ListSlot

#include "Basic.hpp"

#include "E_Appointment_State_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot
// 0x0018 (0x0018 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot) == 0x000008, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot) == 0x000018, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot, EntryPoint) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot, K2Node_Event_bIsExpanded) == 0x000004, "Member 'UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot, K2Node_Event_bIsSelected) == 0x000005, "Member 'UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot, K2Node_Event_ListItemObject) == 0x000008, "Member 'UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UI_BattleChat_Appointment_ListSlot_C_ExecuteUbergraph_UI_BattleChat_Appointment_ListSlot::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_PreConstruct");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_PreConstruct) == 0x000001, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_PreConstruct");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.SetAppointmentState
// 0x0048 (0x0048 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState final
{
public:
	E_Appointment_State                           AppointmentState_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable_5;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable_6;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable_11;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable_16;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState) == 0x000004, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState) == 0x000048, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, AppointmentState_0) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::AppointmentState_0' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable) == 0x000004, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_1) == 0x000008, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_2) == 0x00000C, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable) == 0x000010, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_1) == 0x000011, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_2) == 0x000012, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_3) == 0x000013, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_4) == 0x000014, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_5) == 0x000015, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_3) == 0x000018, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_4) == 0x00001C, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_5) == 0x000020, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_6) == 0x000024, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_6) == 0x000028, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_7) == 0x000029, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_8) == 0x00002A, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_9) == 0x00002B, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_10) == 0x00002C, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_11) == 0x00002D, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_12) == 0x00002E, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_13) == 0x00002F, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_14) == 0x000030, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_15) == 0x000031, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_int_Variable_7) == 0x000034, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, K2Node_Select_Default) == 0x000038, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, K2Node_Select_Default_1) == 0x00003C, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, K2Node_Select_Default_2) == 0x000040, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, K2Node_Select_Default_3) == 0x000041, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, Temp_byte_Variable_16) == 0x000042, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState, K2Node_Select_Default_4) == 0x000044, "Member 'UI_BattleChat_Appointment_ListSlot_C_SetAppointmentState::K2Node_Select_Default_4' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_BattleChat_Appointment_ListSlot.UI_BattleChat_Appointment_ListSlot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_BattleChat_Appointment_ListSlot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleChat_Appointment_ListSlot_C_GetModuleName) == 0x000008, "Wrong alignment on UI_BattleChat_Appointment_ListSlot_C_GetModuleName");
static_assert(sizeof(UI_BattleChat_Appointment_ListSlot_C_GetModuleName) == 0x000010, "Wrong size on UI_BattleChat_Appointment_ListSlot_C_GetModuleName");
static_assert(offsetof(UI_BattleChat_Appointment_ListSlot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_BattleChat_Appointment_ListSlot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

