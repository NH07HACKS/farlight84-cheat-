#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponCrosshairPanel

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponCrosshairPanel.WBP_WeaponCrosshairPanel_C.ExecuteUbergraph_WBP_WeaponCrosshairPanel
// 0x001C (0x001C - 0x0000)
struct WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESolarHitType                                 K2Node_Event_InHitType;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InHitShieldLevel;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_InShieldColor;                        // 0x000C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel) == 0x000004, "Wrong alignment on WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel");
static_assert(sizeof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel) == 0x00001C, "Wrong size on WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel, EntryPoint) == 0x000000, "Member 'WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel, K2Node_Event_InHitType) == 0x000004, "Member 'WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel::K2Node_Event_InHitType' has a wrong offset!");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel, K2Node_Event_InHitShieldLevel) == 0x000008, "Member 'WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel::K2Node_Event_InHitShieldLevel' has a wrong offset!");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel, K2Node_Event_InShieldColor) == 0x00000C, "Member 'WBP_WeaponCrosshairPanel_C_ExecuteUbergraph_WBP_WeaponCrosshairPanel::K2Node_Event_InShieldColor' has a wrong offset!");

// Function WBP_WeaponCrosshairPanel.WBP_WeaponCrosshairPanel_C.OnReceiveHitFeedback
// 0x0018 (0x0018 - 0x0000)
struct WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback final
{
public:
	ESolarHitType                                 InHitType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InHitShieldLevel;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InShieldColor;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback) == 0x000004, "Wrong alignment on WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback");
static_assert(sizeof(WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback) == 0x000018, "Wrong size on WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback, InHitType) == 0x000000, "Member 'WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback::InHitType' has a wrong offset!");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback, InHitShieldLevel) == 0x000004, "Member 'WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback::InHitShieldLevel' has a wrong offset!");
static_assert(offsetof(WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback, InShieldColor) == 0x000008, "Member 'WBP_WeaponCrosshairPanel_C_OnReceiveHitFeedback::InShieldColor' has a wrong offset!");

}

