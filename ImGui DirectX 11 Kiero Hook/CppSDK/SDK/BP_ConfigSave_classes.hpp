#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConfigSave

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConfigSave.BP_ConfigSave_C
// 0x0118 (0x0140 - 0x0028)
class UBP_ConfigSave_C final : public USaveGame
{
public:
	bool                                          bEnableAiTeammate;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bEnableCustomRoom;                                 // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCustomRoomData                        CustomRoomConfig;                                  // 0x0030(0x0100)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DebugGroupID;                                      // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugModeID;                                       // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugRuleID;                                       // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConfigSave_C">();
	}
	static class UBP_ConfigSave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ConfigSave_C>();
	}
};
static_assert(alignof(UBP_ConfigSave_C) == 0x000008, "Wrong alignment on UBP_ConfigSave_C");
static_assert(sizeof(UBP_ConfigSave_C) == 0x000140, "Wrong size on UBP_ConfigSave_C");
static_assert(offsetof(UBP_ConfigSave_C, bEnableAiTeammate) == 0x000028, "Member 'UBP_ConfigSave_C::bEnableAiTeammate' has a wrong offset!");
static_assert(offsetof(UBP_ConfigSave_C, bEnableCustomRoom) == 0x000029, "Member 'UBP_ConfigSave_C::bEnableCustomRoom' has a wrong offset!");
static_assert(offsetof(UBP_ConfigSave_C, CustomRoomConfig) == 0x000030, "Member 'UBP_ConfigSave_C::CustomRoomConfig' has a wrong offset!");
static_assert(offsetof(UBP_ConfigSave_C, DebugGroupID) == 0x000130, "Member 'UBP_ConfigSave_C::DebugGroupID' has a wrong offset!");
static_assert(offsetof(UBP_ConfigSave_C, DebugModeID) == 0x000134, "Member 'UBP_ConfigSave_C::DebugModeID' has a wrong offset!");
static_assert(offsetof(UBP_ConfigSave_C, DebugRuleID) == 0x000138, "Member 'UBP_ConfigSave_C::DebugRuleID' has a wrong offset!");

}

