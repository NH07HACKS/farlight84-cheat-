#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarlandCrashSightBridge

#include "Basic.hpp"


namespace SDK::Params
{

// Function SolarlandCrashSightBridge.SolarCrashReportManager.GetInstance
// 0x0008 (0x0008 - 0x0000)
struct SolarCrashReportManager_GetInstance final
{
public:
	class USolarCrashReportManager*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SolarCrashReportManager_GetInstance) == 0x000008, "Wrong alignment on SolarCrashReportManager_GetInstance");
static_assert(sizeof(SolarCrashReportManager_GetInstance) == 0x000008, "Wrong size on SolarCrashReportManager_GetInstance");
static_assert(offsetof(SolarCrashReportManager_GetInstance, ReturnValue) == 0x000000, "Member 'SolarCrashReportManager_GetInstance::ReturnValue' has a wrong offset!");

// Function SolarlandCrashSightBridge.SolarCrashReportManager.SetUserId
// 0x0010 (0x0010 - 0x0000)
struct SolarCrashReportManager_SetUserId final
{
public:
	class FString                                 InUserID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SolarCrashReportManager_SetUserId) == 0x000008, "Wrong alignment on SolarCrashReportManager_SetUserId");
static_assert(sizeof(SolarCrashReportManager_SetUserId) == 0x000010, "Wrong size on SolarCrashReportManager_SetUserId");
static_assert(offsetof(SolarCrashReportManager_SetUserId, InUserID) == 0x000000, "Member 'SolarCrashReportManager_SetUserId::InUserID' has a wrong offset!");

}

