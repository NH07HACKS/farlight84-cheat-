#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractionDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractionDoor.BP_InteractionDoor_C.CalcCloseDoorVelocity
// 0x00E0 (0x00E0 - 0x0000)
struct BP_InteractionDoor_C_CalcCloseDoorVelocity final
{
public:
	float                                         Dist;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Velocity;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0058(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractionDoor_C_CalcCloseDoorVelocity) == 0x000008, "Wrong alignment on BP_InteractionDoor_C_CalcCloseDoorVelocity");
static_assert(sizeof(BP_InteractionDoor_C_CalcCloseDoorVelocity) == 0x0000E0, "Wrong size on BP_InteractionDoor_C_CalcCloseDoorVelocity");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, Dist) == 0x000000, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::Dist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, Angle) == 0x000004, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::Angle' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, Velocity) == 0x000008, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000051, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000052, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000055, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, K2Node_MakeStruct_FormatArgumentData_1) == 0x000058, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B0, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanOR_ReturnValue) == 0x0000D0, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000D1, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000D2, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanAND_ReturnValue_2) == 0x0000D3, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0000D4, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D5, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanAND_ReturnValue_3) == 0x0000D6, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x0000D7, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcCloseDoorVelocity, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D8, "Member 'BP_InteractionDoor_C_CalcCloseDoorVelocity::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_InteractionDoor.BP_InteractionDoor_C.CalcOpenDoorForce
// 0x0024 (0x0024 - 0x0000)
struct BP_InteractionDoor_C_CalcOpenDoorForce final
{
public:
	float                                         Dist;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         First;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Second;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractionDoor_C_CalcOpenDoorForce) == 0x000004, "Wrong alignment on BP_InteractionDoor_C_CalcOpenDoorForce");
static_assert(sizeof(BP_InteractionDoor_C_CalcOpenDoorForce) == 0x000024, "Wrong size on BP_InteractionDoor_C_CalcOpenDoorForce");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, Dist) == 0x000000, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::Dist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, Angle) == 0x000004, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::Angle' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, First) == 0x000008, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::First' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, Second) == 0x00000C, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::Second' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000012, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000015, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000016, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000017, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanAND_ReturnValue_2) == 0x000019, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x00001B, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x00001D, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanAND_ReturnValue_3) == 0x00001E, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x00001F, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_CalcOpenDoorForce, CallFunc_BooleanOR_ReturnValue_2) == 0x000020, "Member 'BP_InteractionDoor_C_CalcOpenDoorForce::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_InteractionDoor.BP_InteractionDoor_C.ReceiveDoorClosingAngularVelocity
// 0x0038 (0x0038 - 0x0000)
struct BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity final
{
public:
	float                                         HitPointToShaftDist;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerToShaftDist;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CombatAngle;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCloseDoorVelocity_Velocity;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCloseDoorVelocity_Velocity_1;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcCloseDoorVelocity_Velocity_2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity) == 0x000004, "Wrong alignment on BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity");
static_assert(sizeof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity) == 0x000038, "Wrong size on BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, HitPointToShaftDist) == 0x000000, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::HitPointToShaftDist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, PlayerToShaftDist) == 0x000004, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::PlayerToShaftDist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CombatAngle) == 0x000008, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CombatAngle' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, ReturnValue) == 0x00000C, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_CalcCloseDoorVelocity_Velocity) == 0x000020, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_CalcCloseDoorVelocity_Velocity' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_CalcCloseDoorVelocity_Velocity_1) == 0x000028, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_CalcCloseDoorVelocity_Velocity_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00002D, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_CalcCloseDoorVelocity_Velocity_2) == 0x000030, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_CalcCloseDoorVelocity_Velocity_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity, CallFunc_BooleanAND_ReturnValue_1) == 0x000034, "Member 'BP_InteractionDoor_C_ReceiveDoorClosingAngularVelocity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_InteractionDoor.BP_InteractionDoor_C.ReceiveComputeRotationalForce
// 0x0048 (0x0048 - 0x0000)
struct BP_InteractionDoor_C_ReceiveComputeRotationalForce final
{
public:
	float                                         HitPointToShaftDist;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerToShaftDist;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CombatAngle;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutFirstTorque;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutSecondTorque;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcOpenDoorForce_First;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcOpenDoorForce_Second;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcOpenDoorForce_First_1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcOpenDoorForce_Second_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcOpenDoorForce_First_2;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcOpenDoorForce_Second_2;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InteractionDoor_C_ReceiveComputeRotationalForce) == 0x000004, "Wrong alignment on BP_InteractionDoor_C_ReceiveComputeRotationalForce");
static_assert(sizeof(BP_InteractionDoor_C_ReceiveComputeRotationalForce) == 0x000048, "Wrong size on BP_InteractionDoor_C_ReceiveComputeRotationalForce");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, HitPointToShaftDist) == 0x000000, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::HitPointToShaftDist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, PlayerToShaftDist) == 0x000004, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::PlayerToShaftDist' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CombatAngle) == 0x000008, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CombatAngle' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, OutFirstTorque) == 0x00000C, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::OutFirstTorque' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, OutSecondTorque) == 0x000010, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::OutSecondTorque' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_First) == 0x000024, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_First' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_Second) == 0x000028, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_Second' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_First_1) == 0x000030, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_First_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_Second_1) == 0x000034, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_Second_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000039, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_First_2) == 0x00003C, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_First_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_CalcOpenDoorForce_Second_2) == 0x000040, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_CalcOpenDoorForce_Second_2' has a wrong offset!");
static_assert(offsetof(BP_InteractionDoor_C_ReceiveComputeRotationalForce, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'BP_InteractionDoor_C_ReceiveComputeRotationalForce::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

