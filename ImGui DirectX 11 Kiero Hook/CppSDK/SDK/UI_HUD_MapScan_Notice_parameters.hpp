#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_MapScan_Notice

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_MapScan_Notice.UI_HUD_MapScan_Notice_C.ExecuteUbergraph_UI_HUD_MapScan_Notice
// 0x01C8 (0x01C8 - 0x0000)
struct UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapScanRadarNoticeType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapScanRadarNoticeType                       Temp_byte_Variable_1;                              // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapScanRadarNoticeType                       Temp_byte_Variable_2;                              // 0x0006(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMapScanRadarNoticeType                       Temp_byte_Variable_3;                              // 0x0007(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNoticeData                            K2Node_Event_InNoticeData;                         // 0x0010(0x00E8)(ConstParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0120(0x0018)()
	class FString                                 CallFunc_GetLocalText_ReturnValue_1;               // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0150(0x0018)()
	class FString                                 CallFunc_GetLocalText_ReturnValue_2;               // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_3;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0180(0x0018)()
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x01A8(0x0018)()
	bool                                          CallFunc_IsOB_NewParam;                            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice) == 0x000008, "Wrong alignment on UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice");
static_assert(sizeof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice) == 0x0001C8, "Wrong size on UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, EntryPoint) == 0x000000, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_byte_Variable_1) == 0x000005, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_byte_Variable_2) == 0x000006, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_byte_Variable_3) == 0x000007, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_byte_Variable_4) == 0x000008, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_bool_Variable) == 0x000009, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, Temp_bool_Variable_1) == 0x00000A, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, K2Node_Event_InNoticeData) == 0x000010, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::K2Node_Event_InNoticeData' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, K2Node_SwitchEnum_CmpSuccess) == 0x0000F8, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, K2Node_Event_InLayoutType) == 0x0000F9, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_Value) == 0x0000FC, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, K2Node_Select_Default) == 0x000101, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_GetLocalText_ReturnValue) == 0x000108, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_Value_1) == 0x000118, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_ReturnValue_1) == 0x00011C, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Conv_StringToText_ReturnValue) == 0x000120, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_GetLocalText_ReturnValue_1) == 0x000138, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_GetLocalText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_Value_2) == 0x000148, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_ReturnValue_2) == 0x00014C, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000150, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_GetLocalText_ReturnValue_2) == 0x000168, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_GetLocalText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_Value_3) == 0x000178, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Map_Find_ReturnValue_3) == 0x00017C, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000180, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_GetNoticeFormatText_ReturnValue) == 0x000198, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0001A8, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice, CallFunc_IsOB_NewParam) == 0x0001C0, "Member 'UI_HUD_MapScan_Notice_C_ExecuteUbergraph_UI_HUD_MapScan_Notice::CallFunc_IsOB_NewParam' has a wrong offset!");

// Function UI_HUD_MapScan_Notice.UI_HUD_MapScan_Notice_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_MapScan_Notice_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_MapScan_Notice_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_MapScan_Notice_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_MapScan_Notice_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_MapScan_Notice_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_MapScan_Notice_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_MapScan_Notice.UI_HUD_MapScan_Notice_C.StartNotice
// 0x00E8 (0x00E8 - 0x0000)
struct UI_HUD_MapScan_Notice_C_StartNotice final
{
public:
	struct FNoticeData                            InNoticeData;                                      // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UI_HUD_MapScan_Notice_C_StartNotice) == 0x000008, "Wrong alignment on UI_HUD_MapScan_Notice_C_StartNotice");
static_assert(sizeof(UI_HUD_MapScan_Notice_C_StartNotice) == 0x0000E8, "Wrong size on UI_HUD_MapScan_Notice_C_StartNotice");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_StartNotice, InNoticeData) == 0x000000, "Member 'UI_HUD_MapScan_Notice_C_StartNotice::InNoticeData' has a wrong offset!");

// Function UI_HUD_MapScan_Notice.UI_HUD_MapScan_Notice_C.IsOB
// 0x0020 (0x0020 - 0x0000)
struct UI_HUD_MapScan_Notice_C_IsOB final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerState*                      CallFunc_GetOwningSolarPlayerState_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarReplaySubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpectatingOtherPlayer_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_MapScan_Notice_C_IsOB) == 0x000008, "Wrong alignment on UI_HUD_MapScan_Notice_C_IsOB");
static_assert(sizeof(UI_HUD_MapScan_Notice_C_IsOB) == 0x000020, "Wrong size on UI_HUD_MapScan_Notice_C_IsOB");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, NewParam) == 0x000000, "Member 'UI_HUD_MapScan_Notice_C_IsOB::NewParam' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, CallFunc_GetOwningSolarPlayerState_ReturnValue) == 0x000008, "Member 'UI_HUD_MapScan_Notice_C_IsOB::CallFunc_GetOwningSolarPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'UI_HUD_MapScan_Notice_C_IsOB::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, CallFunc_IsSpectatingOtherPlayer_ReturnValue) == 0x000018, "Member 'UI_HUD_MapScan_Notice_C_IsOB::CallFunc_IsSpectatingOtherPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, CallFunc_IsPlaying_ReturnValue) == 0x000019, "Member 'UI_HUD_MapScan_Notice_C_IsOB::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_MapScan_Notice_C_IsOB, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'UI_HUD_MapScan_Notice_C_IsOB::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

