#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReviveItemManger_BattleRoyale

#include "Basic.hpp"

#include "BP_ReviveItemManger_0_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReviveItemManger_BattleRoyale.BP_ReviveItemManger_BattleRoyale_C
// 0x0028 (0x0578 - 0x0550)
class ABP_ReviveItemManger_BattleRoyale_C final : public ABP_ReviveItemManger_0_C
{
public:
	int32                                         PointError;                                        // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         R;                                                 // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftUp;                                            // 0x0560(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightDown;                                         // 0x056C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool RevivePlayer(class ASCMPlayerState* InPlayerState, const struct FVector& ResurrectLocation);
	void GetSingleCruiseEndCenter(const struct FVector& DeathBoxLocation, struct FVector* Location);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReviveItemManger_BattleRoyale_C">();
	}
	static class ABP_ReviveItemManger_BattleRoyale_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReviveItemManger_BattleRoyale_C>();
	}
};
static_assert(alignof(ABP_ReviveItemManger_BattleRoyale_C) == 0x000008, "Wrong alignment on ABP_ReviveItemManger_BattleRoyale_C");
static_assert(sizeof(ABP_ReviveItemManger_BattleRoyale_C) == 0x000578, "Wrong size on ABP_ReviveItemManger_BattleRoyale_C");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, PointError) == 0x000550, "Member 'ABP_ReviveItemManger_BattleRoyale_C::PointError' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, R) == 0x000554, "Member 'ABP_ReviveItemManger_BattleRoyale_C::R' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, X) == 0x000558, "Member 'ABP_ReviveItemManger_BattleRoyale_C::X' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, Y) == 0x00055C, "Member 'ABP_ReviveItemManger_BattleRoyale_C::Y' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, LeftUp) == 0x000560, "Member 'ABP_ReviveItemManger_BattleRoyale_C::LeftUp' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_BattleRoyale_C, RightDown) == 0x00056C, "Member 'ABP_ReviveItemManger_BattleRoyale_C::RightDown' has a wrong offset!");

}

