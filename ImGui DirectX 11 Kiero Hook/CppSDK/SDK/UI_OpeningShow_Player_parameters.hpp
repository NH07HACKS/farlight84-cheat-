#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_OpeningShow_Player

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_VIP_TxtINfo_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.ExecuteUbergraph_UI_OpeningShow_Player
// 0x0078 (0x0078 - 0x0000)
struct UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default_3;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player) == 0x000008, "Wrong alignment on UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player");
static_assert(sizeof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player) == 0x000078, "Wrong size on UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, EntryPoint) == 0x000000, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_bool_Variable) == 0x000004, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable) == 0x000008, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_1) == 0x00000C, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_bool_Variable_1) == 0x000010, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_2) == 0x000014, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_3) == 0x000018, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_bool_Variable_2) == 0x00001C, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_4) == 0x000020, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_5) == 0x000024, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_bool_Variable_3) == 0x000028, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_6) == 0x00002C, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, Temp_float_Variable_7) == 0x000030, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Event_IsDesignTime) == 0x000034, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Event_InLayoutType) == 0x000035, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_SwitchEnum_CmpSuccess) == 0x000036, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000038, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Select_Default) == 0x000040, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Select_Default_1) == 0x000044, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_MakeStruct_Margin) == 0x000048, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1) == 0x000058, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::CallFunc_SlotAsVerticalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Select_Default_2) == 0x000060, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_MakeStruct_Margin_1) == 0x000064, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player, K2Node_Select_Default_3) == 0x000074, "Member 'UI_OpeningShow_Player_C_ExecuteUbergraph_UI_OpeningShow_Player::K2Node_Select_Default_3' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_OpeningShow_Player_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_Player_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_OpeningShow_Player_C_ReceivePlatformLayout");
static_assert(sizeof(UI_OpeningShow_Player_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_OpeningShow_Player_C_ReceivePlatformLayout");
static_assert(offsetof(UI_OpeningShow_Player_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_OpeningShow_Player_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_OpeningShow_Player_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_OpeningShow_Player_C_PreConstruct) == 0x000001, "Wrong alignment on UI_OpeningShow_Player_C_PreConstruct");
static_assert(sizeof(UI_OpeningShow_Player_C_PreConstruct) == 0x000001, "Wrong size on UI_OpeningShow_Player_C_PreConstruct");
static_assert(offsetof(UI_OpeningShow_Player_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_OpeningShow_Player_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.SetTeamPos
// 0x0010 (0x0010 - 0x0000)
struct UI_OpeningShow_Player_C_SetTeamPos final
{
public:
	int32                                         TeamPos;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_Player_C_SetTeamPos) == 0x000008, "Wrong alignment on UI_OpeningShow_Player_C_SetTeamPos");
static_assert(sizeof(UI_OpeningShow_Player_C_SetTeamPos) == 0x000010, "Wrong size on UI_OpeningShow_Player_C_SetTeamPos");
static_assert(offsetof(UI_OpeningShow_Player_C_SetTeamPos, TeamPos) == 0x000000, "Member 'UI_OpeningShow_Player_C_SetTeamPos::TeamPos' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_SetTeamPos, CallFunc_Array_Get_Item) == 0x000008, "Member 'UI_OpeningShow_Player_C_SetTeamPos::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.SetTxtColor
// 0x00D0 (0x00D0 - 0x0000)
struct UI_OpeningShow_Player_C_SetTxtColor final
{
public:
	struct FSlateColor                            TxtColor_0;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FS_VIP_TxtInfo                         K2Node_MakeStruct_S_VIP_TxtInfo;                   // 0x0028(0x00A8)(HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_Player_C_SetTxtColor) == 0x000008, "Wrong alignment on UI_OpeningShow_Player_C_SetTxtColor");
static_assert(sizeof(UI_OpeningShow_Player_C_SetTxtColor) == 0x0000D0, "Wrong size on UI_OpeningShow_Player_C_SetTxtColor");
static_assert(offsetof(UI_OpeningShow_Player_C_SetTxtColor, TxtColor_0) == 0x000000, "Member 'UI_OpeningShow_Player_C_SetTxtColor::TxtColor_0' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_SetTxtColor, K2Node_MakeStruct_S_VIP_TxtInfo) == 0x000028, "Member 'UI_OpeningShow_Player_C_SetTxtColor::K2Node_MakeStruct_S_VIP_TxtInfo' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.SetPlayerBusinessInfo
// 0x0048 (0x0048 - 0x0000)
struct UI_OpeningShow_Player_C_SetPlayerBusinessInfo final
{
public:
	class ASolarPlayerState*                      PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExpRankMedalData                      ExpRankMedalData;                                  // 0x0008(0x0040)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_OpeningShow_Player_C_SetPlayerBusinessInfo) == 0x000008, "Wrong alignment on UI_OpeningShow_Player_C_SetPlayerBusinessInfo");
static_assert(sizeof(UI_OpeningShow_Player_C_SetPlayerBusinessInfo) == 0x000048, "Wrong size on UI_OpeningShow_Player_C_SetPlayerBusinessInfo");
static_assert(offsetof(UI_OpeningShow_Player_C_SetPlayerBusinessInfo, PS) == 0x000000, "Member 'UI_OpeningShow_Player_C_SetPlayerBusinessInfo::PS' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_Player_C_SetPlayerBusinessInfo, ExpRankMedalData) == 0x000008, "Member 'UI_OpeningShow_Player_C_SetPlayerBusinessInfo::ExpRankMedalData' has a wrong offset!");

// Function UI_OpeningShow_Player.UI_OpeningShow_Player_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_OpeningShow_Player_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_Player_C_GetModuleName) == 0x000008, "Wrong alignment on UI_OpeningShow_Player_C_GetModuleName");
static_assert(sizeof(UI_OpeningShow_Player_C_GetModuleName) == 0x000010, "Wrong size on UI_OpeningShow_Player_C_GetModuleName");
static_assert(offsetof(UI_OpeningShow_Player_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_OpeningShow_Player_C_GetModuleName::ReturnValue' has a wrong offset!");

}

