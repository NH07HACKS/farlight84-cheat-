#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeroPick_HeroIntroduce

#include "Basic.hpp"

#include "E_Hero_SkillType_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.ExecuteUbergraph_WBP_HeroPick_HeroIntroduce
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HeroPick_SkillIntroduceSlot_C*      Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HeroPick_SkillIntroduce_T_Slot_C*   Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SkillSlot;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Attribute;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SkillName;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SkillDescription;                     // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_SkillIcon;                            // 0x0060(0x0028)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_HeroPick_SkillIntroduce_T_Slot_C*   K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_HeroPick_SkillIntroduceSlot_C*      Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HeroPick_SkillIntroduceSlot_C*      Temp_object_Variable_3;                            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_HeroPick_SkillIntroduceSlot_C*      K2Node_Select_Default_1;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce) == 0x0000C8, "Wrong size on WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, EntryPoint) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_object_Variable) == 0x000008, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_int_Variable) == 0x000010, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_object_Variable_1) == 0x000018, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_int_Variable_1) == 0x000020, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_IsDesignTime) == 0x000024, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_SkillSlot) == 0x000028, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_SkillSlot' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_Attribute) == 0x000030, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_Attribute' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_SkillName) == 0x000040, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_SkillName' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_SkillDescription) == 0x000050, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_SkillDescription' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_SkillIcon) == 0x000060, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_SkillIcon' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, CallFunc_PlayAnimation_ReturnValue) == 0x000090, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Select_Default) == 0x000098, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_object_Variable_2) == 0x0000A0, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, Temp_object_Variable_3) == 0x0000B0, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Select_Default_1) == 0x0000B8, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_Event_InLayoutType) == 0x0000C0, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce, K2Node_SwitchEnum_CmpSuccess) == 0x0000C2, "Member 'WBP_HeroPick_HeroIntroduce_C_ExecuteUbergraph_WBP_HeroPick_HeroIntroduce::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout) == 0x000001, "Wrong size on WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.RefreshSkillInfo
// 0x0060 (0x0060 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo final
{
public:
	int32                                         SkillSlot;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attribute;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SkillName;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SkillDescription;                                  // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SkillIcon;                                         // 0x0038(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo) == 0x000060, "Wrong size on WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo, SkillSlot) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo::SkillSlot' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo, Attribute) == 0x000008, "Member 'WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo::Attribute' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo, SkillName) == 0x000018, "Member 'WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo::SkillName' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo, SkillDescription) == 0x000028, "Member 'WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo::SkillDescription' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo, SkillIcon) == 0x000038, "Member 'WBP_HeroPick_HeroIntroduce_C_RefreshSkillInfo::SkillIcon' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_PreConstruct");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_PreConstruct) == 0x000001, "Wrong size on WBP_HeroPick_HeroIntroduce_C_PreConstruct");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.Set Tips Position
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position final
{
public:
	E_Hero_SkillType                              SkillTipPos_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position) == 0x000001, "Wrong size on WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position, SkillTipPos_0) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_Set_Tips_Position::SkillTipPos_0' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.ShowSkillInfo
// 0x0028 (0x0028 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo final
{
public:
	int32                                         SkillType;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillNam;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SkillDesc;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo) == 0x000028, "Wrong size on WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo, SkillType) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo::SkillType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo, SkillNam) == 0x000008, "Member 'WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo::SkillNam' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo, SkillDesc) == 0x000018, "Member 'WBP_HeroPick_HeroIntroduce_C_ShowSkillInfo::SkillDesc' has a wrong offset!");

// Function WBP_HeroPick_HeroIntroduce.WBP_HeroPick_HeroIntroduce_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WBP_HeroPick_HeroIntroduce_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroIntroduce_C_GetModuleName) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroIntroduce_C_GetModuleName");
static_assert(sizeof(WBP_HeroPick_HeroIntroduce_C_GetModuleName) == 0x000010, "Wrong size on WBP_HeroPick_HeroIntroduce_C_GetModuleName");
static_assert(offsetof(WBP_HeroPick_HeroIntroduce_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WBP_HeroPick_HeroIntroduce_C_GetModuleName::ReturnValue' has a wrong offset!");

}

