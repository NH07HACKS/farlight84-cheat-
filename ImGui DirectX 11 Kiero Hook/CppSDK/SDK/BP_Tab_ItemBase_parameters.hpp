#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tab_ItemBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_TabStyle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_HintData_structs.hpp"


namespace SDK::Params
{

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'BP_Tab_ItemBase_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.ShowBubbleBox
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_ShowBubbleBox final
{
public:
	bool                                          bIsShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_ShowBubbleBox) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_ShowBubbleBox");
static_assert(sizeof(BP_Tab_ItemBase_C_ShowBubbleBox) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_ShowBubbleBox");
static_assert(offsetof(BP_Tab_ItemBase_C_ShowBubbleBox, bIsShow) == 0x000000, "Member 'BP_Tab_ItemBase_C_ShowBubbleBox::bIsShow' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.OnHovered
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_OnHovered final
{
public:
	bool                                          IsHovered_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_OnHovered) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_OnHovered");
static_assert(sizeof(BP_Tab_ItemBase_C_OnHovered) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_OnHovered");
static_assert(offsetof(BP_Tab_ItemBase_C_OnHovered, IsHovered_0) == 0x000000, "Member 'BP_Tab_ItemBase_C_OnHovered::IsHovered_0' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.ReviseWidget
// 0x0140 (0x0140 - 0x0000)
struct BP_Tab_ItemBase_C_ReviseWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x0110)()
	class FText                                   CallFunc_LocalText2Text_Text;                      // 0x0120(0x0018)()
};
static_assert(alignof(BP_Tab_ItemBase_C_ReviseWidget) == 0x000010, "Wrong alignment on BP_Tab_ItemBase_C_ReviseWidget");
static_assert(sizeof(BP_Tab_ItemBase_C_ReviseWidget) == 0x000140, "Wrong size on BP_Tab_ItemBase_C_ReviseWidget");
static_assert(offsetof(BP_Tab_ItemBase_C_ReviseWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Tab_ItemBase_C_ReviseWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ReviseWidget, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_Tab_ItemBase_C_ReviseWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ReviseWidget, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'BP_Tab_ItemBase_C_ReviseWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ReviseWidget, CallFunc_LocalText2Text_Text) == 0x000120, "Member 'BP_Tab_ItemBase_C_ReviseWidget::CallFunc_LocalText2Text_Text' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.SetProperties
// 0x0008 (0x0008 - 0x0000)
struct BP_Tab_ItemBase_C_SetProperties final
{
public:
	class UBP_TabItemObj_C*                       Obj_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_SetProperties) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_SetProperties");
static_assert(sizeof(BP_Tab_ItemBase_C_SetProperties) == 0x000008, "Wrong size on BP_Tab_ItemBase_C_SetProperties");
static_assert(offsetof(BP_Tab_ItemBase_C_SetProperties, Obj_0) == 0x000000, "Member 'BP_Tab_ItemBase_C_SetProperties::Obj_0' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.UpdateWidget
// 0x0140 (0x0140 - 0x0000)
struct BP_Tab_ItemBase_C_UpdateWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x0110)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0120(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_UpdateWidget) == 0x000010, "Wrong alignment on BP_Tab_ItemBase_C_UpdateWidget");
static_assert(sizeof(BP_Tab_ItemBase_C_UpdateWidget) == 0x000140, "Wrong size on BP_Tab_ItemBase_C_UpdateWidget");
static_assert(offsetof(BP_Tab_ItemBase_C_UpdateWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_Tab_ItemBase_C_UpdateWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_UpdateWidget, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_Tab_ItemBase_C_UpdateWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_UpdateWidget, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'BP_Tab_ItemBase_C_UpdateWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_UpdateWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x000120, "Member 'BP_Tab_ItemBase_C_UpdateWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_UpdateWidget, CallFunc_IsValid_ReturnValue_2) == 0x000138, "Member 'BP_Tab_ItemBase_C_UpdateWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.InitWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_Tab_ItemBase_C_InitWidget final
{
public:
	class USolarRedHint_General_C*                HintWidget_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_0;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_0;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_InitWidget) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_InitWidget");
static_assert(sizeof(BP_Tab_ItemBase_C_InitWidget) == 0x000018, "Wrong size on BP_Tab_ItemBase_C_InitWidget");
static_assert(offsetof(BP_Tab_ItemBase_C_InitWidget, HintWidget_0) == 0x000000, "Member 'BP_Tab_ItemBase_C_InitWidget::HintWidget_0' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_InitWidget, Text_0) == 0x000008, "Member 'BP_Tab_ItemBase_C_InitWidget::Text_0' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_InitWidget, Icon_0) == 0x000010, "Member 'BP_Tab_ItemBase_C_InitWidget::Icon_0' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.SetSelected
// 0x0003 (0x0003 - 0x0000)
struct BP_Tab_ItemBase_C_SetSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_SetSelected) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_SetSelected");
static_assert(sizeof(BP_Tab_ItemBase_C_SetSelected) == 0x000003, "Wrong size on BP_Tab_ItemBase_C_SetSelected");
static_assert(offsetof(BP_Tab_ItemBase_C_SetSelected, IsSelected) == 0x000000, "Member 'BP_Tab_ItemBase_C_SetSelected::IsSelected' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_SetSelected, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Tab_ItemBase_C_SetSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_SetSelected, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_Tab_ItemBase_C_SetSelected::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.SetStyle
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_SetStyle final
{
public:
	E_TabStyle                                    Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_SetStyle) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_SetStyle");
static_assert(sizeof(BP_Tab_ItemBase_C_SetStyle) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_SetStyle");
static_assert(offsetof(BP_Tab_ItemBase_C_SetStyle, Style_0) == 0x000000, "Member 'BP_Tab_ItemBase_C_SetStyle::Style_0' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.SetHintData
// 0x0018 (0x0018 - 0x0000)
struct BP_Tab_ItemBase_C_SetHintData final
{
public:
	struct FS_HintData                            S_HintData;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_SetHintData) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_SetHintData");
static_assert(sizeof(BP_Tab_ItemBase_C_SetHintData) == 0x000018, "Wrong size on BP_Tab_ItemBase_C_SetHintData");
static_assert(offsetof(BP_Tab_ItemBase_C_SetHintData, S_HintData) == 0x000000, "Member 'BP_Tab_ItemBase_C_SetHintData::S_HintData' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_SetHintData, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Tab_ItemBase_C_SetHintData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.SetItemSize
// 0x0008 (0x0008 - 0x0000)
struct BP_Tab_ItemBase_C_SetItemSize final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_SetItemSize) == 0x000004, "Wrong alignment on BP_Tab_ItemBase_C_SetItemSize");
static_assert(sizeof(BP_Tab_ItemBase_C_SetItemSize) == 0x000008, "Wrong size on BP_Tab_ItemBase_C_SetItemSize");
static_assert(offsetof(BP_Tab_ItemBase_C_SetItemSize, Size_0) == 0x000000, "Member 'BP_Tab_ItemBase_C_SetItemSize::Size_0' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_BP_OnItemExpansionChanged");
static_assert(sizeof(BP_Tab_ItemBase_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_BP_OnItemExpansionChanged");
static_assert(offsetof(BP_Tab_ItemBase_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'BP_Tab_ItemBase_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_PreConstruct");
static_assert(sizeof(BP_Tab_ItemBase_C_PreConstruct) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_PreConstruct");
static_assert(offsetof(BP_Tab_ItemBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Tab_ItemBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct BP_Tab_ItemBase_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_OnListItemObjectSet");
static_assert(sizeof(BP_Tab_ItemBase_C_OnListItemObjectSet) == 0x000008, "Wrong size on BP_Tab_ItemBase_C_OnListItemObjectSet");
static_assert(offsetof(BP_Tab_ItemBase_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'BP_Tab_ItemBase_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Tab_ItemBase_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on BP_Tab_ItemBase_C_BP_OnItemSelectionChanged");
static_assert(sizeof(BP_Tab_ItemBase_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on BP_Tab_ItemBase_C_BP_OnItemSelectionChanged");
static_assert(offsetof(BP_Tab_ItemBase_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'BP_Tab_ItemBase_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.OnLocalLangChangedEx
// 0x0010 (0x0010 - 0x0000)
struct BP_Tab_ItemBase_C_OnLocalLangChangedEx final
{
public:
	class FString                                 InLang;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tab_ItemBase_C_OnLocalLangChangedEx) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_OnLocalLangChangedEx");
static_assert(sizeof(BP_Tab_ItemBase_C_OnLocalLangChangedEx) == 0x000010, "Wrong size on BP_Tab_ItemBase_C_OnLocalLangChangedEx");
static_assert(offsetof(BP_Tab_ItemBase_C_OnLocalLangChangedEx, InLang) == 0x000000, "Member 'BP_Tab_ItemBase_C_OnLocalLangChangedEx::InLang' has a wrong offset!");

// Function BP_Tab_ItemBase.BP_Tab_ItemBase_C.ExecuteUbergraph_BP_Tab_ItemBase
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsHovered)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarRedHint_General_C*                CallFunc_InitWidget_HintWidget;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTextBlock*                        CallFunc_InitWidget_Text;                          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_InitWidget_Icon;                          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TabItemObj_C*                       K2Node_DynamicCast_AsBP_Tab_Item_Obj;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InLang;                               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_LocalText2Text_Text;                      // 0x0080(0x0018)()
	TDelegate<void(bool IsHovered)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase) == 0x000008, "Wrong alignment on BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase");
static_assert(sizeof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase) == 0x0000A8, "Wrong size on BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, EntryPoint) == 0x000000, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_Event_bIsExpanded) == 0x000014, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_Event_IsDesignTime) == 0x000015, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_InitWidget_HintWidget) == 0x000018, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_InitWidget_HintWidget' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_InitWidget_Text) == 0x000020, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_InitWidget_Text' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_InitWidget_Icon) == 0x000028, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_InitWidget_Icon' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_Event_ListItemObject) == 0x000038, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_Event_bIsSelected) == 0x000040, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_DynamicCast_AsBP_Tab_Item_Obj) == 0x000048, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_DynamicCast_AsBP_Tab_Item_Obj' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_IsValid_ReturnValue_3) == 0x000064, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_Event_InLang) == 0x000068, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_Event_InLang' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_IsValid_ReturnValue_4) == 0x000078, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, CallFunc_LocalText2Text_Text) == 0x000080, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::CallFunc_LocalText2Text_Text' has a wrong offset!");
static_assert(offsetof(BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'BP_Tab_ItemBase_C_ExecuteUbergraph_BP_Tab_ItemBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

}

