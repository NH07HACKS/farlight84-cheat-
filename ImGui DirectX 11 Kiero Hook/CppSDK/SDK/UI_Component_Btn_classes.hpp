#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Btn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Type_Btn_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"
#include "E_State_Btn_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Btn.UI_Component_Btn_C
// 0x0170 (0x0768 - 0x05F8)
class UUI_Component_Btn_C final : public UComponentButtonBaseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Enter;                                        // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Sel;                                          // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_BtnBg_BottomLine;                              // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_BtnBg_Main;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hover_Loop_Glow;                               // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hover_Loop_Point;                              // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarImage*                            Img_Icon;                                          // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        Key;                                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_BtnBg;                                     // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Hover_Anim;                                  // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox;                                          // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Btn;                                          // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Icon;                                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarAdapterWidget*                    SolarAdapterWidget_Anim;                           // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_Btn;                                          // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             WidgetSlot;                                        // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_Type_Btn                                    BtnType;                                           // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_Btn                                   BtnState;                                          // 0x0691(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_692[0x2];                                      // 0x0692(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MobileBtnSize;                                     // 0x0694(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PCBtnSize;                                         // 0x069C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseBtnImag;                                      // 0x06A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseText;                                         // 0x06A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x06A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsUseLocID;                                        // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocID;                                             // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESolarSupportLanguages                        PreviewLang;                                       // 0x06C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClicked;                                         // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPressed;                                         // 0x06D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnReleased;                                        // 0x06E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsIcon;                                            // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Icon;                                              // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconColor;                                         // 0x0708(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MobileIcon_Size;                                   // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PCIcon_Size;                                       // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        OnClickedSound;                                    // 0x0728(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Hover;                                             // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowKey;                                           // 0x0741(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_742[0x6];                                      // 0x0742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 KeyActionName;                                     // 0x0748(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnClickedDisable;                                  // 0x0758(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_UI_Component_Btn(int32 EntryPoint);
	void BndEvt__OperateArea_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__OperateArea_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void OnLocalLangChangedEx(const class FString& InLang);
	void BndEvt__OperateArea_K2Node_ComponentBoundEvent_8_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__OperateArea_K2Node_ComponentBoundEvent_7_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__OperateArea_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SetBtnText(const class FString& 按钮文字, E_State_Btn 按钮状态);
	void Update(bool IsDesignTime);
	class FString GetLocalText();
	void SetBtnState(E_State_Btn State);
	void SetBtnTxt(const class FString& NewParam);
	void IsAvailable(bool* Availble);
	void StopAnims();
	void SetBtnSize(EUSolarWidgetLayoutType InLayoutType, const struct FVector2D& MobileBtnSize_0, const struct FVector2D& PCBtnSize_0);
	void SetShowKey(bool ShowKey_0, const class FString& KeyActionName_0);
	void SetLocID(int32 LocID_0);
	void PlaySelAnim();
	void CanPlayBtnAnim(bool* bCanPlayAnim);
	void SetButtonType(E_Type_Btn BtnType_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Btn_C">();
	}
	static class UUI_Component_Btn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Btn_C>();
	}
};
static_assert(alignof(UUI_Component_Btn_C) == 0x000008, "Wrong alignment on UUI_Component_Btn_C");
static_assert(sizeof(UUI_Component_Btn_C) == 0x000768, "Wrong size on UUI_Component_Btn_C");
static_assert(offsetof(UUI_Component_Btn_C, UberGraphFrame) == 0x0005F8, "Member 'UUI_Component_Btn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Anim_Enter) == 0x000600, "Member 'UUI_Component_Btn_C::Anim_Enter' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Anim_Sel) == 0x000608, "Member 'UUI_Component_Btn_C::Anim_Sel' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Anim_Hover) == 0x000610, "Member 'UUI_Component_Btn_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, HorizontalBox_1) == 0x000618, "Member 'UUI_Component_Btn_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Img_BtnBg_BottomLine) == 0x000620, "Member 'UUI_Component_Btn_C::Img_BtnBg_BottomLine' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Img_BtnBg_Main) == 0x000628, "Member 'UUI_Component_Btn_C::Img_BtnBg_Main' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Img_Hover_Loop_Glow) == 0x000630, "Member 'UUI_Component_Btn_C::Img_Hover_Loop_Glow' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Img_Hover_Loop_Point) == 0x000638, "Member 'UUI_Component_Btn_C::Img_Hover_Loop_Point' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Img_Icon) == 0x000640, "Member 'UUI_Component_Btn_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Key) == 0x000648, "Member 'UUI_Component_Btn_C::Key' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Overlay_BtnBg) == 0x000650, "Member 'UUI_Component_Btn_C::Overlay_BtnBg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Panel_Hover_Anim) == 0x000658, "Member 'UUI_Component_Btn_C::Panel_Hover_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, ScaleBox) == 0x000660, "Member 'UUI_Component_Btn_C::ScaleBox' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Size_Btn) == 0x000668, "Member 'UUI_Component_Btn_C::Size_Btn' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Size_Icon) == 0x000670, "Member 'UUI_Component_Btn_C::Size_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, SolarAdapterWidget_Anim) == 0x000678, "Member 'UUI_Component_Btn_C::SolarAdapterWidget_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Text_Btn) == 0x000680, "Member 'UUI_Component_Btn_C::Text_Btn' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, WidgetSlot) == 0x000688, "Member 'UUI_Component_Btn_C::WidgetSlot' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, BtnType) == 0x000690, "Member 'UUI_Component_Btn_C::BtnType' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, BtnState) == 0x000691, "Member 'UUI_Component_Btn_C::BtnState' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, MobileBtnSize) == 0x000694, "Member 'UUI_Component_Btn_C::MobileBtnSize' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, PCBtnSize) == 0x00069C, "Member 'UUI_Component_Btn_C::PCBtnSize' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, IsUseBtnImag) == 0x0006A4, "Member 'UUI_Component_Btn_C::IsUseBtnImag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, IsUseText) == 0x0006A5, "Member 'UUI_Component_Btn_C::IsUseText' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Text) == 0x0006A8, "Member 'UUI_Component_Btn_C::Text' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, IsUseLocID) == 0x0006B8, "Member 'UUI_Component_Btn_C::IsUseLocID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, LocID) == 0x0006BC, "Member 'UUI_Component_Btn_C::LocID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, PreviewLang) == 0x0006C0, "Member 'UUI_Component_Btn_C::PreviewLang' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, OnClicked) == 0x0006C8, "Member 'UUI_Component_Btn_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, OnPressed) == 0x0006D8, "Member 'UUI_Component_Btn_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, OnReleased) == 0x0006E8, "Member 'UUI_Component_Btn_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, IsIcon) == 0x0006F8, "Member 'UUI_Component_Btn_C::IsIcon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Icon) == 0x000700, "Member 'UUI_Component_Btn_C::Icon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, IconColor) == 0x000708, "Member 'UUI_Component_Btn_C::IconColor' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, MobileIcon_Size) == 0x000718, "Member 'UUI_Component_Btn_C::MobileIcon_Size' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, PCIcon_Size) == 0x000720, "Member 'UUI_Component_Btn_C::PCIcon_Size' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, OnClickedSound) == 0x000728, "Member 'UUI_Component_Btn_C::OnClickedSound' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, Hover) == 0x000740, "Member 'UUI_Component_Btn_C::Hover' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, ShowKey) == 0x000741, "Member 'UUI_Component_Btn_C::ShowKey' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, KeyActionName) == 0x000748, "Member 'UUI_Component_Btn_C::KeyActionName' has a wrong offset!");
static_assert(offsetof(UUI_Component_Btn_C, OnClickedDisable) == 0x000758, "Member 'UUI_Component_Btn_C::OnClickedDisable' has a wrong offset!");

}

