#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaGCBP_SwitchToRollingMesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChaGCBP_SwitchToRollingMesh.ChaGCBP_SwitchToRollingMesh_C
// 0x00C8 (0x0520 - 0x0458)
class AChaGCBP_SwitchToRollingMesh_C final : public AChaGC_SwitchToDuckRollingMesh
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_In_FxFade_8BBDA8D746ED656413E1B4B6DF587EEF; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_In__Direction_8BBDA8D746ED656413E1B4B6DF587EEF; // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_In;                                       // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_out_FxFade_9284E6954ADCE205A6F32C8A9F13E5CB; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_out__Direction_9284E6954ADCE205A6F32C8A9F13E5CB; // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_out;                                      // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        SmokeParticleAsset;                                // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SmokeParticleRelativeTransform;                    // 0x0490(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               _ParticleComponent;                                // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            SpeedToSmokeRatCurve;                              // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            SpeedToFxRatCurve;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingRolingLoop;                               // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPlayingAirLoop;                                  // 0x04E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        SolarCharacter;                                    // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundGroupPlayContext                 StartRollingLoopContext;                           // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSoundGroupPlayContext                 StartAirLoopContext;                               // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanRemove;                                         // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ChaGCBP_SwitchToRollingMesh(int32 EntryPoint);
	void FadeOut();
	void FadeIn();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void Timeline_out__UpdateFunc();
	void Timeline_out__FinishedFunc();
	void Timeline_In__UpdateFunc();
	void Timeline_In__FinishedFunc();
	bool OnActiveInternal(class ASolarCharacter* Character, const struct FGameplayCueParameters& Parameters);
	bool WhileActiveInternal(class ASolarCharacter* Character, const struct FGameplayCueParameters& Parameters);
	bool OnRemoveInternal(class ASolarCharacter* NullableCharacter, const struct FGameplayCueParameters& Parameters);
	void UpdateParticleParamsBySpeed(float Speed);
	void UpdateRollingSound();
	void StopLoopSound();
	void TryStartRollingLoop();
	void TryStartAirLoop();
	void TryStopRollingLoop();
	void TryStopAirLoop();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChaGCBP_SwitchToRollingMesh_C">();
	}
	static class AChaGCBP_SwitchToRollingMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChaGCBP_SwitchToRollingMesh_C>();
	}
};
static_assert(alignof(AChaGCBP_SwitchToRollingMesh_C) == 0x000010, "Wrong alignment on AChaGCBP_SwitchToRollingMesh_C");
static_assert(sizeof(AChaGCBP_SwitchToRollingMesh_C) == 0x000520, "Wrong size on AChaGCBP_SwitchToRollingMesh_C");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, UberGraphFrame) == 0x000458, "Member 'AChaGCBP_SwitchToRollingMesh_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, DefaultSceneRoot) == 0x000460, "Member 'AChaGCBP_SwitchToRollingMesh_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_In_FxFade_8BBDA8D746ED656413E1B4B6DF587EEF) == 0x000468, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_In_FxFade_8BBDA8D746ED656413E1B4B6DF587EEF' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_In__Direction_8BBDA8D746ED656413E1B4B6DF587EEF) == 0x00046C, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_In__Direction_8BBDA8D746ED656413E1B4B6DF587EEF' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_In) == 0x000470, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_In' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_out_FxFade_9284E6954ADCE205A6F32C8A9F13E5CB) == 0x000478, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_out_FxFade_9284E6954ADCE205A6F32C8A9F13E5CB' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_out__Direction_9284E6954ADCE205A6F32C8A9F13E5CB) == 0x00047C, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_out__Direction_9284E6954ADCE205A6F32C8A9F13E5CB' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, Timeline_out) == 0x000480, "Member 'AChaGCBP_SwitchToRollingMesh_C::Timeline_out' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, SmokeParticleAsset) == 0x000488, "Member 'AChaGCBP_SwitchToRollingMesh_C::SmokeParticleAsset' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, SmokeParticleRelativeTransform) == 0x000490, "Member 'AChaGCBP_SwitchToRollingMesh_C::SmokeParticleRelativeTransform' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, MeshComponent) == 0x0004C0, "Member 'AChaGCBP_SwitchToRollingMesh_C::MeshComponent' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, _ParticleComponent) == 0x0004C8, "Member 'AChaGCBP_SwitchToRollingMesh_C::_ParticleComponent' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, SpeedToSmokeRatCurve) == 0x0004D0, "Member 'AChaGCBP_SwitchToRollingMesh_C::SpeedToSmokeRatCurve' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, SpeedToFxRatCurve) == 0x0004D8, "Member 'AChaGCBP_SwitchToRollingMesh_C::SpeedToFxRatCurve' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, IsPlayingRolingLoop) == 0x0004E0, "Member 'AChaGCBP_SwitchToRollingMesh_C::IsPlayingRolingLoop' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, IsPlayingAirLoop) == 0x0004E1, "Member 'AChaGCBP_SwitchToRollingMesh_C::IsPlayingAirLoop' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, SolarCharacter) == 0x0004E8, "Member 'AChaGCBP_SwitchToRollingMesh_C::SolarCharacter' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, StartRollingLoopContext) == 0x0004F0, "Member 'AChaGCBP_SwitchToRollingMesh_C::StartRollingLoopContext' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, StartAirLoopContext) == 0x000500, "Member 'AChaGCBP_SwitchToRollingMesh_C::StartAirLoopContext' has a wrong offset!");
static_assert(offsetof(AChaGCBP_SwitchToRollingMesh_C, CanRemove) == 0x000510, "Member 'AChaGCBP_SwitchToRollingMesh_C::CanRemove' has a wrong offset!");

}

