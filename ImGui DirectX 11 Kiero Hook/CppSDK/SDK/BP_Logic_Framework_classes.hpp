#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Logic_Framework

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Logic_Framework.BP_Logic_Framework_C
// 0x0038 (0x01E8 - 0x01B0)
class UBP_Logic_Framework_C : public UCGMLogicComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bBattleStarted;                                    // 0x01B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bZeroMatchFinished;                                // 0x01B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ASCMPlayerState* NewPlayer, bool bIsAi)> OnPlayerJoin;       // 0x01C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnZeroMatchFinished;                               // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bConfigInitiated;                                  // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDSClosing;                                        // 0x01E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Logic_Framework(int32 EntryPoint);
	void Custom_Room_Start();
	void OnPlayerQuit(class ASCMPlayerState* Player);
	void PresettleAll();
	void FinishConfigInitiate();
	void Update();
	void Get_Current_Player_Count(int32* Result);
	void ReceiveBeginPlay();
	void OnPlayerOfflineTimeOut(class ASCMPlayerState* OfflineTimeoutPlayer);
	void OnPlayerGiveUp(class ASCMPlayerState* OfflineTimeoutPlayer);
	void PreSettle(class ASCMPlayerState* Player, ESCMPlayerOutType OutType);
	void ReceivePlayerBattleEnd(class ASCMPlayerState* Player, ESCMPlayerOutType OutType);
	void BattleInitFinished();
	void ReceiveServerLevelLoaded(const class FString& LevelName);
	void ReceiveBattleBegin();
	void OnPlayerDisconnect(class ASCMPlayerState* OfflinePlayer);
	void ReceivePlayerJoinBattle(class ASCMPlayerState* NewPlayer, bool IsAI);
	void OnDSClose();
	void OnPlayerCheat(class ASCMPlayerState* CheatPlayer);
	void OnPlayerReconnect(class ASCMPlayerState* Player);
	void OnPlayerAbnormal(class ASCMPlayerState* CheatPlayer);
	void OnMatchingClosed(const int32 RPCId);
	void ReceiveTargetPlayerBattleEnd(class ASCMPlayerState* Player, ESCMPlayerOutType OutType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Logic_Framework_C">();
	}
	static class UBP_Logic_Framework_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Logic_Framework_C>();
	}
};
static_assert(alignof(UBP_Logic_Framework_C) == 0x000008, "Wrong alignment on UBP_Logic_Framework_C");
static_assert(sizeof(UBP_Logic_Framework_C) == 0x0001E8, "Wrong size on UBP_Logic_Framework_C");
static_assert(offsetof(UBP_Logic_Framework_C, UberGraphFrame) == 0x0001B0, "Member 'UBP_Logic_Framework_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, bBattleStarted) == 0x0001B8, "Member 'UBP_Logic_Framework_C::bBattleStarted' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, bZeroMatchFinished) == 0x0001B9, "Member 'UBP_Logic_Framework_C::bZeroMatchFinished' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, OnPlayerJoin) == 0x0001C0, "Member 'UBP_Logic_Framework_C::OnPlayerJoin' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, OnZeroMatchFinished) == 0x0001D0, "Member 'UBP_Logic_Framework_C::OnZeroMatchFinished' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, bConfigInitiated) == 0x0001E0, "Member 'UBP_Logic_Framework_C::bConfigInitiated' has a wrong offset!");
static_assert(offsetof(UBP_Logic_Framework_C, bDSClosing) == 0x0001E1, "Member 'UBP_Logic_Framework_C::bDSClosing' has a wrong offset!");

}

