#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CascadeExtensionPlugin

#include "Basic.hpp"

#include "CascadeExtensionPlugin_classes.hpp"
#include "CascadeExtensionPlugin_parameters.hpp"


namespace SDK
{

// Function CascadeExtensionPlugin.ForcePointDataProvider.GetForcePoints
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FForcePoints                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FForcePoints IForcePointDataProvider::GetForcePoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ForcePointDataProvider", "GetForcePoints");

	Params::ForcePointDataProvider_GetForcePoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CascadeExtensionPlugin.MeshDataProvider.GetDataRevision
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IMeshDataProvider::GetDataRevision() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MeshDataProvider", "GetDataRevision");

	Params::MeshDataProvider_GetDataRevision Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CascadeExtensionPlugin.MeshDataProvider.GetMeshTriangleData
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FMeshTriangleData                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMeshTriangleData IMeshDataProvider::GetMeshTriangleData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("MeshDataProvider", "GetMeshTriangleData");

	Params::MeshDataProvider_GetMeshTriangleData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CascadeExtensionPlugin.ParticleDataProvider.SpawnParticle
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const struct FParticleProperties&       currentParticleProperties                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FParticleProperties              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FParticleProperties IParticleDataProvider::SpawnParticle(const struct FParticleProperties& currentParticleProperties) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ParticleDataProvider", "SpawnParticle");

	Params::ParticleDataProvider_SpawnParticle Parms{};

	Parms.currentParticleProperties = std::move(currentParticleProperties);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CascadeExtensionPlugin.ParticleDataProvider.UpdateParticle
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// const struct FParticleProperties&       currentParticleProperties                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FParticleProperties              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FParticleProperties IParticleDataProvider::UpdateParticle(const struct FParticleProperties& currentParticleProperties) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("ParticleDataProvider", "UpdateParticle");

	Params::ParticleDataProvider_UpdateParticle Parms{};

	Parms.currentParticleProperties = std::move(currentParticleProperties);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function CascadeExtensionPlugin.ParticleModuleLocationMesh.OnCachedActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UParticleModuleLocationMesh::OnCachedActorDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParticleModuleLocationMesh", "OnCachedActorDestroyed");

	Params::ParticleModuleLocationMesh_OnCachedActorDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

