#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_TrainingMode

#include "Basic.hpp"

#include "BP_Character_TrainingMode_classes.hpp"
#include "BP_Character_TrainingMode_parameters.hpp"


namespace SDK
{

// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.ShouldForceOverrideDamageTaken
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class ASCMPlayerState*                  EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float*                                  OverrideDamageTaken                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Character_TrainingMode_C::ShouldForceOverrideDamageTaken(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser, float* OverrideDamageTaken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "ShouldForceOverrideDamageTaken");

	Params::BP_Character_TrainingMode_C_ShouldForceOverrideDamageTaken Parms{};

	Parms.Damage = Damage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (OverrideDamageTaken != nullptr)
		*OverrideDamageTaken = Parms.OverrideDamageTaken;

	return Parms.ReturnValue;
}


// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.OnCompleted_84F20D844D539263D5B45F9E9A20B26D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarPlayerWeapon*               Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TrainingMode_C::OnCompleted_84F20D844D539263D5B45F9E9A20B26D(class ASolarPlayerWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "OnCompleted_84F20D844D539263D5B45F9E9A20B26D");

	Params::BP_Character_TrainingMode_C_OnCompleted_84F20D844D539263D5B45F9E9A20B26D Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.BeginPlayBlueprint
// (Event, Protected, BlueprintEvent)

void ABP_Character_TrainingMode_C::BeginPlayBlueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "BeginPlayBlueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.ShowNotice
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Character_TrainingMode_C::ShowNotice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "ShowNotice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.BatchSetItem
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<struct FS_AiItem>&         ItemList                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_Character_TrainingMode_C::BatchSetItem(const TArray<struct FS_AiItem>& ItemList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "BatchSetItem");

	Params::BP_Character_TrainingMode_C_BatchSetItem Parms{};

	Parms.ItemList = std::move(ItemList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_TrainingMode.BP_Character_TrainingMode_C.ExecuteUbergraph_BP_Character_TrainingMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_TrainingMode_C::ExecuteUbergraph_BP_Character_TrainingMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_TrainingMode_C", "ExecuteUbergraph_BP_Character_TrainingMode");

	Params::BP_Character_TrainingMode_C_ExecuteUbergraph_BP_Character_TrainingMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

