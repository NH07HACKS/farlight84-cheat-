#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Skydive_Desktop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Skydive_Desktop.UI_Skydive_Desktop_C
// 0x0080 (0x06C0 - 0x0640)
class UUI_Skydive_Desktop_C final : public USkydivingFollowWidgetNew
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0640(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_KeyPrompt_C*                        KeyPrompt_Launch;                                  // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        KeyPrompt_ReturnTeam;                              // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        KeyPrompt_TransferCaptain;                         // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        KeyPrompt_UnFollow;                                // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_SkydiveNotice;                                // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_SkydiveNotice;                            // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_ParachuteNum;                                  // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarRichTextBlock*                    Txt_SkydiveNotice;                                 // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Press;                              // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SkydiveNoticeText;                                 // 0x0690(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 SkydiveText;                                       // 0x06A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         SkydiveIndex;                                      // 0x06B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Skydive_Desktop(int32 EntryPoint);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void ClearFollowKeyProgress();
	void StartFollowKeyProgress();
	void SetParachuteButtonVisibility(bool bVisible);
	void SetCruisePlayerNumVisibility(bool bVisible);
	void OnCruiseCharacterCountUpdated(int32 TotalCount, int32 CruiseCount);
	void SetRelationButtonGroupVisibility(bool bVisible);
	void SwitchToFollow();
	void SwitchToTransfer();
	void SwitchToUnfollow();
	void RefreshSkydivingLeaderContent(int32 TeamIndex, const class FString& playerName, bool bLocalPlayerIsLeader, bool bIsFollowLeader);
	void SetSkydiveNoticeVisibility(bool bVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Skydive_Desktop_C">();
	}
	static class UUI_Skydive_Desktop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Skydive_Desktop_C>();
	}
};
static_assert(alignof(UUI_Skydive_Desktop_C) == 0x000008, "Wrong alignment on UUI_Skydive_Desktop_C");
static_assert(sizeof(UUI_Skydive_Desktop_C) == 0x0006C0, "Wrong size on UUI_Skydive_Desktop_C");
static_assert(offsetof(UUI_Skydive_Desktop_C, UberGraphFrame) == 0x000640, "Member 'UUI_Skydive_Desktop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, KeyPrompt_Launch) == 0x000648, "Member 'UUI_Skydive_Desktop_C::KeyPrompt_Launch' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, KeyPrompt_ReturnTeam) == 0x000650, "Member 'UUI_Skydive_Desktop_C::KeyPrompt_ReturnTeam' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, KeyPrompt_TransferCaptain) == 0x000658, "Member 'UUI_Skydive_Desktop_C::KeyPrompt_TransferCaptain' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, KeyPrompt_UnFollow) == 0x000660, "Member 'UUI_Skydive_Desktop_C::KeyPrompt_UnFollow' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, Size_SkydiveNotice) == 0x000668, "Member 'UUI_Skydive_Desktop_C::Size_SkydiveNotice' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, Switcher_SkydiveNotice) == 0x000670, "Member 'UUI_Skydive_Desktop_C::Switcher_SkydiveNotice' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, Txt_ParachuteNum) == 0x000678, "Member 'UUI_Skydive_Desktop_C::Txt_ParachuteNum' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, Txt_SkydiveNotice) == 0x000680, "Member 'UUI_Skydive_Desktop_C::Txt_SkydiveNotice' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, WidgetSwitcher_Press) == 0x000688, "Member 'UUI_Skydive_Desktop_C::WidgetSwitcher_Press' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, SkydiveNoticeText) == 0x000690, "Member 'UUI_Skydive_Desktop_C::SkydiveNoticeText' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, SkydiveText) == 0x0006A8, "Member 'UUI_Skydive_Desktop_C::SkydiveText' has a wrong offset!");
static_assert(offsetof(UUI_Skydive_Desktop_C, SkydiveIndex) == 0x0006B8, "Member 'UUI_Skydive_Desktop_C::SkydiveIndex' has a wrong offset!");

}

