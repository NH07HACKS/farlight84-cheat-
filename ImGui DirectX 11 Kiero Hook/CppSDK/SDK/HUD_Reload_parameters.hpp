#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Reload

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_PassiveBuff_structs.hpp"


namespace SDK::Params
{

// Function HUD_Reload.HUD_Reload_C.ExecuteUbergraph_HUD_Reload
// 0x0008 (0x0008 - 0x0000)
struct HUD_Reload_C_ExecuteUbergraph_HUD_Reload final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Reload_C_ExecuteUbergraph_HUD_Reload) == 0x000004, "Wrong alignment on HUD_Reload_C_ExecuteUbergraph_HUD_Reload");
static_assert(sizeof(HUD_Reload_C_ExecuteUbergraph_HUD_Reload) == 0x000008, "Wrong size on HUD_Reload_C_ExecuteUbergraph_HUD_Reload");
static_assert(offsetof(HUD_Reload_C_ExecuteUbergraph_HUD_Reload, EntryPoint) == 0x000000, "Member 'HUD_Reload_C_ExecuteUbergraph_HUD_Reload::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_ExecuteUbergraph_HUD_Reload, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HUD_Reload_C_ExecuteUbergraph_HUD_Reload::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function HUD_Reload.HUD_Reload_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Reload_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Reload_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Reload_C_PreConstruct");
static_assert(sizeof(HUD_Reload_C_PreConstruct) == 0x000001, "Wrong size on HUD_Reload_C_PreConstruct");
static_assert(offsetof(HUD_Reload_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Reload_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_Reload.HUD_Reload_C.GetReloadAnimation
// 0x0020 (0x0020 - 0x0000)
struct HUD_Reload_C_GetReloadAnimation final
{
public:
	bool                                          HaveBuff;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       OutReloadAnimation;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Reload_C_GetReloadAnimation) == 0x000008, "Wrong alignment on HUD_Reload_C_GetReloadAnimation");
static_assert(sizeof(HUD_Reload_C_GetReloadAnimation) == 0x000020, "Wrong size on HUD_Reload_C_GetReloadAnimation");
static_assert(offsetof(HUD_Reload_C_GetReloadAnimation, HaveBuff) == 0x000000, "Member 'HUD_Reload_C_GetReloadAnimation::HaveBuff' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_GetReloadAnimation, OutReloadAnimation) == 0x000008, "Member 'HUD_Reload_C_GetReloadAnimation::OutReloadAnimation' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_GetReloadAnimation, Temp_bool_Variable) == 0x000010, "Member 'HUD_Reload_C_GetReloadAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_GetReloadAnimation, K2Node_Select_Default) == 0x000018, "Member 'HUD_Reload_C_GetReloadAnimation::K2Node_Select_Default' has a wrong offset!");

// Function HUD_Reload.HUD_Reload_C.SetPassive
// 0x0005 (0x0005 - 0x0000)
struct HUD_Reload_C_SetPassive final
{
public:
	E_PassiveBuff                                 Passive_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PassiveBuff                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Reload_C_SetPassive) == 0x000001, "Wrong alignment on HUD_Reload_C_SetPassive");
static_assert(sizeof(HUD_Reload_C_SetPassive) == 0x000005, "Wrong size on HUD_Reload_C_SetPassive");
static_assert(offsetof(HUD_Reload_C_SetPassive, Passive_0) == 0x000000, "Member 'HUD_Reload_C_SetPassive::Passive_0' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetPassive, Temp_byte_Variable) == 0x000001, "Member 'HUD_Reload_C_SetPassive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetPassive, Temp_byte_Variable_1) == 0x000002, "Member 'HUD_Reload_C_SetPassive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetPassive, Temp_byte_Variable_2) == 0x000003, "Member 'HUD_Reload_C_SetPassive::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetPassive, K2Node_Select_Default) == 0x000004, "Member 'HUD_Reload_C_SetPassive::K2Node_Select_Default' has a wrong offset!");

// Function HUD_Reload.HUD_Reload_C.SetSpeedUpBuff
// 0x0006 (0x0006 - 0x0000)
struct HUD_Reload_C_SetSpeedUpBuff final
{
public:
	bool                                          bHaveBuff;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              BuffVisibility;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_PassiveBuff                                 Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PassiveBuff                                 Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PassiveBuff                                 K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Reload_C_SetSpeedUpBuff) == 0x000001, "Wrong alignment on HUD_Reload_C_SetSpeedUpBuff");
static_assert(sizeof(HUD_Reload_C_SetSpeedUpBuff) == 0x000006, "Wrong size on HUD_Reload_C_SetSpeedUpBuff");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, bHaveBuff) == 0x000000, "Member 'HUD_Reload_C_SetSpeedUpBuff::bHaveBuff' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, BuffVisibility) == 0x000001, "Member 'HUD_Reload_C_SetSpeedUpBuff::BuffVisibility' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, Temp_bool_Variable) == 0x000002, "Member 'HUD_Reload_C_SetSpeedUpBuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, Temp_byte_Variable) == 0x000003, "Member 'HUD_Reload_C_SetSpeedUpBuff::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, Temp_byte_Variable_1) == 0x000004, "Member 'HUD_Reload_C_SetSpeedUpBuff::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Reload_C_SetSpeedUpBuff, K2Node_Select_Default) == 0x000005, "Member 'HUD_Reload_C_SetSpeedUpBuff::K2Node_Select_Default' has a wrong offset!");

}

