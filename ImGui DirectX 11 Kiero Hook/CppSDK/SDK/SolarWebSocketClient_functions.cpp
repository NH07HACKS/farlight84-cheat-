#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarWebSocketClient

#include "Basic.hpp"

#include "SolarWebSocketClient_classes.hpp"
#include "SolarWebSocketClient_parameters.hpp"


namespace SDK
{

// Function SolarWebSocketClient.SolarWebSocketNetworkManager.DestroyInstance
// (Final, Native, Static, Public, BlueprintCallable)

void USolarWebSocketNetworkManager::DestroyInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SolarWebSocketNetworkManager", "DestroyInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USolarWebSocketNetworkManager*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USolarWebSocketNetworkManager* USolarWebSocketNetworkManager::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SolarWebSocketNetworkManager", "GetInstance");

	Params::SolarWebSocketNetworkManager_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ServerUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USolarWebSocketNetworkManager::Connect(const class FString& ServerUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "Connect");

	Params::SolarWebSocketNetworkManager_Connect Parms{};

	Parms.ServerUrl = std::move(ServerUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.Disconnect
// (Final, Native, Public, BlueprintCallable)

void USolarWebSocketNetworkManager::Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "Disconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.Init
// (Final, Native, Public, BlueprintCallable)

void USolarWebSocketNetworkManager::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.InitLuaManager
// (Event, Public, BlueprintEvent)

void USolarWebSocketNetworkManager::InitLuaManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "InitLuaManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.OnConnectStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarWebSocketNetworkManager::OnConnectStateChanged(int32 State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "OnConnectStateChanged");

	Params::SolarWebSocketNetworkManager_OnConnectStateChanged Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.OnRecvData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const TArray<uint8>&                    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DataSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarWebSocketNetworkManager::OnRecvData(const TArray<uint8>& Data, int32 DataSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "OnRecvData");

	Params::SolarWebSocketNetworkManager_OnRecvData Parms{};

	Parms.Data = std::move(Data);
	Parms.DataSize = DataSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.RegisterLuaDelegates
// (Event, Public, BlueprintEvent)

void USolarWebSocketNetworkManager::RegisterLuaDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "RegisterLuaDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.UnInit
// (Final, Native, Public, BlueprintCallable)

void USolarWebSocketNetworkManager::UnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "UnInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.UnInitLuaManager
// (Event, Public, BlueprintEvent)

void USolarWebSocketNetworkManager::UnInitLuaManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "UnInitLuaManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarWebSocketClient.SolarWebSocketNetworkManager.UnRegisterLuaDelegates
// (Event, Public, BlueprintEvent)

void USolarWebSocketNetworkManager::UnRegisterLuaDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarWebSocketNetworkManager", "UnRegisterLuaDelegates");

	UObject::ProcessEvent(Func, nullptr);
}

}

