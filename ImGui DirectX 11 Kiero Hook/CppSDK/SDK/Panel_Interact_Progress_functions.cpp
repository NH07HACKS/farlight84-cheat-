#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_Interact_Progress

#include "Basic.hpp"

#include "Panel_Interact_Progress_classes.hpp"
#include "Panel_Interact_Progress_parameters.hpp"


namespace SDK
{

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ExecuteUbergraph_Panel_Interact_Progress
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::ExecuteUbergraph_Panel_Interact_Progress(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "ExecuteUbergraph_Panel_Interact_Progress");

	Params::Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature
// (BlueprintEvent)

void UPanel_Interact_Progress_C::BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateInteractNum
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNum                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::UpdateInteractNum(int32 InNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "UpdateInteractNum");

	Params::Panel_Interact_Progress_C_UpdateInteractNum Parms{};

	Parms.InNum = InNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoEnablePassiveBuffDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocalTextID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::DoEnablePassiveBuffDisplay(int32 CharacterID, int32 LocalTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "DoEnablePassiveBuffDisplay");

	Params::Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay Parms{};

	Parms.CharacterID = CharacterID;
	Parms.LocalTextID = LocalTextID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPanel_Interact_Progress_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoSetInteractType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InteractTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::DoSetInteractType(const struct FGameplayTag& InteractTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "DoSetInteractType");

	Params::Panel_Interact_Progress_C_DoSetInteractType Parms{};

	Parms.InteractTag = std::move(InteractTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoPlayFadeInAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::DoPlayFadeInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "DoPlayFadeInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetBurshIcon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSoftObjectPath&           BrushResoucePath                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::SetBurshIcon(const struct FSoftObjectPath& BrushResoucePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "SetBurshIcon");

	Params::Panel_Interact_Progress_C_SetBurshIcon Parms{};

	Parms.BrushResoucePath = std::move(BrushResoucePath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnAnimationStarted
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::OnAnimationStarted(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "OnAnimationStarted");

	Params::Panel_Interact_Progress_C_OnAnimationStarted Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnAnimationFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::OnAnimationFinished(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "OnAnimationFinished");

	Params::Panel_Interact_Progress_C_OnAnimationFinished Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UPanel_Interact_Progress_C::BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "BndEvt__Btn_Interact_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPanel_Interact_Progress_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "PreConstruct");

	Params::Panel_Interact_Progress_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BP_UpdateStateView
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FCountDownInfo&            Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPanel_Interact_Progress_C::BP_UpdateStateView(const struct FCountDownInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "BP_UpdateStateView");

	Params::Panel_Interact_Progress_C_BP_UpdateStateView Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnLoaded_05FF62CE4143ABFEC942C68489E91470
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::OnLoaded_05FF62CE4143ABFEC942C68489E91470(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "OnLoaded_05FF62CE4143ABFEC942C68489E91470");

	Params::Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateStateView
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECountDownState                         InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::UpdateStateView(ECountDownState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "UpdateStateView");

	Params::Panel_Interact_Progress_C_UpdateStateView Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetInteractType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InteractTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::SetInteractType(const struct FGameplayTag& InteractTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "SetInteractType");

	Params::Panel_Interact_Progress_C_SetInteractType Parms{};

	Parms.InteractTag = std::move(InteractTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetProgressBarVisiblity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPanel_Interact_Progress_C::SetProgressBarVisiblity(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "SetProgressBarVisiblity");

	Params::Panel_Interact_Progress_C_SetProgressBarVisiblity Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.EnablePassiveBuffDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocalTextID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::EnablePassiveBuffDisplay(int32 CharacterID, int32 LocalTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "EnablePassiveBuffDisplay");

	Params::Panel_Interact_Progress_C_EnablePassiveBuffDisplay Parms{};

	Parms.CharacterID = CharacterID;
	Parms.LocalTextID = LocalTextID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ShowPassiveBuff
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LocalTextID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::ShowPassiveBuff(int32 CharacterID, int32 LocalTextID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "ShowPassiveBuff");

	Params::Panel_Interact_Progress_C_ShowPassiveBuff Parms{};

	Parms.CharacterID = CharacterID;
	Parms.LocalTextID = LocalTextID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.HidePassiveBuff
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::HidePassiveBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "HidePassiveBuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.PlayFadeInAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::PlayFadeInAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "PlayFadeInAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.RefreshToPreInteract
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::RefreshToPreInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "RefreshToPreInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.RefreshToCancellableInteracting
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::RefreshToCancellableInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "RefreshToCancellableInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.RefreshToNonCancellableInteracting
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::RefreshToNonCancellableInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "RefreshToNonCancellableInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.GetInteractConfig
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              InteractTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FBPS_InteractionButtonViewConfig*InteractConfig                                         (Parm, OutParm, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::GetInteractConfig(const struct FGameplayTag& InteractTag, struct FBPS_InteractionButtonViewConfig* InteractConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "GetInteractConfig");

	Params::Panel_Interact_Progress_C_GetInteractConfig Parms{};

	Parms.InteractTag = std::move(InteractTag);

	UObject::ProcessEvent(Func, &Parms);

	if (InteractConfig != nullptr)
		*InteractConfig = std::move(Parms.InteractConfig);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ConditionalReplaceInteractType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBuffed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_Interact_Type                         OriginalType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag*                    ResultType                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::ConditionalReplaceInteractType(bool IsBuffed, E_Interact_Type OriginalType, const struct FGameplayTag& GameplayTag, struct FGameplayTag* ResultType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "ConditionalReplaceInteractType");

	Params::Panel_Interact_Progress_C_ConditionalReplaceInteractType Parms{};

	Parms.IsBuffed = IsBuffed;
	Parms.OriginalType = OriginalType;
	Parms.GameplayTag = std::move(GameplayTag);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultType != nullptr)
		*ResultType = std::move(Parms.ResultType);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateGuideVXVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanShow                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPanel_Interact_Progress_C::UpdateGuideVXVisibility(bool CanShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "UpdateGuideVXVisibility");

	Params::Panel_Interact_Progress_C_UpdateGuideVXVisibility Parms{};

	Parms.CanShow = CanShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BPGetConfigDataAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GeneralInteractionListConfig_C**DataAsset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::BPGetConfigDataAsset(class UBP_GeneralInteractionListConfig_C** DataAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "BPGetConfigDataAsset");

	Params::Panel_Interact_Progress_C_BPGetConfigDataAsset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DataAsset != nullptr)
		*DataAsset = Parms.DataAsset;
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.Set Help Num Visible
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::Set_Help_Num_Visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "Set Help Num Visible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetCurrnetBtnIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPanel_Interact_Progress_C::SetCurrnetBtnIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "SetCurrnetBtnIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetIsClose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    isClose_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPanel_Interact_Progress_C::SetIsClose(bool isClose_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "SetIsClose");

	Params::Panel_Interact_Progress_C_SetIsClose Parms{};

	Parms.isClose_0 = isClose_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoGetInteractType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    NewParam                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UPanel_Interact_Progress_C::DoGetInteractType(struct FGameplayTag* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "DoGetInteractType");

	Params::Panel_Interact_Progress_C_DoGetInteractType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoGetTagToInteractType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGameplayTag, E_Interact_Type>*NewParam                                               (Parm, OutParm)

void UPanel_Interact_Progress_C::DoGetTagToInteractType(TMap<struct FGameplayTag, E_Interact_Type>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Panel_Interact_Progress_C", "DoGetTagToInteractType");

	Params::Panel_Interact_Progress_C_DoGetTagToInteractType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}

