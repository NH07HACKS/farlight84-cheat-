#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Gatling

#include "Basic.hpp"

#include "Crosshair_CarWeapon_Gatling_classes.hpp"
#include "Crosshair_CarWeapon_Gatling_parameters.hpp"


namespace SDK
{

// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.ExecuteUbergraph_Crosshair_CarWeapon_Gatling
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Gatling_C::ExecuteUbergraph_Crosshair_CarWeapon_Gatling(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Gatling_C", "ExecuteUbergraph_Crosshair_CarWeapon_Gatling");

	Params::Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.OnCrosshairInNormalState
// (Event, Protected, BlueprintEvent)

void UCrosshair_CarWeapon_Gatling_C::OnCrosshairInNormalState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Gatling_C", "OnCrosshairInNormalState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.OnUpdateGatlingRoll
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTmie                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InRollSpeedInterp                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWantFire                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCrosshair_CarWeapon_Gatling_C::OnUpdateGatlingRoll(float DeltaTmie, float InRollSpeedInterp, bool bWantFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Gatling_C", "OnUpdateGatlingRoll");

	Params::Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll Parms{};

	Parms.DeltaTmie = DeltaTmie;
	Parms.InRollSpeedInterp = InRollSpeedInterp;
	Parms.bWantFire = bWantFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.CalculateRotAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InSpeed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFire                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  OutAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Gatling_C::CalculateRotAngle(float DeltaTime, float InSpeed, bool bFire, float* OutAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Gatling_C", "CalculateRotAngle");

	Params::Crosshair_CarWeapon_Gatling_C_CalculateRotAngle Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.InSpeed = InSpeed;
	Parms.bFire = bFire;

	UObject::ProcessEvent(Func, &Parms);

	if (OutAngle != nullptr)
		*OutAngle = Parms.OutAngle;
}

}

