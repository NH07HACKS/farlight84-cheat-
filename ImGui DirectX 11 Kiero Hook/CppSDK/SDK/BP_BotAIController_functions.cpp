#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BotAIController

#include "Basic.hpp"

#include "BP_BotAIController_classes.hpp"
#include "BP_BotAIController_parameters.hpp"


namespace SDK
{

// Function BP_BotAIController.BP_BotAIController_C.ExecuteUbergraph_BP_BotAIController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotAIController_C::ExecuteUbergraph_BP_BotAIController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "ExecuteUbergraph_BP_BotAIController");

	Params::BP_BotAIController_C_ExecuteUbergraph_BP_BotAIController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotAIController.BP_BotAIController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BotAIController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "ReceiveTick");

	Params::BP_BotAIController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotAIController.BP_BotAIController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BotAIController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BotAIController.BP_BotAIController_C.SetWarmGameClock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BotAIController_C::SetWarmGameClock(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "SetWarmGameClock");

	Params::BP_BotAIController_C_SetWarmGameClock Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BotAIController.BP_BotAIController_C.SetupBotAICanUseCharacterData
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

bool ABP_BotAIController_C::SetupBotAICanUseCharacterData(int32 CharacterID, int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "SetupBotAICanUseCharacterData");

	Params::BP_BotAIController_C_SetupBotAICanUseCharacterData Parms{};

	Parms.CharacterID = CharacterID;
	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BotAIController.BP_BotAIController_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_BotAIController_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BotAIController_C", "GetModuleName");

	Params::BP_BotAIController_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

