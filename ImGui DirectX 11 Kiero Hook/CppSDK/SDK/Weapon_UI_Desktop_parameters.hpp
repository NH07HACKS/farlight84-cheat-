#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_UI_Desktop

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.ExecuteUbergraph_Weapon_UI_Desktop
// 0x0018 (0x0018 - 0x0000)
struct Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWidgetOverrideParam>           K2Node_Event_Params;                               // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop) == 0x000008, "Wrong alignment on Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop");
static_assert(sizeof(Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop) == 0x000018, "Wrong size on Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop");
static_assert(offsetof(Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop, EntryPoint) == 0x000000, "Member 'Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop, K2Node_Event_Params) == 0x000008, "Member 'Weapon_UI_Desktop_C_ExecuteUbergraph_Weapon_UI_Desktop::K2Node_Event_Params' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.OnChangeAdapterSlotWidgetParameters
// 0x0010 (0x0010 - 0x0000)
struct Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters final
{
public:
	TArray<struct FWidgetOverrideParam>           Params_0;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters) == 0x000008, "Wrong alignment on Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters");
static_assert(sizeof(Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters) == 0x000010, "Wrong size on Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters");
static_assert(offsetof(Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters, Params_0) == 0x000000, "Member 'Weapon_UI_Desktop_C_OnChangeAdapterSlotWidgetParameters::Params_0' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.SetWeaponUIVisibility
// 0x0005 (0x0005 - 0x0000)
struct Weapon_UI_Desktop_C_SetWeaponUIVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_SetWeaponUIVisibility) == 0x000001, "Wrong alignment on Weapon_UI_Desktop_C_SetWeaponUIVisibility");
static_assert(sizeof(Weapon_UI_Desktop_C_SetWeaponUIVisibility) == 0x000005, "Wrong size on Weapon_UI_Desktop_C_SetWeaponUIVisibility");
static_assert(offsetof(Weapon_UI_Desktop_C_SetWeaponUIVisibility, bNewVisibility) == 0x000000, "Member 'Weapon_UI_Desktop_C_SetWeaponUIVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetWeaponUIVisibility, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_Desktop_C_SetWeaponUIVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetWeaponUIVisibility, Temp_byte_Variable) == 0x000002, "Member 'Weapon_UI_Desktop_C_SetWeaponUIVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetWeaponUIVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Weapon_UI_Desktop_C_SetWeaponUIVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetWeaponUIVisibility, K2Node_Select_Default) == 0x000004, "Member 'Weapon_UI_Desktop_C_SetWeaponUIVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.IsWeaponUIVisible
// 0x0004 (0x0004 - 0x0000)
struct Weapon_UI_Desktop_C_IsWeaponUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_Desktop_C_IsWeaponUIVisible) == 0x000001, "Wrong alignment on Weapon_UI_Desktop_C_IsWeaponUIVisible");
static_assert(sizeof(Weapon_UI_Desktop_C_IsWeaponUIVisible) == 0x000004, "Wrong size on Weapon_UI_Desktop_C_IsWeaponUIVisible");
static_assert(offsetof(Weapon_UI_Desktop_C_IsWeaponUIVisible, bVisible) == 0x000000, "Member 'Weapon_UI_Desktop_C_IsWeaponUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsWeaponUIVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Weapon_UI_Desktop_C_IsWeaponUIVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsWeaponUIVisible, CallFunc_IsVisible_ReturnValue_1) == 0x000002, "Member 'Weapon_UI_Desktop_C_IsWeaponUIVisible::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsWeaponUIVisible, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Weapon_UI_Desktop_C_IsWeaponUIVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.SetBuddyUIVisibility
// 0x0005 (0x0005 - 0x0000)
struct Weapon_UI_Desktop_C_SetBuddyUIVisibility final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_SetBuddyUIVisibility) == 0x000001, "Wrong alignment on Weapon_UI_Desktop_C_SetBuddyUIVisibility");
static_assert(sizeof(Weapon_UI_Desktop_C_SetBuddyUIVisibility) == 0x000005, "Wrong size on Weapon_UI_Desktop_C_SetBuddyUIVisibility");
static_assert(offsetof(Weapon_UI_Desktop_C_SetBuddyUIVisibility, bNewVisibility) == 0x000000, "Member 'Weapon_UI_Desktop_C_SetBuddyUIVisibility::bNewVisibility' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetBuddyUIVisibility, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_Desktop_C_SetBuddyUIVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetBuddyUIVisibility, Temp_byte_Variable) == 0x000002, "Member 'Weapon_UI_Desktop_C_SetBuddyUIVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetBuddyUIVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Weapon_UI_Desktop_C_SetBuddyUIVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_SetBuddyUIVisibility, K2Node_Select_Default) == 0x000004, "Member 'Weapon_UI_Desktop_C_SetBuddyUIVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.IsBuddyUIVisible
// 0x0004 (0x0004 - 0x0000)
struct Weapon_UI_Desktop_C_IsBuddyUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_Desktop_C_IsBuddyUIVisible) == 0x000001, "Wrong alignment on Weapon_UI_Desktop_C_IsBuddyUIVisible");
static_assert(sizeof(Weapon_UI_Desktop_C_IsBuddyUIVisible) == 0x000004, "Wrong size on Weapon_UI_Desktop_C_IsBuddyUIVisible");
static_assert(offsetof(Weapon_UI_Desktop_C_IsBuddyUIVisible, bVisible) == 0x000000, "Member 'Weapon_UI_Desktop_C_IsBuddyUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsBuddyUIVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Weapon_UI_Desktop_C_IsBuddyUIVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsBuddyUIVisible, CallFunc_IsVisible_ReturnValue_1) == 0x000002, "Member 'Weapon_UI_Desktop_C_IsBuddyUIVisible::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Desktop_C_IsBuddyUIVisible, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Weapon_UI_Desktop_C_IsBuddyUIVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.GetWeaponPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct Weapon_UI_Desktop_C_GetWeaponPanelWidget final
{
public:
	class USolarWeaponPanelWidgetDesktop*         OutWidget;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_GetWeaponPanelWidget) == 0x000008, "Wrong alignment on Weapon_UI_Desktop_C_GetWeaponPanelWidget");
static_assert(sizeof(Weapon_UI_Desktop_C_GetWeaponPanelWidget) == 0x000008, "Wrong size on Weapon_UI_Desktop_C_GetWeaponPanelWidget");
static_assert(offsetof(Weapon_UI_Desktop_C_GetWeaponPanelWidget, OutWidget) == 0x000000, "Member 'Weapon_UI_Desktop_C_GetWeaponPanelWidget::OutWidget' has a wrong offset!");

// Function Weapon_UI_Desktop.Weapon_UI_Desktop_C.GetShootPatternWidget
// 0x0008 (0x0008 - 0x0000)
struct Weapon_UI_Desktop_C_GetShootPatternWidget final
{
public:
	class UUI_Weapon_Model_C*                     OutWidget;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Desktop_C_GetShootPatternWidget) == 0x000008, "Wrong alignment on Weapon_UI_Desktop_C_GetShootPatternWidget");
static_assert(sizeof(Weapon_UI_Desktop_C_GetShootPatternWidget) == 0x000008, "Wrong size on Weapon_UI_Desktop_C_GetShootPatternWidget");
static_assert(offsetof(Weapon_UI_Desktop_C_GetShootPatternWidget, OutWidget) == 0x000000, "Member 'Weapon_UI_Desktop_C_GetShootPatternWidget::OutWidget' has a wrong offset!");

}

