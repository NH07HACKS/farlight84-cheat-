#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SlidingRailBase

#include "Basic.hpp"

#include "BP_SlidingRailBase_classes.hpp"
#include "BP_SlidingRailBase_parameters.hpp"


namespace SDK
{

// Function BP_SlidingRailBase.BP_SlidingRailBase_C.CreatePillar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SlidingRailBase_C::CreatePillar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SlidingRailBase_C", "CreatePillar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SlidingRailBase.BP_SlidingRailBase_C.FixRrailLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SlidingRailBase_C::FixRrailLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SlidingRailBase_C", "FixRrailLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SlidingRailBase.BP_SlidingRailBase_C.GetEndPointLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   PillarLoc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         EndPointLoc                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         EndPointDir                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SlidingRailBase_C::GetEndPointLocation(const struct FVector& PillarLoc, struct FVector* EndPointLoc, struct FVector* EndPointDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SlidingRailBase_C", "GetEndPointLocation");

	Params::BP_SlidingRailBase_C_GetEndPointLocation Parms{};

	Parms.PillarLoc = std::move(PillarLoc);

	UObject::ProcessEvent(Func, &Parms);

	if (EndPointLoc != nullptr)
		*EndPointLoc = std::move(Parms.EndPointLoc);

	if (EndPointDir != nullptr)
		*EndPointDir = std::move(Parms.EndPointDir);
}

}

