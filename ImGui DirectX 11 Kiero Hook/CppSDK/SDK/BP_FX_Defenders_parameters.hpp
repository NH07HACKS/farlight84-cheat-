#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_Defenders

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FX_Defenders.BP_FX_Defenders_C.GetFXDistance
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FX_Defenders_C_GetFXDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0078(0x0050)(ConstParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue_1; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FX_Defenders_C_GetFXDistance) == 0x000008, "Wrong alignment on BP_FX_Defenders_C_GetFXDistance");
static_assert(sizeof(BP_FX_Defenders_C_GetFXDistance) == 0x0000E0, "Wrong size on BP_FX_Defenders_C_GetFXDistance");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, Distance) == 0x000000, "Member 'BP_FX_Defenders_C_GetFXDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_Conv_VectorToString_ReturnValue) == 0x000030, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_GetDisplayName_ReturnValue_1) == 0x000048, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000064, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000068, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_FX_Defenders_C_GetFXDistance::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_VSize_ReturnValue) == 0x0000D4, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetFXDistance, CallFunc_NotEqualExactly_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_FX_Defenders_C_GetFXDistance::CallFunc_NotEqualExactly_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_FX_Defenders.BP_FX_Defenders_C.AttachToCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_FX_Defenders_C_AttachToCharacter final
{
public:
	const class ASolarCharacter*                  Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_Defenders_C_AttachToCharacter) == 0x000008, "Wrong alignment on BP_FX_Defenders_C_AttachToCharacter");
static_assert(sizeof(BP_FX_Defenders_C_AttachToCharacter) == 0x000008, "Wrong size on BP_FX_Defenders_C_AttachToCharacter");
static_assert(offsetof(BP_FX_Defenders_C_AttachToCharacter, Character) == 0x000000, "Member 'BP_FX_Defenders_C_AttachToCharacter::Character' has a wrong offset!");

// Function BP_FX_Defenders.BP_FX_Defenders_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FX_Defenders_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_Defenders_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FX_Defenders_C_ReceiveTick");
static_assert(sizeof(BP_FX_Defenders_C_ReceiveTick) == 0x000004, "Wrong size on BP_FX_Defenders_C_ReceiveTick");
static_assert(offsetof(BP_FX_Defenders_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FX_Defenders_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FX_Defenders.BP_FX_Defenders_C.ExecuteUbergraph_BP_FX_Defenders
// 0x0010 (0x0010 - 0x0000)
struct BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ASolarCharacter*                  K2Node_Event_Character;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders) == 0x000008, "Wrong alignment on BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders");
static_assert(sizeof(BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders) == 0x000010, "Wrong size on BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders");
static_assert(offsetof(BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders, EntryPoint) == 0x000000, "Member 'BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders, K2Node_Event_Character) == 0x000008, "Member 'BP_FX_Defenders_C_ExecuteUbergraph_BP_FX_Defenders::K2Node_Event_Character' has a wrong offset!");

// Function BP_FX_Defenders.BP_FX_Defenders_C.GetTrackingTransform
// 0x0070 (0x0070 - 0x0000)
struct BP_FX_Defenders_C_GetTrackingTransform final
{
public:
	const class ASolarCharacter*                  Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FX_Defenders_C_GetTrackingTransform) == 0x000010, "Wrong alignment on BP_FX_Defenders_C_GetTrackingTransform");
static_assert(sizeof(BP_FX_Defenders_C_GetTrackingTransform) == 0x000070, "Wrong size on BP_FX_Defenders_C_GetTrackingTransform");
static_assert(offsetof(BP_FX_Defenders_C_GetTrackingTransform, Character) == 0x000000, "Member 'BP_FX_Defenders_C_GetTrackingTransform::Character' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetTrackingTransform, ReturnValue) == 0x000010, "Member 'BP_FX_Defenders_C_GetTrackingTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FX_Defenders_C_GetTrackingTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000040, "Member 'BP_FX_Defenders_C_GetTrackingTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

}

