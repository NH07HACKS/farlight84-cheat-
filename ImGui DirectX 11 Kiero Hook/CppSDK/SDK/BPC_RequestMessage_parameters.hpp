#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_RequestMessage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_MessageRequest_structs.hpp"


namespace SDK::Params
{

// Function BPC_RequestMessage.BPC_RequestMessage_C.ExecuteUbergraph_BPC_RequestMessage
// 0x00C0 (0x00C0 - 0x0000)
struct BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FS_MessageRequest                      K2Node_CustomEvent_Info_1;                         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MessageRequest                      K2Node_CustomEvent_Info;                           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reply;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToString_Key;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToString_Key_1;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_RequestMessage_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0090(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ASolarMapElementBase*                   CallFunc_GenerateMapElement_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RequestMessage_C*                   K2Node_DynamicCast_AsBP_Request_Message;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage) == 0x000010, "Wrong alignment on BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage");
static_assert(sizeof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage) == 0x0000C0, "Wrong size on BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, EntryPoint) == 0x000000, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, K2Node_CustomEvent_Info_1) == 0x000040, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::K2Node_CustomEvent_Info_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, K2Node_CustomEvent_Info) == 0x00004C, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::K2Node_CustomEvent_Info' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, K2Node_CustomEvent_Reply) == 0x000058, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::K2Node_CustomEvent_Reply' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_ToString_Key) == 0x000060, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_ToString_Key' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_ToString_Key_1) == 0x000070, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_ToString_Key_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_GetActorOfClass_ReturnValue) == 0x000080, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_IsServer_ReturnValue) == 0x000088, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, Temp_name_Variable) == 0x000090, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, CallFunc_GenerateMapElement_ReturnValue) == 0x0000A0, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::CallFunc_GenerateMapElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, K2Node_DynamicCast_AsBP_Request_Message) == 0x0000A8, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::K2Node_DynamicCast_AsBP_Request_Message' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BPC_RequestMessage_C_ExecuteUbergraph_BPC_RequestMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPC_RequestMessage.BPC_RequestMessage_C.SendReply
// 0x0010 (0x0010 - 0x0000)
struct BPC_RequestMessage_C_SendReply final
{
public:
	struct FS_MessageRequest                      Info;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reply;                                             // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RequestMessage_C_SendReply) == 0x000004, "Wrong alignment on BPC_RequestMessage_C_SendReply");
static_assert(sizeof(BPC_RequestMessage_C_SendReply) == 0x000010, "Wrong size on BPC_RequestMessage_C_SendReply");
static_assert(offsetof(BPC_RequestMessage_C_SendReply, Info) == 0x000000, "Member 'BPC_RequestMessage_C_SendReply::Info' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_SendReply, Reply) == 0x00000C, "Member 'BPC_RequestMessage_C_SendReply::Reply' has a wrong offset!");

// Function BPC_RequestMessage.BPC_RequestMessage_C.ReceiveRequest
// 0x000C (0x000C - 0x0000)
struct BPC_RequestMessage_C_ReceiveRequest final
{
public:
	struct FS_MessageRequest                      Info;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RequestMessage_C_ReceiveRequest) == 0x000004, "Wrong alignment on BPC_RequestMessage_C_ReceiveRequest");
static_assert(sizeof(BPC_RequestMessage_C_ReceiveRequest) == 0x00000C, "Wrong size on BPC_RequestMessage_C_ReceiveRequest");
static_assert(offsetof(BPC_RequestMessage_C_ReceiveRequest, Info) == 0x000000, "Member 'BPC_RequestMessage_C_ReceiveRequest::Info' has a wrong offset!");

// Function BPC_RequestMessage.BPC_RequestMessage_C.ToString
// 0x0090 (0x0090 - 0x0000)
struct BPC_RequestMessage_C_ToString final
{
public:
	struct FS_MessageRequest                      MessageInfo;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RequestMessage_C_ToString) == 0x000008, "Wrong alignment on BPC_RequestMessage_C_ToString");
static_assert(sizeof(BPC_RequestMessage_C_ToString) == 0x000090, "Wrong size on BPC_RequestMessage_C_ToString");
static_assert(offsetof(BPC_RequestMessage_C_ToString, MessageInfo) == 0x000000, "Member 'BPC_RequestMessage_C_ToString::MessageInfo' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, Key) == 0x000010, "Member 'BPC_RequestMessage_C_ToString::Key' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Conv_ByteToString_ReturnValue) == 0x000020, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000050, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'BPC_RequestMessage_C_ToString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BPC_RequestMessage.BPC_RequestMessage_C.ToMessageInfo
// 0x0080 (0x0080 - 0x0000)
struct BPC_RequestMessage_C_ToMessageInfo final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FS_MessageRequest                      MessageInfo;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MessageRequest                      K2Node_MakeStruct_S_MessageRequest;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_RequestMessage_C_ToMessageInfo) == 0x000008, "Wrong alignment on BPC_RequestMessage_C_ToMessageInfo");
static_assert(sizeof(BPC_RequestMessage_C_ToMessageInfo) == 0x000080, "Wrong size on BPC_RequestMessage_C_ToMessageInfo");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, Key) == 0x000000, "Member 'BPC_RequestMessage_C_ToMessageInfo::Key' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, MessageInfo) == 0x000010, "Member 'BPC_RequestMessage_C_ToMessageInfo::MessageInfo' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_ParseIntoArray_ReturnValue) == 0x000020, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Conv_StringToInt_ReturnValue) == 0x000050, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000054, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Conv_IntToByte_ReturnValue) == 0x000058, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000070, "Member 'BPC_RequestMessage_C_ToMessageInfo::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_ToMessageInfo, K2Node_MakeStruct_S_MessageRequest) == 0x000074, "Member 'BPC_RequestMessage_C_ToMessageInfo::K2Node_MakeStruct_S_MessageRequest' has a wrong offset!");

// Function BPC_RequestMessage.BPC_RequestMessage_C.GetOwnerPlayerID
// 0x0020 (0x0020 - 0x0000)
struct BPC_RequestMessage_C_GetOwnerPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SolarPlayerState_C*                 K2Node_DynamicCast_AsBP_Solar_Player_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_RequestMessage_C_GetOwnerPlayerID) == 0x000008, "Wrong alignment on BPC_RequestMessage_C_GetOwnerPlayerID");
static_assert(sizeof(BPC_RequestMessage_C_GetOwnerPlayerID) == 0x000020, "Wrong size on BPC_RequestMessage_C_GetOwnerPlayerID");
static_assert(offsetof(BPC_RequestMessage_C_GetOwnerPlayerID, PlayerID) == 0x000000, "Member 'BPC_RequestMessage_C_GetOwnerPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_GetOwnerPlayerID, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPC_RequestMessage_C_GetOwnerPlayerID::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_GetOwnerPlayerID, K2Node_DynamicCast_AsBP_Solar_Player_State) == 0x000010, "Member 'BPC_RequestMessage_C_GetOwnerPlayerID::K2Node_DynamicCast_AsBP_Solar_Player_State' has a wrong offset!");
static_assert(offsetof(BPC_RequestMessage_C_GetOwnerPlayerID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_RequestMessage_C_GetOwnerPlayerID::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

