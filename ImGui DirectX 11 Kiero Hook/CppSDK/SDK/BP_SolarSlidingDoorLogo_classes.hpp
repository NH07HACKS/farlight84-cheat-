#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarSlidingDoorLogo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SolarSlidingDoorLogo.BP_SolarSlidingDoorLogo_C
// 0x0050 (0x05F0 - 0x05A0)
class ABP_SolarSlidingDoorLogo_C final : public ASolarSlidingDoor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SI_InteractionDoor02Logo01;                        // 0x05A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02Logo03;                        // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02Logo02;                        // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02Logo04;                        // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_InteractionDoor02_Close;                        // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_InteractionDoor02_Open;                         // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02C_Glass;                       // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02B_Glass;                       // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SI_InteractionDoor02A;                             // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SolarSlidingDoorLogo(int32 EntryPoint);
	void ReceiveCloseDoor();
	void ReceiveOpenDoor();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SolarSlidingDoorLogo_C">();
	}
	static class ABP_SolarSlidingDoorLogo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SolarSlidingDoorLogo_C>();
	}
};
static_assert(alignof(ABP_SolarSlidingDoorLogo_C) == 0x000010, "Wrong alignment on ABP_SolarSlidingDoorLogo_C");
static_assert(sizeof(ABP_SolarSlidingDoorLogo_C) == 0x0005F0, "Wrong size on ABP_SolarSlidingDoorLogo_C");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, UberGraphFrame) == 0x0005A0, "Member 'ABP_SolarSlidingDoorLogo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02Logo01) == 0x0005A8, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02Logo01' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02Logo03) == 0x0005B0, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02Logo03' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02Logo02) == 0x0005B8, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02Logo02' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02Logo04) == 0x0005C0, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02Logo04' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, FX_InteractionDoor02_Close) == 0x0005C8, "Member 'ABP_SolarSlidingDoorLogo_C::FX_InteractionDoor02_Close' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, FX_InteractionDoor02_Open) == 0x0005D0, "Member 'ABP_SolarSlidingDoorLogo_C::FX_InteractionDoor02_Open' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02C_Glass) == 0x0005D8, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02C_Glass' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02B_Glass) == 0x0005E0, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02B_Glass' has a wrong offset!");
static_assert(offsetof(ABP_SolarSlidingDoorLogo_C, SI_InteractionDoor02A) == 0x0005E8, "Member 'ABP_SolarSlidingDoorLogo_C::SI_InteractionDoor02A' has a wrong offset!");

}

