#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Type_Item_structs.hpp"
#include "UMG_structs.hpp"
#include "E_Item_Quality_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Item.UI_Component_Item_C
// 0x01A8 (0x0798 - 0x05F0)
class UUI_Component_Item_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Reset_Anim;                                        // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Exchange;                                     // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Loop;                                         // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Puzzle_Unlock_Anim;                                // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Sold_Anim;                                         // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Enter_Anim;                                        // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Btn_Item;                                          // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Drag;                                              // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TrialTag;                                    // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg;                                            // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hover;                                         // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Icon;                                          // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Puzzle;                                        // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Quality_BottomBar;                             // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Selected;                                      // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Sold_Mask;                                     // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Light;                                      // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Light_1;                                    // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Light_4;                                    // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Light_5;                                    // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Light_6;                                    // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Bg;                                    // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Wipe;                                  // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Random;                                    // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Recycle;                                   // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Owned;                                             // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Claim_Loop_Bg;                               // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Equiped;                                     // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Equipped;                                    // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Exclusive;                                   // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Puzzle;                                      // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_TrialTag;                                    // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_UnLock;                                      // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_VX_UR;                                       // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Received;                                          // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Item;                                         // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Number;                                       // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_WheelEquipped;                                // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_LotteryItem;                                  // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarAdapterWidget*                    SolarAdapterWidget_Claim;                          // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarAdapterWidget*                    SolarAdapterWidget_MR;                             // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarAdapterWidget*                    SolarAdapterWidget_RedHint;                        // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarAdapterWidget*                    SolarAdapterWidget_VideoSlot;                      // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Equipped;                                 // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Item;                                     // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarRichTextBlock*                    Txt_ChatBubble;                                    // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Number;                                        // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_Type_Item                                   ItemState;                                         // 0x0770(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x3];                                      // 0x0771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         尺寸;                                              // 0x0774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Quality;                                           // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Select;                                            // 0x0779(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Experience;                                        // 0x077A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Num;                                               // 0x077B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Puzzle;                                            // 0x077C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Equiped;                                           // 0x077D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RedHint;                                           // 0x077E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77F[0x1];                                      // 0x077F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Txt_Size;                                          // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoQuality;                                         // 0x0784(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRecycle;                                         // 0x0785(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_786[0x2];                                      // 0x0786(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PCBorderWidth;                                     // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MobileBorderWidth;                                 // 0x078C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WheelNum;                                          // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WheelEquipped;                                     // 0x0794(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsExclusive;                                       // 0x0795(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHover;                                           // 0x0796(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Component_Item(int32 EntryPoint);
	void BP_OnEntryReleased();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void ChangItemState();
	void PreConstruct(bool IsDesignTime);
	void PlaySound_Anim_Exchange();
	void PlaySound_Puzzle_Unlock_Anim();
	void SetIcon_Lua();
	void ShowNum(bool Num_0);
	void SetCharacterWheel(int32 WheelNum_0);
	void SetEquipped(bool NewIsEquipped);
	void SetHover(bool IsHover_0);
	void SetQuality(E_Item_Quality Quality_0);
	void SetItemState(E_Type_Item ItemState_0);
	void ResetWidgetVisibility();
	void SequenceEvent__ENTRYPOINTUI_Component_Item_0();
	void SequenceEvent__ENTRYPOINTUI_Component_Item_1();
	void SequenceEvent__ENTRYPOINTUI_Component_Item_2();
	bool BP_IsNotSelectableOrNavigable();
	void OnMouseEnterCopy(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BP_OnItemSelectionChangedCopy(bool bIsSelected);
	void OnListItemObjectSetCopy(class UObject* ListItemObject);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void PlayEnterAnim();
	void OnInitialized();
	void SetIcon_LuaCopy();
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Item_C">();
	}
	static class UUI_Component_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Item_C>();
	}
};
static_assert(alignof(UUI_Component_Item_C) == 0x000008, "Wrong alignment on UUI_Component_Item_C");
static_assert(sizeof(UUI_Component_Item_C) == 0x000798, "Wrong size on UUI_Component_Item_C");
static_assert(offsetof(UUI_Component_Item_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Component_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Reset_Anim) == 0x0005F8, "Member 'UUI_Component_Item_C::Reset_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Anim_Exchange) == 0x000600, "Member 'UUI_Component_Item_C::Anim_Exchange' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Anim_Loop) == 0x000608, "Member 'UUI_Component_Item_C::Anim_Loop' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Puzzle_Unlock_Anim) == 0x000610, "Member 'UUI_Component_Item_C::Puzzle_Unlock_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Sold_Anim) == 0x000618, "Member 'UUI_Component_Item_C::Sold_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Enter_Anim) == 0x000620, "Member 'UUI_Component_Item_C::Enter_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Btn_Item) == 0x000628, "Member 'UUI_Component_Item_C::Btn_Item' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Drag) == 0x000630, "Member 'UUI_Component_Item_C::Drag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Image_TrialTag) == 0x000638, "Member 'UUI_Component_Item_C::Image_TrialTag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Bg) == 0x000640, "Member 'UUI_Component_Item_C::Img_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Hover) == 0x000648, "Member 'UUI_Component_Item_C::Img_Hover' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Icon) == 0x000650, "Member 'UUI_Component_Item_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Puzzle) == 0x000658, "Member 'UUI_Component_Item_C::Img_Puzzle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Quality_BottomBar) == 0x000660, "Member 'UUI_Component_Item_C::Img_Quality_BottomBar' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Selected) == 0x000668, "Member 'UUI_Component_Item_C::Img_Selected' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_Sold_Mask) == 0x000670, "Member 'UUI_Component_Item_C::Img_Sold_Mask' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Light) == 0x000678, "Member 'UUI_Component_Item_C::Img_VX_Light' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Light_1) == 0x000680, "Member 'UUI_Component_Item_C::Img_VX_Light_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Light_4) == 0x000688, "Member 'UUI_Component_Item_C::Img_VX_Light_4' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Light_5) == 0x000690, "Member 'UUI_Component_Item_C::Img_VX_Light_5' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Light_6) == 0x000698, "Member 'UUI_Component_Item_C::Img_VX_Light_6' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Loop_Bg) == 0x0006A0, "Member 'UUI_Component_Item_C::Img_VX_Loop_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Img_VX_Loop_Wipe) == 0x0006A8, "Member 'UUI_Component_Item_C::Img_VX_Loop_Wipe' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Overlay_Random) == 0x0006B0, "Member 'UUI_Component_Item_C::Overlay_Random' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Overlay_Recycle) == 0x0006B8, "Member 'UUI_Component_Item_C::Overlay_Recycle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Owned) == 0x0006C0, "Member 'UUI_Component_Item_C::Owned' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_Claim_Loop_Bg) == 0x0006C8, "Member 'UUI_Component_Item_C::Panel_Claim_Loop_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_Equiped) == 0x0006D0, "Member 'UUI_Component_Item_C::Panel_Equiped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_Equipped) == 0x0006D8, "Member 'UUI_Component_Item_C::Panel_Equipped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_Exclusive) == 0x0006E0, "Member 'UUI_Component_Item_C::Panel_Exclusive' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_Puzzle) == 0x0006E8, "Member 'UUI_Component_Item_C::Panel_Puzzle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_TrialTag) == 0x0006F0, "Member 'UUI_Component_Item_C::Panel_TrialTag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_UnLock) == 0x0006F8, "Member 'UUI_Component_Item_C::Panel_UnLock' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Panel_VX_UR) == 0x000700, "Member 'UUI_Component_Item_C::Panel_VX_UR' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Received) == 0x000708, "Member 'UUI_Component_Item_C::Received' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Size_Item) == 0x000710, "Member 'UUI_Component_Item_C::Size_Item' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Size_Number) == 0x000718, "Member 'UUI_Component_Item_C::Size_Number' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Size_WheelEquipped) == 0x000720, "Member 'UUI_Component_Item_C::Size_WheelEquipped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Slot_LotteryItem) == 0x000728, "Member 'UUI_Component_Item_C::Slot_LotteryItem' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, SolarAdapterWidget_Claim) == 0x000730, "Member 'UUI_Component_Item_C::SolarAdapterWidget_Claim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, SolarAdapterWidget_MR) == 0x000738, "Member 'UUI_Component_Item_C::SolarAdapterWidget_MR' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, SolarAdapterWidget_RedHint) == 0x000740, "Member 'UUI_Component_Item_C::SolarAdapterWidget_RedHint' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, SolarAdapterWidget_VideoSlot) == 0x000748, "Member 'UUI_Component_Item_C::SolarAdapterWidget_VideoSlot' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Switcher_Equipped) == 0x000750, "Member 'UUI_Component_Item_C::Switcher_Equipped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Switcher_Item) == 0x000758, "Member 'UUI_Component_Item_C::Switcher_Item' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Txt_ChatBubble) == 0x000760, "Member 'UUI_Component_Item_C::Txt_ChatBubble' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Txt_Number) == 0x000768, "Member 'UUI_Component_Item_C::Txt_Number' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, ItemState) == 0x000770, "Member 'UUI_Component_Item_C::ItemState' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, 尺寸) == 0x000774, "Member 'UUI_Component_Item_C::尺寸' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Quality) == 0x000778, "Member 'UUI_Component_Item_C::Quality' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Select) == 0x000779, "Member 'UUI_Component_Item_C::Select' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Experience) == 0x00077A, "Member 'UUI_Component_Item_C::Experience' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Num) == 0x00077B, "Member 'UUI_Component_Item_C::Num' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Puzzle) == 0x00077C, "Member 'UUI_Component_Item_C::Puzzle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Equiped) == 0x00077D, "Member 'UUI_Component_Item_C::Equiped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, RedHint) == 0x00077E, "Member 'UUI_Component_Item_C::RedHint' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, Txt_Size) == 0x000780, "Member 'UUI_Component_Item_C::Txt_Size' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, NoQuality) == 0x000784, "Member 'UUI_Component_Item_C::NoQuality' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, IsRecycle) == 0x000785, "Member 'UUI_Component_Item_C::IsRecycle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, PCBorderWidth) == 0x000788, "Member 'UUI_Component_Item_C::PCBorderWidth' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, MobileBorderWidth) == 0x00078C, "Member 'UUI_Component_Item_C::MobileBorderWidth' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, WheelNum) == 0x000790, "Member 'UUI_Component_Item_C::WheelNum' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, WheelEquipped) == 0x000794, "Member 'UUI_Component_Item_C::WheelEquipped' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, IsExclusive) == 0x000795, "Member 'UUI_Component_Item_C::IsExclusive' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_C, IsHover) == 0x000796, "Member 'UUI_Component_Item_C::IsHover' has a wrong offset!");

}

