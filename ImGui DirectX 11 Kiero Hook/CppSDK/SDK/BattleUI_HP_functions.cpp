#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleUI_HP

#include "Basic.hpp"

#include "BattleUI_HP_classes.hpp"
#include "BattleUI_HP_parameters.hpp"


namespace SDK
{

// Function BattleUI_HP.BattleUI_HP_C.ExecuteUbergraph_BattleUI_HP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleUI_HP_C::ExecuteUbergraph_BattleUI_HP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "ExecuteUbergraph_BattleUI_HP");

	Params::BattleUI_HP_C_ExecuteUbergraph_BattleUI_HP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.ExpAnimEnd
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::ExpAnimEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "ExpAnimEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.PlayGainExpAnim
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::PlayGainExpAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "PlayGainExpAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.LevelUpEnd
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::LevelUpEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "LevelUpEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.LevelUpAnimFadeOut
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::LevelUpAnimFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "LevelUpAnimFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.PlayLevelUpAnimation
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::PlayLevelUpAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "PlayLevelUpAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBattleUI_HP_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "PreConstruct");

	Params::BattleUI_HP_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBattleUI_HP_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.BindEventToSetWidgetVisibility
// (BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::BindEventToSetWidgetVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "BindEventToSetWidgetVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.OnWidgetVisibilitySet
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Publisher                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class FString>&            MetaData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBattleUI_HP_C::OnWidgetVisibilitySet(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "OnWidgetVisibilitySet");

	Params::BattleUI_HP_C_OnWidgetVisibilitySet Parms{};

	Parms.Publisher = Publisher;
	Parms.Payload = Payload;
	Parms.MetaData = std::move(MetaData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.ShowGainExp
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ExpAdded                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleUI_HP_C::ShowGainExp(int32 ExpAdded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "ShowGainExp");

	Params::BattleUI_HP_C_ShowGainExp Parms{};

	Parms.ExpAdded = ExpAdded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.ShowLevelUp
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class FString>&            DynamicTips                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBattleUI_HP_C::ShowLevelUp(int32 NewLevel, const TArray<class FString>& DynamicTips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "ShowLevelUp");

	Params::BattleUI_HP_C_ShowLevelUp Parms{};

	Parms.NewLevel = NewLevel;
	Parms.DynamicTips = std::move(DynamicTips);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.UpdateLevelAndColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleUI_HP_C::UpdateLevelAndColor(int32 PlayerLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "UpdateLevelAndColor");

	Params::BattleUI_HP_C_UpdateLevelAndColor Parms{};

	Parms.PlayerLevel = PlayerLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.OnLevelupExitAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBattleUI_HP_C::OnLevelupExitAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "OnLevelupExitAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.UpdateTips
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FString>&            Tips                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBattleUI_HP_C::UpdateTips(const TArray<class FString>& Tips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "UpdateTips");

	Params::BattleUI_HP_C_UpdateTips Parms{};

	Parms.Tips = std::move(Tips);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.OnShieldUpgradeItemNumChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             ShieldLevel                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             ShieldMaxLevel                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             ShieldUpgradeItemNum                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             NeedShieldUpgradeItemNum_0                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             MaxShieldUpgradeItemNum_0                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBattleUI_HP_C::OnShieldUpgradeItemNumChanged(const int32 ShieldLevel, const int32 ShieldMaxLevel, const int32 ShieldUpgradeItemNum, const int32 NeedShieldUpgradeItemNum_0, const int32 MaxShieldUpgradeItemNum_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "OnShieldUpgradeItemNumChanged");

	Params::BattleUI_HP_C_OnShieldUpgradeItemNumChanged Parms{};

	Parms.ShieldLevel = ShieldLevel;
	Parms.ShieldMaxLevel = ShieldMaxLevel;
	Parms.ShieldUpgradeItemNum = ShieldUpgradeItemNum;
	Parms.NeedShieldUpgradeItemNum_0 = NeedShieldUpgradeItemNum_0;
	Parms.MaxShieldUpgradeItemNum_0 = MaxShieldUpgradeItemNum_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattleUI_HP.BattleUI_HP_C.ShowOneExtraTips
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText&                            TipsContent                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBattleUI_HP_C::ShowOneExtraTips(class FText& TipsContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "ShowOneExtraTips");

	Params::BattleUI_HP_C_ShowOneExtraTips Parms{};

	Parms.TipsContent = std::move(TipsContent);

	UObject::ProcessEvent(Func, &Parms);

	TipsContent = std::move(Parms.TipsContent);
}


// Function BattleUI_HP.BattleUI_HP_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBattleUI_HP_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBattleUI_HP_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattleUI_HP.BattleUI_HP_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBattleUI_HP_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleUI_HP_C", "GetModuleName");

	Params::BattleUI_HP_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

