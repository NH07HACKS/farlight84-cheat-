#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTS_GiveItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BTS_GiveItem.BP_BTS_GiveItem_C
// 0x0030 (0x00C8 - 0x0098)
class UBP_BTS_GiveItem_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ASolarBotAIController*                  SelfController;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 NewVar_0;                                          // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         TimePeriod;                                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BTS_GiveItem(int32 EntryPoint);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn_0);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn_0, float DeltaSeconds);
	void ReceiveSearchStartAI(class AAIController* OwnerController, class APawn* ControlledPawn_0);
	void GiveItem();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BTS_GiveItem_C">();
	}
	static class UBP_BTS_GiveItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BTS_GiveItem_C>();
	}
};
static_assert(alignof(UBP_BTS_GiveItem_C) == 0x000008, "Wrong alignment on UBP_BTS_GiveItem_C");
static_assert(sizeof(UBP_BTS_GiveItem_C) == 0x0000C8, "Wrong size on UBP_BTS_GiveItem_C");
static_assert(offsetof(UBP_BTS_GiveItem_C, UberGraphFrame) == 0x000098, "Member 'UBP_BTS_GiveItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_BTS_GiveItem_C, SelfController) == 0x0000A0, "Member 'UBP_BTS_GiveItem_C::SelfController' has a wrong offset!");
static_assert(offsetof(UBP_BTS_GiveItem_C, ControlledPawn) == 0x0000A8, "Member 'UBP_BTS_GiveItem_C::ControlledPawn' has a wrong offset!");
static_assert(offsetof(UBP_BTS_GiveItem_C, NewVar_0) == 0x0000B0, "Member 'UBP_BTS_GiveItem_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBP_BTS_GiveItem_C, TimePeriod) == 0x0000C0, "Member 'UBP_BTS_GiveItem_C::TimePeriod' has a wrong offset!");

}

