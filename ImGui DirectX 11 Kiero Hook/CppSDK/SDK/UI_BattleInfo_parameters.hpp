#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattleInfo

#include "Basic.hpp"

#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_BattleInfo.UI_BattleInfo_C.ExecuteUbergraph_UI_BattleInfo
// 0x000C (0x000C - 0x0000)
struct UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo) == 0x000004, "Wrong alignment on UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo");
static_assert(sizeof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo) == 0x00000C, "Wrong size on UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, EntryPoint) == 0x000000, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, Temp_byte_Variable) == 0x000004, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, Temp_bool_Variable) == 0x000005, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, Temp_bool_Variable_1) == 0x000006, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, K2Node_Event_IsDesignTime) == 0x000007, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, K2Node_Event_InLayoutType) == 0x000008, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo, K2Node_Select_Default) == 0x000009, "Member 'UI_BattleInfo_C_ExecuteUbergraph_UI_BattleInfo::K2Node_Select_Default' has a wrong offset!");

// Function UI_BattleInfo.UI_BattleInfo_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleInfo_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleInfo_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_BattleInfo_C_ReceivePlatformLayout");
static_assert(sizeof(UI_BattleInfo_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_BattleInfo_C_ReceivePlatformLayout");
static_assert(offsetof(UI_BattleInfo_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_BattleInfo_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_BattleInfo.UI_BattleInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleInfo_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattleInfo_C_PreConstruct");
static_assert(sizeof(UI_BattleInfo_C_PreConstruct) == 0x000001, "Wrong size on UI_BattleInfo_C_PreConstruct");
static_assert(offsetof(UI_BattleInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattleInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattleInfo.UI_BattleInfo_C.SetIconColor
// 0x0068 (0x0068 - 0x0000)
struct UI_BattleInfo_C_SetIconColor final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleInfo_C_SetIconColor) == 0x000004, "Wrong alignment on UI_BattleInfo_C_SetIconColor");
static_assert(sizeof(UI_BattleInfo_C_SetIconColor) == 0x000068, "Wrong size on UI_BattleInfo_C_SetIconColor");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_bool_Variable) == 0x000000, "Member 'UI_BattleInfo_C_SetIconColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_struct_Variable) == 0x000004, "Member 'UI_BattleInfo_C_SetIconColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_struct_Variable_1) == 0x000014, "Member 'UI_BattleInfo_C_SetIconColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_bool_Variable_1) == 0x000024, "Member 'UI_BattleInfo_C_SetIconColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_struct_Variable_2) == 0x000028, "Member 'UI_BattleInfo_C_SetIconColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, Temp_struct_Variable_3) == 0x000038, "Member 'UI_BattleInfo_C_SetIconColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, K2Node_Select_Default) == 0x000048, "Member 'UI_BattleInfo_C_SetIconColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattleInfo_C_SetIconColor, K2Node_Select_Default_1) == 0x000058, "Member 'UI_BattleInfo_C_SetIconColor::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_BattleInfo.UI_BattleInfo_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_BattleInfo_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleInfo_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_BattleInfo_C_GetEnterAnimation");
static_assert(sizeof(UI_BattleInfo_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_BattleInfo_C_GetEnterAnimation");
static_assert(offsetof(UI_BattleInfo_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_BattleInfo_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_BattleInfo.UI_BattleInfo_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_BattleInfo_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleInfo_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_BattleInfo_C_GetExitAnimation");
static_assert(sizeof(UI_BattleInfo_C_GetExitAnimation) == 0x000008, "Wrong size on UI_BattleInfo_C_GetExitAnimation");
static_assert(offsetof(UI_BattleInfo_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_BattleInfo_C_GetExitAnimation::ReturnValue' has a wrong offset!");

}

