#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattleReview_Review_Harm

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.ExecuteUbergraph_UI_BattleReview_Review_Harm
// 0x0008 (0x0008 - 0x0000)
struct UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm) == 0x000004, "Wrong alignment on UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm) == 0x000008, "Wrong size on UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm, EntryPoint) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_BattleReview_Review_Harm_C_ExecuteUbergraph_UI_BattleReview_Review_Harm::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattleReview_Review_Harm_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattleReview_Review_Harm_C_PreConstruct");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_PreConstruct) == 0x000001, "Wrong size on UI_BattleReview_Review_Harm_C_PreConstruct");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.SetHead
// 0x0034 (0x0034 - 0x0000)
struct UI_BattleReview_Review_Harm_C_SetHead final
{
public:
	bool                                          IsHead_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_SetHead) == 0x000004, "Wrong alignment on UI_BattleReview_Review_Harm_C_SetHead");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_SetHead) == 0x000034, "Wrong size on UI_BattleReview_Review_Harm_C_SetHead");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHead, IsHead_0) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_SetHead::IsHead_0' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHead, Temp_bool_Variable) == 0x000001, "Member 'UI_BattleReview_Review_Harm_C_SetHead::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHead, Temp_struct_Variable) == 0x000004, "Member 'UI_BattleReview_Review_Harm_C_SetHead::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHead, Temp_struct_Variable_1) == 0x000014, "Member 'UI_BattleReview_Review_Harm_C_SetHead::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHead, K2Node_Select_Default) == 0x000024, "Member 'UI_BattleReview_Review_Harm_C_SetHead::K2Node_Select_Default' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.SetUpperBody
// 0x0034 (0x0034 - 0x0000)
struct UI_BattleReview_Review_Harm_C_SetUpperBody final
{
public:
	bool                                          IsUpperBody_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_SetUpperBody) == 0x000004, "Wrong alignment on UI_BattleReview_Review_Harm_C_SetUpperBody");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_SetUpperBody) == 0x000034, "Wrong size on UI_BattleReview_Review_Harm_C_SetUpperBody");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetUpperBody, IsUpperBody_0) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_SetUpperBody::IsUpperBody_0' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetUpperBody, Temp_bool_Variable) == 0x000001, "Member 'UI_BattleReview_Review_Harm_C_SetUpperBody::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetUpperBody, Temp_struct_Variable) == 0x000004, "Member 'UI_BattleReview_Review_Harm_C_SetUpperBody::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetUpperBody, Temp_struct_Variable_1) == 0x000014, "Member 'UI_BattleReview_Review_Harm_C_SetUpperBody::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetUpperBody, K2Node_Select_Default) == 0x000024, "Member 'UI_BattleReview_Review_Harm_C_SetUpperBody::K2Node_Select_Default' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.SetLowerBody
// 0x0034 (0x0034 - 0x0000)
struct UI_BattleReview_Review_Harm_C_SetLowerBody final
{
public:
	bool                                          IsLowerBody_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_SetLowerBody) == 0x000004, "Wrong alignment on UI_BattleReview_Review_Harm_C_SetLowerBody");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_SetLowerBody) == 0x000034, "Wrong size on UI_BattleReview_Review_Harm_C_SetLowerBody");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetLowerBody, IsLowerBody_0) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_SetLowerBody::IsLowerBody_0' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetLowerBody, Temp_bool_Variable) == 0x000001, "Member 'UI_BattleReview_Review_Harm_C_SetLowerBody::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetLowerBody, Temp_struct_Variable) == 0x000004, "Member 'UI_BattleReview_Review_Harm_C_SetLowerBody::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetLowerBody, Temp_struct_Variable_1) == 0x000014, "Member 'UI_BattleReview_Review_Harm_C_SetLowerBody::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetLowerBody, K2Node_Select_Default) == 0x000024, "Member 'UI_BattleReview_Review_Harm_C_SetLowerBody::K2Node_Select_Default' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.SetPercent
// 0x0018 (0x0018 - 0x0000)
struct UI_BattleReview_Review_Harm_C_SetPercent final
{
public:
	class UImage*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_SetPercent) == 0x000008, "Wrong alignment on UI_BattleReview_Review_Harm_C_SetPercent");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_SetPercent) == 0x000018, "Wrong size on UI_BattleReview_Review_Harm_C_SetPercent");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetPercent, Target) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_SetPercent::Target' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetPercent, Percent) == 0x000008, "Member 'UI_BattleReview_Review_Harm_C_SetPercent::Percent' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetPercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_BattleReview_Review_Harm_C_SetPercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetPercent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'UI_BattleReview_Review_Harm_C_SetPercent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function UI_BattleReview_Review_Harm.UI_BattleReview_Review_Harm_C.SetHighlightPart
// 0x0002 (0x0002 - 0x0000)
struct UI_BattleReview_Review_Harm_C_SetHighlightPart final
{
public:
	EHitBodyPart                                  BodyPart;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BattleReview_Review_Harm_C_SetHighlightPart) == 0x000001, "Wrong alignment on UI_BattleReview_Review_Harm_C_SetHighlightPart");
static_assert(sizeof(UI_BattleReview_Review_Harm_C_SetHighlightPart) == 0x000002, "Wrong size on UI_BattleReview_Review_Harm_C_SetHighlightPart");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHighlightPart, BodyPart) == 0x000000, "Member 'UI_BattleReview_Review_Harm_C_SetHighlightPart::BodyPart' has a wrong offset!");
static_assert(offsetof(UI_BattleReview_Review_Harm_C_SetHighlightPart, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_BattleReview_Review_Harm_C_SetHighlightPart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

