#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tab_ItemBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_HintData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_TabStyle_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Tab_ItemBase.BP_Tab_ItemBase_C
// 0x0080 (0x0670 - 0x05F0)
class UBP_Tab_ItemBase_C : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 Text;                                              // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_HintData                            HintData;                                          // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TabStyle                                    Style;                                             // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarRedHint_General_C*                HintWidget;                                        // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& Key)> ItemSelected;                           // 0x0638(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USolarTextBlock*                        wText;                                             // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TabItemObj_C*                       Obj;                                               // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                IconImage;                                         // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	bool BP_IsNotSelectableOrNavigable();
	void ShowBubbleBox(bool bIsShow);
	void OnHovered(bool IsHovered_0);
	void ReviseWidget();
	void SetProperties(class UBP_TabItemObj_C* Obj_0);
	void UpdateWidget();
	void InitWidget(class USolarRedHint_General_C** HintWidget_0, class USolarTextBlock** Text_0, class UImage** Icon_0);
	void SetSelected(bool IsSelected);
	void SetStyle(E_TabStyle Style_0);
	void SetHintData(const struct FS_HintData& S_HintData);
	void SetItemSize(const struct FVector2D& Size_0);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void PreConstruct(bool IsDesignTime);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void OnRevised();
	void OnLocalLangChangedEx(const class FString& InLang);
	void BP_OnEntryReleased();
	void ExecuteUbergraph_BP_Tab_ItemBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tab_ItemBase_C">();
	}
	static class UBP_Tab_ItemBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Tab_ItemBase_C>();
	}
};
static_assert(alignof(UBP_Tab_ItemBase_C) == 0x000008, "Wrong alignment on UBP_Tab_ItemBase_C");
static_assert(sizeof(UBP_Tab_ItemBase_C) == 0x000670, "Wrong size on UBP_Tab_ItemBase_C");
static_assert(offsetof(UBP_Tab_ItemBase_C, UberGraphFrame) == 0x0005F0, "Member 'UBP_Tab_ItemBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Text) == 0x0005F8, "Member 'UBP_Tab_ItemBase_C::Text' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Size) == 0x000608, "Member 'UBP_Tab_ItemBase_C::Size' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, HintData) == 0x000610, "Member 'UBP_Tab_ItemBase_C::HintData' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Style) == 0x000620, "Member 'UBP_Tab_ItemBase_C::Style' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, HintWidget) == 0x000628, "Member 'UBP_Tab_ItemBase_C::HintWidget' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, bSelected) == 0x000630, "Member 'UBP_Tab_ItemBase_C::bSelected' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, ItemSelected) == 0x000638, "Member 'UBP_Tab_ItemBase_C::ItemSelected' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, wText) == 0x000648, "Member 'UBP_Tab_ItemBase_C::wText' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Obj) == 0x000650, "Member 'UBP_Tab_ItemBase_C::Obj' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Icon) == 0x000658, "Member 'UBP_Tab_ItemBase_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, IconImage) == 0x000660, "Member 'UBP_Tab_ItemBase_C::IconImage' has a wrong offset!");
static_assert(offsetof(UBP_Tab_ItemBase_C, Hovered) == 0x000668, "Member 'UBP_Tab_ItemBase_C::Hovered' has a wrong offset!");

}

