#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PickUp_Tips_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_PickUp_Tips_Slot.UI_PickUp_Tips_Slot_C
// 0x0030 (0x0798 - 0x0768)
class UUI_PickUp_Tips_Slot_C final : public UUINoticePickupItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Enter;                                        // 0x0778(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Up;                                            // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FSlateColor>                    Quality;                                           // 0x0788(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_PickUp_Tips_Slot(int32 EntryPoint);
	void BP_UpdateLockView(ETEUILockState InLockState);
	void BP_SetImgSizeByItemType(int32 InType);
	void Construct();
	class UWidgetAnimation* GetExitAnimation();
	class UWidgetAnimation* GetEnterAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_PickUp_Tips_Slot_C">();
	}
	static class UUI_PickUp_Tips_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_PickUp_Tips_Slot_C>();
	}
};
static_assert(alignof(UUI_PickUp_Tips_Slot_C) == 0x000008, "Wrong alignment on UUI_PickUp_Tips_Slot_C");
static_assert(sizeof(UUI_PickUp_Tips_Slot_C) == 0x000798, "Wrong size on UUI_PickUp_Tips_Slot_C");
static_assert(offsetof(UUI_PickUp_Tips_Slot_C, UberGraphFrame) == 0x000768, "Member 'UUI_PickUp_Tips_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_PickUp_Tips_Slot_C, Anim_Exit) == 0x000770, "Member 'UUI_PickUp_Tips_Slot_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_PickUp_Tips_Slot_C, Anim_Enter) == 0x000778, "Member 'UUI_PickUp_Tips_Slot_C::Anim_Enter' has a wrong offset!");
static_assert(offsetof(UUI_PickUp_Tips_Slot_C, Img_Up) == 0x000780, "Member 'UUI_PickUp_Tips_Slot_C::Img_Up' has a wrong offset!");
static_assert(offsetof(UUI_PickUp_Tips_Slot_C, Quality) == 0x000788, "Member 'UUI_PickUp_Tips_Slot_C::Quality' has a wrong offset!");

}

