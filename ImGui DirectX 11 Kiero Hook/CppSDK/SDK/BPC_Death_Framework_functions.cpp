#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Death_Framework

#include "Basic.hpp"

#include "BPC_Death_Framework_classes.hpp"
#include "BPC_Death_Framework_parameters.hpp"


namespace SDK
{

// Function BPC_Death_Framework.BPC_Death_Framework_C.GMRevive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  InKilled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   AutoRevive                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_Death_Framework_C::GMRevive(class ASCMPlayerState* InKilled, bool* AutoRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "GMRevive");

	Params::BPC_Death_Framework_C_GMRevive Parms{};

	Parms.InKilled = InKilled;

	UObject::ProcessEvent(Func, &Parms);

	if (AutoRevive != nullptr)
		*AutoRevive = Parms.AutoRevive;
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.Try Buy Resurrect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    DamageEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool*                                   Succeed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_Death_Framework_C::Try_Buy_Resurrect(class ASCMPlayerState* Player, const struct FSolarPointDamageEvent& DamageEvent, bool* Succeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "Try Buy Resurrect");

	Params::BPC_Death_Framework_C_Try_Buy_Resurrect Parms{};

	Parms.Player = Player;
	Parms.DamageEvent = std::move(DamageEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Succeed != nullptr)
		*Succeed = Parms.Succeed;
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.CheckTerminator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  InKiller                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  InKilled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBPC_Death_Framework_C::CheckTerminator(class ASCMPlayerState* InKiller, class ASCMPlayerState* InKilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "CheckTerminator");

	Params::BPC_Death_Framework_C_CheckTerminator Parms{};

	Parms.InKiller = InKiller;
	Parms.InKilled = InKilled;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.GetDefenderManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_DefenderManager_C**           AsBP_Defender_Manager                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Death_Framework_C::GetDefenderManager(class ABP_DefenderManager_C** AsBP_Defender_Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "GetDefenderManager");

	Params::BPC_Death_Framework_C_GetDefenderManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBP_Defender_Manager != nullptr)
		*AsBP_Defender_Manager = Parms.AsBP_Defender_Manager;
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.Update Data Trace BP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DeathType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  Killed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TMap<class FString, class FString>&AdditionalData                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPC_Death_Framework_C::Update_Data_Trace_BP(E_DeathType Type, class ASCMPlayerState* Killer, class ASCMPlayerState* Killed, const struct FSolarPointDamageEvent& DamageEvent, class AActor* DamageCauser, const TMap<class FString, class FString>& AdditionalData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "Update Data Trace BP");

	Params::BPC_Death_Framework_C_Update_Data_Trace_BP Parms{};

	Parms.Type = Type;
	Parms.Killer = Killer;
	Parms.Killed = Killed;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.DamageCauser = DamageCauser;
	Parms.AdditionalData = std::move(AdditionalData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.ReceivePlayerKill
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  Killed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class ASCMPlayerState*>&   Assists                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    InDamageEvent                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                           InDamageCauser                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Death_Framework_C::ReceivePlayerKill(class ASCMPlayerState* Killer, class ASCMPlayerState* Killed, const TArray<class ASCMPlayerState*>& Assists, const struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "ReceivePlayerKill");

	Params::BPC_Death_Framework_C_ReceivePlayerKill Parms{};

	Parms.Killer = Killer;
	Parms.Killed = Killed;
	Parms.Assists = std::move(Assists);
	Parms.InDamageEvent = std::move(InDamageEvent);
	Parms.InDamageCauser = InDamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.ReceivePlayerDeathVerge
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  InAttacker                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  InDeathVergePlayer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    InDamageEvent                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AActor*                           InDamageCauser                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Death_Framework_C::ReceivePlayerDeathVerge(class ASCMPlayerState* InAttacker, class ASCMPlayerState* InDeathVergePlayer, const struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "ReceivePlayerDeathVerge");

	Params::BPC_Death_Framework_C_ReceivePlayerDeathVerge Parms{};

	Parms.InAttacker = InAttacker;
	Parms.InDeathVergePlayer = InDeathVergePlayer;
	Parms.InDamageEvent = std::move(InDamageEvent);
	Parms.InDamageCauser = InDamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.ReceivePlayerResurrect
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASolarCharacter*                  ResurrectCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASCMPlayerState*                  ResurrectPlayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Death_Framework_C::ReceivePlayerResurrect(class ASolarCharacter* ResurrectCharacter, class ASCMPlayerState* ResurrectPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "ReceivePlayerResurrect");

	Params::BPC_Death_Framework_C_ReceivePlayerResurrect Parms{};

	Parms.ResurrectCharacter = ResurrectCharacter;
	Parms.ResurrectPlayer = ResurrectPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Death_Framework.BPC_Death_Framework_C.ExecuteUbergraph_BPC_Death_Framework
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_Death_Framework_C::ExecuteUbergraph_BPC_Death_Framework(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Death_Framework_C", "ExecuteUbergraph_BPC_Death_Framework");

	Params::BPC_Death_Framework_C_ExecuteUbergraph_BPC_Death_Framework Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

