#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UdiniInputActor

#include "Basic.hpp"

#include "ProceduralMeshComponent_classes.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "UdiniInputActor_structs.hpp"


namespace SDK
{

// Class UdiniInputActor.UdiniInputActorBase
// 0x0008 (0x02E0 - 0x02D8)
class AUdiniInputActorBase : public AActor
{
public:
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInputActorBase">();
	}
	static class AUdiniInputActorBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUdiniInputActorBase>();
	}
};
static_assert(alignof(AUdiniInputActorBase) == 0x000008, "Wrong alignment on AUdiniInputActorBase");
static_assert(sizeof(AUdiniInputActorBase) == 0x0002E0, "Wrong size on AUdiniInputActorBase");

// Class UdiniInputActor.AInputStaticmeshActorRuntime
// 0x0020 (0x0300 - 0x02E0)
class AAInputStaticmeshActorRuntime final : public AUdiniInputActorBase
{
public:
	TArray<class UStaticMeshComponent*>           InstanceComponent;                                 // 0x02E0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                    Meshs;                                             // 0x02F0(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AInputStaticmeshActorRuntime">();
	}
	static class AAInputStaticmeshActorRuntime* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAInputStaticmeshActorRuntime>();
	}
};
static_assert(alignof(AAInputStaticmeshActorRuntime) == 0x000008, "Wrong alignment on AAInputStaticmeshActorRuntime");
static_assert(sizeof(AAInputStaticmeshActorRuntime) == 0x000300, "Wrong size on AAInputStaticmeshActorRuntime");
static_assert(offsetof(AAInputStaticmeshActorRuntime, InstanceComponent) == 0x0002E0, "Member 'AAInputStaticmeshActorRuntime::InstanceComponent' has a wrong offset!");
static_assert(offsetof(AAInputStaticmeshActorRuntime, Meshs) == 0x0002F0, "Member 'AAInputStaticmeshActorRuntime::Meshs' has a wrong offset!");

// Class UdiniInputActor.CurveModel_Base
// 0x0000 (0x0028 - 0x0028)
class UCurveModel_Base final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurveModel_Base">();
	}
	static class UCurveModel_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurveModel_Base>();
	}
};
static_assert(alignof(UCurveModel_Base) == 0x000008, "Wrong alignment on UCurveModel_Base");
static_assert(sizeof(UCurveModel_Base) == 0x000028, "Wrong size on UCurveModel_Base");

// Class UdiniInputActor.EditorMeshComponet
// 0x0000 (0x0700 - 0x0700)
class UEditorMeshComponet final : public UProceduralMeshComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditorMeshComponet">();
	}
	static class UEditorMeshComponet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditorMeshComponet>();
	}
};
static_assert(alignof(UEditorMeshComponet) == 0x000010, "Wrong alignment on UEditorMeshComponet");
static_assert(sizeof(UEditorMeshComponet) == 0x000700, "Wrong size on UEditorMeshComponet");

// Class UdiniInputActor.IUdiniInputCoreInterface
// 0x0000 (0x0000 - 0x0000)
class IIUdiniInputCoreInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"IUdiniInputCoreInterface">();
	}
	static class IIUdiniInputCoreInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IIUdiniInputCoreInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IIUdiniInputCoreInterface) == 0x000001, "Wrong alignment on IIUdiniInputCoreInterface");
static_assert(sizeof(IIUdiniInputCoreInterface) == 0x000001, "Wrong size on IIUdiniInputCoreInterface");

// Class UdiniInputActor.UdiniDataPart
// 0x0100 (0x0128 - 0x0028)
class UUdiniDataPart : public UObject
{
public:
	EUdiniDataPartType                            PartType;                                          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        VertexPosition;                                    // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        VertexNormal;                                      // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   VertexColors;                                      // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   VertexColorsCatche;                                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector2D>                      VertexUV;                                          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PointEnableDraw;                                   // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 PointDrawSize;                                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 PrimDrawLineThinkness;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UUdiniAttribute*>   UdiniAttributesMap;                                // 0x00B0(0x0050)(NativeAccessSpecifierPublic)
	uint8                                         Pad_100[0xC];                                      // 0x0100(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   BoundBox;                                          // 0x010C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniDataPart">();
	}
	static class UUdiniDataPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniDataPart>();
	}
};
static_assert(alignof(UUdiniDataPart) == 0x000008, "Wrong alignment on UUdiniDataPart");
static_assert(sizeof(UUdiniDataPart) == 0x000128, "Wrong size on UUdiniDataPart");
static_assert(offsetof(UUdiniDataPart, PartType) == 0x000028, "Member 'UUdiniDataPart::PartType' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, VertexPosition) == 0x000030, "Member 'UUdiniDataPart::VertexPosition' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, VertexNormal) == 0x000040, "Member 'UUdiniDataPart::VertexNormal' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, VertexColors) == 0x000050, "Member 'UUdiniDataPart::VertexColors' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, VertexColorsCatche) == 0x000060, "Member 'UUdiniDataPart::VertexColorsCatche' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, VertexUV) == 0x000070, "Member 'UUdiniDataPart::VertexUV' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, PointEnableDraw) == 0x000080, "Member 'UUdiniDataPart::PointEnableDraw' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, PointDrawSize) == 0x000090, "Member 'UUdiniDataPart::PointDrawSize' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, PrimDrawLineThinkness) == 0x0000A0, "Member 'UUdiniDataPart::PrimDrawLineThinkness' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, UdiniAttributesMap) == 0x0000B0, "Member 'UUdiniDataPart::UdiniAttributesMap' has a wrong offset!");
static_assert(offsetof(UUdiniDataPart, BoundBox) == 0x00010C, "Member 'UUdiniDataPart::BoundBox' has a wrong offset!");

// Class UdiniInputActor.UdiniAreaDataPart
// 0x0028 (0x0150 - 0x0128)
class UUdiniAreaDataPart final : public UUdiniDataPart
{
public:
	class UMaterialInstanceDynamic*               ViewTextureInstanceDynamic;                        // 0x0128(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ViewTexture;                                       // 0x0130(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHeightFieldData>               HeightFieldData;                                   // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 HouidniDataToTextureView;                          // 0x0148(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAreaDataPart">();
	}
	static class UUdiniAreaDataPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAreaDataPart>();
	}
};
static_assert(alignof(UUdiniAreaDataPart) == 0x000008, "Wrong alignment on UUdiniAreaDataPart");
static_assert(sizeof(UUdiniAreaDataPart) == 0x000150, "Wrong size on UUdiniAreaDataPart");
static_assert(offsetof(UUdiniAreaDataPart, ViewTextureInstanceDynamic) == 0x000128, "Member 'UUdiniAreaDataPart::ViewTextureInstanceDynamic' has a wrong offset!");
static_assert(offsetof(UUdiniAreaDataPart, ViewTexture) == 0x000130, "Member 'UUdiniAreaDataPart::ViewTexture' has a wrong offset!");
static_assert(offsetof(UUdiniAreaDataPart, HeightFieldData) == 0x000138, "Member 'UUdiniAreaDataPart::HeightFieldData' has a wrong offset!");
static_assert(offsetof(UUdiniAreaDataPart, HouidniDataToTextureView) == 0x000148, "Member 'UUdiniAreaDataPart::HouidniDataToTextureView' has a wrong offset!");

// Class UdiniInputActor.UdiniAttribute
// 0x00E0 (0x0108 - 0x0028)
class UUdiniAttribute : public UObject
{
public:
	class FString                                 AttributeName;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 help;                                              // 0x0038(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUdiniAttributeType                           AttributeType;                                     // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUdiniAttributeClass                          AttributeOwner;                                    // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHide;                                           // 0x004A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttributeCount;                                    // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeTupleSize;                                // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxValue;                                          // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinValue;                                          // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          hasMin;                                            // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          hasMax;                                            // 0x005D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          hasUIMin;                                          // 0x005E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          hasUIMax;                                          // 0x005F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UIMax;                                             // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UIMin;                                             // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShowValueSize;                                     // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowAttributeValueAsDir;                           // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowAttributeValueAsText;                          // 0x006D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableShowBackGroundValue;                         // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6F[0x99];                                      // 0x006F(0x0099)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttribute">();
	}
	static class UUdiniAttribute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttribute>();
	}
};
static_assert(alignof(UUdiniAttribute) == 0x000008, "Wrong alignment on UUdiniAttribute");
static_assert(sizeof(UUdiniAttribute) == 0x000108, "Wrong size on UUdiniAttribute");
static_assert(offsetof(UUdiniAttribute, AttributeName) == 0x000028, "Member 'UUdiniAttribute::AttributeName' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, help) == 0x000038, "Member 'UUdiniAttribute::help' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, AttributeType) == 0x000048, "Member 'UUdiniAttribute::AttributeType' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, AttributeOwner) == 0x000049, "Member 'UUdiniAttribute::AttributeOwner' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, bIsHide) == 0x00004A, "Member 'UUdiniAttribute::bIsHide' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, AttributeCount) == 0x00004C, "Member 'UUdiniAttribute::AttributeCount' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, AttributeTupleSize) == 0x000050, "Member 'UUdiniAttribute::AttributeTupleSize' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, MaxValue) == 0x000054, "Member 'UUdiniAttribute::MaxValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, MinValue) == 0x000058, "Member 'UUdiniAttribute::MinValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, hasMin) == 0x00005C, "Member 'UUdiniAttribute::hasMin' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, hasMax) == 0x00005D, "Member 'UUdiniAttribute::hasMax' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, hasUIMin) == 0x00005E, "Member 'UUdiniAttribute::hasUIMin' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, hasUIMax) == 0x00005F, "Member 'UUdiniAttribute::hasUIMax' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, UIMax) == 0x000060, "Member 'UUdiniAttribute::UIMax' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, UIMin) == 0x000064, "Member 'UUdiniAttribute::UIMin' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, ShowValueSize) == 0x000068, "Member 'UUdiniAttribute::ShowValueSize' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, ShowAttributeValueAsDir) == 0x00006C, "Member 'UUdiniAttribute::ShowAttributeValueAsDir' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, ShowAttributeValueAsText) == 0x00006D, "Member 'UUdiniAttribute::ShowAttributeValueAsText' has a wrong offset!");
static_assert(offsetof(UUdiniAttribute, EnableShowBackGroundValue) == 0x00006E, "Member 'UUdiniAttribute::EnableShowBackGroundValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutFloat
// 0x0018 (0x0120 - 0x0108)
class UUdiniAttaibutFloat final : public UUdiniAttribute
{
public:
	TArray<float>                                 Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultValue;                                      // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutFloat">();
	}
	static class UUdiniAttaibutFloat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutFloat>();
	}
};
static_assert(alignof(UUdiniAttaibutFloat) == 0x000008, "Wrong alignment on UUdiniAttaibutFloat");
static_assert(sizeof(UUdiniAttaibutFloat) == 0x000120, "Wrong size on UUdiniAttaibutFloat");
static_assert(offsetof(UUdiniAttaibutFloat, Value) == 0x000108, "Member 'UUdiniAttaibutFloat::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutFloat, DefaultValue) == 0x000118, "Member 'UUdiniAttaibutFloat::DefaultValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutVector3
// 0x0030 (0x0138 - 0x0108)
class UUdiniAttaibutVector3 final : public UUdiniAttribute
{
public:
	TArray<struct FVector>                        Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DefaultValue;                                      // 0x0118(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowOnlyDir;                                      // 0x0124(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxPaintValue;                                     // 0x0128(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinPaintValue;                                     // 0x012C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VisScale;                                          // 0x0130(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutVector3">();
	}
	static class UUdiniAttaibutVector3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutVector3>();
	}
};
static_assert(alignof(UUdiniAttaibutVector3) == 0x000008, "Wrong alignment on UUdiniAttaibutVector3");
static_assert(sizeof(UUdiniAttaibutVector3) == 0x000138, "Wrong size on UUdiniAttaibutVector3");
static_assert(offsetof(UUdiniAttaibutVector3, Value) == 0x000108, "Member 'UUdiniAttaibutVector3::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector3, DefaultValue) == 0x000118, "Member 'UUdiniAttaibutVector3::DefaultValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector3, bShowOnlyDir) == 0x000124, "Member 'UUdiniAttaibutVector3::bShowOnlyDir' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector3, MaxPaintValue) == 0x000128, "Member 'UUdiniAttaibutVector3::MaxPaintValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector3, MinPaintValue) == 0x00012C, "Member 'UUdiniAttaibutVector3::MinPaintValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector3, VisScale) == 0x000130, "Member 'UUdiniAttaibutVector3::VisScale' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutVector2
// 0x0018 (0x0120 - 0x0108)
class UUdiniAttaibutVector2 final : public UUdiniAttribute
{
public:
	TArray<struct FVector2D>                      Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DefaultValue;                                      // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutVector2">();
	}
	static class UUdiniAttaibutVector2* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutVector2>();
	}
};
static_assert(alignof(UUdiniAttaibutVector2) == 0x000008, "Wrong alignment on UUdiniAttaibutVector2");
static_assert(sizeof(UUdiniAttaibutVector2) == 0x000120, "Wrong size on UUdiniAttaibutVector2");
static_assert(offsetof(UUdiniAttaibutVector2, Value) == 0x000108, "Member 'UUdiniAttaibutVector2::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector2, DefaultValue) == 0x000118, "Member 'UUdiniAttaibutVector2::DefaultValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutVector4
// 0x0028 (0x0130 - 0x0108)
class UUdiniAttaibutVector4 final : public UUdiniAttribute
{
public:
	TArray<struct FVector4>                       Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               DefaultValue;                                      // 0x0120(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutVector4">();
	}
	static class UUdiniAttaibutVector4* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutVector4>();
	}
};
static_assert(alignof(UUdiniAttaibutVector4) == 0x000010, "Wrong alignment on UUdiniAttaibutVector4");
static_assert(sizeof(UUdiniAttaibutVector4) == 0x000130, "Wrong size on UUdiniAttaibutVector4");
static_assert(offsetof(UUdiniAttaibutVector4, Value) == 0x000108, "Member 'UUdiniAttaibutVector4::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutVector4, DefaultValue) == 0x000120, "Member 'UUdiniAttaibutVector4::DefaultValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutIntBase
// 0x0018 (0x0120 - 0x0108)
class UUdiniAttaibutIntBase : public UUdiniAttribute
{
public:
	TArray<int32>                                 Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultValue;                                      // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutIntBase">();
	}
	static class UUdiniAttaibutIntBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutIntBase>();
	}
};
static_assert(alignof(UUdiniAttaibutIntBase) == 0x000008, "Wrong alignment on UUdiniAttaibutIntBase");
static_assert(sizeof(UUdiniAttaibutIntBase) == 0x000120, "Wrong size on UUdiniAttaibutIntBase");
static_assert(offsetof(UUdiniAttaibutIntBase, Value) == 0x000108, "Member 'UUdiniAttaibutIntBase::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutIntBase, DefaultValue) == 0x000118, "Member 'UUdiniAttaibutIntBase::DefaultValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutInt
// 0x0000 (0x0120 - 0x0120)
class UUdiniAttaibutInt final : public UUdiniAttaibutIntBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutInt">();
	}
	static class UUdiniAttaibutInt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutInt>();
	}
};
static_assert(alignof(UUdiniAttaibutInt) == 0x000008, "Wrong alignment on UUdiniAttaibutInt");
static_assert(sizeof(UUdiniAttaibutInt) == 0x000120, "Wrong size on UUdiniAttaibutInt");

// Class UdiniInputActor.UdiniAttaibutTog
// 0x0000 (0x0120 - 0x0120)
class UUdiniAttaibutTog final : public UUdiniAttaibutIntBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutTog">();
	}
	static class UUdiniAttaibutTog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutTog>();
	}
};
static_assert(alignof(UUdiniAttaibutTog) == 0x000008, "Wrong alignment on UUdiniAttaibutTog");
static_assert(sizeof(UUdiniAttaibutTog) == 0x000120, "Wrong size on UUdiniAttaibutTog");

// Class UdiniInputActor.UdiniAttaibutButton
// 0x0000 (0x0120 - 0x0120)
class UUdiniAttaibutButton final : public UUdiniAttaibutIntBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutButton">();
	}
	static class UUdiniAttaibutButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutButton>();
	}
};
static_assert(alignof(UUdiniAttaibutButton) == 0x000008, "Wrong alignment on UUdiniAttaibutButton");
static_assert(sizeof(UUdiniAttaibutButton) == 0x000120, "Wrong size on UUdiniAttaibutButton");

// Class UdiniInputActor.UdiniAttaibutString
// 0x0020 (0x0128 - 0x0108)
class UUdiniAttaibutString : public UUdiniAttribute
{
public:
	TArray<class FString>                         Value;                                             // 0x0108(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultValue;                                      // 0x0118(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutString">();
	}
	static class UUdiniAttaibutString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutString>();
	}
};
static_assert(alignof(UUdiniAttaibutString) == 0x000008, "Wrong alignment on UUdiniAttaibutString");
static_assert(sizeof(UUdiniAttaibutString) == 0x000128, "Wrong size on UUdiniAttaibutString");
static_assert(offsetof(UUdiniAttaibutString, Value) == 0x000108, "Member 'UUdiniAttaibutString::Value' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutString, DefaultValue) == 0x000118, "Member 'UUdiniAttaibutString::DefaultValue' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutStringChoiseList
// 0x0038 (0x0160 - 0x0128)
class UUdiniAttaibutStringChoiseList final : public UUdiniAttaibutString
{
public:
	TArray<class FString>                         ChoseListStringLable;                              // 0x0128(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ChoseListStringValue;                              // 0x0138(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   ChoseListStringColors;                             // 0x0148(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHeightFieldAtt;                                 // 0x0158(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBitMask;                                        // 0x0159(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutStringChoiseList">();
	}
	static class UUdiniAttaibutStringChoiseList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutStringChoiseList>();
	}
};
static_assert(alignof(UUdiniAttaibutStringChoiseList) == 0x000008, "Wrong alignment on UUdiniAttaibutStringChoiseList");
static_assert(sizeof(UUdiniAttaibutStringChoiseList) == 0x000160, "Wrong size on UUdiniAttaibutStringChoiseList");
static_assert(offsetof(UUdiniAttaibutStringChoiseList, ChoseListStringLable) == 0x000128, "Member 'UUdiniAttaibutStringChoiseList::ChoseListStringLable' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutStringChoiseList, ChoseListStringValue) == 0x000138, "Member 'UUdiniAttaibutStringChoiseList::ChoseListStringValue' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutStringChoiseList, ChoseListStringColors) == 0x000148, "Member 'UUdiniAttaibutStringChoiseList::ChoseListStringColors' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutStringChoiseList, bIsHeightFieldAtt) == 0x000158, "Member 'UUdiniAttaibutStringChoiseList::bIsHeightFieldAtt' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutStringChoiseList, bIsBitMask) == 0x000159, "Member 'UUdiniAttaibutStringChoiseList::bIsBitMask' has a wrong offset!");

// Class UdiniInputActor.UdiniAttaibutIntChoiselist
// 0x0020 (0x0140 - 0x0120)
class UUdiniAttaibutIntChoiselist final : public UUdiniAttaibutIntBase
{
public:
	TArray<class FString>                         ChoseListStringLable;                              // 0x0120(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ChoseListIntValue;                                 // 0x0130(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniAttaibutIntChoiselist">();
	}
	static class UUdiniAttaibutIntChoiselist* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniAttaibutIntChoiselist>();
	}
};
static_assert(alignof(UUdiniAttaibutIntChoiselist) == 0x000008, "Wrong alignment on UUdiniAttaibutIntChoiselist");
static_assert(sizeof(UUdiniAttaibutIntChoiselist) == 0x000140, "Wrong size on UUdiniAttaibutIntChoiselist");
static_assert(offsetof(UUdiniAttaibutIntChoiselist, ChoseListStringLable) == 0x000120, "Member 'UUdiniAttaibutIntChoiselist::ChoseListStringLable' has a wrong offset!");
static_assert(offsetof(UUdiniAttaibutIntChoiselist, ChoseListIntValue) == 0x000130, "Member 'UUdiniAttaibutIntChoiselist::ChoseListIntValue' has a wrong offset!");

// Class UdiniInputActor.UdiniCatcheAsset_Base
// 0x0020 (0x0048 - 0x0028)
class UUdiniCatcheAsset_Base final : public UObject
{
public:
	uint8                                         Pad_28[0x20];                                      // 0x0028(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniCatcheAsset_Base">();
	}
	static class UUdiniCatcheAsset_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniCatcheAsset_Base>();
	}
};
static_assert(alignof(UUdiniCatcheAsset_Base) == 0x000008, "Wrong alignment on UUdiniCatcheAsset_Base");
static_assert(sizeof(UUdiniCatcheAsset_Base) == 0x000048, "Wrong size on UUdiniCatcheAsset_Base");

// Class UdiniInputActor.UdiniInputVolum
// 0x0000 (0x0310 - 0x0310)
class AUdiniInputVolum : public AVolume
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInputVolum">();
	}
	static class AUdiniInputVolum* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUdiniInputVolum>();
	}
};
static_assert(alignof(AUdiniInputVolum) == 0x000008, "Wrong alignment on AUdiniInputVolum");
static_assert(sizeof(AUdiniInputVolum) == 0x000310, "Wrong size on AUdiniInputVolum");

// Class UdiniInputActor.UdiniCollisionInputVolum
// 0x0000 (0x0310 - 0x0310)
class AUdiniCollisionInputVolum final : public AUdiniInputVolum
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniCollisionInputVolum">();
	}
	static class AUdiniCollisionInputVolum* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUdiniCollisionInputVolum>();
	}
};
static_assert(alignof(AUdiniCollisionInputVolum) == 0x000008, "Wrong alignment on AUdiniCollisionInputVolum");
static_assert(sizeof(AUdiniCollisionInputVolum) == 0x000310, "Wrong size on AUdiniCollisionInputVolum");

// Class UdiniInputActor.UdiniDecalComponent
// 0x0000 (0x0380 - 0x0380)
class UUdiniDecalComponent final : public UDecalComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniDecalComponent">();
	}
	static class UUdiniDecalComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniDecalComponent>();
	}
};
static_assert(alignof(UUdiniDecalComponent) == 0x000010, "Wrong alignment on UUdiniDecalComponent");
static_assert(sizeof(UUdiniDecalComponent) == 0x000380, "Wrong size on UUdiniDecalComponent");

// Class UdiniInputActor.UdiniInputPin
// 0x0000 (0x00C0 - 0x00C0)
class UUdiniInputPin final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInputPin">();
	}
	static class UUdiniInputPin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniInputPin>();
	}
};
static_assert(alignof(UUdiniInputPin) == 0x000008, "Wrong alignment on UUdiniInputPin");
static_assert(sizeof(UUdiniInputPin) == 0x0000C0, "Wrong size on UUdiniInputPin");

// Class UdiniInputActor.UdiniInputVolumActor
// 0x0008 (0x02E0 - 0x02D8)
class AUdiniInputVolumActor final : public AActor
{
public:
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInputVolumActor">();
	}
	static class AUdiniInputVolumActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUdiniInputVolumActor>();
	}
};
static_assert(alignof(AUdiniInputVolumActor) == 0x000008, "Wrong alignment on AUdiniInputVolumActor");
static_assert(sizeof(AUdiniInputVolumActor) == 0x0002E0, "Wrong size on AUdiniInputVolumActor");

// Class UdiniInputActor.UdiniOutputObjectBase
// 0x0000 (0x0028 - 0x0028)
class UUdiniOutputObjectBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniOutputObjectBase">();
	}
	static class UUdiniOutputObjectBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniOutputObjectBase>();
	}
};
static_assert(alignof(UUdiniOutputObjectBase) == 0x000008, "Wrong alignment on UUdiniOutputObjectBase");
static_assert(sizeof(UUdiniOutputObjectBase) == 0x000028, "Wrong size on UUdiniOutputObjectBase");

// Class UdiniInputActor.UdiniInstanceOutput
// 0x0000 (0x0028 - 0x0028)
class UUdiniInstanceOutput final : public UUdiniOutputObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInstanceOutput">();
	}
	static class UUdiniInstanceOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniInstanceOutput>();
	}
};
static_assert(alignof(UUdiniInstanceOutput) == 0x000008, "Wrong alignment on UUdiniInstanceOutput");
static_assert(sizeof(UUdiniInstanceOutput) == 0x000028, "Wrong size on UUdiniInstanceOutput");

// Class UdiniInputActor.UdiniInstanceToFoliageOutput
// 0x0000 (0x0028 - 0x0028)
class UUdiniInstanceToFoliageOutput final : public UUdiniOutputObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInstanceToFoliageOutput">();
	}
	static class UUdiniInstanceToFoliageOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniInstanceToFoliageOutput>();
	}
};
static_assert(alignof(UUdiniInstanceToFoliageOutput) == 0x000008, "Wrong alignment on UUdiniInstanceToFoliageOutput");
static_assert(sizeof(UUdiniInstanceToFoliageOutput) == 0x000028, "Wrong size on UUdiniInstanceToFoliageOutput");

// Class UdiniInputActor.UdiniInstanceToHierarchicalOutput
// 0x0000 (0x0028 - 0x0028)
class UUdiniInstanceToHierarchicalOutput final : public UUdiniOutputObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInstanceToHierarchicalOutput">();
	}
	static class UUdiniInstanceToHierarchicalOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniInstanceToHierarchicalOutput>();
	}
};
static_assert(alignof(UUdiniInstanceToHierarchicalOutput) == 0x000008, "Wrong alignment on UUdiniInstanceToHierarchicalOutput");
static_assert(sizeof(UUdiniInstanceToHierarchicalOutput) == 0x000028, "Wrong size on UUdiniInstanceToHierarchicalOutput");

// Class UdiniInputActor.UdiniInstanceToStaticmeshComponentOutput
// 0x0000 (0x0028 - 0x0028)
class UUdiniInstanceToStaticmeshComponentOutput final : public UUdiniOutputObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniInstanceToStaticmeshComponentOutput">();
	}
	static class UUdiniInstanceToStaticmeshComponentOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniInstanceToStaticmeshComponentOutput>();
	}
};
static_assert(alignof(UUdiniInstanceToStaticmeshComponentOutput) == 0x000008, "Wrong alignment on UUdiniInstanceToStaticmeshComponentOutput");
static_assert(sizeof(UUdiniInstanceToStaticmeshComponentOutput) == 0x000028, "Wrong size on UUdiniInstanceToStaticmeshComponentOutput");

// Class UdiniInputActor.UdiniLandmassOutput
// 0x0000 (0x0028 - 0x0028)
class UUdiniLandmassOutput final : public UUdiniOutputObjectBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniLandmassOutput">();
	}
	static class UUdiniLandmassOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniLandmassOutput>();
	}
};
static_assert(alignof(UUdiniLandmassOutput) == 0x000008, "Wrong alignment on UUdiniLandmassOutput");
static_assert(sizeof(UUdiniLandmassOutput) == 0x000028, "Wrong size on UUdiniLandmassOutput");

// Class UdiniInputActor.UdiniMeshDataPart
// 0x00D8 (0x0200 - 0x0128)
class UUdiniMeshDataPart final : public UUdiniDataPart
{
public:
	TArray<struct FOnePoly>                       PolyArray;                                         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrimIndex;                                         // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrimID;                                            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrimEnableDraw;                                    // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDrawPrimConfig>                PrimEnableDrawFormAtt;                             // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  PrimEnableDrawFormSelectedAtt;                     // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 bIsPrimHide;                                       // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 bIsPointHide;                                      // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 PrimDrawSize;                                      // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B8[0x30];                                     // 0x01B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          GeneraProcaduralMesh;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMask;                                           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1EA[0x16];                                     // 0x01EA(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniMeshDataPart">();
	}
	static class UUdiniMeshDataPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniMeshDataPart>();
	}
};
static_assert(alignof(UUdiniMeshDataPart) == 0x000008, "Wrong alignment on UUdiniMeshDataPart");
static_assert(sizeof(UUdiniMeshDataPart) == 0x000200, "Wrong size on UUdiniMeshDataPart");
static_assert(offsetof(UUdiniMeshDataPart, PolyArray) == 0x000128, "Member 'UUdiniMeshDataPart::PolyArray' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimIndex) == 0x000138, "Member 'UUdiniMeshDataPart::PrimIndex' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimID) == 0x000148, "Member 'UUdiniMeshDataPart::PrimID' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimEnableDraw) == 0x000158, "Member 'UUdiniMeshDataPart::PrimEnableDraw' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimEnableDrawFormAtt) == 0x000168, "Member 'UUdiniMeshDataPart::PrimEnableDrawFormAtt' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimEnableDrawFormSelectedAtt) == 0x000178, "Member 'UUdiniMeshDataPart::PrimEnableDrawFormSelectedAtt' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, bIsPrimHide) == 0x000188, "Member 'UUdiniMeshDataPart::bIsPrimHide' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, bIsPointHide) == 0x000198, "Member 'UUdiniMeshDataPart::bIsPointHide' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, PrimDrawSize) == 0x0001A8, "Member 'UUdiniMeshDataPart::PrimDrawSize' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, GeneraProcaduralMesh) == 0x0001E8, "Member 'UUdiniMeshDataPart::GeneraProcaduralMesh' has a wrong offset!");
static_assert(offsetof(UUdiniMeshDataPart, bIsMask) == 0x0001E9, "Member 'UUdiniMeshDataPart::bIsMask' has a wrong offset!");

// Class UdiniInputActor.UdiniPointDataPart
// 0x0028 (0x0150 - 0x0128)
class UUdiniPointDataPart final : public UUdiniDataPart
{
public:
	TArray<int32>                                 PointUniqueId;                                     // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         TypeOfPointList;                                   // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartAppendId;                                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniPointDataPart">();
	}
	static class UUdiniPointDataPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniPointDataPart>();
	}
};
static_assert(alignof(UUdiniPointDataPart) == 0x000008, "Wrong alignment on UUdiniPointDataPart");
static_assert(sizeof(UUdiniPointDataPart) == 0x000150, "Wrong size on UUdiniPointDataPart");
static_assert(offsetof(UUdiniPointDataPart, PointUniqueId) == 0x000128, "Member 'UUdiniPointDataPart::PointUniqueId' has a wrong offset!");
static_assert(offsetof(UUdiniPointDataPart, TypeOfPointList) == 0x000138, "Member 'UUdiniPointDataPart::TypeOfPointList' has a wrong offset!");
static_assert(offsetof(UUdiniPointDataPart, StartAppendId) == 0x000148, "Member 'UUdiniPointDataPart::StartAppendId' has a wrong offset!");

// Class UdiniInputActor.UdiniPostUpdateUobjectPorpertyBase
// 0x0000 (0x0028 - 0x0028)
class UUdiniPostUpdateUobjectPorpertyBase final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniPostUpdateUobjectPorpertyBase">();
	}
	static class UUdiniPostUpdateUobjectPorpertyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniPostUpdateUobjectPorpertyBase>();
	}
};
static_assert(alignof(UUdiniPostUpdateUobjectPorpertyBase) == 0x000008, "Wrong alignment on UUdiniPostUpdateUobjectPorpertyBase");
static_assert(sizeof(UUdiniPostUpdateUobjectPorpertyBase) == 0x000028, "Wrong size on UUdiniPostUpdateUobjectPorpertyBase");

// Class UdiniInputActor.UdiniSnapGridComponent
// 0x0000 (0x00C0 - 0x00C0)
class UUdiniSnapGridComponent final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSnapGridComponent">();
	}
	static class UUdiniSnapGridComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSnapGridComponent>();
	}
};
static_assert(alignof(UUdiniSnapGridComponent) == 0x000008, "Wrong alignment on UUdiniSnapGridComponent");
static_assert(sizeof(UUdiniSnapGridComponent) == 0x0000C0, "Wrong size on UUdiniSnapGridComponent");

// Class UdiniInputActor.UdiniSopAsset
// 0x0000 (0x0028 - 0x0028)
class UUdiniSopAsset final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSopAsset">();
	}
	static class UUdiniSopAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSopAsset>();
	}
};
static_assert(alignof(UUdiniSopAsset) == 0x000008, "Wrong alignment on UUdiniSopAsset");
static_assert(sizeof(UUdiniSopAsset) == 0x000028, "Wrong size on UUdiniSopAsset");

// Class UdiniInputActor.UdiniSplineComponent_Base
// 0x0000 (0x06C0 - 0x06C0)
class UUdiniSplineComponent_Base : public USplineComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSplineComponent_Base">();
	}
	static class UUdiniSplineComponent_Base* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSplineComponent_Base>();
	}
};
static_assert(alignof(UUdiniSplineComponent_Base) == 0x000010, "Wrong alignment on UUdiniSplineComponent_Base");
static_assert(sizeof(UUdiniSplineComponent_Base) == 0x0006C0, "Wrong size on UUdiniSplineComponent_Base");

// Class UdiniInputActor.UdiniSplineComponent
// 0x0030 (0x06F0 - 0x06C0)
class UUdiniSplineComponent final : public UUdiniSplineComponent_Base
{
public:
	uint8                                         Pad_6C0[0x30];                                     // 0x06C0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSplineComponent">();
	}
	static class UUdiniSplineComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSplineComponent>();
	}
};
static_assert(alignof(UUdiniSplineComponent) == 0x000010, "Wrong alignment on UUdiniSplineComponent");
static_assert(sizeof(UUdiniSplineComponent) == 0x0006F0, "Wrong size on UUdiniSplineComponent");

// Class UdiniInputActor.UdiniSplineDataPart
// 0x0080 (0x01A8 - 0x0128)
class UUdiniSplineDataPart final : public UUdiniDataPart
{
public:
	TArray<struct FOneLine>                       PolyArray;                                         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrimID;                                            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Curveconts;                                        // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 PrimEnableDraw;                                    // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 bIsPrimHide;                                       // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 bIsPointHide;                                      // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 PrimDrawSize;                                      // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIndexCluster>                  VertexClusterIndex;                                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSplineDataPart">();
	}
	static class UUdiniSplineDataPart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSplineDataPart>();
	}
};
static_assert(alignof(UUdiniSplineDataPart) == 0x000008, "Wrong alignment on UUdiniSplineDataPart");
static_assert(sizeof(UUdiniSplineDataPart) == 0x0001A8, "Wrong size on UUdiniSplineDataPart");
static_assert(offsetof(UUdiniSplineDataPart, PolyArray) == 0x000128, "Member 'UUdiniSplineDataPart::PolyArray' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, PrimID) == 0x000138, "Member 'UUdiniSplineDataPart::PrimID' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, Curveconts) == 0x000148, "Member 'UUdiniSplineDataPart::Curveconts' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, PrimEnableDraw) == 0x000158, "Member 'UUdiniSplineDataPart::PrimEnableDraw' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, bIsPrimHide) == 0x000168, "Member 'UUdiniSplineDataPart::bIsPrimHide' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, bIsPointHide) == 0x000178, "Member 'UUdiniSplineDataPart::bIsPointHide' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, PrimDrawSize) == 0x000188, "Member 'UUdiniSplineDataPart::PrimDrawSize' has a wrong offset!");
static_assert(offsetof(UUdiniSplineDataPart, VertexClusterIndex) == 0x000198, "Member 'UUdiniSplineDataPart::VertexClusterIndex' has a wrong offset!");

// Class UdiniInputActor.UdiniSSCoreComponet
// 0x0000 (0x00C0 - 0x00C0)
class UUdiniSSCoreComponet final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UdiniSSCoreComponet">();
	}
	static class UUdiniSSCoreComponet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUdiniSSCoreComponet>();
	}
};
static_assert(alignof(UUdiniSSCoreComponet) == 0x000008, "Wrong alignment on UUdiniSSCoreComponet");
static_assert(sizeof(UUdiniSSCoreComponet) == 0x0000C0, "Wrong size on UUdiniSSCoreComponet");

// Class UdiniInputActor.HeightFieldTexture
// 0x0020 (0x0048 - 0x0028)
class UHeightFieldTexture final : public UObject
{
public:
	float                                         MinVisHeight;                                      // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxVisHeight;                                      // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 PixData;                                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ImageSize;                                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HeightFieldTexture">();
	}
	static class UHeightFieldTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeightFieldTexture>();
	}
};
static_assert(alignof(UHeightFieldTexture) == 0x000008, "Wrong alignment on UHeightFieldTexture");
static_assert(sizeof(UHeightFieldTexture) == 0x000048, "Wrong size on UHeightFieldTexture");
static_assert(offsetof(UHeightFieldTexture, MinVisHeight) == 0x000028, "Member 'UHeightFieldTexture::MinVisHeight' has a wrong offset!");
static_assert(offsetof(UHeightFieldTexture, MaxVisHeight) == 0x00002C, "Member 'UHeightFieldTexture::MaxVisHeight' has a wrong offset!");
static_assert(offsetof(UHeightFieldTexture, PixData) == 0x000030, "Member 'UHeightFieldTexture::PixData' has a wrong offset!");
static_assert(offsetof(UHeightFieldTexture, ImageSize) == 0x000040, "Member 'UHeightFieldTexture::ImageSize' has a wrong offset!");

// Class UdiniInputActor.VolumBoxShow
// 0x0000 (0x00C0 - 0x00C0)
class UVolumBoxShow final : public UActorComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VolumBoxShow">();
	}
	static class UVolumBoxShow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVolumBoxShow>();
	}
};
static_assert(alignof(UVolumBoxShow) == 0x000008, "Wrong alignment on UVolumBoxShow");
static_assert(sizeof(UVolumBoxShow) == 0x0000C0, "Wrong size on UVolumBoxShow");

}

