#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecABP_Skill_HotWheels

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// DynamicClass SpecABP_Skill_HotWheels.SpecABP_Skill_HotWheels_C
// 0x08B0 (0x0C20 - 0x0370)
class USpecABP_Skill_HotWheels_C final : public USolarSpecABP_Skill
{
public:
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0370(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03E8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0410(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0438(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0460(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0488(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0510(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0540(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x05C8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpaceEvaluator          AnimGraphNode_BlendSpaceEvaluator;                 // 0x05F8(0x0100)(NativeAccessSpecifierPublic)
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x06F8(0x0120)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0818(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x08A0(0x0130)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x09D0(0x00F8)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0AC8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0AF8(0x00B0)(NativeAccessSpecifierPublic)
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0BA8(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0BD8(0x0030)(NativeAccessSpecifierPublic)
	float                                         Direction;                                         // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Interp_Speed;                                      // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInIdle;                                           // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMoveFwd;                                          // 0x0C11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C12[0x2];                                      // 0x0C12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DirectionBwd;                                      // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0C18(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void BlueprintUpdateAnimation(float bpp__DeltaTimeX__pf);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_HotWheels_AnimGraphNode_BlendSpaceEvaluator_C5170883440E4756EBB5569FDB1C20F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_HotWheels_AnimGraphNode_BlendSpacePlayer_041A33E7407F35738ECC51B351F17B4A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_HotWheels_AnimGraphNode_TransitionResult_016CD8654B49BF6F0AB83B86A8C716A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_HotWheels_AnimGraphNode_TransitionResult_7B5E939A404A0C9DBE66E2AB2D67D1EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_HotWheels_AnimGraphNode_TransitionResult_DC243B9247B902AEEEF7A0B9B6F859E8();
	void SkillAnimationLayer(const struct FPoseLink& bpp__BasePose__pf, struct FPoseLink* bpp__SkillAnimationLayer__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecABP_Skill_HotWheels_C">();
	}
	static class USpecABP_Skill_HotWheels_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecABP_Skill_HotWheels_C>();
	}
};
static_assert(alignof(USpecABP_Skill_HotWheels_C) == 0x000010, "Wrong alignment on USpecABP_Skill_HotWheels_C");
static_assert(sizeof(USpecABP_Skill_HotWheels_C) == 0x000C20, "Wrong size on USpecABP_Skill_HotWheels_C");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_LinkedInputPose) == 0x000370, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_TransitionResult_3) == 0x0003E8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_TransitionResult_2) == 0x000410, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_TransitionResult_1) == 0x000438, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_TransitionResult) == 0x000460, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_SequencePlayer_2) == 0x000488, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_StateResult_2) == 0x000510, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_SequencePlayer_1) == 0x000540, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_StateResult_1) == 0x0005C8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_BlendSpaceEvaluator) == 0x0005F8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_BlendSpaceEvaluator' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_ApplyAdditive) == 0x0006F8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_SequencePlayer) == 0x000818, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x0008A0, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_BlendSpacePlayer) == 0x0009D0, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_StateResult) == 0x000AC8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_StateMachine) == 0x000AF8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_Root_1) == 0x000BA8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, AnimGraphNode_Root) == 0x000BD8, "Member 'USpecABP_Skill_HotWheels_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, Direction) == 0x000C08, "Member 'USpecABP_Skill_HotWheels_C::Direction' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, Interp_Speed) == 0x000C0C, "Member 'USpecABP_Skill_HotWheels_C::Interp_Speed' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, bInIdle) == 0x000C10, "Member 'USpecABP_Skill_HotWheels_C::bInIdle' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, bMoveFwd) == 0x000C11, "Member 'USpecABP_Skill_HotWheels_C::bMoveFwd' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, DirectionBwd) == 0x000C14, "Member 'USpecABP_Skill_HotWheels_C::DirectionBwd' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_HotWheels_C, K2Node_Event_DeltaTimeX) == 0x000C18, "Member 'USpecABP_Skill_HotWheels_C::K2Node_Event_DeltaTimeX' has a wrong offset!");

}

