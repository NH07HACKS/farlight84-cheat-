#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Mecha_HP_Progress

#include "Basic.hpp"

#include "E_Type_Mecha_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Mecha_HP_Progress.UI_Mecha_HP_Progress_C.SetMechaHP
// 0x0064 (0x0064 - 0x0000)
struct UI_Mecha_HP_Progress_C_SetMechaHP final
{
public:
	E_Type_Mecha                                  HpType_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Mecha                                  Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Mecha_HP_Progress_C_SetMechaHP) == 0x000004, "Wrong alignment on UI_Mecha_HP_Progress_C_SetMechaHP");
static_assert(sizeof(UI_Mecha_HP_Progress_C_SetMechaHP) == 0x000064, "Wrong size on UI_Mecha_HP_Progress_C_SetMechaHP");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, HpType_0) == 0x000000, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::HpType_0' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_byte_Variable) == 0x000001, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_struct_Variable) == 0x000004, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_struct_Variable_3) == 0x000034, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, Temp_struct_Variable_4) == 0x000044, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_SetMechaHP, K2Node_Select_Default) == 0x000054, "Member 'UI_Mecha_HP_Progress_C_SetMechaHP::K2Node_Select_Default' has a wrong offset!");

// Function UI_Mecha_HP_Progress.UI_Mecha_HP_Progress_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Mecha_HP_Progress_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Mecha_HP_Progress_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Mecha_HP_Progress_C_PreConstruct");
static_assert(sizeof(UI_Mecha_HP_Progress_C_PreConstruct) == 0x000001, "Wrong size on UI_Mecha_HP_Progress_C_PreConstruct");
static_assert(offsetof(UI_Mecha_HP_Progress_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Mecha_HP_Progress_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Mecha_HP_Progress.UI_Mecha_HP_Progress_C.UpdateHPType
// 0x0001 (0x0001 - 0x0000)
struct UI_Mecha_HP_Progress_C_UpdateHPType final
{
public:
	uint8                                         InTile;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Mecha_HP_Progress_C_UpdateHPType) == 0x000001, "Wrong alignment on UI_Mecha_HP_Progress_C_UpdateHPType");
static_assert(sizeof(UI_Mecha_HP_Progress_C_UpdateHPType) == 0x000001, "Wrong size on UI_Mecha_HP_Progress_C_UpdateHPType");
static_assert(offsetof(UI_Mecha_HP_Progress_C_UpdateHPType, InTile) == 0x000000, "Member 'UI_Mecha_HP_Progress_C_UpdateHPType::InTile' has a wrong offset!");

// Function UI_Mecha_HP_Progress.UI_Mecha_HP_Progress_C.ExecuteUbergraph_UI_Mecha_HP_Progress
// 0x0008 (0x0008 - 0x0000)
struct UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InTile;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress) == 0x000004, "Wrong alignment on UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress");
static_assert(sizeof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress) == 0x000008, "Wrong size on UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress");
static_assert(offsetof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress, EntryPoint) == 0x000000, "Member 'UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress, K2Node_Event_InTile) == 0x000004, "Member 'UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress::K2Node_Event_InTile' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress, CallFunc_GetValidValue_ReturnValue) == 0x000005, "Member 'UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress, K2Node_Event_IsDesignTime) == 0x000006, "Member 'UI_Mecha_HP_Progress_C_ExecuteUbergraph_UI_Mecha_HP_Progress::K2Node_Event_IsDesignTime' has a wrong offset!");

}

