#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FixedTriggerArea

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.ExecuteUbergraph_BP_FixedTriggerArea
// 0x0010 (0x0010 - 0x0000)
struct BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea) == 0x000008, "Wrong alignment on BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea");
static_assert(sizeof(BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea) == 0x000010, "Wrong size on BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea");
static_assert(offsetof(BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea, EntryPoint) == 0x000000, "Member 'BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea, K2Node_Event_OtherActor) == 0x000008, "Member 'BP_FixedTriggerArea_C_ExecuteUbergraph_BP_FixedTriggerArea::K2Node_Event_OtherActor' has a wrong offset!");

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_FixedTriggerArea_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FixedTriggerArea_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_FixedTriggerArea_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_FixedTriggerArea_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_FixedTriggerArea_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_FixedTriggerArea_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_FixedTriggerArea_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.DisappearSelf
// 0x0020 (0x0020 - 0x0000)
struct BP_FixedTriggerArea_C_DisappearSelf final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayEventAtLocationByName_ReturnValue;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FixedTriggerArea_C_DisappearSelf) == 0x000004, "Wrong alignment on BP_FixedTriggerArea_C_DisappearSelf");
static_assert(sizeof(BP_FixedTriggerArea_C_DisappearSelf) == 0x000020, "Wrong size on BP_FixedTriggerArea_C_DisappearSelf");
static_assert(offsetof(BP_FixedTriggerArea_C_DisappearSelf, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'BP_FixedTriggerArea_C_DisappearSelf::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_DisappearSelf, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_FixedTriggerArea_C_DisappearSelf::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_DisappearSelf, CallFunc_PlayEventAtLocationByName_ReturnValue) == 0x000018, "Member 'BP_FixedTriggerArea_C_DisappearSelf::CallFunc_PlayEventAtLocationByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_DisappearSelf, CallFunc_IsEmpty_ReturnValue) == 0x00001C, "Member 'BP_FixedTriggerArea_C_DisappearSelf::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.IsPlayerDriveVehicle
// 0x0030 (0x0030 - 0x0000)
struct BP_FixedTriggerArea_C_IsPlayerDriveVehicle final
{
public:
	class AActor*                                 Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerDriving;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarVehiclePawn*                      K2Node_DynamicCast_AsSolar_Vehicle_Pawn;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetDriverCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHumanCharacter_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle) == 0x000008, "Wrong alignment on BP_FixedTriggerArea_C_IsPlayerDriveVehicle");
static_assert(sizeof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle) == 0x000030, "Wrong size on BP_FixedTriggerArea_C_IsPlayerDriveVehicle");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, Object) == 0x000000, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::Object' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, IsPlayerDriving) == 0x000008, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::IsPlayerDriving' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, K2Node_DynamicCast_AsSolar_Vehicle_Pawn) == 0x000010, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::K2Node_DynamicCast_AsSolar_Vehicle_Pawn' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, CallFunc_GetDriverCharacter_ReturnValue) == 0x000020, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::CallFunc_GetDriverCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_IsPlayerDriveVehicle, CallFunc_IsHumanCharacter_ReturnValue) == 0x000029, "Member 'BP_FixedTriggerArea_C_IsPlayerDriveVehicle::CallFunc_IsHumanCharacter_ReturnValue' has a wrong offset!");

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.CheckOverlapActor
// 0x0018 (0x0018 - 0x0000)
struct BP_FixedTriggerArea_C_CheckOverlapActor final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerDriveVehicle_IsPlayerDriving;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHumanCharacter_ReturnValue;             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FixedTriggerArea_C_CheckOverlapActor) == 0x000008, "Wrong alignment on BP_FixedTriggerArea_C_CheckOverlapActor");
static_assert(sizeof(BP_FixedTriggerArea_C_CheckOverlapActor) == 0x000018, "Wrong size on BP_FixedTriggerArea_C_CheckOverlapActor");
static_assert(offsetof(BP_FixedTriggerArea_C_CheckOverlapActor, OtherActor) == 0x000000, "Member 'BP_FixedTriggerArea_C_CheckOverlapActor::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_CheckOverlapActor, K2Node_DynamicCast_AsSolar_Character) == 0x000008, "Member 'BP_FixedTriggerArea_C_CheckOverlapActor::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_CheckOverlapActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_FixedTriggerArea_C_CheckOverlapActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_CheckOverlapActor, CallFunc_IsPlayerDriveVehicle_IsPlayerDriving) == 0x000011, "Member 'BP_FixedTriggerArea_C_CheckOverlapActor::CallFunc_IsPlayerDriveVehicle_IsPlayerDriving' has a wrong offset!");
static_assert(offsetof(BP_FixedTriggerArea_C_CheckOverlapActor, CallFunc_IsHumanCharacter_ReturnValue) == 0x000012, "Member 'BP_FixedTriggerArea_C_CheckOverlapActor::CallFunc_IsHumanCharacter_ReturnValue' has a wrong offset!");

// Function BP_FixedTriggerArea.BP_FixedTriggerArea_C.HasDisappear
// 0x0001 (0x0001 - 0x0000)
struct BP_FixedTriggerArea_C_HasDisappear final
{
public:
	bool                                          Disappear;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FixedTriggerArea_C_HasDisappear) == 0x000001, "Wrong alignment on BP_FixedTriggerArea_C_HasDisappear");
static_assert(sizeof(BP_FixedTriggerArea_C_HasDisappear) == 0x000001, "Wrong size on BP_FixedTriggerArea_C_HasDisappear");
static_assert(offsetof(BP_FixedTriggerArea_C_HasDisappear, Disappear) == 0x000000, "Member 'BP_FixedTriggerArea_C_HasDisappear::Disappear' has a wrong offset!");

}

