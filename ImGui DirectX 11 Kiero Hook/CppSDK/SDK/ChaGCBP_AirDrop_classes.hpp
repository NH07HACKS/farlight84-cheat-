#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaGCBP_AirDrop

#include "Basic.hpp"

#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChaGCBP_AirDrop.ChaGCBP_AirDrop_C
// 0x0028 (0x0370 - 0x0348)
class AChaGCBP_AirDrop_C final : public AChaGC_AirDrop
{
public:
	class UCapsuleComponent*                      Capsule;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                Show;                                              // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   fx_ring_small;                                     // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   fx_spread;                                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Range;                                             // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChaGCBP_AirDrop_C">();
	}
	static class AChaGCBP_AirDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChaGCBP_AirDrop_C>();
	}
};
static_assert(alignof(AChaGCBP_AirDrop_C) == 0x000008, "Wrong alignment on AChaGCBP_AirDrop_C");
static_assert(sizeof(AChaGCBP_AirDrop_C) == 0x000370, "Wrong size on AChaGCBP_AirDrop_C");
static_assert(offsetof(AChaGCBP_AirDrop_C, Capsule) == 0x000348, "Member 'AChaGCBP_AirDrop_C::Capsule' has a wrong offset!");
static_assert(offsetof(AChaGCBP_AirDrop_C, Show) == 0x000350, "Member 'AChaGCBP_AirDrop_C::Show' has a wrong offset!");
static_assert(offsetof(AChaGCBP_AirDrop_C, fx_ring_small) == 0x000358, "Member 'AChaGCBP_AirDrop_C::fx_ring_small' has a wrong offset!");
static_assert(offsetof(AChaGCBP_AirDrop_C, fx_spread) == 0x000360, "Member 'AChaGCBP_AirDrop_C::fx_spread' has a wrong offset!");
static_assert(offsetof(AChaGCBP_AirDrop_C, Range) == 0x000368, "Member 'AChaGCBP_AirDrop_C::Range' has a wrong offset!");

}

