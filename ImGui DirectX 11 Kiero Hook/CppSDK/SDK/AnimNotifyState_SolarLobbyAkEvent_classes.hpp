#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_SolarLobbyAkEvent

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotifyState_SolarLobbyAkEvent.AnimNotifyState_SolarLobbyAkEvent_C
// 0x0050 (0x0080 - 0x0030)
class UAnimNotifyState_SolarLobbyAkEvent_C final : public UAnimNotifyState
{
public:
	bool                                          Follow;                                            // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Attach_Name;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Begin_Event;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Begin_Event_Name;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          End_Event;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 End_Event_Name;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UAKComponent*                           NewVar_0;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	void GetAkSwitch(class USkeletalMeshComponent* InSkeletalMeshComp, bool* ShouldPlaySounds) const;
	void Get_Mesh_AK_Component(class USkeletalMeshComponent* InSkeletalMeshComp, class UAKComponent** OutAkComp, bool* IsSuccess) const;
	void AK_Event_Fun(class USkeletalMeshComponent* Skeletal_Mesh_Comp, class UAkAudioEvent* Event, const class FString& Event_Name, bool isNotifyEnd, bool* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotifyState_SolarLobbyAkEvent_C">();
	}
	static class UAnimNotifyState_SolarLobbyAkEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_SolarLobbyAkEvent_C>();
	}
};
static_assert(alignof(UAnimNotifyState_SolarLobbyAkEvent_C) == 0x000008, "Wrong alignment on UAnimNotifyState_SolarLobbyAkEvent_C");
static_assert(sizeof(UAnimNotifyState_SolarLobbyAkEvent_C) == 0x000080, "Wrong size on UAnimNotifyState_SolarLobbyAkEvent_C");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, Follow) == 0x000030, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::Follow' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, Attach_Name) == 0x000038, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::Attach_Name' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, Begin_Event) == 0x000048, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::Begin_Event' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, Begin_Event_Name) == 0x000050, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::Begin_Event_Name' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, End_Event) == 0x000060, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::End_Event' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, End_Event_Name) == 0x000068, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::End_Event_Name' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_SolarLobbyAkEvent_C, NewVar_0) == 0x000078, "Member 'UAnimNotifyState_SolarLobbyAkEvent_C::NewVar_0' has a wrong offset!");

}

