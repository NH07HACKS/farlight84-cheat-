#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SolarBattleControll

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_BattleControlWidgets_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.ExecuteUbergraph_WB_SolarBattleControll
// 0x00F0 (0x00F0 - 0x0000)
struct WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EScreenOrientation inScreenOrientation)> K2Node_CreateDelegate_OutputDelegate;    // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	E_BattleControlWidgets                        Temp_byte_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Publisher;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Payload;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_CustomEvent_Metadata;                       // 0x0088(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGlobalEventSystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlatformGameInstance*                  K2Node_DynamicCast_AsPlatform_Game_Instance;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EScreenOrientation                            K2Node_CustomEvent_inScreenOrientation;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll) == 0x000008, "Wrong alignment on WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll");
static_assert(sizeof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll) == 0x0000F0, "Wrong size on WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, EntryPoint) == 0x000000, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable) == 0x000008, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_1) == 0x000010, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_2) == 0x000018, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_3) == 0x000020, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_4) == 0x000028, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_5) == 0x000030, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_6) == 0x000038, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_7) == 0x000040, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_8) == 0x000048, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_9) == 0x000050, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_object_Variable_10) == 0x000058, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_bool_Variable) == 0x000060, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_byte_Variable) == 0x000061, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_byte_Variable_1) == 0x000062, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, Temp_byte_Variable_2) == 0x000074, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CustomEvent_Publisher) == 0x000078, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CustomEvent_Publisher' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CustomEvent_Payload) == 0x000080, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CustomEvent_Metadata) == 0x000088, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CustomEvent_Metadata' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_ToUpper_ReturnValue) == 0x000098, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000A8, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000AC, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000AD, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_GetValidValue_ReturnValue) == 0x0000AE, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_Select_Default) == 0x0000AF, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_Select_Default_1) == 0x0000B0, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B8, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000D0, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, CallFunc_GetGameInstance_ReturnValue) == 0x0000D8, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_DynamicCast_AsPlatform_Game_Instance) == 0x0000E0, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_DynamicCast_AsPlatform_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_CustomEvent_inScreenOrientation) == 0x0000E9, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_CustomEvent_inScreenOrientation' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll, K2Node_Event_IsDesignTime) == 0x0000EA, "Member 'WB_SolarBattleControll_C_ExecuteUbergraph_WB_SolarBattleControll::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_SolarBattleControll_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SolarBattleControll_C_PreConstruct) == 0x000001, "Wrong alignment on WB_SolarBattleControll_C_PreConstruct");
static_assert(sizeof(WB_SolarBattleControll_C_PreConstruct) == 0x000001, "Wrong size on WB_SolarBattleControll_C_PreConstruct");
static_assert(offsetof(WB_SolarBattleControll_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_SolarBattleControll_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.ScreenOrientation
// 0x0001 (0x0001 - 0x0000)
struct WB_SolarBattleControll_C_ScreenOrientation final
{
public:
	EScreenOrientation                            inScreenOrientation;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SolarBattleControll_C_ScreenOrientation) == 0x000001, "Wrong alignment on WB_SolarBattleControll_C_ScreenOrientation");
static_assert(sizeof(WB_SolarBattleControll_C_ScreenOrientation) == 0x000001, "Wrong size on WB_SolarBattleControll_C_ScreenOrientation");
static_assert(offsetof(WB_SolarBattleControll_C_ScreenOrientation, inScreenOrientation) == 0x000000, "Member 'WB_SolarBattleControll_C_ScreenOrientation::inScreenOrientation' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnWidgetVisibilitySet
// 0x0020 (0x0020 - 0x0000)
struct WB_SolarBattleControll_C_OnWidgetVisibilitySet final
{
public:
	class UObject*                                Publisher;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Payload;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         MetaData;                                          // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_SolarBattleControll_C_OnWidgetVisibilitySet) == 0x000008, "Wrong alignment on WB_SolarBattleControll_C_OnWidgetVisibilitySet");
static_assert(sizeof(WB_SolarBattleControll_C_OnWidgetVisibilitySet) == 0x000020, "Wrong size on WB_SolarBattleControll_C_OnWidgetVisibilitySet");
static_assert(offsetof(WB_SolarBattleControll_C_OnWidgetVisibilitySet, Publisher) == 0x000000, "Member 'WB_SolarBattleControll_C_OnWidgetVisibilitySet::Publisher' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnWidgetVisibilitySet, Payload) == 0x000008, "Member 'WB_SolarBattleControll_C_OnWidgetVisibilitySet::Payload' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnWidgetVisibilitySet, MetaData) == 0x000010, "Member 'WB_SolarBattleControll_C_OnWidgetVisibilitySet::MetaData' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.SetChangeProfessionBtnVisibility
// 0x0001 (0x0001 - 0x0000)
struct WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility) == 0x000001, "Wrong alignment on WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility");
static_assert(sizeof(WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility) == 0x000001, "Wrong size on WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility");
static_assert(offsetof(WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility, Visible) == 0x000000, "Member 'WB_SolarBattleControll_C_SetChangeProfessionBtnVisibility::Visible' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.SetBattleUISubItemVisibilityByGameMode
// 0x0020 (0x0020 - 0x0000)
struct WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode final
{
public:
	ECustomGameModeTypeForUI                      GameModeType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode) == 0x000008, "Wrong alignment on WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode");
static_assert(sizeof(WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode) == 0x000020, "Wrong size on WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode");
static_assert(offsetof(WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode, GameModeType) == 0x000000, "Member 'WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode::GameModeType' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode, ReturnValue) == 0x000008, "Member 'WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WB_SolarBattleControll_C_SetBattleUISubItemVisibilityByGameMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnSpectateStateChanged
// 0x00A8 (0x00A8 - 0x0000)
struct WB_SolarBattleControll_C_OnSpectateStateChanged final
{
public:
	bool                                          IsSpectating;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SolarBattleControll_C_OnSpectateStateChanged) == 0x000008, "Wrong alignment on WB_SolarBattleControll_C_OnSpectateStateChanged");
static_assert(sizeof(WB_SolarBattleControll_C_OnSpectateStateChanged) == 0x0000A8, "Wrong size on WB_SolarBattleControll_C_OnSpectateStateChanged");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, IsSpectating) == 0x000000, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::IsSpectating' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_bool_Variable) == 0x000001, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable) == 0x000004, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable_1) == 0x00000C, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_bool_Variable_1) == 0x000014, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable_2) == 0x000018, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable_3) == 0x000020, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_bool_Variable_2) == 0x000028, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_float_Variable) == 0x00002C, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_float_Variable_1) == 0x000030, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_bool_Variable_3) == 0x000034, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, K2Node_Select_Default) == 0x000038, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, K2Node_Select_Default_1) == 0x000040, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, K2Node_Select_Default_2) == 0x000048, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_float_Variable_2) == 0x00004C, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_float_Variable_3) == 0x000050, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable_4) == 0x000054, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, K2Node_Select_Default_3) == 0x00005C, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000068, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000070, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_struct_Variable_5) == 0x000078, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000080, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000088, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, Temp_bool_Variable_4) == 0x000090, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, K2Node_Select_Default_4) == 0x000094, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WB_SolarBattleControll_C_OnSpectateStateChanged, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000A0, "Member 'WB_SolarBattleControll_C_OnSpectateStateChanged::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.OnBackKey
// 0x0001 (0x0001 - 0x0000)
struct WB_SolarBattleControll_C_OnBackKey final
{
public:
	EWidgetBackKeyType                            BackKeyType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WB_SolarBattleControll_C_OnBackKey) == 0x000001, "Wrong alignment on WB_SolarBattleControll_C_OnBackKey");
static_assert(sizeof(WB_SolarBattleControll_C_OnBackKey) == 0x000001, "Wrong size on WB_SolarBattleControll_C_OnBackKey");
static_assert(offsetof(WB_SolarBattleControll_C_OnBackKey, BackKeyType) == 0x000000, "Member 'WB_SolarBattleControll_C_OnBackKey::BackKeyType' has a wrong offset!");

// Function WB_SolarBattleControll.WB_SolarBattleControll_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct WB_SolarBattleControll_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_SolarBattleControll_C_GetModuleName) == 0x000008, "Wrong alignment on WB_SolarBattleControll_C_GetModuleName");
static_assert(sizeof(WB_SolarBattleControll_C_GetModuleName) == 0x000010, "Wrong size on WB_SolarBattleControll_C_GetModuleName");
static_assert(offsetof(WB_SolarBattleControll_C_GetModuleName, ReturnValue) == 0x000000, "Member 'WB_SolarBattleControll_C_GetModuleName::ReturnValue' has a wrong offset!");

}

