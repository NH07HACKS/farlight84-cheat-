#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_RoundReviveReturn

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn
// 0x000C (0x000C - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn) == 0x000004, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn) == 0x00000C, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, EntryPoint) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, Temp_bool_Variable) == 0x000005, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, Temp_bool_Variable_1) == 0x000006, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, K2Node_Event_IsDesignTime) == 0x000007, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, K2Node_Event_InLayoutType) == 0x000008, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn, K2Node_Select_Default) == 0x000009, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ExecuteUbergraph_UI_HUD_Notice_RoundReviveReturn::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_PreConstruct");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_PreConstruct");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_GetExitAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_RoundReviveReturn.UI_HUD_Notice_RoundReviveReturn_C.SetStyleForRevivalMode
// 0x0120 (0x0120 - 0x0000)
struct UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode final
{
public:
	int32                                         CurrentRoundIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRevivalTime;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanInfiniteRevival;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0020(0x0050)(ConstParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map_1;                              // 0x0080(0x0050)(ConstParm)
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E0(0x0018)()
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue_1;        // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0108(0x0018)()
};
static_assert(alignof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode) == 0x000008, "Wrong alignment on UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode");
static_assert(sizeof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode) == 0x000120, "Wrong size on UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CurrentRoundIndex) == 0x000000, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CurrentRoundIndex' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CurrentRevivalTime) == 0x000004, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CurrentRevivalTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, bCanInfiniteRevival) == 0x000008, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::bCanInfiniteRevival' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, K2Node_MakeMap_Map) == 0x000020, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, K2Node_MakeMap_Map_1) == 0x000080, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_GetNoticeFormatText_ReturnValue) == 0x0000D0, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E0, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_GetNoticeFormatText_ReturnValue_1) == 0x0000F8, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_GetNoticeFormatText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000108, "Member 'UI_HUD_Notice_RoundReviveReturn_C_SetStyleForRevivalMode::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

}

