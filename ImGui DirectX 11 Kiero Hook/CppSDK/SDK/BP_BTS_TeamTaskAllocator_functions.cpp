#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTS_TeamTaskAllocator

#include "Basic.hpp"

#include "BP_BTS_TeamTaskAllocator_classes.hpp"
#include "BP_BTS_TeamTaskAllocator_parameters.hpp"


namespace SDK
{

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.SelfUpdateTaskState
// (Public, BlueprintCallable, BlueprintEvent, Const)

void UBP_BTS_TeamTaskAllocator_C::SelfUpdateTaskState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BTS_TeamTaskAllocator_C", "SelfUpdateTaskState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.GetSuitableRescueBot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASolarCharacter*                  TeammateInDanger                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USolarBotAITeamManager*           TeamManager                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASolarBotAIController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ASolarBotAIController* UBP_BTS_TeamTaskAllocator_C::GetSuitableRescueBot(class ASolarCharacter* TeammateInDanger, class USolarBotAITeamManager* TeamManager) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BTS_TeamTaskAllocator_C", "GetSuitableRescueBot");

	Params::BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot Parms{};

	Parms.TeammateInDanger = TeammateInDanger;
	Parms.TeamManager = TeamManager;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.CheckIfRescueBot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ASolarBotAIController*            InController                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_BTS_TeamTaskAllocator_C::CheckIfRescueBot(class ASolarBotAIController* InController, uint8 InState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BTS_TeamTaskAllocator_C", "CheckIfRescueBot");

	Params::BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot Parms{};

	Parms.InController = InController;
	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.DebugAllTaskScore
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const TArray<struct FSolarScoringItemStruct>&TaskScoresList                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_BTS_TeamTaskAllocator_C::DebugAllTaskScore(const TArray<struct FSolarScoringItemStruct>& TaskScoresList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BTS_TeamTaskAllocator_C", "DebugAllTaskScore");

	Params::BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore Parms{};

	Parms.TaskScoresList = std::move(TaskScoresList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.DebugEachTaskScoreItem
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FSolarScoringItemStruct&   TaskScore                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// const ESolarTaskScoringItemType&        ItemType                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             Score                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float                             Value                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BTS_TeamTaskAllocator_C::DebugEachTaskScoreItem(const struct FSolarScoringItemStruct& TaskScore, const ESolarTaskScoringItemType& ItemType, const float Score, const float Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BTS_TeamTaskAllocator_C", "DebugEachTaskScoreItem");

	Params::BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem Parms{};

	Parms.TaskScore = std::move(TaskScore);
	Parms.ItemType = ItemType;
	Parms.Score = Score;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

