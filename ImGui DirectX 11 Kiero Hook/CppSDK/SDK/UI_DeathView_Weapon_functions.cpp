#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DeathView_Weapon

#include "Basic.hpp"

#include "UI_DeathView_Weapon_classes.hpp"
#include "UI_DeathView_Weapon_parameters.hpp"


namespace SDK
{

// Function UI_DeathView_Weapon.UI_DeathView_Weapon_C.ExecuteUbergraph_UI_DeathView_Weapon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DeathView_Weapon_C::ExecuteUbergraph_UI_DeathView_Weapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DeathView_Weapon_C", "ExecuteUbergraph_UI_DeathView_Weapon");

	Params::UI_DeathView_Weapon_C_ExecuteUbergraph_UI_DeathView_Weapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DeathView_Weapon.UI_DeathView_Weapon_C.K2_OnUpdateAmmo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   InClipAmmo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InPackageAmmo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              InClipAmmoColor                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              InPackageAmmoColor                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DeathView_Weapon_C::K2_OnUpdateAmmo(int32 InClipAmmo, int32 InPackageAmmo, const struct FLinearColor& InClipAmmoColor, const struct FLinearColor& InPackageAmmoColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DeathView_Weapon_C", "K2_OnUpdateAmmo");

	Params::UI_DeathView_Weapon_C_K2_OnUpdateAmmo Parms{};

	Parms.InClipAmmo = InClipAmmo;
	Parms.InPackageAmmo = InPackageAmmo;
	Parms.InClipAmmoColor = std::move(InClipAmmoColor);
	Parms.InPackageAmmoColor = std::move(InPackageAmmoColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_DeathView_Weapon.UI_DeathView_Weapon_C.K2_OnDisplayWeapon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bInHasWeapon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          InWeaponIcon                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInUseHUDColor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FLinearColor&              InHUDColor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_DeathView_Weapon_C::K2_OnDisplayWeapon(bool bInHasWeapon, class UObject* InWeaponIcon, bool bInUseHUDColor, const struct FLinearColor& InHUDColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DeathView_Weapon_C", "K2_OnDisplayWeapon");

	Params::UI_DeathView_Weapon_C_K2_OnDisplayWeapon Parms{};

	Parms.bInHasWeapon = bInHasWeapon;
	Parms.InWeaponIcon = InWeaponIcon;
	Parms.bInUseHUDColor = bInUseHUDColor;
	Parms.InHUDColor = std::move(InHUDColor);

	UObject::ProcessEvent(Func, &Parms);
}

}

