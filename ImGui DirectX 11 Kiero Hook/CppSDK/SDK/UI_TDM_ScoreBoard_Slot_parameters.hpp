#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_TDM_ScoreBoard_Slot

#include "Basic.hpp"

#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.ExecuteUbergraph_UI_TDM_ScoreBoard_Slot
// 0x0020 (0x0020 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsBlueFaction;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLocalPlayer;                       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot) == 0x000004, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot) == 0x000020, "Wrong size on UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, EntryPoint) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_bIsBlueFaction) == 0x000004, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_bIsBlueFaction' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_bool_Variable) == 0x000005, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_byte_Variable) == 0x000006, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_byte_Variable_1) == 0x000007, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_bool_Variable_1) == 0x000008, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_float_Variable) == 0x00000C, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, Temp_float_Variable_1) == 0x000010, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_bIsExpanded) == 0x000014, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_bIsSelected) == 0x000015, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_IsDesignTime) == 0x000016, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_InLayoutType) == 0x000017, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Select_Default) == 0x000019, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Event_bIsLocalPlayer) == 0x00001A, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Event_bIsLocalPlayer' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot, K2Node_Select_Default_1) == 0x00001C, "Member 'UI_TDM_ScoreBoard_Slot_C_ExecuteUbergraph_UI_TDM_ScoreBoard_Slot::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.UpdateByPlayerFaction_BP
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP final
{
public:
	bool                                          bIsBlueFaction;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP, bIsBlueFaction) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_UpdateByPlayerFaction_BP::bIsBlueFaction' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.OnUpdateIsLocalPlayer_BP
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP final
{
public:
	bool                                          bIsLocalPlayer;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP, bIsLocalPlayer) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_OnUpdateIsLocalPlayer_BP::bIsLocalPlayer' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_PreConstruct");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_PreConstruct");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.SetItemState
// 0x00F0 (0x00F0 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_SetItemState final
{
public:
	bool                                          IsSelf_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	int32                                         Temp_int_Variable_1;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00C8(0x0028)()
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_SetItemState) == 0x000008, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_SetItemState");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_SetItemState) == 0x0000F0, "Wrong size on UI_TDM_ScoreBoard_Slot_C_SetItemState");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, IsSelf_0) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::IsSelf_0' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable) == 0x000004, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_bool_Variable) == 0x000014, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_byte_Variable) == 0x000015, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_byte_Variable_1) == 0x000016, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_bool_Variable_1) == 0x000017, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable_1) == 0x000018, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable_2) == 0x000020, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_bool_Variable_2) == 0x000028, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable_3) == 0x00002C, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable_4) == 0x00003C, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_bool_Variable_3) == 0x00004C, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_Select_Default) == 0x00004D, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_Select_Default_1) == 0x000050, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_Select_Default_2) == 0x000058, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_int_Variable) == 0x000068, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_int_Variable_1) == 0x000098, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_struct_Variable_5) == 0x00009C, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_Select_Default_3) == 0x0000AC, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, Temp_bool_Variable_4) == 0x0000B0, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_Select_Default_4) == 0x0000B4, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemState, K2Node_MakeStruct_SlateColor_1) == 0x0000C8, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.SetItemBgColor
// 0x0034 (0x0034 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_SetItemBgColor final
{
public:
	bool                                          IsBlue_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor) == 0x000004, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_SetItemBgColor");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor) == 0x000034, "Wrong size on UI_TDM_ScoreBoard_Slot_C_SetItemBgColor");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor, IsBlue_0) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemBgColor::IsBlue_0' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor, Temp_bool_Variable) == 0x000001, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemBgColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor, Temp_struct_Variable) == 0x000004, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemBgColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor, Temp_struct_Variable_1) == 0x000014, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemBgColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_SetItemBgColor, K2Node_Select_Default) == 0x000024, "Member 'UI_TDM_ScoreBoard_Slot_C_SetItemBgColor::K2Node_Select_Default' has a wrong offset!");

// Function UI_TDM_ScoreBoard_Slot.UI_TDM_ScoreBoard_Slot_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_TDM_ScoreBoard_Slot_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

}

