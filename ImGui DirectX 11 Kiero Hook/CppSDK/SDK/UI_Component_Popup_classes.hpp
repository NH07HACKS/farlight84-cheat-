#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Popup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Type_Btn_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "E_State_Btn_structs.hpp"
#include "Solarland_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Popup.UI_Component_Popup_C
// 0x0238 (0x0880 - 0x0648)
class UUI_Component_Popup_C final : public USolarPanelWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0648(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0650(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Light_Anim;                                     // 0x0658(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Enter;                                        // 0x0660(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_Close_C*                  Btn_Close;                                         // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarButton*                           Btn_Continue;                                      // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Btn_C*                    Btn_Main;                                          // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Btn_C*                    Btn_Sec;                                           // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarButton*                           Btn_Tip;                                           // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content;                                           // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Btn01_Txt;                           // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Btn02_Txt;                           // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Pop_Btn;                             // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Pop_Tltle;                           // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Btn1;                                          // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Btn2;                                          // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Pop_Btn_Bg;                                    // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        KeyBack;                                           // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Main;                                              // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Btn;                                     // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Close;                                   // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Title;                                   // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_VX;                                      // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Content;                                   // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_BG_VX;                                       // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_CloseContent;                                // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Continue;                                    // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Pop_BG;                                      // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_359;                                      // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Sec;                                               // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Bottom;                                    // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Btn;                                       // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Title;                                     // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Top;                                       // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Btn_Main;                                      // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Btn_Sec;                                       // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Continue;                                      // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Title;                                         // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Popup_Bg_C*               UI_Component_Popup_Bg;                             // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsCustomizeBgSize;                                 // 0x0780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Top;                                               // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bottom;                                            // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78C[0x4];                                      // 0x078C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 标题文本;                                          // 0x0790(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          是否使用标题文本;                                  // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          显示标题插槽位置;                                  // 0x07A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          是否使用本地化ID;                                  // 0x07A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         标题本地化ID;                                      // 0x07A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          标题是否有Tip按钮;                                 // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         按钮宽度;                                          // 0x07AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstButton;                                       // 0x07B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Type_Btn                                    主按钮类型;                                        // 0x07B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_Btn                                   主按钮状态;                                        // 0x07B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B3[0x5];                                      // 0x07B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 主按钮文本;                                        // 0x07B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         主按钮本地化ID;                                    // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SecondButton;                                      // 0x07CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Type_Btn                                    副按钮类型;                                        // 0x07CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_Btn                                   副按钮状态;                                        // 0x07CE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CF[0x1];                                      // 0x07CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 副按钮文本;                                        // 0x07D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         副按钮本地化ID;                                    // 0x07E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否使用关闭按钮;                                  // 0x07E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5[0x3];                                      // 0x07E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnClickedBtnClose;                                 // 0x07E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnClickedBtnFrist;                                 // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnClickedBtnSecond;                                // 0x0808(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          是否使用继续按钮;                                  // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Btn_Icon_1;                                        // 0x0819(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81A[0x6];                                      // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Icon_1;                                            // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Icon_Size_1;                                       // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Color_1;                                      // 0x0830(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Btn_Icon_2;                                        // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Icon_2;                                            // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Icon_Size_2;                                       // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Color_2;                                      // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnClickedBtnTip;                                   // 0x0868(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsShowBtnBg;                                       // 0x0878(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsBtnBgWithPrice;                                  // 0x0879(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPC;                                              // 0x087A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否使用keyback;                                   // 0x087B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TabLeftIsSelected;                                 // 0x087C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNeedExitAnim;                                     // 0x087D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BndEvt__Btn_Sec_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void SetMainBtnState(E_State_Btn NewState);
	void SetTitle(const class FString& NewParam);
	void ChangePopupState();
	void Construct();
	void BndEvt__Btn_Main_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Btn_Close_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Btn_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void BndEvt__Btn_Tip_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void 自定义事件_0();
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void BndEvt__KeyBack_K2Node_ComponentBoundEvent_5_OnSolarComponentKeyClickedEvent__DelegateSignature();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void ExecuteUbergraph_UI_Component_Popup(int32 EntryPoint);
	void OnAnimationStarted(const class UWidgetAnimation* Animation);
	void SetNeedExitAnim(bool bNeedExitAnim_0);
	void SetSecondBtnType(E_Type_Btn BtnType);
	void SetMainBtnType(E_Type_Btn BtnType);
	void SetMainBtnTextWithString(const class FString& LocalTextID);
	void SetSecBtnText(int32 主按钮本地化ID_0);
	void SetMainBtnShow(bool FirstButton_0);
	void SetMobileCloseBtnShow(bool bShow);
	void SetBgSize(int32 Top_0, int32 Bottom_0, bool IsCustomizeBgSize_0);
	void ShowBtnBg(bool IsShowBtnBg_0, bool IsBtnBgWithPrice_0, bool IsPC_0);
	void SetMainBtnText(int32 LocalTextID);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Popup_C">();
	}
	static class UUI_Component_Popup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Popup_C>();
	}
};
static_assert(alignof(UUI_Component_Popup_C) == 0x000008, "Wrong alignment on UUI_Component_Popup_C");
static_assert(sizeof(UUI_Component_Popup_C) == 0x000880, "Wrong size on UUI_Component_Popup_C");
static_assert(offsetof(UUI_Component_Popup_C, UberGraphFrame) == 0x000648, "Member 'UUI_Component_Popup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Anim_Exit) == 0x000650, "Member 'UUI_Component_Popup_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, BG_Light_Anim) == 0x000658, "Member 'UUI_Component_Popup_C::BG_Light_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Anim_Enter) == 0x000660, "Member 'UUI_Component_Popup_C::Anim_Enter' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Close) == 0x000668, "Member 'UUI_Component_Popup_C::Btn_Close' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Continue) == 0x000670, "Member 'UUI_Component_Popup_C::Btn_Continue' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Main) == 0x000678, "Member 'UUI_Component_Popup_C::Btn_Main' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Sec) == 0x000680, "Member 'UUI_Component_Popup_C::Btn_Sec' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Tip) == 0x000688, "Member 'UUI_Component_Popup_C::Btn_Tip' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Content) == 0x000690, "Member 'UUI_Component_Popup_C::Content' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, HorizontalBox_Btn01_Txt) == 0x000698, "Member 'UUI_Component_Popup_C::HorizontalBox_Btn01_Txt' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, HorizontalBox_Btn02_Txt) == 0x0006A0, "Member 'UUI_Component_Popup_C::HorizontalBox_Btn02_Txt' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, HorizontalBox_Pop_Btn) == 0x0006A8, "Member 'UUI_Component_Popup_C::HorizontalBox_Pop_Btn' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, HorizontalBox_Pop_Tltle) == 0x0006B0, "Member 'UUI_Component_Popup_C::HorizontalBox_Pop_Tltle' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Img_Btn1) == 0x0006B8, "Member 'UUI_Component_Popup_C::Img_Btn1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Img_Btn2) == 0x0006C0, "Member 'UUI_Component_Popup_C::Img_Btn2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Img_Pop_Btn_Bg) == 0x0006C8, "Member 'UUI_Component_Popup_C::Img_Pop_Btn_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, KeyBack) == 0x0006D0, "Member 'UUI_Component_Popup_C::KeyBack' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Main) == 0x0006D8, "Member 'UUI_Component_Popup_C::Main' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, NamedSlot_Btn) == 0x0006E0, "Member 'UUI_Component_Popup_C::NamedSlot_Btn' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, NamedSlot_Close) == 0x0006E8, "Member 'UUI_Component_Popup_C::NamedSlot_Close' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, NamedSlot_Title) == 0x0006F0, "Member 'UUI_Component_Popup_C::NamedSlot_Title' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, NamedSlot_VX) == 0x0006F8, "Member 'UUI_Component_Popup_C::NamedSlot_VX' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Overlay_Content) == 0x000700, "Member 'UUI_Component_Popup_C::Overlay_Content' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Panel_BG_VX) == 0x000708, "Member 'UUI_Component_Popup_C::Panel_BG_VX' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Panel_CloseContent) == 0x000710, "Member 'UUI_Component_Popup_C::Panel_CloseContent' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Panel_Continue) == 0x000718, "Member 'UUI_Component_Popup_C::Panel_Continue' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Panel_Pop_BG) == 0x000720, "Member 'UUI_Component_Popup_C::Panel_Pop_BG' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SafeZone_359) == 0x000728, "Member 'UUI_Component_Popup_C::SafeZone_359' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Sec) == 0x000730, "Member 'UUI_Component_Popup_C::Sec' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SizeBox_Bottom) == 0x000738, "Member 'UUI_Component_Popup_C::SizeBox_Bottom' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SizeBox_Btn) == 0x000740, "Member 'UUI_Component_Popup_C::SizeBox_Btn' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SizeBox_Title) == 0x000748, "Member 'UUI_Component_Popup_C::SizeBox_Title' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SizeBox_Top) == 0x000750, "Member 'UUI_Component_Popup_C::SizeBox_Top' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Txt_Btn_Main) == 0x000758, "Member 'UUI_Component_Popup_C::Txt_Btn_Main' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Txt_Btn_Sec) == 0x000760, "Member 'UUI_Component_Popup_C::Txt_Btn_Sec' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Txt_Continue) == 0x000768, "Member 'UUI_Component_Popup_C::Txt_Continue' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Txt_Title) == 0x000770, "Member 'UUI_Component_Popup_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, UI_Component_Popup_Bg) == 0x000778, "Member 'UUI_Component_Popup_C::UI_Component_Popup_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, IsCustomizeBgSize) == 0x000780, "Member 'UUI_Component_Popup_C::IsCustomizeBgSize' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Top) == 0x000784, "Member 'UUI_Component_Popup_C::Top' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Bottom) == 0x000788, "Member 'UUI_Component_Popup_C::Bottom' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 标题文本) == 0x000790, "Member 'UUI_Component_Popup_C::标题文本' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 是否使用标题文本) == 0x0007A0, "Member 'UUI_Component_Popup_C::是否使用标题文本' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 显示标题插槽位置) == 0x0007A1, "Member 'UUI_Component_Popup_C::显示标题插槽位置' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 是否使用本地化ID) == 0x0007A2, "Member 'UUI_Component_Popup_C::是否使用本地化ID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 标题本地化ID) == 0x0007A4, "Member 'UUI_Component_Popup_C::标题本地化ID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 标题是否有Tip按钮) == 0x0007A8, "Member 'UUI_Component_Popup_C::标题是否有Tip按钮' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 按钮宽度) == 0x0007AC, "Member 'UUI_Component_Popup_C::按钮宽度' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, FirstButton) == 0x0007B0, "Member 'UUI_Component_Popup_C::FirstButton' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 主按钮类型) == 0x0007B1, "Member 'UUI_Component_Popup_C::主按钮类型' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 主按钮状态) == 0x0007B2, "Member 'UUI_Component_Popup_C::主按钮状态' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 主按钮文本) == 0x0007B8, "Member 'UUI_Component_Popup_C::主按钮文本' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 主按钮本地化ID) == 0x0007C8, "Member 'UUI_Component_Popup_C::主按钮本地化ID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, SecondButton) == 0x0007CC, "Member 'UUI_Component_Popup_C::SecondButton' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 副按钮类型) == 0x0007CD, "Member 'UUI_Component_Popup_C::副按钮类型' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 副按钮状态) == 0x0007CE, "Member 'UUI_Component_Popup_C::副按钮状态' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 副按钮文本) == 0x0007D0, "Member 'UUI_Component_Popup_C::副按钮文本' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 副按钮本地化ID) == 0x0007E0, "Member 'UUI_Component_Popup_C::副按钮本地化ID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 是否使用关闭按钮) == 0x0007E4, "Member 'UUI_Component_Popup_C::是否使用关闭按钮' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, OnClickedBtnClose) == 0x0007E8, "Member 'UUI_Component_Popup_C::OnClickedBtnClose' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, OnClickedBtnFrist) == 0x0007F8, "Member 'UUI_Component_Popup_C::OnClickedBtnFrist' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, OnClickedBtnSecond) == 0x000808, "Member 'UUI_Component_Popup_C::OnClickedBtnSecond' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 是否使用继续按钮) == 0x000818, "Member 'UUI_Component_Popup_C::是否使用继续按钮' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Icon_1) == 0x000819, "Member 'UUI_Component_Popup_C::Btn_Icon_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_1) == 0x000820, "Member 'UUI_Component_Popup_C::Icon_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_Size_1) == 0x000828, "Member 'UUI_Component_Popup_C::Icon_Size_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_Color_1) == 0x000830, "Member 'UUI_Component_Popup_C::Icon_Color_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Btn_Icon_2) == 0x000840, "Member 'UUI_Component_Popup_C::Btn_Icon_2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_2) == 0x000848, "Member 'UUI_Component_Popup_C::Icon_2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_Size_2) == 0x000850, "Member 'UUI_Component_Popup_C::Icon_Size_2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, Icon_Color_2) == 0x000858, "Member 'UUI_Component_Popup_C::Icon_Color_2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, OnClickedBtnTip) == 0x000868, "Member 'UUI_Component_Popup_C::OnClickedBtnTip' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, IsShowBtnBg) == 0x000878, "Member 'UUI_Component_Popup_C::IsShowBtnBg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, IsBtnBgWithPrice) == 0x000879, "Member 'UUI_Component_Popup_C::IsBtnBgWithPrice' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, IsPC) == 0x00087A, "Member 'UUI_Component_Popup_C::IsPC' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, 是否使用keyback) == 0x00087B, "Member 'UUI_Component_Popup_C::是否使用keyback' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, TabLeftIsSelected) == 0x00087C, "Member 'UUI_Component_Popup_C::TabLeftIsSelected' has a wrong offset!");
static_assert(offsetof(UUI_Component_Popup_C, bNeedExitAnim) == 0x00087D, "Member 'UUI_Component_Popup_C::bNeedExitAnim' has a wrong offset!");

}

