#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaGCBP_SlideTackle

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.ExecuteUbergraph_ChaGCBP_SlideTackle
// 0x0008 (0x0008 - 0x0000)
struct ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle) == 0x000004, "Wrong alignment on ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle");
static_assert(sizeof(ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle) == 0x000008, "Wrong size on ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle, EntryPoint) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'ChaGCBP_SlideTackle_C_ExecuteUbergraph_ChaGCBP_SlideTackle::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ChaGCBP_SlideTackle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_ReceiveTick) == 0x000004, "Wrong alignment on ChaGCBP_SlideTackle_C_ReceiveTick");
static_assert(sizeof(ChaGCBP_SlideTackle_C_ReceiveTick) == 0x000004, "Wrong size on ChaGCBP_SlideTackle_C_ReceiveTick");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.WhileActiveInternal
// 0x00E0 (0x00E0 - 0x0000)
struct ChaGCBP_SlideTackle_C_WhileActiveInternal final
{
public:
	class ASolarCharacter*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_WhileActiveInternal) == 0x000008, "Wrong alignment on ChaGCBP_SlideTackle_C_WhileActiveInternal");
static_assert(sizeof(ChaGCBP_SlideTackle_C_WhileActiveInternal) == 0x0000E0, "Wrong size on ChaGCBP_SlideTackle_C_WhileActiveInternal");
static_assert(offsetof(ChaGCBP_SlideTackle_C_WhileActiveInternal, Character) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_WhileActiveInternal::Character' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_WhileActiveInternal, Parameters) == 0x000008, "Member 'ChaGCBP_SlideTackle_C_WhileActiveInternal::Parameters' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_WhileActiveInternal, ReturnValue) == 0x0000D8, "Member 'ChaGCBP_SlideTackle_C_WhileActiveInternal::ReturnValue' has a wrong offset!");

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.UpdateSound
// 0x0030 (0x0030 - 0x0000)
struct ChaGCBP_SlideTackle_C_UpdateSound final
{
public:
	bool                                          ForceStop;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldPlay;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroup_ReturnValue;            // 0x0008(0x0010)()
	struct FSoundGroupPlayContext                 CallFunc_K2_PlaySoundGroup_ReturnValue_1;          // 0x0018(0x0010)()
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldPlaySound_Result;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_UpdateSound) == 0x000008, "Wrong alignment on ChaGCBP_SlideTackle_C_UpdateSound");
static_assert(sizeof(ChaGCBP_SlideTackle_C_UpdateSound) == 0x000030, "Wrong size on ChaGCBP_SlideTackle_C_UpdateSound");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, ForceStop) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::ForceStop' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, ShouldPlay) == 0x000001, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::ShouldPlay' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, CallFunc_K2_PlaySoundGroup_ReturnValue) == 0x000008, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::CallFunc_K2_PlaySoundGroup_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, CallFunc_K2_PlaySoundGroup_ReturnValue_1) == 0x000018, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::CallFunc_K2_PlaySoundGroup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000028, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_UpdateSound, CallFunc_ShouldPlaySound_Result) == 0x000029, "Member 'ChaGCBP_SlideTackle_C_UpdateSound::CallFunc_ShouldPlaySound_Result' has a wrong offset!");

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.ShouldPlaySound
// 0x0018 (0x0018 - 0x0000)
struct ChaGCBP_SlideTackle_C_ShouldPlaySound final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarCharacterMovementComponent*       CallFunc_GetSafeSolarCharacterMovement_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStepping_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_ShouldPlaySound) == 0x000008, "Wrong alignment on ChaGCBP_SlideTackle_C_ShouldPlaySound");
static_assert(sizeof(ChaGCBP_SlideTackle_C_ShouldPlaySound) == 0x000018, "Wrong size on ChaGCBP_SlideTackle_C_ShouldPlaySound");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, Result) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::Result' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, CallFunc_GetSafeSolarCharacterMovement_ReturnValue) == 0x000008, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::CallFunc_GetSafeSolarCharacterMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, CallFunc_IsStepping_ReturnValue) == 0x000011, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::CallFunc_IsStepping_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, CallFunc_IsWalking_ReturnValue) == 0x000012, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_ShouldPlaySound, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'ChaGCBP_SlideTackle_C_ShouldPlaySound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ChaGCBP_SlideTackle.ChaGCBP_SlideTackle_C.OnRemoveInternal
// 0x00E0 (0x00E0 - 0x0000)
struct ChaGCBP_SlideTackle_C_OnRemoveInternal final
{
public:
	class ASolarCharacter*                        NullableCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChaGCBP_SlideTackle_C_OnRemoveInternal) == 0x000008, "Wrong alignment on ChaGCBP_SlideTackle_C_OnRemoveInternal");
static_assert(sizeof(ChaGCBP_SlideTackle_C_OnRemoveInternal) == 0x0000E0, "Wrong size on ChaGCBP_SlideTackle_C_OnRemoveInternal");
static_assert(offsetof(ChaGCBP_SlideTackle_C_OnRemoveInternal, NullableCharacter) == 0x000000, "Member 'ChaGCBP_SlideTackle_C_OnRemoveInternal::NullableCharacter' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_OnRemoveInternal, Parameters) == 0x000008, "Member 'ChaGCBP_SlideTackle_C_OnRemoveInternal::Parameters' has a wrong offset!");
static_assert(offsetof(ChaGCBP_SlideTackle_C_OnRemoveInternal, ReturnValue) == 0x0000D8, "Member 'ChaGCBP_SlideTackle_C_OnRemoveInternal::ReturnValue' has a wrong offset!");

}

