#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomModeFunctionLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function CustomModeFunctionLibrary.CustomModeFunctionLibrary_C.LetPlayerOut
// 0x0020 (0x0020 - 0x0000)
struct CustomModeFunctionLibrary_C_LetPlayerOut final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Logic_Framework_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CustomModeFunctionLibrary_C_LetPlayerOut) == 0x000008, "Wrong alignment on CustomModeFunctionLibrary_C_LetPlayerOut");
static_assert(sizeof(CustomModeFunctionLibrary_C_LetPlayerOut) == 0x000020, "Wrong size on CustomModeFunctionLibrary_C_LetPlayerOut");
static_assert(offsetof(CustomModeFunctionLibrary_C_LetPlayerOut, Player) == 0x000000, "Member 'CustomModeFunctionLibrary_C_LetPlayerOut::Player' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C_LetPlayerOut, __WorldContext) == 0x000008, "Member 'CustomModeFunctionLibrary_C_LetPlayerOut::__WorldContext' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C_LetPlayerOut, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'CustomModeFunctionLibrary_C_LetPlayerOut::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C_LetPlayerOut, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'CustomModeFunctionLibrary_C_LetPlayerOut::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function CustomModeFunctionLibrary.CustomModeFunctionLibrary_C.[ A]Bind On Basic System Ready
// 0x0038 (0x0038 - 0x0000)
struct CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReady;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_Framework_C*              K2Node_DynamicCast_AsBP_Game_State_Framework;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready) == 0x000008, "Wrong alignment on CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready");
static_assert(sizeof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready) == 0x000038, "Wrong size on CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, Event) == 0x000000, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::Event' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, __WorldContext) == 0x000010, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::__WorldContext' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, bReady) == 0x000018, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::bReady' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, CallFunc_IsServer_ReturnValue) == 0x000019, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, K2Node_DynamicCast_AsBP_Game_State_Framework) == 0x000028, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::K2Node_DynamicCast_AsBP_Game_State_Framework' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CustomModeFunctionLibrary_C___A_Bind_On_Basic_System_Ready::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CustomModeFunctionLibrary.CustomModeFunctionLibrary_C.[s]GetPlayerManager
// 0x0020 (0x0020 - 0x0000)
struct CustomModeFunctionLibrary_C__s_GetPlayerManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayerManager_C*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayerManager_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CustomModeFunctionLibrary_C__s_GetPlayerManager) == 0x000008, "Wrong alignment on CustomModeFunctionLibrary_C__s_GetPlayerManager");
static_assert(sizeof(CustomModeFunctionLibrary_C__s_GetPlayerManager) == 0x000020, "Wrong size on CustomModeFunctionLibrary_C__s_GetPlayerManager");
static_assert(offsetof(CustomModeFunctionLibrary_C__s_GetPlayerManager, __WorldContext) == 0x000000, "Member 'CustomModeFunctionLibrary_C__s_GetPlayerManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C__s_GetPlayerManager, ReturnValue) == 0x000008, "Member 'CustomModeFunctionLibrary_C__s_GetPlayerManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C__s_GetPlayerManager, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'CustomModeFunctionLibrary_C__s_GetPlayerManager::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CustomModeFunctionLibrary_C__s_GetPlayerManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'CustomModeFunctionLibrary_C__s_GetPlayerManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

