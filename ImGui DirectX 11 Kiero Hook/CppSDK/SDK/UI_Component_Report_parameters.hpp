#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Report

#include "Basic.hpp"

#include "E_Type_FriendHover_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Report.UI_Component_Report_C.ExecuteUbergraph_UI_Component_Report
// 0x0120 (0x0120 - 0x0000)
struct UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B0(0x0070)(ConstParm)
};
static_assert(alignof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report) == 0x000008, "Wrong alignment on UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report");
static_assert(sizeof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report) == 0x000120, "Wrong size on UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report");
static_assert(offsetof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report, EntryPoint) == 0x000000, "Member 'UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report, K2Node_Event_MyGeometry) == 0x000008, "Member 'UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report, K2Node_Event_MouseEvent) == 0x0000B0, "Member 'UI_Component_Report_C_ExecuteUbergraph_UI_Component_Report::K2Node_Event_MouseEvent' has a wrong offset!");

// Function UI_Component_Report.UI_Component_Report_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Component_Report_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Report_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Component_Report_C_OnMouseLeave");
static_assert(sizeof(UI_Component_Report_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Component_Report_C_OnMouseLeave");
static_assert(offsetof(UI_Component_Report_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Component_Report_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Component_Report.UI_Component_Report_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Component_Report_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Report_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Component_Report_C_OnMouseEnter");
static_assert(sizeof(UI_Component_Report_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Component_Report_C_OnMouseEnter");
static_assert(offsetof(UI_Component_Report_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Component_Report_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Component_Report_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Component_Report.UI_Component_Report_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Report_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Report_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Report_C_PreConstruct");
static_assert(sizeof(UI_Component_Report_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Report_C_PreConstruct");
static_assert(offsetof(UI_Component_Report_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Report_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Report.UI_Component_Report_C.SetHoverType
// 0x0020 (0x0020 - 0x0000)
struct UI_Component_Report_C_SetHoverType final
{
public:
	E_Type_FriendHover                            HoverType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hover_0;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Report_C_SetHoverType) == 0x000004, "Wrong alignment on UI_Component_Report_C_SetHoverType");
static_assert(sizeof(UI_Component_Report_C_SetHoverType) == 0x000020, "Wrong size on UI_Component_Report_C_SetHoverType");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, HoverType_0) == 0x000000, "Member 'UI_Component_Report_C_SetHoverType::HoverType_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Hover_0) == 0x000001, "Member 'UI_Component_Report_C_SetHoverType::Hover_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Temp_int_Variable) == 0x000004, "Member 'UI_Component_Report_C_SetHoverType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Temp_int_Variable_1) == 0x000008, "Member 'UI_Component_Report_C_SetHoverType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Temp_bool_Variable) == 0x00000C, "Member 'UI_Component_Report_C_SetHoverType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Temp_int_Variable_2) == 0x000010, "Member 'UI_Component_Report_C_SetHoverType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'UI_Component_Report_C_SetHoverType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000015, "Member 'UI_Component_Report_C_SetHoverType::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, Temp_bool_Variable_1) == 0x000016, "Member 'UI_Component_Report_C_SetHoverType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, K2Node_Select_Default) == 0x000018, "Member 'UI_Component_Report_C_SetHoverType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Report_C_SetHoverType, K2Node_Select_Default_1) == 0x00001C, "Member 'UI_Component_Report_C_SetHoverType::K2Node_Select_Default_1' has a wrong offset!");

}

