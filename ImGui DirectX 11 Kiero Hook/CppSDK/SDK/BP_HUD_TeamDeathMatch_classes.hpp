#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_TeamDeathMatch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_NoticeType_TDM_structs.hpp"
#include "Solarland_classes.hpp"
#include "E_SoundType_TDM_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HUD_TeamDeathMatch.BP_HUD_TeamDeathMatch_C
// 0x0028 (0x0518 - 0x04F0)
class ABP_HUD_TeamDeathMatch_C final : public ATDMHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFX_Widget_Buff_Treat_C*                BloodFX;                                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BloodFXTimer;                                      // 0x0508(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UUI_TDM_HUD_C*                          AllHUD;                                            // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD_TeamDeathMatch(int32 EntryPoint);
	void K2_InitBattleHUD();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void CustomEvent_2();
	void Event_PlayBloodFX();
	void ReceiveBeginPlay();
	void Init_UIWidget_Ref();
	void Play_Sound_HUD(E_SoundType_TDM SoundType);
	void Show_Notice_Death_Match(E_NoticeType_TDM Notice类型, const TMap<class FString, class FString>& FormatContext, bool IsNoticeDM, bool ShowNoticeDM_Icon);
	void HiddenCrossHair();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_TeamDeathMatch_C">();
	}
	static class ABP_HUD_TeamDeathMatch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HUD_TeamDeathMatch_C>();
	}
};
static_assert(alignof(ABP_HUD_TeamDeathMatch_C) == 0x000008, "Wrong alignment on ABP_HUD_TeamDeathMatch_C");
static_assert(sizeof(ABP_HUD_TeamDeathMatch_C) == 0x000518, "Wrong size on ABP_HUD_TeamDeathMatch_C");
static_assert(offsetof(ABP_HUD_TeamDeathMatch_C, UberGraphFrame) == 0x0004F0, "Member 'ABP_HUD_TeamDeathMatch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HUD_TeamDeathMatch_C, DefaultSceneRoot) == 0x0004F8, "Member 'ABP_HUD_TeamDeathMatch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HUD_TeamDeathMatch_C, BloodFX) == 0x000500, "Member 'ABP_HUD_TeamDeathMatch_C::BloodFX' has a wrong offset!");
static_assert(offsetof(ABP_HUD_TeamDeathMatch_C, BloodFXTimer) == 0x000508, "Member 'ABP_HUD_TeamDeathMatch_C::BloodFXTimer' has a wrong offset!");
static_assert(offsetof(ABP_HUD_TeamDeathMatch_C, AllHUD) == 0x000510, "Member 'ABP_HUD_TeamDeathMatch_C::AllHUD' has a wrong offset!");

}

