#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Map_SafeAreaMove

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Map_SafeAreaMove.UI_Map_SafeAreaMove_C.ExecuteUbergraph_UI_Map_SafeAreaMove
// 0x0008 (0x0008 - 0x0000)
struct UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove) == 0x000004, "Wrong alignment on UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove");
static_assert(sizeof(UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove) == 0x000008, "Wrong size on UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove");
static_assert(offsetof(UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove, EntryPoint) == 0x000000, "Member 'UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Map_SafeAreaMove_C_ExecuteUbergraph_UI_Map_SafeAreaMove::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Map_SafeAreaMove.UI_Map_SafeAreaMove_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Map_SafeAreaMove_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Map_SafeAreaMove_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Map_SafeAreaMove_C_PreConstruct");
static_assert(sizeof(UI_Map_SafeAreaMove_C_PreConstruct) == 0x000001, "Wrong size on UI_Map_SafeAreaMove_C_PreConstruct");
static_assert(offsetof(UI_Map_SafeAreaMove_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Map_SafeAreaMove_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Map_SafeAreaMove.UI_Map_SafeAreaMove_C.SetIsEnemy
// 0x0034 (0x0034 - 0x0000)
struct UI_Map_SafeAreaMove_C_SetIsEnemy final
{
public:
	bool                                          IsEnemy_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Map_SafeAreaMove_C_SetIsEnemy) == 0x000004, "Wrong alignment on UI_Map_SafeAreaMove_C_SetIsEnemy");
static_assert(sizeof(UI_Map_SafeAreaMove_C_SetIsEnemy) == 0x000034, "Wrong size on UI_Map_SafeAreaMove_C_SetIsEnemy");
static_assert(offsetof(UI_Map_SafeAreaMove_C_SetIsEnemy, IsEnemy_0) == 0x000000, "Member 'UI_Map_SafeAreaMove_C_SetIsEnemy::IsEnemy_0' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_SetIsEnemy, Temp_bool_Variable) == 0x000001, "Member 'UI_Map_SafeAreaMove_C_SetIsEnemy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_SetIsEnemy, Temp_struct_Variable) == 0x000004, "Member 'UI_Map_SafeAreaMove_C_SetIsEnemy::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_SetIsEnemy, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Map_SafeAreaMove_C_SetIsEnemy::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_SetIsEnemy, K2Node_Select_Default) == 0x000024, "Member 'UI_Map_SafeAreaMove_C_SetIsEnemy::K2Node_Select_Default' has a wrong offset!");

// Function UI_Map_SafeAreaMove.UI_Map_SafeAreaMove_C.Init
// 0x0050 (0x0050 - 0x0000)
struct UI_Map_SafeAreaMove_C_Init final
{
public:
	struct FVector2D                              StartPos;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TargetPos;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Map_SafeAreaMove_C_Init) == 0x000008, "Wrong alignment on UI_Map_SafeAreaMove_C_Init");
static_assert(sizeof(UI_Map_SafeAreaMove_C_Init) == 0x000050, "Wrong size on UI_Map_SafeAreaMove_C_Init");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, StartPos) == 0x000000, "Member 'UI_Map_SafeAreaMove_C_Init::StartPos' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, TargetPos) == 0x000008, "Member 'UI_Map_SafeAreaMove_C_Init::TargetPos' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_Distance2D_ReturnValue) == 0x000010, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_BreakVector2D_X) == 0x000028, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_BreakVector2D_Y) == 0x00002C, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_BreakVector2D_X_1) == 0x000030, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_BreakVector2D_Y_1) == 0x000034, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000040, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000048, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Map_SafeAreaMove_C_Init, CallFunc_DegAtan2_ReturnValue) == 0x00004C, "Member 'UI_Map_SafeAreaMove_C_Init::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");

}

