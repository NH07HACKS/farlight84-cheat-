#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Interact_ConsoleDevice

#include "Basic.hpp"

#include "UI_Interact_ConsoleDevice_classes.hpp"
#include "UI_Interact_ConsoleDevice_parameters.hpp"


namespace SDK
{

// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.ExecuteUbergraph_UI_Interact_ConsoleDevice
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ConsoleDevice_C::ExecuteUbergraph_UI_Interact_ConsoleDevice(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "ExecuteUbergraph_UI_Interact_ConsoleDevice");

	Params::UI_Interact_ConsoleDevice_C_ExecuteUbergraph_UI_Interact_ConsoleDevice Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Interact_ConsoleDevice_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "PreConstruct");

	Params::UI_Interact_ConsoleDevice_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_5_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_4_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_4_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_4_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "BndEvt__SubUI_InteractBtn_Horizontal_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.FadeIn
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.FadeOut
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.StopCountdownProgress
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InActionID                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ConsoleDevice_C::StopCountdownProgress(const int32 InActionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "StopCountdownProgress");

	Params::UI_Interact_ConsoleDevice_C_StopCountdownProgress Parms{};

	Parms.InActionID = InActionID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.StartCountdownProgress
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FCountDownInfo&            InCountInfo                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Interact_ConsoleDevice_C::StartCountdownProgress(const struct FCountDownInfo& InCountInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "StartCountdownProgress");

	Params::UI_Interact_ConsoleDevice_C_StartCountdownProgress Parms{};

	Parms.InCountInfo = std::move(InCountInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.RefreshToPreInteracting
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::RefreshToPreInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "RefreshToPreInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.RefreshToCancellableInteracting
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::RefreshToCancellableInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "RefreshToCancellableInteracting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.GetPanelInteractProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarProgressiveInteractButton** ProgressButton                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_ConsoleDevice_C::GetPanelInteractProgress(class USolarProgressiveInteractButton** ProgressButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "GetPanelInteractProgress");

	Params::UI_Interact_ConsoleDevice_C_GetPanelInteractProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressButton != nullptr)
		*ProgressButton = Parms.ProgressButton;
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.SetCooldownInteractTip
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::SetCooldownInteractTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "SetCooldownInteractTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.SetUsedInteractTip
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::SetUsedInteractTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "SetUsedInteractTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.SetIllegalInteractTip
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::SetIllegalInteractTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "SetIllegalInteractTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.SetBuddySpawnedInteractTip
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::SetBuddySpawnedInteractTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "SetBuddySpawnedInteractTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_ConsoleDevice.UI_Interact_ConsoleDevice_C.SetUsedOnlyOnceInteractTip
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_ConsoleDevice_C::SetUsedOnlyOnceInteractTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_ConsoleDevice_C", "SetUsedOnlyOnceInteractTip");

	UObject::ProcessEvent(Func, nullptr);
}

}

