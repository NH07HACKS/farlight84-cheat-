#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_OpeningShow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_OpeningShow.UI_OpeningShow_C
// 0x0058 (0x0730 - 0x06D8)
class UUI_OpeningShow_C final : public UUIDefenderTeamShowWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_White_loop;                                   // 0x06E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_Hero1;                                         // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hero2;                                         // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Hero3;                                         // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_BG_Lightcatcher;                             // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_BG_Reaper;                                   // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_BG_SoHot;                                    // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Hero;                                        // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EDefenderTeamType                             BP_TeamType;                                       // 0x0720(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x3];                                      // 0x0721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TerminatorReward;                                  // 0x0724(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PanelPos_Y;                                        // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PanelPos_Y_3D;                                     // 0x072C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_OpeningShow(int32 EntryPoint);
	void SetIsSkipOpeningHUD(bool bSkip);
	void CustomEvent_0();
	void OnTeamShowUIClose();
	void SetDefenderTeamTotalKill(int32 TotalKillNum);
	void Destruct();
	void UpdateUIStateOn3DTeamShow();
	void ResetHeroImg();
	void PreConstruct(bool IsDesignTime);
	void OnSolarUIClosed();
	void OnSolarUIOpened();
	void UpdateOpeningShow(EDefenderTeamType TeamType);
	void Construct();
	void StartPlayExitAnim(class UCanvasPanel* Panel_Logo_Root);
	void UpdateTeamState();
	void SequenceEvent__ENTRYPOINTUI_OpeningShow_0(class UCanvasPanel* Panel_Logo_Root);
	void SequenceEvent__ENTRYPOINTUI_OpeningShow_1(class UCanvasPanel* Panel_Logo_Root);
	void DestructCopy();
	void UpdateHeroImg(class ASolarPlayerState* PS);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_OpeningShow_C">();
	}
	static class UUI_OpeningShow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_OpeningShow_C>();
	}
};
static_assert(alignof(UUI_OpeningShow_C) == 0x000008, "Wrong alignment on UUI_OpeningShow_C");
static_assert(sizeof(UUI_OpeningShow_C) == 0x000730, "Wrong size on UUI_OpeningShow_C");
static_assert(offsetof(UUI_OpeningShow_C, UberGraphFrame) == 0x0006D8, "Member 'UUI_OpeningShow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Anim_White_loop) == 0x0006E0, "Member 'UUI_OpeningShow_C::Anim_White_loop' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Img_Hero1) == 0x0006E8, "Member 'UUI_OpeningShow_C::Img_Hero1' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Img_Hero2) == 0x0006F0, "Member 'UUI_OpeningShow_C::Img_Hero2' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Img_Hero3) == 0x0006F8, "Member 'UUI_OpeningShow_C::Img_Hero3' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Panel_BG_Lightcatcher) == 0x000700, "Member 'UUI_OpeningShow_C::Panel_BG_Lightcatcher' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Panel_BG_Reaper) == 0x000708, "Member 'UUI_OpeningShow_C::Panel_BG_Reaper' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Panel_BG_SoHot) == 0x000710, "Member 'UUI_OpeningShow_C::Panel_BG_SoHot' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, Panel_Hero) == 0x000718, "Member 'UUI_OpeningShow_C::Panel_Hero' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, BP_TeamType) == 0x000720, "Member 'UUI_OpeningShow_C::BP_TeamType' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, TerminatorReward) == 0x000724, "Member 'UUI_OpeningShow_C::TerminatorReward' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, PanelPos_Y) == 0x000728, "Member 'UUI_OpeningShow_C::PanelPos_Y' has a wrong offset!");
static_assert(offsetof(UUI_OpeningShow_C, PanelPos_Y_3D) == 0x00072C, "Member 'UUI_OpeningShow_C::PanelPos_Y_3D' has a wrong offset!");

}

