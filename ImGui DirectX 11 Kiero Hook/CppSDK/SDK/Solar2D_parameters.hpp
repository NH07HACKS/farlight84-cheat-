#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Solar2D

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Solar2D.SolarSpriteBlueprintLibrary.MakeBrushFromSprite
// 0x0120 (0x0120 - 0x0000)
struct SolarSpriteBlueprintLibrary_MakeBrushFromSprite final
{
public:
	class USolarSprite*                           Sprite;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ReturnValue;                                       // 0x0010(0x0110)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite) == 0x000010, "Wrong alignment on SolarSpriteBlueprintLibrary_MakeBrushFromSprite");
static_assert(sizeof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite) == 0x000120, "Wrong size on SolarSpriteBlueprintLibrary_MakeBrushFromSprite");
static_assert(offsetof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite, Sprite) == 0x000000, "Member 'SolarSpriteBlueprintLibrary_MakeBrushFromSprite::Sprite' has a wrong offset!");
static_assert(offsetof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite, Width) == 0x000008, "Member 'SolarSpriteBlueprintLibrary_MakeBrushFromSprite::Width' has a wrong offset!");
static_assert(offsetof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite, Height) == 0x00000C, "Member 'SolarSpriteBlueprintLibrary_MakeBrushFromSprite::Height' has a wrong offset!");
static_assert(offsetof(SolarSpriteBlueprintLibrary_MakeBrushFromSprite, ReturnValue) == 0x000010, "Member 'SolarSpriteBlueprintLibrary_MakeBrushFromSprite::ReturnValue' has a wrong offset!");

// Function Solar2D.SolarSpriteComponent.GetSprite
// 0x0008 (0x0008 - 0x0000)
struct SolarSpriteComponent_GetSprite final
{
public:
	class USolarSprite*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SolarSpriteComponent_GetSprite) == 0x000008, "Wrong alignment on SolarSpriteComponent_GetSprite");
static_assert(sizeof(SolarSpriteComponent_GetSprite) == 0x000008, "Wrong size on SolarSpriteComponent_GetSprite");
static_assert(offsetof(SolarSpriteComponent_GetSprite, ReturnValue) == 0x000000, "Member 'SolarSpriteComponent_GetSprite::ReturnValue' has a wrong offset!");

// Function Solar2D.SolarSpriteComponent.SetSprite
// 0x0010 (0x0010 - 0x0000)
struct SolarSpriteComponent_SetSprite final
{
public:
	class USolarSprite*                           NewSprite;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SolarSpriteComponent_SetSprite) == 0x000008, "Wrong alignment on SolarSpriteComponent_SetSprite");
static_assert(sizeof(SolarSpriteComponent_SetSprite) == 0x000010, "Wrong size on SolarSpriteComponent_SetSprite");
static_assert(offsetof(SolarSpriteComponent_SetSprite, NewSprite) == 0x000000, "Member 'SolarSpriteComponent_SetSprite::NewSprite' has a wrong offset!");
static_assert(offsetof(SolarSpriteComponent_SetSprite, ReturnValue) == 0x000008, "Member 'SolarSpriteComponent_SetSprite::ReturnValue' has a wrong offset!");

// Function Solar2D.SolarSpriteComponent.SetSpriteColor
// 0x0010 (0x0010 - 0x0000)
struct SolarSpriteComponent_SetSpriteColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SolarSpriteComponent_SetSpriteColor) == 0x000004, "Wrong alignment on SolarSpriteComponent_SetSpriteColor");
static_assert(sizeof(SolarSpriteComponent_SetSpriteColor) == 0x000010, "Wrong size on SolarSpriteComponent_SetSpriteColor");
static_assert(offsetof(SolarSpriteComponent_SetSpriteColor, NewColor) == 0x000000, "Member 'SolarSpriteComponent_SetSpriteColor::NewColor' has a wrong offset!");

}

