#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_TeamDeathMatch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_Shop_TDM_structs.hpp"
#include "E_PlayerState_TDM_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C
// 0x00A0 (0x22C0 - 0x2220)
class ABP_PlayerState_TeamDeathMatch_C final : public ATDMPlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x2228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPS_Shop_TDM_C*                        BPS_Shop_TDM;                                      // 0x2230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Shop_TDM>                    武器数据;                                          // 0x2238(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<class FName, int32>                      Map_AIWeaponID_Int;                                // 0x2248(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         WeightSum;                                         // 0x2298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229C[0x4];                                     // 0x229C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DT_Shop_TDM;                                       // 0x22A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         无敌开始时间;                                      // 0x22A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         死亡开始时间;                                      // 0x22AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         复活开始时间;                                      // 0x22B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         重联时间;                                          // 0x22B4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          是否是无敌;                                        // 0x22B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否是断线重联;                                    // 0x22B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_PlayerState_TDM                             PlayerState_TDM;                                   // 0x22BA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22BB[0x1];                                     // 0x22BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdatedMvpScore;                                   // 0x22BC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerState_TeamDeathMatch(int32 EntryPoint);
	void ReceiveAddWeapons_1();
	void 自定义事件_0(ESCMDataChangeType ChangeType, int32 OldValue, int32 NewValue);
	void ShowResurrectUI(int32 Time);
	void EUpdateMvpScore(ESCMDataChangeType ChangeType, int32 OldValue, int32 NewValue);
	void Event_AddWeapons();
	void Event_UpdateChangeWeaponDate(const TArray<struct FS_Shop_TDM>& 武器数据_0);
	void ServerUpdateAndChangePlayerWeapon(const TArray<struct FS_Shop_TDM>& 武器数据_0, const class ASCMPlayerState* 玩家, class AActor* ActorRef);
	void ReceiveBeginPlay();
	bool PlayerCanRebirthBlueprint();
	void Get_Cur_Chang_Weapon_Data();
	void Set_Map_WeaponID_Weight_();
	void Set_Random_Weapon_Date(int32 WeaponNum);
	void OnRep_无敌开始时间();
	void OnRep_死亡开始时间();
	void OnRep_复活开始时间();
	void OnRep_重联时间();
	void FUpdateMvpScore();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerState_TeamDeathMatch_C">();
	}
	static class ABP_PlayerState_TeamDeathMatch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerState_TeamDeathMatch_C>();
	}
};
static_assert(alignof(ABP_PlayerState_TeamDeathMatch_C) == 0x000010, "Wrong alignment on ABP_PlayerState_TeamDeathMatch_C");
static_assert(sizeof(ABP_PlayerState_TeamDeathMatch_C) == 0x0022C0, "Wrong size on ABP_PlayerState_TeamDeathMatch_C");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, UberGraphFrame) == 0x002220, "Member 'ABP_PlayerState_TeamDeathMatch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, DefaultSceneRoot) == 0x002228, "Member 'ABP_PlayerState_TeamDeathMatch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, BPS_Shop_TDM) == 0x002230, "Member 'ABP_PlayerState_TeamDeathMatch_C::BPS_Shop_TDM' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 武器数据) == 0x002238, "Member 'ABP_PlayerState_TeamDeathMatch_C::武器数据' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, Map_AIWeaponID_Int) == 0x002248, "Member 'ABP_PlayerState_TeamDeathMatch_C::Map_AIWeaponID_Int' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, WeightSum) == 0x002298, "Member 'ABP_PlayerState_TeamDeathMatch_C::WeightSum' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, DT_Shop_TDM) == 0x0022A0, "Member 'ABP_PlayerState_TeamDeathMatch_C::DT_Shop_TDM' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 无敌开始时间) == 0x0022A8, "Member 'ABP_PlayerState_TeamDeathMatch_C::无敌开始时间' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 死亡开始时间) == 0x0022AC, "Member 'ABP_PlayerState_TeamDeathMatch_C::死亡开始时间' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 复活开始时间) == 0x0022B0, "Member 'ABP_PlayerState_TeamDeathMatch_C::复活开始时间' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 重联时间) == 0x0022B4, "Member 'ABP_PlayerState_TeamDeathMatch_C::重联时间' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 是否是无敌) == 0x0022B8, "Member 'ABP_PlayerState_TeamDeathMatch_C::是否是无敌' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, 是否是断线重联) == 0x0022B9, "Member 'ABP_PlayerState_TeamDeathMatch_C::是否是断线重联' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, PlayerState_TDM) == 0x0022BA, "Member 'ABP_PlayerState_TeamDeathMatch_C::PlayerState_TDM' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_TeamDeathMatch_C, UpdatedMvpScore) == 0x0022BC, "Member 'ABP_PlayerState_TeamDeathMatch_C::UpdatedMvpScore' has a wrong offset!");

}

