#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TL03_BD_FieldHouseA

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TL03_BD_FieldHouseA.BP_TL03_BD_FieldHouseA_C
// 0x0168 (0x0440 - 0x02D8)
class ABP_TL03_BD_FieldHouseA_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_B3_BD_ModuSpacK;                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B3_BD_ModuSpacM;                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight18;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight17;                                       // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight16;                                       // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight15;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight14;                                       // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight57;                                       // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight59;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight38;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight56;                                       // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight37;                                       // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight13;                                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight5;                                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight39;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight55;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight6;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight52;                                       // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight50;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight41;                                       // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight4;                                        // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight3;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight44;                                       // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight43;                                       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight7;                                        // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight11;                                       // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight47;                                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight10;                                       // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight9;                                        // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight8;                                        // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   FieldHouseA_BPlight;                               // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USolarSpatialAudioRoomStaticMeshComponent* Udini_ChildConponentSM_Audio_Cube_SM_Audio_Cube_1_1; // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Udini_ParentConponentSM_Audio_Cube_SM_Audio_Cube_1_1; // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_B3_PB_MoonCloth05;                              // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_B3_PB_MoonCloth04;                              // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_B3_PB_MoonCloth03;                              // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_B3_PB_MoonCloth02;                              // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_SolarItemSpawner17;                             // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_SolarItemSpawner12;                             // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_SolarItemSpawner9;                              // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_SolarItemSpawner11;                             // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B3_BD_FieldHouseA_In;                           // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_B3_BD_FieldHouseA_Out;                          // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TL03_BD_FieldHouseA_C">();
	}
	static class ABP_TL03_BD_FieldHouseA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TL03_BD_FieldHouseA_C>();
	}
};
static_assert(alignof(ABP_TL03_BD_FieldHouseA_C) == 0x000008, "Wrong alignment on ABP_TL03_BD_FieldHouseA_C");
static_assert(sizeof(ABP_TL03_BD_FieldHouseA_C) == 0x000440, "Wrong size on ABP_TL03_BD_FieldHouseA_C");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SM_B3_BD_ModuSpacK) == 0x0002D8, "Member 'ABP_TL03_BD_FieldHouseA_C::SM_B3_BD_ModuSpacK' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SM_B3_BD_ModuSpacM) == 0x0002E0, "Member 'ABP_TL03_BD_FieldHouseA_C::SM_B3_BD_ModuSpacM' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, PointLight1) == 0x0002E8, "Member 'ABP_TL03_BD_FieldHouseA_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight18) == 0x0002F0, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight18' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight17) == 0x0002F8, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight17' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight16) == 0x000300, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight16' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight15) == 0x000308, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight15' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight14) == 0x000310, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight14' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight57) == 0x000318, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight57' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight59) == 0x000320, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight59' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight38) == 0x000328, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight38' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight56) == 0x000330, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight56' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight37) == 0x000338, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight37' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight13) == 0x000340, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight13' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight5) == 0x000348, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight5' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight39) == 0x000350, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight39' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight55) == 0x000358, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight55' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight6) == 0x000360, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight6' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight52) == 0x000368, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight52' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight50) == 0x000370, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight50' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight41) == 0x000378, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight41' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight4) == 0x000380, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight4' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight3) == 0x000388, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight3' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight44) == 0x000390, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight44' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight43) == 0x000398, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight43' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight7) == 0x0003A0, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight7' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight11) == 0x0003A8, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight11' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SpotLight47) == 0x0003B0, "Member 'ABP_TL03_BD_FieldHouseA_C::SpotLight47' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight10) == 0x0003B8, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight10' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight9) == 0x0003C0, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight9' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, RectLight8) == 0x0003C8, "Member 'ABP_TL03_BD_FieldHouseA_C::RectLight8' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, FieldHouseA_BPlight) == 0x0003D0, "Member 'ABP_TL03_BD_FieldHouseA_C::FieldHouseA_BPlight' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, Udini_ChildConponentSM_Audio_Cube_SM_Audio_Cube_1_1) == 0x0003D8, "Member 'ABP_TL03_BD_FieldHouseA_C::Udini_ChildConponentSM_Audio_Cube_SM_Audio_Cube_1_1' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, Udini_ParentConponentSM_Audio_Cube_SM_Audio_Cube_1_1) == 0x0003E0, "Member 'ABP_TL03_BD_FieldHouseA_C::Udini_ParentConponentSM_Audio_Cube_SM_Audio_Cube_1_1' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_B3_PB_MoonCloth05) == 0x0003E8, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_B3_PB_MoonCloth05' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_B3_PB_MoonCloth04) == 0x0003F0, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_B3_PB_MoonCloth04' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_B3_PB_MoonCloth03) == 0x0003F8, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_B3_PB_MoonCloth03' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_B3_PB_MoonCloth02) == 0x000400, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_B3_PB_MoonCloth02' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, Box) == 0x000408, "Member 'ABP_TL03_BD_FieldHouseA_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_SolarItemSpawner17) == 0x000410, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_SolarItemSpawner17' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_SolarItemSpawner12) == 0x000418, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_SolarItemSpawner12' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_SolarItemSpawner9) == 0x000420, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_SolarItemSpawner9' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, BP_SolarItemSpawner11) == 0x000428, "Member 'ABP_TL03_BD_FieldHouseA_C::BP_SolarItemSpawner11' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SM_B3_BD_FieldHouseA_In) == 0x000430, "Member 'ABP_TL03_BD_FieldHouseA_C::SM_B3_BD_FieldHouseA_In' has a wrong offset!");
static_assert(offsetof(ABP_TL03_BD_FieldHouseA_C, SM_B3_BD_FieldHouseA_Out) == 0x000438, "Member 'ABP_TL03_BD_FieldHouseA_C::SM_B3_BD_FieldHouseA_Out' has a wrong offset!");

}

