#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Weapon_Part_HUDWeapon

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "E_WeaponParts_State_structs.hpp"
#include "E_PartState_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Weapon_Part_HUDWeapon.UI_Weapon_Part_HUDWeapon_C
// 0x0020 (0x0920 - 0x0900)
class UUI_Weapon_Part_HUDWeapon_C final : public UUIWeaponPartWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0900(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Arrow_Panel;                                       // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          是否选中;                                          // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_WeaponParts_State                           配件状态;                                          // 0x0911(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Size;                                              // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PartState                                   ScopeState;                                        // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowArrow;                                        // 0x0919(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFullEquipedParts;                                // 0x091A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponPartSlotMode                           EWeaponPartsMode;                                  // 0x091B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalSemiStyle;                                    // 0x091C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Weapon_Part_HUDWeapon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BP_SetSemiStyle();
	void BP_SetStyle(bool bIsFullyPart, EWeaponPartSlotMode InSlotMode);
	void BP_SetShowArrow(bool bIsShow);
	void SetSize(int32 inInt);
	void SetArrow(bool bInShow);
	void SetFullEquipedParts(bool IsFullEquipedParts_0, EWeaponPartSlotMode EWeaponPartsMode_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Weapon_Part_HUDWeapon_C">();
	}
	static class UUI_Weapon_Part_HUDWeapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Weapon_Part_HUDWeapon_C>();
	}
};
static_assert(alignof(UUI_Weapon_Part_HUDWeapon_C) == 0x000008, "Wrong alignment on UUI_Weapon_Part_HUDWeapon_C");
static_assert(sizeof(UUI_Weapon_Part_HUDWeapon_C) == 0x000920, "Wrong size on UUI_Weapon_Part_HUDWeapon_C");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, UberGraphFrame) == 0x000900, "Member 'UUI_Weapon_Part_HUDWeapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, Arrow_Panel) == 0x000908, "Member 'UUI_Weapon_Part_HUDWeapon_C::Arrow_Panel' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, 是否选中) == 0x000910, "Member 'UUI_Weapon_Part_HUDWeapon_C::是否选中' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, 配件状态) == 0x000911, "Member 'UUI_Weapon_Part_HUDWeapon_C::配件状态' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, Size) == 0x000914, "Member 'UUI_Weapon_Part_HUDWeapon_C::Size' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, ScopeState) == 0x000918, "Member 'UUI_Weapon_Part_HUDWeapon_C::ScopeState' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, bShowArrow) == 0x000919, "Member 'UUI_Weapon_Part_HUDWeapon_C::bShowArrow' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, IsFullEquipedParts) == 0x00091A, "Member 'UUI_Weapon_Part_HUDWeapon_C::IsFullEquipedParts' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, EWeaponPartsMode) == 0x00091B, "Member 'UUI_Weapon_Part_HUDWeapon_C::EWeaponPartsMode' has a wrong offset!");
static_assert(offsetof(UUI_Weapon_Part_HUDWeapon_C, LocalSemiStyle) == 0x00091C, "Member 'UUI_Weapon_Part_HUDWeapon_C::LocalSemiStyle' has a wrong offset!");

}

