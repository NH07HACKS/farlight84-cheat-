#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TaskFormula

#include "Basic.hpp"

#include "BP_TaskFormula_classes.hpp"
#include "BP_TaskFormula_parameters.hpp"


namespace SDK
{

// Function BP_TaskFormula.BP_TaskFormula_C.TYUseAvatarCauseDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYUseAvatarCauseDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYUseAvatarCauseDamage");

	Params::BP_TaskFormula_C_TYUseAvatarCauseDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeOpenAirBoxNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeOpenAirBoxNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeOpenAirBoxNum");

	Params::BP_TaskFormula_C_BigModeOpenAirBoxNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeBuyESElectricNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeBuyESElectricNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeBuyESElectricNum");

	Params::BP_TaskFormula_C_BigModeBuyESElectricNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeIntValuePlus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeIntValuePlus(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeIntValuePlus");

	Params::BP_TaskFormula_C_SmallModeIntValuePlus Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeIntValuePlus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeIntValuePlus(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeIntValuePlus");

	Params::BP_TaskFormula_C_BigModeIntValuePlus Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyIntValuePlus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyIntValuePlus(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyIntValuePlus");

	Params::BP_TaskFormula_C_AnyIntValuePlus Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeGroupCharTypeDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeGroupCharTypeDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeGroupCharTypeDamage");

	Params::BP_TaskFormula_C_BigModeGroupCharTypeDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeGroupCharTypeKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeGroupCharTypeKill(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeGroupCharTypeKill");

	Params::BP_TaskFormula_C_AnyModeGroupCharTypeKill Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeGroupCharTypeKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeGroupCharTypeKill(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeGroupCharTypeKill");

	Params::BP_TaskFormula_C_SmallModeGroupCharTypeKill Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetCurCharacterType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  CharacterType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::GetCurCharacterType(int32* CharacterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetCurCharacterType");

	Params::BP_TaskFormula_C_GetCurCharacterType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterType != nullptr)
		*CharacterType = Parms.CharacterType;
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeGroupCharTypeKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeGroupCharTypeKill(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeGroupCharTypeKill");

	Params::BP_TaskFormula_C_BigModeGroupCharTypeKill Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeSlideDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeSlideDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeSlideDistance");

	Params::BP_TaskFormula_C_AnyModeSlideDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeSlideDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeSlideDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeSlideDistance");

	Params::BP_TaskFormula_C_SmallModeSlideDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeSlideDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeSlideDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeSlideDistance");

	Params::BP_TaskFormula_C_BigModeSlideDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeKillSameChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeKillSameChar(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeKillSameChar");

	Params::BP_TaskFormula_C_AnyModeKillSameChar Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeKillSameChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeKillSameChar(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeKillSameChar");

	Params::BP_TaskFormula_C_SmallModeKillSameChar Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeKillSameChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeKillSameChar(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeKillSameChar");

	Params::BP_TaskFormula_C_BigModeKillSameChar Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeRepairVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeRepairVehicle(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeRepairVehicle");

	Params::BP_TaskFormula_C_AnyModeRepairVehicle Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeRepairVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeRepairVehicle(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeRepairVehicle");

	Params::BP_TaskFormula_C_SmallModeRepairVehicle Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeRepairVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeRepairVehicle(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeRepairVehicle");

	Params::BP_TaskFormula_C_BigModeRepairVehicle Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeLevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeLevelUp(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeLevelUp");

	Params::BP_TaskFormula_C_AnyModeLevelUp Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeLevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeLevelUp(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeLevelUp");

	Params::BP_TaskFormula_C_SmallModeLevelUp Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeLevelUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   TaskID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeLevelUp(int64 TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeLevelUp");

	Params::BP_TaskFormula_C_BigModeLevelUp Parms{};

	Parms.TaskID = TaskID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeZiplineUseCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeZiplineUseCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeZiplineUseCount");

	Params::BP_TaskFormula_C_AnyModeZiplineUseCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeZiplineUseCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeZiplineUseCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeZiplineUseCount");

	Params::BP_TaskFormula_C_SmallModeZiplineUseCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeZiplineUseCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeZiplineUseCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeZiplineUseCount");

	Params::BP_TaskFormula_C_BigModeZiplineUseCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.MatchRuleCauseDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::MatchRuleCauseDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "MatchRuleCauseDamage");

	Params::BP_TaskFormula_C_MatchRuleCauseDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.MatchRuleKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::MatchRuleKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "MatchRuleKillNum");

	Params::BP_TaskFormula_C_MatchRuleKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdItemCollectCountFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdItemCollectCountFunc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdItemCollectCountFunc");

	Params::BP_TaskFormula_C_StrongholdItemCollectCountFunc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdDamageFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdDamageFunc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdDamageFunc");

	Params::BP_TaskFormula_C_StrongholdDamageFunc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdWalkDistanceFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   TaskID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdWalkDistanceFunc(int64 TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdWalkDistanceFunc");

	Params::BP_TaskFormula_C_StrongholdWalkDistanceFunc Parms{};

	Parms.TaskID = TaskID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdDanceCountFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdDanceCountFunc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdDanceCountFunc");

	Params::BP_TaskFormula_C_StrongholdDanceCountFunc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdLifeTimeFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdLifeTimeFunc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdLifeTimeFunc");

	Params::BP_TaskFormula_C_StrongholdLifeTimeFunc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdBoxCollectCountFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   TaskID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdBoxCollectCountFunc(int64 TaskID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdBoxCollectCountFunc");

	Params::BP_TaskFormula_C_StrongholdBoxCollectCountFunc Parms{};

	Parms.TaskID = TaskID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdKillCountFuc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdKillCountFuc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdKillCountFuc");

	Params::BP_TaskFormula_C_StrongholdKillCountFuc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.StrongholdVisitCountFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::StrongholdVisitCountFunc(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "StrongholdVisitCountFunc");

	Params::BP_TaskFormula_C_StrongholdVisitCountFunc Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeItemTypeCollectCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeItemTypeCollectCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeItemTypeCollectCount");

	Params::BP_TaskFormula_C_SmallModeItemTypeCollectCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeItemTypeCollectCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeItemTypeCollectCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeItemTypeCollectCount");

	Params::BP_TaskFormula_C_BigModeItemTypeCollectCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeCollectBoxNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeCollectBoxNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeCollectBoxNum");

	Params::BP_TaskFormula_C_SmallModeCollectBoxNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeCollectBoxNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeCollectBoxNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeCollectBoxNum");

	Params::BP_TaskFormula_C_BigModeCollectBoxNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeHoverCarInWaterDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeHoverCarInWaterDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeHoverCarInWaterDistance");

	Params::BP_TaskFormula_C_SmallModeHoverCarInWaterDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeHoverCarInWaterDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeHoverCarInWaterDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeHoverCarInWaterDistance");

	Params::BP_TaskFormula_C_BigModeHoverCarInWaterDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModePosionWalkDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModePosionWalkDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModePosionWalkDistance");

	Params::BP_TaskFormula_C_SmallModePosionWalkDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeSwimDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeSwimDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeSwimDistance");

	Params::BP_TaskFormula_C_SmallModeSwimDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModePosionWalkDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModePosionWalkDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModePosionWalkDistance");

	Params::BP_TaskFormula_C_BigModePosionWalkDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeSwimDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeSwimDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeSwimDistance");

	Params::BP_TaskFormula_C_BigModeSwimDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeAvatarKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeAvatarKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeAvatarKillNum");

	Params::BP_TaskFormula_C_BigModeAvatarKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeWeaponTypeKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeWeaponTypeKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeWeaponTypeKillNum");

	Params::BP_TaskFormula_C_BigModeWeaponTypeKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetCurWeaponType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeaponType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EWeaponType ABP_TaskFormula_C::GetCurWeaponType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetCurWeaponType");

	Params::BP_TaskFormula_C_GetCurWeaponType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TaskFormula.BP_TaskFormula_C.Get Drive Vehicle ID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  AssignedCharacterID                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::Get_Drive_Vehicle_ID(int32* AssignedCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "Get Drive Vehicle ID");

	Params::BP_TaskFormula_C_Get_Drive_Vehicle_ID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AssignedCharacterID != nullptr)
		*AssignedCharacterID = Parms.AssignedCharacterID;
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeTotalVehicleDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeTotalVehicleDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeTotalVehicleDamage");

	Params::BP_TaskFormula_C_BigModeTotalVehicleDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeWeaponTypeDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeWeaponTypeDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeWeaponTypeDamage");

	Params::BP_TaskFormula_C_SmallModeWeaponTypeDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeWeaponTypeDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeWeaponTypeDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeWeaponTypeDamage");

	Params::BP_TaskFormula_C_BigModeWeaponTypeDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeWeaponDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeWeaponDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeWeaponDamage");

	Params::BP_TaskFormula_C_SmallModeWeaponDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeWeaponDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeWeaponDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeWeaponDamage");

	Params::BP_TaskFormula_C_BigModeWeaponDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeWeaponKillNum
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeWeaponKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeWeaponKillNum");

	Params::BP_TaskFormula_C_SmallModeWeaponKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeWeaponKillNum
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeWeaponKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeWeaponKillNum");

	Params::BP_TaskFormula_C_BigModeWeaponKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeLifeTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeLifeTime(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeLifeTime");

	Params::BP_TaskFormula_C_SmallModeLifeTime Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeLifeTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeLifeTime(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeLifeTime");

	Params::BP_TaskFormula_C_TYBigModeLifeTime Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYAnyModeFlyCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYAnyModeFlyCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYAnyModeFlyCount");

	Params::BP_TaskFormula_C_TYAnyModeFlyCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeAssistNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeAssistNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeAssistNum");

	Params::BP_TaskFormula_C_TYBigModeAssistNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYAnyModeAssistNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYAnyModeAssistNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYAnyModeAssistNum");

	Params::BP_TaskFormula_C_TYAnyModeAssistNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeHealSelf
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeHealSelf(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeHealSelf");

	Params::BP_TaskFormula_C_TYBigModeHealSelf Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYAnyModeHealSelf
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYAnyModeHealSelf(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYAnyModeHealSelf");

	Params::BP_TaskFormula_C_TYAnyModeHealSelf Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeSaveCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeSaveCount(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeSaveCount");

	Params::BP_TaskFormula_C_TYBigModeSaveCount Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYModeCauseDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYModeCauseDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYModeCauseDamage");

	Params::BP_TaskFormula_C_TYModeCauseDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeCauseDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeCauseDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeCauseDamage");

	Params::BP_TaskFormula_C_TYBigModeCauseDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYAnyModeCauseDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYAnyModeCauseDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYAnyModeCauseDamage");

	Params::BP_TaskFormula_C_TYAnyModeCauseDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYBigModeKillDownNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYBigModeKillDownNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYBigModeKillDownNum");

	Params::BP_TaskFormula_C_TYBigModeKillDownNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYAnyModeKillDownNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYAnyModeKillDownNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYAnyModeKillDownNum");

	Params::BP_TaskFormula_C_TYAnyModeKillDownNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYModeSingleKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYModeSingleKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYModeSingleKillNum");

	Params::BP_TaskFormula_C_TYModeSingleKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetWeaponTypeStartIndexPlus1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  WeaponType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::GetWeaponTypeStartIndexPlus1(int32* WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetWeaponTypeStartIndexPlus1");

	Params::BP_TaskFormula_C_GetWeaponTypeStartIndexPlus1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponType != nullptr)
		*WeaponType = Parms.WeaponType;
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeWeaponTypeKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeWeaponTypeKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeWeaponTypeKillNum");

	Params::BP_TaskFormula_C_SmallModeWeaponTypeKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetCurCharacterID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  AssignedCharacterID                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::GetCurCharacterID(int32* AssignedCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetCurCharacterID");

	Params::BP_TaskFormula_C_GetCurCharacterID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AssignedCharacterID != nullptr)
		*AssignedCharacterID = Parms.AssignedCharacterID;
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYModeAvatarKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYModeAvatarKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYModeAvatarKillNum");

	Params::BP_TaskFormula_C_TYModeAvatarKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetCurWeaponID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_TaskFormula_C::GetCurWeaponID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetCurWeaponID");

	Params::BP_TaskFormula_C_GetCurWeaponID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYModeWeaponKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYModeWeaponKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYModeWeaponKillNum");

	Params::BP_TaskFormula_C_TYModeWeaponKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYModeKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYModeKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYModeKillNum");

	Params::BP_TaskFormula_C_TYModeKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYDriveAnyVechileDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYDriveAnyVechileDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYDriveAnyVechileDistance");

	Params::BP_TaskFormula_C_TYDriveAnyVechileDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYUseAvatarKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYUseAvatarKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYUseAvatarKillNum");

	Params::BP_TaskFormula_C_TYUseAvatarKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYDriveVechileDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYDriveVechileDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYDriveVechileDistance");

	Params::BP_TaskFormula_C_TYDriveVechileDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.GetSolarPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarPlayerState**               OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::GetSolarPlayerState(class ASolarPlayerState** OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "GetSolarPlayerState");

	Params::BP_TaskFormula_C_GetSolarPlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;
}


// Function BP_TaskFormula.BP_TaskFormula_C.TYWeaponKillNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::TYWeaponKillNum(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "TYWeaponKillNum");

	Params::BP_TaskFormula_C_TYWeaponKillNum Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeWalkDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeWalkDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeWalkDistance");

	Params::BP_TaskFormula_C_SmallModeWalkDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.BigModeWalkDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::BigModeWalkDistance(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "BigModeWalkDistance");

	Params::BP_TaskFormula_C_BigModeWalkDistance Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.AnyModeGroupCharTypeDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::AnyModeGroupCharTypeDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "AnyModeGroupCharTypeDamage");

	Params::BP_TaskFormula_C_AnyModeGroupCharTypeDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TaskFormula.BP_TaskFormula_C.SmallModeGroupCharTypeDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int64                                   InstID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TaskFormula_C::SmallModeGroupCharTypeDamage(int64 InstID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TaskFormula_C", "SmallModeGroupCharTypeDamage");

	Params::BP_TaskFormula_C_SmallModeGroupCharTypeDamage Parms{};

	Parms.InstID = InstID;

	UObject::ProcessEvent(Func, &Parms);
}

}

