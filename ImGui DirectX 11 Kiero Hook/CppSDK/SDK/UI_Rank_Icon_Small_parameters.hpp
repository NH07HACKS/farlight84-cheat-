#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Rank_Icon_Small

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.ExecuteUbergraph_UI_Rank_Icon_Small
// 0x000C (0x000C - 0x0000)
struct UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Param;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small) == 0x000004, "Wrong alignment on UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small");
static_assert(sizeof(UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small) == 0x00000C, "Wrong size on UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small");
static_assert(offsetof(UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small, EntryPoint) == 0x000000, "Member 'UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small, K2Node_CustomEvent_Param) == 0x000008, "Member 'UI_Rank_Icon_Small_C_ExecuteUbergraph_UI_Rank_Icon_Small::K2Node_CustomEvent_Param' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.SetRankIconView
// 0x0004 (0x0004 - 0x0000)
struct UI_Rank_Icon_Small_C_SetRankIconView final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_SetRankIconView) == 0x000004, "Wrong alignment on UI_Rank_Icon_Small_C_SetRankIconView");
static_assert(sizeof(UI_Rank_Icon_Small_C_SetRankIconView) == 0x000004, "Wrong size on UI_Rank_Icon_Small_C_SetRankIconView");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetRankIconView, Param) == 0x000000, "Member 'UI_Rank_Icon_Small_C_SetRankIconView::Param' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Rank_Icon_Small_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Rank_Icon_Small_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Rank_Icon_Small_C_PreConstruct");
static_assert(sizeof(UI_Rank_Icon_Small_C_PreConstruct) == 0x000001, "Wrong size on UI_Rank_Icon_Small_C_PreConstruct");
static_assert(offsetof(UI_Rank_Icon_Small_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Rank_Icon_Small_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.FormatView
// 0x000C (0x000C - 0x0000)
struct UI_Rank_Icon_Small_C_FormatView final
{
public:
	int32                                         RankLevelID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankScore;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LegendRank;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_FormatView) == 0x000004, "Wrong alignment on UI_Rank_Icon_Small_C_FormatView");
static_assert(sizeof(UI_Rank_Icon_Small_C_FormatView) == 0x00000C, "Wrong size on UI_Rank_Icon_Small_C_FormatView");
static_assert(offsetof(UI_Rank_Icon_Small_C_FormatView, RankLevelID) == 0x000000, "Member 'UI_Rank_Icon_Small_C_FormatView::RankLevelID' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_FormatView, RankScore) == 0x000004, "Member 'UI_Rank_Icon_Small_C_FormatView::RankScore' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_FormatView, LegendRank) == 0x000008, "Member 'UI_Rank_Icon_Small_C_FormatView::LegendRank' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.SetStar
// 0x0009 (0x0009 - 0x0000)
struct UI_Rank_Icon_Small_C_SetStar final
{
public:
	bool                                          Star_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_SetStar) == 0x000001, "Wrong alignment on UI_Rank_Icon_Small_C_SetStar");
static_assert(sizeof(UI_Rank_Icon_Small_C_SetStar) == 0x000009, "Wrong size on UI_Rank_Icon_Small_C_SetStar");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Star_0) == 0x000000, "Member 'UI_Rank_Icon_Small_C_SetStar::Star_0' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_bool_Variable) == 0x000001, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_byte_Variable) == 0x000002, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, K2Node_Select_Default) == 0x000005, "Member 'UI_Rank_Icon_Small_C_SetStar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_byte_Variable_2) == 0x000006, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, Temp_byte_Variable_3) == 0x000007, "Member 'UI_Rank_Icon_Small_C_SetStar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Rank_Icon_Small_C_SetStar, K2Node_Select_Default_1) == 0x000008, "Member 'UI_Rank_Icon_Small_C_SetStar::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.FormatViewJustIcon
// 0x0004 (0x0004 - 0x0000)
struct UI_Rank_Icon_Small_C_FormatViewJustIcon final
{
public:
	int32                                         LevelID_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_FormatViewJustIcon) == 0x000004, "Wrong alignment on UI_Rank_Icon_Small_C_FormatViewJustIcon");
static_assert(sizeof(UI_Rank_Icon_Small_C_FormatViewJustIcon) == 0x000004, "Wrong size on UI_Rank_Icon_Small_C_FormatViewJustIcon");
static_assert(offsetof(UI_Rank_Icon_Small_C_FormatViewJustIcon, LevelID_0) == 0x000000, "Member 'UI_Rank_Icon_Small_C_FormatViewJustIcon::LevelID_0' has a wrong offset!");

// Function UI_Rank_Icon_Small.UI_Rank_Icon_Small_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Rank_Icon_Small_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Rank_Icon_Small_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Rank_Icon_Small_C_GetModuleName");
static_assert(sizeof(UI_Rank_Icon_Small_C_GetModuleName) == 0x000010, "Wrong size on UI_Rank_Icon_Small_C_GetModuleName");
static_assert(offsetof(UI_Rank_Icon_Small_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Rank_Icon_Small_C_GetModuleName::ReturnValue' has a wrong offset!");

}

