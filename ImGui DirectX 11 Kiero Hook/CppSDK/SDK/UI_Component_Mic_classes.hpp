#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Mic

#include "Basic.hpp"

#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Mic.UI_Component_Mic_C
// 0x0020 (0x0610 - 0x05F0)
class UUI_Component_Mic_C final : public USolarUserWidget
{
public:
	class UCanvasPanel*                           CanvasPanel_Mic;                                   // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Mic;                                   // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_Mic;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Mic;                                           // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Destruct();
	void OnInitialized();
	void Construct();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Mic_C">();
	}
	static class UUI_Component_Mic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Mic_C>();
	}
};
static_assert(alignof(UUI_Component_Mic_C) == 0x000008, "Wrong alignment on UUI_Component_Mic_C");
static_assert(sizeof(UUI_Component_Mic_C) == 0x000610, "Wrong size on UUI_Component_Mic_C");
static_assert(offsetof(UUI_Component_Mic_C, CanvasPanel_Mic) == 0x0005F0, "Member 'UUI_Component_Mic_C::CanvasPanel_Mic' has a wrong offset!");
static_assert(offsetof(UUI_Component_Mic_C, ProgressBar_Mic) == 0x0005F8, "Member 'UUI_Component_Mic_C::ProgressBar_Mic' has a wrong offset!");
static_assert(offsetof(UUI_Component_Mic_C, Slider_Mic) == 0x000600, "Member 'UUI_Component_Mic_C::Slider_Mic' has a wrong offset!");
static_assert(offsetof(UUI_Component_Mic_C, Txt_Mic) == 0x000608, "Member 'UUI_Component_Mic_C::Txt_Mic' has a wrong offset!");

}

