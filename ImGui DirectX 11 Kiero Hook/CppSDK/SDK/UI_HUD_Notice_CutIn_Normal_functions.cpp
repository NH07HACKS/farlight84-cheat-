#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_CutIn_Normal

#include "Basic.hpp"

#include "UI_HUD_Notice_CutIn_Normal_classes.hpp"
#include "UI_HUD_Notice_CutIn_Normal_parameters.hpp"


namespace SDK
{

// Function UI_HUD_Notice_CutIn_Normal.UI_HUD_Notice_CutIn_Normal_C.ExecuteUbergraph_UI_HUD_Notice_CutIn_Normal
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_CutIn_Normal_C::ExecuteUbergraph_UI_HUD_Notice_CutIn_Normal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_CutIn_Normal_C", "ExecuteUbergraph_UI_HUD_Notice_CutIn_Normal");

	Params::UI_HUD_Notice_CutIn_Normal_C_ExecuteUbergraph_UI_HUD_Notice_CutIn_Normal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_CutIn_Normal.UI_HUD_Notice_CutIn_Normal_C.Show
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    文本内容                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_HUD_Notice_CutIn_Normal_C::Show(const class FString& 文本内容)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_CutIn_Normal_C", "Show");

	Params::UI_HUD_Notice_CutIn_Normal_C_Show Parms{};

	Parms.文本内容 = std::move(文本内容);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_CutIn_Normal.UI_HUD_Notice_CutIn_Normal_C.Close
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_HUD_Notice_CutIn_Normal_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_CutIn_Normal_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}

}

