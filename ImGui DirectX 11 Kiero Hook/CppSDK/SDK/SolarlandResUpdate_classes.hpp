#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarlandResUpdate

#include "Basic.hpp"

#include "SolarlandResUpdate_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SolarlandResUpdate.DownloadFileTask
// 0x00C8 (0x00F0 - 0x0028)
class UDownloadFileTask final : public UObject
{
public:
	TMulticastInlineDelegate<void(const TArray<uint8>& DonwloadRawData, int64 ServerTimeStamp, const class FString& URL)> OnDownloadComplete; // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(int32 DownloadSize, int32 TotalSize, int32 CachedSize, const class FString& Filename)> OnDownloadProgress; // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(EDownloadTaskError Error, int32 Errorcode, const class FString& Filename, const class FString& URL)> OnDownloadFailed; // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x98];                                      // 0x0058(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDownloadFileTask* Create(const class FString& URL, const class FString& FileDirectory, const class FString& Filename, bool bByChunk, bool bForceWrite, bool bAsyncWrite);
	static class UDownloadFileTask* CreateNoFile(const class FString& URL, bool bByChunk);

	void CancelDownload();
	void OnWriteFileComplete(bool bWriteResult);
	void SetForceCheckSize(bool InIfForceCheckSize, int32 InTotalSize);
	void SetForceRedownload(bool inForceRedownload);
	void SetSaveToFile(bool Inset);
	void SetTaskComplete();
	void StartDownload();

	class FString GetUrl() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DownloadFileTask">();
	}
	static class UDownloadFileTask* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDownloadFileTask>();
	}
};
static_assert(alignof(UDownloadFileTask) == 0x000008, "Wrong alignment on UDownloadFileTask");
static_assert(sizeof(UDownloadFileTask) == 0x0000F0, "Wrong size on UDownloadFileTask");
static_assert(offsetof(UDownloadFileTask, OnDownloadComplete) == 0x000028, "Member 'UDownloadFileTask::OnDownloadComplete' has a wrong offset!");
static_assert(offsetof(UDownloadFileTask, OnDownloadProgress) == 0x000038, "Member 'UDownloadFileTask::OnDownloadProgress' has a wrong offset!");
static_assert(offsetof(UDownloadFileTask, OnDownloadFailed) == 0x000048, "Member 'UDownloadFileTask::OnDownloadFailed' has a wrong offset!");

// Class SolarlandResUpdate.SolarlandResUpdater
// 0x0008 (0x0030 - 0x0028)
class USolarlandResUpdater final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SolarlandResUpdater">();
	}
	static class USolarlandResUpdater* GetDefaultObj()
	{
		return GetDefaultObjImpl<USolarlandResUpdater>();
	}
};
static_assert(alignof(USolarlandResUpdater) == 0x000008, "Wrong alignment on USolarlandResUpdater");
static_assert(sizeof(USolarlandResUpdater) == 0x000030, "Wrong size on USolarlandResUpdater");

}

