#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_UsingBuddy_Common

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Notice_UsingBuddy_Common.UI_HUD_Notice_UsingBuddy_Common_C.ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common
// 0x000C (0x000C - 0x0000)
struct UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common) == 0x000004, "Wrong alignment on UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common");
static_assert(sizeof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common) == 0x00000C, "Wrong size on UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, EntryPoint) == 0x000000, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, Temp_bool_Variable) == 0x000005, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, Temp_bool_Variable_1) == 0x000006, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, K2Node_Event_InLayoutType) == 0x000007, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common, K2Node_Select_Default) == 0x000008, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ExecuteUbergraph_UI_HUD_Notice_UsingBuddy_Common::K2Node_Select_Default' has a wrong offset!");

// Function UI_HUD_Notice_UsingBuddy_Common.UI_HUD_Notice_UsingBuddy_Common_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Notice_UsingBuddy_Common.UI_HUD_Notice_UsingBuddy_Common_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation");
static_assert(sizeof(UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_HUD_Notice_UsingBuddy_Common.UI_HUD_Notice_UsingBuddy_Common_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation");
static_assert(sizeof(UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation) == 0x000008, "Wrong size on UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation");
static_assert(offsetof(UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_HUD_Notice_UsingBuddy_Common_C_GetExitAnimation::ReturnValue' has a wrong offset!");

}

