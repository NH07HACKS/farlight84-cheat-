#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Root

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Root.UI_Root_C
// 0x0098 (0x0690 - 0x05F8)
class UUI_Root_C final : public USolarUIRoot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           BattleNoticeRoot;                                  // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BattleRoot;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BattleRootGuide;                                   // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BattleRootOverlay;                                 // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CommonRoot;                                        // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ExternalToolsRoot;                                 // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Guide;                                             // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Loading;                                           // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Map;                                               // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MiddleNoticeRoot;                                  // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MiddleRoot;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           NoticeRoot;                                        // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PopRoot;                                           // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Reconnecting;                                      // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TipsRoot;                                          // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           UnderBattleRoot;                                   // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AdapterOffsetLeft;                                 // 0x0680(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdapterOffsetRight;                                // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableAutoAdaptation;                              // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_Root(int32 EntryPoint);
	void CustomEvent_0(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnInitialized();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Root_C">();
	}
	static class UUI_Root_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Root_C>();
	}
};
static_assert(alignof(UUI_Root_C) == 0x000008, "Wrong alignment on UUI_Root_C");
static_assert(sizeof(UUI_Root_C) == 0x000690, "Wrong size on UUI_Root_C");
static_assert(offsetof(UUI_Root_C, UberGraphFrame) == 0x0005F8, "Member 'UUI_Root_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, BattleNoticeRoot) == 0x000600, "Member 'UUI_Root_C::BattleNoticeRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, BattleRoot) == 0x000608, "Member 'UUI_Root_C::BattleRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, BattleRootGuide) == 0x000610, "Member 'UUI_Root_C::BattleRootGuide' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, BattleRootOverlay) == 0x000618, "Member 'UUI_Root_C::BattleRootOverlay' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, CommonRoot) == 0x000620, "Member 'UUI_Root_C::CommonRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, ExternalToolsRoot) == 0x000628, "Member 'UUI_Root_C::ExternalToolsRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, Guide) == 0x000630, "Member 'UUI_Root_C::Guide' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, Loading) == 0x000638, "Member 'UUI_Root_C::Loading' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, Map) == 0x000640, "Member 'UUI_Root_C::Map' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, MiddleNoticeRoot) == 0x000648, "Member 'UUI_Root_C::MiddleNoticeRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, MiddleRoot) == 0x000650, "Member 'UUI_Root_C::MiddleRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, NoticeRoot) == 0x000658, "Member 'UUI_Root_C::NoticeRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, PopRoot) == 0x000660, "Member 'UUI_Root_C::PopRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, Reconnecting) == 0x000668, "Member 'UUI_Root_C::Reconnecting' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, TipsRoot) == 0x000670, "Member 'UUI_Root_C::TipsRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, UnderBattleRoot) == 0x000678, "Member 'UUI_Root_C::UnderBattleRoot' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, AdapterOffsetLeft) == 0x000680, "Member 'UUI_Root_C::AdapterOffsetLeft' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, AdapterOffsetRight) == 0x000684, "Member 'UUI_Root_C::AdapterOffsetRight' has a wrong offset!");
static_assert(offsetof(UUI_Root_C, EnableAutoAdaptation) == 0x000688, "Member 'UUI_Root_C::EnableAutoAdaptation' has a wrong offset!");

}

