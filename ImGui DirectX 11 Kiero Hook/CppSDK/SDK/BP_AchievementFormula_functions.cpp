#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AchievementFormula

#include "Basic.hpp"

#include "BP_AchievementFormula_classes.hpp"
#include "BP_AchievementFormula_parameters.hpp"


namespace SDK
{

// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTMinuteKill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTMinuteKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTMinuteKill");

	Params::BP_AchievementFormula_C_AchTMinuteKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTUseVehicle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTUseVehicle(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTUseVehicle");

	Params::BP_AchievementFormula_C_AchTUseVehicle Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C. AchTHPKill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::_AchTHPKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", " AchTHPKill");

	Params::BP_AchievementFormula_C__AchTHPKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.GetSolarPlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarPlayerState**               OutResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::GetSolarPlayerState(class ASolarPlayerState** OutResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "GetSolarPlayerState");

	Params::BP_AchievementFormula_C_GetSolarPlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutResult != nullptr)
		*OutResult = Parms.OutResult;
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.GetAchievement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USolarAchievementComponent**      AchievementComponent                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::GetAchievement(class USolarAchievementComponent** AchievementComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "GetAchievement");

	Params::BP_AchievementFormula_C_GetAchievement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AchievementComponent != nullptr)
		*AchievementComponent = Parms.AchievementComponent;
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.GetPlayerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPlayerStatisticsData**           Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::GetPlayerData(class UPlayerStatisticsData** Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "GetPlayerData");

	Params::BP_AchievementFormula_C_GetPlayerData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.GetSolarGameState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ASolarGameState**                 Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::GetSolarGameState(class ASolarGameState** Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "GetSolarGameState");

	Params::BP_AchievementFormula_C_GetSolarGameState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BP_AchievementFormula.BP_AchievementFormula_C. AchTLimitWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::_AchTLimitWin(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", " AchTLimitWin");

	Params::BP_AchievementFormula_C__AchTLimitWin Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTDyingWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTDyingWin(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTDyingWin");

	Params::BP_AchievementFormula_C_AchTDyingWin Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTAssistWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTAssistWin(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTAssistWin");

	Params::BP_AchievementFormula_C_AchTAssistWin Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTRescue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTRescue(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTRescue");

	Params::BP_AchievementFormula_C_AchTRescue Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTSkyKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTSkyKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTSkyKill");

	Params::BP_AchievementFormula_C_AchTSkyKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTOnlyLiveWin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTOnlyLiveWin(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTOnlyLiveWin");

	Params::BP_AchievementFormula_C_AchTOnlyLiveWin Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTFirstKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTFirstKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTFirstKill");

	Params::BP_AchievementFormula_C_AchTFirstKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTBlindSniper
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTBlindSniper(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTBlindSniper");

	Params::BP_AchievementFormula_C_AchTBlindSniper Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTOpenBoxNum
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTOpenBoxNum(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTOpenBoxNum");

	Params::BP_AchievementFormula_C_AchTOpenBoxNum Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTenemyVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTenemyVehicle(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTenemyVehicle");

	Params::BP_AchievementFormula_C_AchTenemyVehicle Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTDie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTDie(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTDie");

	Params::BP_AchievementFormula_C_AchTDie Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTMarsWin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTMarsWin(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTMarsWin");

	Params::BP_AchievementFormula_C_AchTMarsWin Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTFistKill 
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTFistKill_(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTFistKill ");

	Params::BP_AchievementFormula_C_AchTFistKill_ Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTBombingDie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTBombingDie(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTBombingDie");

	Params::BP_AchievementFormula_C_AchTBombingDie Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTRevengeKill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTRevengeKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTRevengeKill");

	Params::BP_AchievementFormula_C_AchTRevengeKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTAirUmbrella
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTAirUmbrella(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTAirUmbrella");

	Params::BP_AchievementFormula_C_AchTAirUmbrella Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTAirTrapeze
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTAirTrapeze(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTAirTrapeze");

	Params::BP_AchievementFormula_C_AchTAirTrapeze Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchTAirSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchTAirSpeed(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchTAirSpeed");

	Params::BP_AchievementFormula_C_AchTAirSpeed Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C. AchTBubbleKill
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::_AchTBubbleKill(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", " AchTBubbleKill");

	Params::BP_AchievementFormula_C__AchTBubbleKill Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AchievementFormula.BP_AchievementFormula_C.AchAdvancedWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AchievementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AchievementFormula_C::AchAdvancedWeapon(int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AchievementFormula_C", "AchAdvancedWeapon");

	Params::BP_AchievementFormula_C_AchAdvancedWeapon Parms{};

	Parms.AchievementID = AchievementID;

	UObject::ProcessEvent(Func, &Parms);
}

}

