#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarGameInstance

#include "Basic.hpp"

#include "SolarGameInstance_classes.hpp"
#include "SolarGameInstance_parameters.hpp"


namespace SDK
{

// Function SolarGameInstance.SolarGameInstance_C.ExecuteUbergraph_SolarGameInstance
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USolarGameInstance_C::ExecuteUbergraph_SolarGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ExecuteUbergraph_SolarGameInstance");

	Params::SolarGameInstance_C_ExecuteUbergraph_SolarGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_TestEnsureMsgWithBP
// (Exec, Event, Public, BlueprintEvent)

void USolarGameInstance_C::SolarGM_TestEnsureMsgWithBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_TestEnsureMsgWithBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_TestCrashWithBP
// (Exec, Event, Public, BlueprintEvent)

void USolarGameInstance_C::SolarGM_TestCrashWithBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_TestCrashWithBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaGetBroadcastHeroName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SolarPlayerId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          BroadcastPlayerName                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USolarGameInstance_C::LuaGetBroadcastHeroName(const class FString& SolarPlayerId, class FString* BroadcastPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaGetBroadcastHeroName");

	Params::SolarGameInstance_C_LuaGetBroadcastHeroName Parms{};

	Parms.SolarPlayerId = std::move(SolarPlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (BroadcastPlayerName != nullptr)
		*BroadcastPlayerName = std::move(Parms.BroadcastPlayerName);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaGetBroadcastPlayerName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SolarPlayerId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          BroadcastPlayerName                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USolarGameInstance_C::LuaGetBroadcastPlayerName(const class FString& SolarPlayerId, class FString* BroadcastPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaGetBroadcastPlayerName");

	Params::SolarGameInstance_C_LuaGetBroadcastPlayerName Parms{};

	Parms.SolarPlayerId = std::move(SolarPlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (BroadcastPlayerName != nullptr)
		*BroadcastPlayerName = std::move(Parms.BroadcastPlayerName);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaOnBroadcastModeChanged
// (Public, BlueprintCallable, BlueprintEvent)

void USolarGameInstance_C::LuaOnBroadcastModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaOnBroadcastModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.OnDisconnect
// (Event, Public, BlueprintEvent)

void USolarGameInstance_C::OnDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_AddCharacterSkinLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_AddCharacterSkinLua(int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_AddCharacterSkinLua");

	Params::SolarGameInstance_C_SolarGM_AddCharacterSkinLua Parms{};

	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.ReportLoadingInfoToBI
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FString>*                  LoadingInfo                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LoadingTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFinished                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USolarGameInstance_C::ReportLoadingInfoToBI(TArray<class FString>* LoadingInfo, float LoadingTime, bool bIsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ReportLoadingInfoToBI");

	Params::SolarGameInstance_C_ReportLoadingInfoToBI Parms{};

	Parms.LoadingTime = LoadingTime;
	Parms.bIsFinished = bIsFinished;

	UObject::ProcessEvent(Func, &Parms);

	if (LoadingInfo != nullptr)
		*LoadingInfo = std::move(Parms.LoadingInfo);
}


// Function SolarGameInstance.SolarGameInstance_C.GetLobbyPreloadAssetsFromLua
// (Event, Public, BlueprintEvent)
// Parameters:
// ESolarStageAssetPlatformFlags           InPlatformFlag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> USolarGameInstance_C::GetLobbyPreloadAssetsFromLua(ESolarStageAssetPlatformFlags InPlatformFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "GetLobbyPreloadAssetsFromLua");

	Params::SolarGameInstance_C_GetLobbyPreloadAssetsFromLua Parms{};

	Parms.InPlatformFlag = InPlatformFlag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SolarGameInstance.SolarGameInstance_C.AsyncDownLoadConfigFile
// (Event, Public, BlueprintEvent)
// Parameters:
// int64                                   TaskID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::AsyncDownLoadConfigFile(int64 TaskID, const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "AsyncDownLoadConfigFile");

	Params::SolarGameInstance_C_AsyncDownLoadConfigFile Parms{};

	Parms.TaskID = TaskID;
	Parms.URL = std::move(URL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.ShutDownRTCSdk
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::ShutDownRTCSdk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ShutDownRTCSdk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_TestEnsureMsgWithLua
// (Exec, Event, Public, BlueprintEvent)

void USolarGameInstance_C::SolarGM_TestEnsureMsgWithLua()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_TestEnsureMsgWithLua");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_LobbyLua
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    CmdName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_LobbyLua(const class FString& CmdName, const TArray<class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_LobbyLua");

	Params::SolarGameInstance_C_SolarGM_LobbyLua Parms{};

	Parms.CmdName = std::move(CmdName);
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.ExecuteChangeAudioModeLuaCall
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bTurnOn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USolarGameInstance_C::ExecuteChangeAudioModeLuaCall(bool bTurnOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ExecuteChangeAudioModeLuaCall");

	Params::SolarGameInstance_C_ExecuteChangeAudioModeLuaCall Parms{};

	Parms.bTurnOn = bTurnOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.CheckSavedDirFiles
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FString>*                  Files                                                  (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::CheckSavedDirFiles(TArray<class FString>* Files)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "CheckSavedDirFiles");

	Params::SolarGameInstance_C_CheckSavedDirFiles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Files != nullptr)
		*Files = std::move(Parms.Files);
}


// Function SolarGameInstance.SolarGameInstance_C.OnOtherNetworkFailureDisconnect
// (Event, Public, BlueprintEvent)

void USolarGameInstance_C::OnOtherNetworkFailureDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnOtherNetworkFailureDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaInitGameFrameWork
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::LuaInitGameFrameWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaInitGameFrameWork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaGetBroadcastHeroNameCopy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SolarPlayerId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          BroadcastPlayerName                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USolarGameInstance_C::LuaGetBroadcastHeroNameCopy(const class FString& SolarPlayerId, class FString* BroadcastPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaGetBroadcastHeroNameCopy");

	Params::SolarGameInstance_C_LuaGetBroadcastHeroNameCopy Parms{};

	Parms.SolarPlayerId = std::move(SolarPlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (BroadcastPlayerName != nullptr)
		*BroadcastPlayerName = std::move(Parms.BroadcastPlayerName);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_DelWeaponSkinLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_DelWeaponSkinLua(int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_DelWeaponSkinLua");

	Params::SolarGameInstance_C_SolarGM_DelWeaponSkinLua Parms{};

	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_DelCharacterSkinLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_DelCharacterSkinLua(int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_DelCharacterSkinLua");

	Params::SolarGameInstance_C_SolarGM_DelCharacterSkinLua Parms{};

	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaGetBroadcastPlayerNameCopy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    SolarPlayerId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString*                          BroadcastPlayerName                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USolarGameInstance_C::LuaGetBroadcastPlayerNameCopy(const class FString& SolarPlayerId, class FString* BroadcastPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaGetBroadcastPlayerNameCopy");

	Params::SolarGameInstance_C_LuaGetBroadcastPlayerNameCopy Parms{};

	Parms.SolarPlayerId = std::move(SolarPlayerId);

	UObject::ProcessEvent(Func, &Parms);

	if (BroadcastPlayerName != nullptr)
		*BroadcastPlayerName = std::move(Parms.BroadcastPlayerName);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_QuickMatchLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   MapID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RuleId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_QuickMatchLua(int32 MapID, int32 RuleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_QuickMatchLua");

	Params::SolarGameInstance_C_SolarGM_QuickMatchLua Parms{};

	Parms.MapID = MapID;
	Parms.RuleId = RuleId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_AddWeaponExpLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   weaponid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_AddWeaponExpLua(int32 weaponid, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_AddWeaponExpLua");

	Params::SolarGameInstance_C_SolarGM_AddWeaponExpLua Parms{};

	Parms.weaponid = weaponid;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.ShutDownPCSDK
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::ShutDownPCSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ShutDownPCSDK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.ReceiveShutdown
// (Event, Public, BlueprintEvent)

void USolarGameInstance_C::ReceiveShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ReceiveShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.ExecuteBackKeyLuaCall
// (Event, Public, BlueprintEvent)

void USolarGameInstance_C::ExecuteBackKeyLuaCall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ExecuteBackKeyLuaCall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsServer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USolarGameInstance_C::HandleNetworkError(ENetworkFailure FailureType, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "HandleNetworkError");

	Params::SolarGameInstance_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.GetGlobalPreloadAssetsFromLua
// (Event, Public, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> USolarGameInstance_C::GetGlobalPreloadAssetsFromLua()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "GetGlobalPreloadAssetsFromLua");

	Params::SolarGameInstance_C_GetGlobalPreloadAssetsFromLua Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_AddItemLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_AddItemLua(int32 ItemID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_AddItemLua");

	Params::SolarGameInstance_C_SolarGM_AddItemLua Parms{};

	Parms.ItemID = ItemID;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.ShutDownLimSdk
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::ShutDownLimSdk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ShutDownLimSdk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.IsTrainingMode
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

bool USolarGameInstance_C::IsTrainingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "IsTrainingMode");

	Params::SolarGameInstance_C_IsTrainingMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SolarGameInstance.SolarGameInstance_C.ReceiveClientWasKicked
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    KickReason                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::ReceiveClientWasKicked(const class FString& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "ReceiveClientWasKicked");

	Params::SolarGameInstance_C_ReceiveClientWasKicked Parms{};

	Parms.KickReason = std::move(KickReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.InitLuaClasses
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::InitLuaClasses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "InitLuaClasses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_TransmitGMLua
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const class FString&                    playerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            GmArray                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_TransmitGMLua(const class FString& playerName, const TArray<class FString>& GmArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_TransmitGMLua");

	Params::SolarGameInstance_C_SolarGM_TransmitGMLua Parms{};

	Parms.playerName = std::move(playerName);
	Parms.GmArray = std::move(GmArray);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_OfflineTrainingLua
// (Event, Public, BlueprintEvent)

void USolarGameInstance_C::SolarGM_OfflineTrainingLua()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_OfflineTrainingLua");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SelectHeroAndSkinForPSOGathring
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CharacterID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SelectHeroAndSkinForPSOGathring(int32 CharacterID, int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SelectHeroAndSkinForPSOGathring");

	Params::SolarGameInstance_C_SelectHeroAndSkinForPSOGathring Parms{};

	Parms.CharacterID = CharacterID;
	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_AddWeaponSkinLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SkinID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_AddWeaponSkinLua(int32 SkinID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_AddWeaponSkinLua");

	Params::SolarGameInstance_C_SolarGM_AddWeaponSkinLua Parms{};

	Parms.SkinID = SkinID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_TestCrashWithLua
// (Exec, Event, Public, BlueprintEvent)

void USolarGameInstance_C::SolarGM_TestCrashWithLua()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_TestCrashWithLua");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.OnScopeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EScope                                  InLastScope                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EScope                                  InCurScope                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::OnScopeChanged(EScope InLastScope, EScope InCurScope)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnScopeChanged");

	Params::SolarGameInstance_C_OnScopeChanged Parms{};

	Parms.InLastScope = InLastScope;
	Parms.InCurScope = InCurScope;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.LuaStartGameFrameWork
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::LuaStartGameFrameWork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "LuaStartGameFrameWork");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.SolarGM_SetRankScoreLua
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ModeGroupID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::SolarGM_SetRankScoreLua(int32 ModeGroupID, int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "SolarGM_SetRankScoreLua");

	Params::SolarGameInstance_C_SolarGM_SetRankScoreLua Parms{};

	Parms.ModeGroupID = ModeGroupID;
	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.RegisterNetworkManager
// (Event, Protected, BlueprintEvent)

void USolarGameInstance_C::RegisterNetworkManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "RegisterNetworkManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SolarGameInstance.SolarGameInstance_C.OnStageFlagChanged
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// ESolarStageFlags                        InCurStageFlag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::OnStageFlagChanged(ESolarStageFlags InCurStageFlag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnStageFlagChanged");

	Params::SolarGameInstance_C_OnStageFlagChanged Parms{};

	Parms.InCurStageFlag = InCurStageFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.OnStageFlagLoadAssetsFinished
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// ESolarStageFlags                        InCurStageFlag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::OnStageFlagLoadAssetsFinished(ESolarStageFlags InCurStageFlag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnStageFlagLoadAssetsFinished");

	Params::SolarGameInstance_C_OnStageFlagLoadAssetsFinished Parms{};

	Parms.InCurStageFlag = InCurStageFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.OnStageFlagLoadAssetsStarted
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// ESolarStageFlags                        InCurStageFlag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USolarGameInstance_C::OnStageFlagLoadAssetsStarted(ESolarStageFlags InCurStageFlag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnStageFlagLoadAssetsStarted");

	Params::SolarGameInstance_C_OnStageFlagLoadAssetsStarted Parms{};

	Parms.InCurStageFlag = InCurStageFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SolarGameInstance.SolarGameInstance_C.OnReportClientBattleEndTLog
// (Event, Public, BlueprintEvent, Const)

void USolarGameInstance_C::OnReportClientBattleEndTLog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SolarGameInstance_C", "OnReportClientBattleEndTLog");

	UObject::ProcessEvent(Func, nullptr);
}

}

