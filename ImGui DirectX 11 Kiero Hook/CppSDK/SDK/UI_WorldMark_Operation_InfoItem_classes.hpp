#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WorldMark_Operation_InfoItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_WorldMark_Operation_InfoItem.UI_WorldMark_Operation_InfoItem_C
// 0x0098 (0x0768 - 0x06D0)
class UUI_WorldMark_Operation_InfoItem_C final : public UHUD_WorldMarkOperation_Slot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Remind;                                       // 0x06D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_HUDBlur_C*                Blur_Mask;                                         // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg;                                            // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_HeadBg_Shadow;                                 // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ProgressBg;                                    // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Remind_Loop;                                   // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Mark_Panel;                                        // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Help;                                        // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Progress_CD;                                 // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_Help;                                     // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Size_Box_State_Info;                               // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_WordMark;                                     // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_State;                                    // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Express;                                       // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Express_State_C*                    UI_Express_State;                                  // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Vertical_Text;                                     // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Express_WorldMark_C*                WorldMark_Express;                                 // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         HelpState;                                         // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsIcon;                                           // 0x0764(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHelp;                                           // 0x0765(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsFallDown;                                       // 0x0766(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	bool BP_IsNotSelectableOrNavigable();
	void SetWidgetDisplayStyle(EWorldMarkOperationBottomHalfStyle NewStyle);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void PreConstruct(bool IsDesignTime);
	void RefreshWidgetStyle(EWorldMarkOperationBottomHalfStyle WidgetStyle);
	void RefreshReviveTeammatesStyle(bool IsFallDownState);
	void BP_OnEntryReleased();
	void OnTeammateCallForHelpNotifyBP(class ASolarPlayerState* SolarPlayerState);
	void ExecuteUbergraph_UI_WorldMark_Operation_InfoItem(int32 EntryPoint);
	void OnExpressStateChanged(class ASolarCharacter* InCharacter);
	void OnExpressProgressChanged(class ASolarCharacter* InCharacter, bool bInProgress);
	void OnListItemObjectSetCopy(class UObject* ListItemObject);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_WorldMark_Operation_InfoItem_C">();
	}
	static class UUI_WorldMark_Operation_InfoItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_WorldMark_Operation_InfoItem_C>();
	}
};
static_assert(alignof(UUI_WorldMark_Operation_InfoItem_C) == 0x000008, "Wrong alignment on UUI_WorldMark_Operation_InfoItem_C");
static_assert(sizeof(UUI_WorldMark_Operation_InfoItem_C) == 0x000768, "Wrong size on UUI_WorldMark_Operation_InfoItem_C");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, UberGraphFrame) == 0x0006D0, "Member 'UUI_WorldMark_Operation_InfoItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Anim_Remind) == 0x0006D8, "Member 'UUI_WorldMark_Operation_InfoItem_C::Anim_Remind' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Blur_Mask) == 0x0006E0, "Member 'UUI_WorldMark_Operation_InfoItem_C::Blur_Mask' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Img_Bg) == 0x0006E8, "Member 'UUI_WorldMark_Operation_InfoItem_C::Img_Bg' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, img_HeadBg_Shadow) == 0x0006F0, "Member 'UUI_WorldMark_Operation_InfoItem_C::img_HeadBg_Shadow' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Img_ProgressBg) == 0x0006F8, "Member 'UUI_WorldMark_Operation_InfoItem_C::Img_ProgressBg' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Img_Remind_Loop) == 0x000700, "Member 'UUI_WorldMark_Operation_InfoItem_C::Img_Remind_Loop' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Mark_Panel) == 0x000708, "Member 'UUI_WorldMark_Operation_InfoItem_C::Mark_Panel' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Panel_Help) == 0x000710, "Member 'UUI_WorldMark_Operation_InfoItem_C::Panel_Help' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Panel_Progress_CD) == 0x000718, "Member 'UUI_WorldMark_Operation_InfoItem_C::Panel_Progress_CD' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, ScaleBox_Help) == 0x000720, "Member 'UUI_WorldMark_Operation_InfoItem_C::ScaleBox_Help' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Size_Box_State_Info) == 0x000728, "Member 'UUI_WorldMark_Operation_InfoItem_C::Size_Box_State_Info' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Size_WordMark) == 0x000730, "Member 'UUI_WorldMark_Operation_InfoItem_C::Size_WordMark' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Switcher_State) == 0x000738, "Member 'UUI_WorldMark_Operation_InfoItem_C::Switcher_State' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Txt_Express) == 0x000740, "Member 'UUI_WorldMark_Operation_InfoItem_C::Txt_Express' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, UI_Express_State) == 0x000748, "Member 'UUI_WorldMark_Operation_InfoItem_C::UI_Express_State' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, Vertical_Text) == 0x000750, "Member 'UUI_WorldMark_Operation_InfoItem_C::Vertical_Text' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, WorldMark_Express) == 0x000758, "Member 'UUI_WorldMark_Operation_InfoItem_C::WorldMark_Express' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, HelpState) == 0x000760, "Member 'UUI_WorldMark_Operation_InfoItem_C::HelpState' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, bIsIcon) == 0x000764, "Member 'UUI_WorldMark_Operation_InfoItem_C::bIsIcon' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, bIsHelp) == 0x000765, "Member 'UUI_WorldMark_Operation_InfoItem_C::bIsHelp' has a wrong offset!");
static_assert(offsetof(UUI_WorldMark_Operation_InfoItem_C, bIsFallDown) == 0x000766, "Member 'UUI_WorldMark_Operation_InfoItem_C::bIsFallDown' has a wrong offset!");

}

