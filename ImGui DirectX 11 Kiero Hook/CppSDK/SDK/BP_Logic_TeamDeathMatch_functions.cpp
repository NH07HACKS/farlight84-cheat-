#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Logic_TeamDeathMatch

#include "Basic.hpp"

#include "BP_Logic_TeamDeathMatch_classes.hpp"
#include "BP_Logic_TeamDeathMatch_parameters.hpp"


namespace SDK
{

// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.ExecuteUbergraph_BP_Logic_TeamDeathMatch
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::ExecuteUbergraph_BP_Logic_TeamDeathMatch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "ExecuteUbergraph_BP_Logic_TeamDeathMatch");

	Params::BP_Logic_TeamDeathMatch_C_ExecuteUbergraph_BP_Logic_TeamDeathMatch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.TrySupplementAiBySide
// (Event, Public, BlueprintEvent)
// Parameters:
// const class FString&                    Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::TrySupplementAiBySide(const class FString& Side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "TrySupplementAiBySide");

	Params::BP_Logic_TeamDeathMatch_C_TrySupplementAiBySide Parms{};

	Parms.Side = std::move(Side);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.ReceiveBattleBegin
// (Event, Public, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::ReceiveBattleBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "ReceiveBattleBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_AddBullet
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_AddBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_AddBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.HandleWaitingPostMatch
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::HandleWaitingPostMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "HandleWaitingPostMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_OverTiime
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_OverTiime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_OverTiime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_BattleEnd
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_BattleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_BattleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_SupplemenMissingAI
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_SupplemenMissingAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_SupplemenMissingAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_ChangeInKillCount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESCMDataChangeType                      ChangeType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::Event_ChangeInKillCount(ESCMDataChangeType ChangeType, int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_ChangeInKillCount");

	Params::BP_Logic_TeamDeathMatch_C_Event_ChangeInKillCount Parms{};

	Parms.ChangeType = ChangeType;
	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.OnMatchingClosed
// (Event, Public, BlueprintEvent)
// Parameters:
// const int32                             RPCId                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::OnMatchingClosed(const int32 RPCId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "OnMatchingClosed");

	Params::BP_Logic_TeamDeathMatch_C_OnMatchingClosed Parms{};

	Parms.RPCId = RPCId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_CustomRoomStart
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_CustomRoomStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_CustomRoomStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Event_CustomRoomBattleBegin
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Event_CustomRoomBattleBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Event_CustomRoomBattleBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.EventMatchEndSpawnAI
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::EventMatchEndSpawnAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "EventMatchEndSpawnAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Check to See if ATeam Has Reached the Winning Kill Count
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Has_Winner                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Logic_TeamDeathMatch_C::Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count(bool* Has_Winner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Check to See if ATeam Has Reached the Winning Kill Count");

	Params::BP_Logic_TeamDeathMatch_C_Check_to_See_if_ATeam_Has_Reached_the_Winning_Kill_Count Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has_Winner != nullptr)
		*Has_Winner = Parms.Has_Winner;
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Join Process
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRevive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Logic_TeamDeathMatch_C::Player_Join_Process(class ASCMPlayerState* Player, bool IsRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Player Join Process");

	Params::BP_Logic_TeamDeathMatch_C_Player_Join_Process Parms{};

	Parms.Player = Player;
	Parms.IsRevive = IsRevive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.AddProps
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarCharacter*                  SolarCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TMap<int32, int32>&               ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Logic_TeamDeathMatch_C::AddProps(class ASolarCharacter* SolarCharacter, const TMap<int32, int32>& ItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "AddProps");

	Params::BP_Logic_TeamDeathMatch_C_AddProps Parms{};

	Parms.SolarCharacter = SolarCharacter;
	Parms.ItemID = std::move(ItemID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Revive Process
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::Player_Revive_Process(class ASCMPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Player Revive Process");

	Params::BP_Logic_TeamDeathMatch_C_Player_Revive_Process Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Update Battle Time
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::Update_Battle_Time(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Update Battle Time");

	Params::BP_Logic_TeamDeathMatch_C_Update_Battle_Time Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Update Battle State
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Update_Battle_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Update Battle State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.OnBattleEndBuriedPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::OnBattleEndBuriedPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "OnBattleEndBuriedPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.On Role Position Reporting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::On_Role_Position_Reporting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "On Role Position Reporting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.On Take the Initiative to Exit Reporting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::On_Take_the_Initiative_to_Exit_Reporting(class ASCMPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "On Take the Initiative to Exit Reporting");

	Params::BP_Logic_TeamDeathMatch_C_On_Take_the_Initiative_to_Exit_Reporting Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetRealPlayerNumInDM
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  TeamRedPlayerNum                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  TeamBluePlayerNum                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::GetRealPlayerNumInDM(int32* TeamRedPlayerNum, int32* TeamBluePlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "GetRealPlayerNumInDM");

	Params::BP_Logic_TeamDeathMatch_C_GetRealPlayerNumInDM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TeamRedPlayerNum != nullptr)
		*TeamRedPlayerNum = Parms.TeamRedPlayerNum;

	if (TeamBluePlayerNum != nullptr)
		*TeamBluePlayerNum = Parms.TeamBluePlayerNum;
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Player Quit Process
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESCMPlayerOutType                       OutType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::Player_Quit_Process(class ASCMPlayerState* Player, ESCMPlayerOutType OutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Player Quit Process");

	Params::BP_Logic_TeamDeathMatch_C_Player_Quit_Process Parms{};

	Parms.Player = Player;
	Parms.OutType = OutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Init AILevel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Init_AILevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Init AILevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.InitModeData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::InitModeData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "InitModeData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Get AILevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::Get_AILevel(int32* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Get AILevel");

	Params::BP_Logic_TeamDeathMatch_C_Get_AILevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.Custom Room Start
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TeamDeathMatch_C::Custom_Room_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "Custom Room Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetRandomPlayerStartLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Side                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector*                         NextLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::GetRandomPlayerStartLocation(const class FString& Side, struct FVector* NextLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "GetRandomPlayerStartLocation");

	Params::BP_Logic_TeamDeathMatch_C_GetRandomPlayerStartLocation Parms{};

	Parms.Side = std::move(Side);

	UObject::ProcessEvent(Func, &Parms);

	if (NextLocation != nullptr)
		*NextLocation = std::move(Parms.NextLocation);
}


// Function BP_Logic_TeamDeathMatch.BP_Logic_TeamDeathMatch_C.GetPlayerNumInDM
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  RedAllPlayerNum                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  RedRealPlayerNum                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  BlueAllPlayerNum                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  BlueRealPlayerNum                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TeamDeathMatch_C::GetPlayerNumInDM(int32* RedAllPlayerNum, int32* RedRealPlayerNum, int32* BlueAllPlayerNum, int32* BlueRealPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TeamDeathMatch_C", "GetPlayerNumInDM");

	Params::BP_Logic_TeamDeathMatch_C_GetPlayerNumInDM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RedAllPlayerNum != nullptr)
		*RedAllPlayerNum = Parms.RedAllPlayerNum;

	if (RedRealPlayerNum != nullptr)
		*RedRealPlayerNum = Parms.RedRealPlayerNum;

	if (BlueAllPlayerNum != nullptr)
		*BlueAllPlayerNum = Parms.BlueAllPlayerNum;

	if (BlueRealPlayerNum != nullptr)
		*BlueRealPlayerNum = Parms.BlueRealPlayerNum;
}

}

