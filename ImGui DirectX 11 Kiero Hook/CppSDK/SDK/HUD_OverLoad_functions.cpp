#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_OverLoad

#include "Basic.hpp"

#include "HUD_OverLoad_classes.hpp"
#include "HUD_OverLoad_parameters.hpp"


namespace SDK
{

// Function HUD_OverLoad.HUD_Overload_C.ExecuteUbergraph_HUD_Overload
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::ExecuteUbergraph_HUD_Overload(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "ExecuteUbergraph_HUD_Overload");

	Params::HUD_Overload_C_ExecuteUbergraph_HUD_Overload Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnActiveCrosshair
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      InActiveCrosshair                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::OnActiveCrosshair(class UUserWidget* InActiveCrosshair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnActiveCrosshair");

	Params::HUD_Overload_C_OnActiveCrosshair Parms{};

	Parms.InActiveCrosshair = InActiveCrosshair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnChangeOverloadState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InbQuitState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::OnChangeOverloadState(bool InbQuitState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnChangeOverloadState");

	Params::HUD_Overload_C_OnChangeOverloadState Parms{};

	Parms.InbQuitState = InbQuitState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnUpdateOverload
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InOverloadProgress                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InOverloadWarningRate                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InbOverloadState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::OnUpdateOverload(float InOverloadProgress, float InOverloadWarningRate, bool InbOverloadState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnUpdateOverload");

	Params::HUD_Overload_C_OnUpdateOverload Parms{};

	Parms.InOverloadProgress = InOverloadProgress;
	Parms.InOverloadWarningRate = InOverloadWarningRate;
	Parms.InbOverloadState = InbOverloadState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UHUD_Overload_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_OverLoad.HUD_Overload_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "PreConstruct");

	Params::HUD_Overload_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.SetAmmoColor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              InColor                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::SetAmmoColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "SetAmmoColor");

	Params::HUD_Overload_C_SetAmmoColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnUpdateReload
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InReloadProgress                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InReloadAmmo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxAmmo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::OnUpdateReload(float InReloadProgress, int32 InReloadAmmo, int32 InMaxAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnUpdateReload");

	Params::HUD_Overload_C_OnUpdateReload Parms{};

	Parms.InReloadProgress = InReloadProgress;
	Parms.InReloadAmmo = InReloadAmmo;
	Parms.InMaxAmmo = InMaxAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnUpdateCoolDown
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InReloadProgress                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::OnUpdateCoolDown(float InReloadProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnUpdateCoolDown");

	Params::HUD_Overload_C_OnUpdateCoolDown Parms{};

	Parms.InReloadProgress = InReloadProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnUpdateCharge
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InbCharging                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InChargeMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InChargeProgress                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::OnUpdateCharge(bool InbCharging, int32 InChargeMode, float InChargeProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnUpdateCharge");

	Params::HUD_Overload_C_OnUpdateCharge Parms{};

	Parms.InbCharging = InbCharging;
	Parms.InChargeMode = InChargeMode;
	Parms.InChargeProgress = InChargeProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnUpdateAmmo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InReservedAmmo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxAmmo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAmmoProgress                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InbFirst                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::OnUpdateAmmo(int32 InReservedAmmo, int32 InMaxAmmo, float InAmmoProgress, bool InbFirst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnUpdateAmmo");

	Params::HUD_Overload_C_OnUpdateAmmo Parms{};

	Parms.InReservedAmmo = InReservedAmmo;
	Parms.InMaxAmmo = InMaxAmmo;
	Parms.InAmmoProgress = InAmmoProgress;
	Parms.InbFirst = InbFirst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnReloadFinish
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InbReloadSuccess                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InReloadAmmo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InReservedAmmo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InMaxAmmo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InAmmoProgress                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::OnReloadFinish(bool InbReloadSuccess, int32 InReloadAmmo, int32 InReservedAmmo, int32 InMaxAmmo, float InAmmoProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnReloadFinish");

	Params::HUD_Overload_C_OnReloadFinish Parms{};

	Parms.InbReloadSuccess = InbReloadSuccess;
	Parms.InReloadAmmo = InReloadAmmo;
	Parms.InReservedAmmo = InReservedAmmo;
	Parms.InMaxAmmo = InMaxAmmo;
	Parms.InAmmoProgress = InAmmoProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.OnInsufficientAmmo
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UHUD_Overload_C::OnInsufficientAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnInsufficientAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_OverLoad.HUD_Overload_C.OnChangeReloadState
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InbQuitState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReloadSpeedup                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::OnChangeReloadState(bool InbQuitState, bool bReloadSpeedup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "OnChangeReloadState");

	Params::HUD_Overload_C_OnChangeReloadState Parms{};

	Parms.InbQuitState = InbQuitState;
	Parms.bReloadSpeedup = bReloadSpeedup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.SetOverLoadImageSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InProgress                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_Overload_C::SetOverLoadImageSize(float InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "SetOverLoadImageSize");

	Params::HUD_Overload_C_SetOverLoadImageSize Parms{};

	Parms.InProgress = InProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_OverLoad.HUD_Overload_C.SetCoolDownProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_Overload_C::SetCoolDownProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "SetCoolDownProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_OverLoad.HUD_Overload_C.PlayOverloadAnima
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InOverload                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_Overload_C::PlayOverloadAnima(bool InOverload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Overload_C", "PlayOverloadAnima");

	Params::HUD_Overload_C_PlayOverloadAnima Parms{};

	Parms.InOverload = InOverload;

	UObject::ProcessEvent(Func, &Parms);
}

}

