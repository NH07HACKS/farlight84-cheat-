#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Item

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_Item_Quality_structs.hpp"
#include "UMG_structs.hpp"
#include "E_Type_Item_structs.hpp"
#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Item.UI_Component_Item_C.ExecuteUbergraph_UI_Component_Item
// 0x0168 (0x0168 - 0x0000)
struct UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent2D_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent2D_ReturnValue_1;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0088(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F8(0x0070)(ConstParm)
};
static_assert(alignof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item) == 0x000008, "Wrong alignment on UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item");
static_assert(sizeof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item) == 0x000168, "Wrong size on UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, EntryPoint) == 0x000000, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000004, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable) == 0x000005, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable) == 0x000006, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_1) == 0x000007, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_1) == 0x000008, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_2) == 0x000009, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_3) == 0x00000A, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_2) == 0x00000B, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_4) == 0x00000C, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_5) == 0x00000D, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_3) == 0x00000E, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_6) == 0x00000F, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_7) == 0x000010, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_4) == 0x000011, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_8) == 0x000012, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_9) == 0x000013, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_5) == 0x000014, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_10) == 0x000015, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_byte_Variable_11) == 0x000016, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_bool_Variable_6) == 0x000017, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_int_Variable) == 0x000018, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, Temp_int_Variable_1) == 0x00001C, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, CallFunc_PostEvent2D_ReturnValue) == 0x000020, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::CallFunc_PostEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, CallFunc_PostEvent2D_ReturnValue_1) == 0x000024, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::CallFunc_PostEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_IsDesignTime) == 0x000028, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default) == 0x000030, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_1) == 0x000031, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_2) == 0x000032, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_3) == 0x000033, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_4) == 0x000034, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_InLayoutType) == 0x000035, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_SwitchEnum_CmpSuccess) == 0x000036, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_ListItemObject) == 0x000038, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_bIsSelected) == 0x000040, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_bIsExpanded) == 0x000041, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_5) == 0x000044, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Select_Default_6) == 0x000048, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_MyGeometry) == 0x00004C, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_MouseEvent_1) == 0x000088, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item, K2Node_Event_MouseEvent) == 0x0000F8, "Member 'UI_Component_Item_C_ExecuteUbergraph_UI_Component_Item::K2Node_Event_MouseEvent' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Component_Item_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Item_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnMouseLeave");
static_assert(sizeof(UI_Component_Item_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Component_Item_C_OnMouseLeave");
static_assert(offsetof(UI_Component_Item_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Component_Item_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Component_Item_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Item_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnMouseEnter");
static_assert(sizeof(UI_Component_Item_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Component_Item_C_OnMouseEnter");
static_assert(offsetof(UI_Component_Item_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Component_Item_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Item_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_Component_Item_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_Component_Item_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_Component_Item_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_Component_Item_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_Component_Item_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Item_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_Component_Item_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_Component_Item_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_Component_Item_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_Component_Item_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_Component_Item_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Item_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnListItemObjectSet");
static_assert(sizeof(UI_Component_Item_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_Component_Item_C_OnListItemObjectSet");
static_assert(offsetof(UI_Component_Item_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_Component_Item_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Component_Item_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Component_Item_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Component_Item_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Component_Item_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Component_Item_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Item_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Item_C_PreConstruct");
static_assert(sizeof(UI_Component_Item_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Item_C_PreConstruct");
static_assert(offsetof(UI_Component_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.ShowNum
// 0x0005 (0x0005 - 0x0000)
struct UI_Component_Item_C_ShowNum final
{
public:
	bool                                          Num_0;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_ShowNum) == 0x000001, "Wrong alignment on UI_Component_Item_C_ShowNum");
static_assert(sizeof(UI_Component_Item_C_ShowNum) == 0x000005, "Wrong size on UI_Component_Item_C_ShowNum");
static_assert(offsetof(UI_Component_Item_C_ShowNum, Num_0) == 0x000000, "Member 'UI_Component_Item_C_ShowNum::Num_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ShowNum, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Item_C_ShowNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ShowNum, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Item_C_ShowNum::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ShowNum, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Item_C_ShowNum::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_ShowNum, K2Node_Select_Default) == 0x000004, "Member 'UI_Component_Item_C_ShowNum::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.SetCharacterWheel
// 0x003C (0x003C - 0x0000)
struct UI_Component_Item_C_SetCharacterWheel final
{
public:
	int32                                         WheelNum_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_SetCharacterWheel) == 0x000004, "Wrong alignment on UI_Component_Item_C_SetCharacterWheel");
static_assert(sizeof(UI_Component_Item_C_SetCharacterWheel) == 0x00003C, "Wrong size on UI_Component_Item_C_SetCharacterWheel");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, WheelNum_0) == 0x000000, "Member 'UI_Component_Item_C_SetCharacterWheel::WheelNum_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_int_Variable) == 0x000004, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable) == 0x000008, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_1) == 0x00000C, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_2) == 0x000010, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_3) == 0x000014, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_4) == 0x000018, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_5) == 0x00001C, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_6) == 0x000020, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_7) == 0x000024, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_8) == 0x000028, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_9) == 0x00002C, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_10) == 0x000030, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, Temp_float_Variable_11) == 0x000034, "Member 'UI_Component_Item_C_SetCharacterWheel::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetCharacterWheel, K2Node_Select_Default) == 0x000038, "Member 'UI_Component_Item_C_SetCharacterWheel::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.SetEquipped
// 0x0005 (0x0005 - 0x0000)
struct UI_Component_Item_C_SetEquipped final
{
public:
	bool                                          NewIsEquipped;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_SetEquipped) == 0x000001, "Wrong alignment on UI_Component_Item_C_SetEquipped");
static_assert(sizeof(UI_Component_Item_C_SetEquipped) == 0x000005, "Wrong size on UI_Component_Item_C_SetEquipped");
static_assert(offsetof(UI_Component_Item_C_SetEquipped, NewIsEquipped) == 0x000000, "Member 'UI_Component_Item_C_SetEquipped::NewIsEquipped' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetEquipped, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Item_C_SetEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetEquipped, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Item_C_SetEquipped::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetEquipped, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Item_C_SetEquipped::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetEquipped, K2Node_Select_Default) == 0x000004, "Member 'UI_Component_Item_C_SetEquipped::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.SetHover
// 0x0005 (0x0005 - 0x0000)
struct UI_Component_Item_C_SetHover final
{
public:
	bool                                          IsHover_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_SetHover) == 0x000001, "Wrong alignment on UI_Component_Item_C_SetHover");
static_assert(sizeof(UI_Component_Item_C_SetHover) == 0x000005, "Wrong size on UI_Component_Item_C_SetHover");
static_assert(offsetof(UI_Component_Item_C_SetHover, IsHover_0) == 0x000000, "Member 'UI_Component_Item_C_SetHover::IsHover_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetHover, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_Item_C_SetHover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetHover, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_Item_C_SetHover::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetHover, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_Item_C_SetHover::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetHover, K2Node_Select_Default) == 0x000004, "Member 'UI_Component_Item_C_SetHover::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.SetQuality
// 0x02F8 (0x02F8 - 0x0000)
struct UI_Component_Item_C_SetQuality final
{
public:
	E_Item_Quality                                Quality_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_9;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_10;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_11;                             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_8;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_9;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_10;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_11;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_12;                             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_4;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_23;                           // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_24;                           // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_25;                           // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_26;                           // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_27;                           // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_13;                             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_5;                           // 0x0284(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_12;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_13;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_14;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_15;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_16;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_17;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_18;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_6;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_19;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_20;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Item_Quality                                Temp_byte_Variable_14;                             // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_7;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_SetQuality) == 0x000008, "Wrong alignment on UI_Component_Item_C_SetQuality");
static_assert(sizeof(UI_Component_Item_C_SetQuality) == 0x0002F8, "Wrong size on UI_Component_Item_C_SetQuality");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Quality_0) == 0x000000, "Member 'UI_Component_Item_C_SetQuality::Quality_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable) == 0x000008, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_1) == 0x000010, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_2) == 0x000018, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_3) == 0x000020, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_4) == 0x000028, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable) == 0x000030, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable) == 0x000034, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_1) == 0x000044, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_2) == 0x000054, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_3) == 0x000064, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_4) == 0x000074, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_5) == 0x000084, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_6) == 0x000094, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_1) == 0x0000A4, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_2) == 0x0000A5, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_3) == 0x0000A6, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_4) == 0x0000A7, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_5) == 0x0000A8, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_6) == 0x0000A9, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_7) == 0x0000AA, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_8) == 0x0000AB, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default) == 0x0000AC, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_1) == 0x0000BC, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_9) == 0x0000BD, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_7) == 0x0000C0, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_8) == 0x0000D0, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_9) == 0x0000E0, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_10) == 0x0000F0, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_11) == 0x000100, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_12) == 0x000110, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_13) == 0x000120, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_10) == 0x000130, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_2) == 0x000134, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_14) == 0x000144, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_15) == 0x000154, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_16) == 0x000164, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_17) == 0x000174, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_18) == 0x000184, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_19) == 0x000194, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_20) == 0x0001A4, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_11) == 0x0001B4, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_3) == 0x0001B8, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_5) == 0x0001C8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_6) == 0x0001D0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_7) == 0x0001D8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_8) == 0x0001E0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_9) == 0x0001E8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_10) == 0x0001F0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_11) == 0x0001F8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_12) == 0x000200, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_4) == 0x000208, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_21) == 0x000210, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_22) == 0x000220, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_23) == 0x000230, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_24) == 0x000240, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_25) == 0x000250, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_26) == 0x000260, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_26' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_struct_Variable_27) == 0x000270, "Member 'UI_Component_Item_C_SetQuality::Temp_struct_Variable_27' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_13) == 0x000280, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_5) == 0x000284, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_12) == 0x000298, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_13) == 0x0002A0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_14) == 0x0002A8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_15) == 0x0002B0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_16) == 0x0002B8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_17) == 0x0002C0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_18) == 0x0002C8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_6) == 0x0002D0, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_19) == 0x0002D8, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_object_Variable_20) == 0x0002E0, "Member 'UI_Component_Item_C_SetQuality::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, Temp_byte_Variable_14) == 0x0002E8, "Member 'UI_Component_Item_C_SetQuality::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetQuality, K2Node_Select_Default_7) == 0x0002F0, "Member 'UI_Component_Item_C_SetQuality::K2Node_Select_Default_7' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.SetItemState
// 0x0040 (0x0040 - 0x0000)
struct UI_Component_Item_C_SetItemState final
{
public:
	E_Type_Item                                   ItemState_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Type_Item                                   Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Item                                   Temp_byte_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Item                                   Temp_byte_Variable_16;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Item                                   Temp_byte_Variable_22;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetAdapteeWidget_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_Item_Anim_C*              K2Node_DynamicCast_AsUI_Component_Item_Anim;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadedWidget_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Type_Item                                   Temp_byte_Variable_29;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_SetItemState) == 0x000008, "Wrong alignment on UI_Component_Item_C_SetItemState");
static_assert(sizeof(UI_Component_Item_C_SetItemState) == 0x000040, "Wrong size on UI_Component_Item_C_SetItemState");
static_assert(offsetof(UI_Component_Item_C_SetItemState, ItemState_0) == 0x000000, "Member 'UI_Component_Item_C_SetItemState::ItemState_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_1) == 0x000002, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_2) == 0x000003, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_3) == 0x000004, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'UI_Component_Item_C_SetItemState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_4) == 0x000006, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_5) == 0x000007, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_6) == 0x000008, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_7) == 0x000009, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_8) == 0x00000A, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_9) == 0x00000B, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_10) == 0x00000C, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_Select_Default) == 0x00000D, "Member 'UI_Component_Item_C_SetItemState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_11) == 0x00000E, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_12) == 0x00000F, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_13) == 0x000010, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_14) == 0x000011, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_15) == 0x000012, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_16) == 0x000013, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_Select_Default_1) == 0x000014, "Member 'UI_Component_Item_C_SetItemState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_17) == 0x000015, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_18) == 0x000016, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_19) == 0x000017, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_20) == 0x000018, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_21) == 0x000019, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_22) == 0x00001A, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_Select_Default_2) == 0x00001B, "Member 'UI_Component_Item_C_SetItemState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_23) == 0x00001C, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_24) == 0x00001D, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_25) == 0x00001E, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_26) == 0x00001F, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_27) == 0x000020, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_Select_Default_3) == 0x000021, "Member 'UI_Component_Item_C_SetItemState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_28) == 0x000022, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, CallFunc_GetAdapteeWidget_ReturnValue) == 0x000028, "Member 'UI_Component_Item_C_SetItemState::CallFunc_GetAdapteeWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_DynamicCast_AsUI_Component_Item_Anim) == 0x000030, "Member 'UI_Component_Item_C_SetItemState::K2Node_DynamicCast_AsUI_Component_Item_Anim' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_Component_Item_C_SetItemState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, CallFunc_IsLoadedWidget_ReturnValue) == 0x000039, "Member 'UI_Component_Item_C_SetItemState::CallFunc_IsLoadedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, Temp_byte_Variable_29) == 0x00003A, "Member 'UI_Component_Item_C_SetItemState::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_SetItemState, K2Node_Select_Default_4) == 0x00003B, "Member 'UI_Component_Item_C_SetItemState::K2Node_Select_Default_4' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Item_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_Component_Item_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_Component_Item_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_Component_Item_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_Component_Item_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_Component_Item_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnMouseEnterCopy
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Component_Item_C_OnMouseEnterCopy final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Item_C_OnMouseEnterCopy) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnMouseEnterCopy");
static_assert(sizeof(UI_Component_Item_C_OnMouseEnterCopy) == 0x0000A8, "Wrong size on UI_Component_Item_C_OnMouseEnterCopy");
static_assert(offsetof(UI_Component_Item_C_OnMouseEnterCopy, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnMouseEnterCopy::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseEnterCopy, MouseEvent) == 0x000038, "Member 'UI_Component_Item_C_OnMouseEnterCopy::MouseEvent' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnMouseButtonDown
// 0x0160 (0x0160 - 0x0000)
struct UI_Component_Item_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Component_Item_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnMouseButtonDown");
static_assert(sizeof(UI_Component_Item_C_OnMouseButtonDown) == 0x000160, "Wrong size on UI_Component_Item_C_OnMouseButtonDown");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UI_Component_Item_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'UI_Component_Item_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnMouseButtonUp
// 0x0160 (0x0160 - 0x0000)
struct UI_Component_Item_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Component_Item_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnMouseButtonUp");
static_assert(sizeof(UI_Component_Item_C_OnMouseButtonUp) == 0x000160, "Wrong size on UI_Component_Item_C_OnMouseButtonUp");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'UI_Component_Item_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'UI_Component_Item_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.BP_OnItemSelectionChangedCopy
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Item_C_BP_OnItemSelectionChangedCopy final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Item_C_BP_OnItemSelectionChangedCopy) == 0x000001, "Wrong alignment on UI_Component_Item_C_BP_OnItemSelectionChangedCopy");
static_assert(sizeof(UI_Component_Item_C_BP_OnItemSelectionChangedCopy) == 0x000001, "Wrong size on UI_Component_Item_C_BP_OnItemSelectionChangedCopy");
static_assert(offsetof(UI_Component_Item_C_BP_OnItemSelectionChangedCopy, bIsSelected) == 0x000000, "Member 'UI_Component_Item_C_BP_OnItemSelectionChangedCopy::bIsSelected' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnListItemObjectSetCopy
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Item_C_OnListItemObjectSetCopy final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_OnListItemObjectSetCopy) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnListItemObjectSetCopy");
static_assert(sizeof(UI_Component_Item_C_OnListItemObjectSetCopy) == 0x000008, "Wrong size on UI_Component_Item_C_OnListItemObjectSetCopy");
static_assert(offsetof(UI_Component_Item_C_OnListItemObjectSetCopy, ListItemObject) == 0x000000, "Member 'UI_Component_Item_C_OnListItemObjectSetCopy::ListItemObject' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnFocusReceived
// 0x00F8 (0x00F8 - 0x0000)
struct UI_Component_Item_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Component_Item_C_OnFocusReceived) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnFocusReceived");
static_assert(sizeof(UI_Component_Item_C_OnFocusReceived) == 0x0000F8, "Wrong size on UI_Component_Item_C_OnFocusReceived");
static_assert(offsetof(UI_Component_Item_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'UI_Component_Item_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'UI_Component_Item_C_OnFocusReceived::ReturnValue' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.OnDragDetected
// 0x00B0 (0x00B0 - 0x0000)
struct UI_Component_Item_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Component_Item_C_OnDragDetected) == 0x000008, "Wrong alignment on UI_Component_Item_C_OnDragDetected");
static_assert(sizeof(UI_Component_Item_C_OnDragDetected) == 0x0000B0, "Wrong size on UI_Component_Item_C_OnDragDetected");
static_assert(offsetof(UI_Component_Item_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'UI_Component_Item_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnDragDetected, PointerEvent) == 0x000038, "Member 'UI_Component_Item_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(UI_Component_Item_C_OnDragDetected, Operation) == 0x0000A8, "Member 'UI_Component_Item_C_OnDragDetected::Operation' has a wrong offset!");

// Function UI_Component_Item.UI_Component_Item_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_Item_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Item_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_Item_C_GetModuleName");
static_assert(sizeof(UI_Component_Item_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_Item_C_GetModuleName");
static_assert(offsetof(UI_Component_Item_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_Item_C_GetModuleName::ReturnValue' has a wrong offset!");

}

