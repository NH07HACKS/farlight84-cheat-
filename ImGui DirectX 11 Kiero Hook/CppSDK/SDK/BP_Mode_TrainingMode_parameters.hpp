#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mode_TrainingMode

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.GetRandomAISkinIDByEliminateIDs
// 0x0020 (0x0020 - 0x0000)
struct BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs final
{
public:
	TArray<int32>                                 EliminateIDs;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs");
static_assert(sizeof(BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs) == 0x000020, "Wrong size on BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs, EliminateIDs) == 0x000000, "Member 'BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs::EliminateIDs' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs, ReturnValue) == 0x000010, "Member 'BP_Mode_TrainingMode_C_GetRandomAISkinIDByEliminateIDs::ReturnValue' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.UpdatePlayerData
// 0x0018 (0x0018 - 0x0000)
struct BP_Mode_TrainingMode_C_UpdatePlayerData final
{
public:
	int32                                         CharacterSkinID;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterBagID;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterBagTrailID;                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterCapsuleID;                                // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarPlayerState*                      PlayerState;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_UpdatePlayerData) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_UpdatePlayerData");
static_assert(sizeof(BP_Mode_TrainingMode_C_UpdatePlayerData) == 0x000018, "Wrong size on BP_Mode_TrainingMode_C_UpdatePlayerData");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdatePlayerData, CharacterSkinID) == 0x000000, "Member 'BP_Mode_TrainingMode_C_UpdatePlayerData::CharacterSkinID' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdatePlayerData, CharacterBagID) == 0x000004, "Member 'BP_Mode_TrainingMode_C_UpdatePlayerData::CharacterBagID' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdatePlayerData, CharacterBagTrailID) == 0x000008, "Member 'BP_Mode_TrainingMode_C_UpdatePlayerData::CharacterBagTrailID' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdatePlayerData, CharacterCapsuleID) == 0x00000C, "Member 'BP_Mode_TrainingMode_C_UpdatePlayerData::CharacterCapsuleID' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdatePlayerData, PlayerState) == 0x000010, "Member 'BP_Mode_TrainingMode_C_UpdatePlayerData::PlayerState' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.GetRandomSkinByCharacterID
// 0x000C (0x000C - 0x0000)
struct BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID final
{
public:
	int32                                         InCharacterId;                                     // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InQuality;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID) == 0x000004, "Wrong alignment on BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID");
static_assert(sizeof(BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID) == 0x00000C, "Wrong size on BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID, InCharacterId) == 0x000000, "Member 'BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID::InCharacterId' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID, InQuality) == 0x000004, "Member 'BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID::InQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID, ReturnValue) == 0x000008, "Member 'BP_Mode_TrainingMode_C_GetRandomSkinByCharacterID::ReturnValue' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.InitCharacterClassPath
// 0x0004 (0x0004 - 0x0000)
struct BP_Mode_TrainingMode_C_InitCharacterClassPath final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_InitCharacterClassPath) == 0x000004, "Wrong alignment on BP_Mode_TrainingMode_C_InitCharacterClassPath");
static_assert(sizeof(BP_Mode_TrainingMode_C_InitCharacterClassPath) == 0x000004, "Wrong size on BP_Mode_TrainingMode_C_InitCharacterClassPath");
static_assert(offsetof(BP_Mode_TrainingMode_C_InitCharacterClassPath, CharacterID) == 0x000000, "Member 'BP_Mode_TrainingMode_C_InitCharacterClassPath::CharacterID' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.UpdateBotPlayerData
// 0x0028 (0x0028 - 0x0000)
struct BP_Mode_TrainingMode_C_UpdateBotPlayerData final
{
public:
	class ASolarPlayerState*                      PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterSkinQuality;                              // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BackpackQuality;                                   // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BackpackTrailQuality;                              // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CapsuleQuality;                                    // 0x0014(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DeathBoxSkinQuality;                               // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WeaponSkinQuality;                                 // 0x001C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VehicleSkinQuality;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         KillNotifyQuality;                                 // 0x0024(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_UpdateBotPlayerData) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_UpdateBotPlayerData");
static_assert(sizeof(BP_Mode_TrainingMode_C_UpdateBotPlayerData) == 0x000028, "Wrong size on BP_Mode_TrainingMode_C_UpdateBotPlayerData");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, PlayerState) == 0x000000, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, CharacterSkinQuality) == 0x000008, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::CharacterSkinQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, BackpackQuality) == 0x00000C, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::BackpackQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, BackpackTrailQuality) == 0x000010, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::BackpackTrailQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, CapsuleQuality) == 0x000014, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::CapsuleQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, DeathBoxSkinQuality) == 0x000018, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::DeathBoxSkinQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, WeaponSkinQuality) == 0x00001C, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::WeaponSkinQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, VehicleSkinQuality) == 0x000020, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::VehicleSkinQuality' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_UpdateBotPlayerData, KillNotifyQuality) == 0x000024, "Member 'BP_Mode_TrainingMode_C_UpdateBotPlayerData::KillNotifyQuality' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.GetRandomAISkinID
// 0x0020 (0x0020 - 0x0000)
struct BP_Mode_TrainingMode_C_GetRandomAISkinID final
{
public:
	const class ASolarPlayerState*                InPS;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyLowerPos;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_GetRandomAISkinID) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_GetRandomAISkinID");
static_assert(sizeof(BP_Mode_TrainingMode_C_GetRandomAISkinID) == 0x000020, "Wrong size on BP_Mode_TrainingMode_C_GetRandomAISkinID");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomAISkinID, InPS) == 0x000000, "Member 'BP_Mode_TrainingMode_C_GetRandomAISkinID::InPS' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomAISkinID, bOnlyLowerPos) == 0x000008, "Member 'BP_Mode_TrainingMode_C_GetRandomAISkinID::bOnlyLowerPos' has a wrong offset!");
static_assert(offsetof(BP_Mode_TrainingMode_C_GetRandomAISkinID, ReturnValue) == 0x000010, "Member 'BP_Mode_TrainingMode_C_GetRandomAISkinID::ReturnValue' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.OnReceivePlayerBattleStart
// 0x0008 (0x0008 - 0x0000)
struct BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart");
static_assert(sizeof(BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart) == 0x000008, "Wrong size on BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart");
static_assert(offsetof(BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart, PlayerController) == 0x000000, "Member 'BP_Mode_TrainingMode_C_OnReceivePlayerBattleStart::PlayerController' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.OnReceivePlayerLogin
// 0x0008 (0x0008 - 0x0000)
struct BP_Mode_TrainingMode_C_OnReceivePlayerLogin final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BP_Mode_TrainingMode_C_OnReceivePlayerLogin) == 0x000008, "Wrong alignment on BP_Mode_TrainingMode_C_OnReceivePlayerLogin");
static_assert(sizeof(BP_Mode_TrainingMode_C_OnReceivePlayerLogin) == 0x000008, "Wrong size on BP_Mode_TrainingMode_C_OnReceivePlayerLogin");
static_assert(offsetof(BP_Mode_TrainingMode_C_OnReceivePlayerLogin, PlayerController) == 0x000000, "Member 'BP_Mode_TrainingMode_C_OnReceivePlayerLogin::PlayerController' has a wrong offset!");

// Function BP_Mode_TrainingMode.BP_Mode_TrainingMode_C.ExecuteUbergraph_BP_Mode_TrainingMode
// 0x0004 (0x0004 - 0x0000)
struct BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode) == 0x000004, "Wrong alignment on BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode");
static_assert(sizeof(BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode) == 0x000004, "Wrong size on BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode");
static_assert(offsetof(BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode, EntryPoint) == 0x000000, "Member 'BP_Mode_TrainingMode_C_ExecuteUbergraph_BP_Mode_TrainingMode::EntryPoint' has a wrong offset!");

}

