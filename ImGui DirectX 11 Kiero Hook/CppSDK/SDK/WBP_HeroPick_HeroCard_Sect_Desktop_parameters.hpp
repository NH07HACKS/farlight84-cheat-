#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeroPick_HeroCard_Sect_Desktop

#include "Basic.hpp"

#include "E_HeroPick_Sect_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeroPick_HeroCard_Sect_Desktop.WBP_HeroPick_HeroCard_Sect_Desktop_C.ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsSelecting;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop) == 0x000004, "Wrong alignment on WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop");
static_assert(sizeof(WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop) == 0x000008, "Wrong size on WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop, EntryPoint) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop, K2Node_Event_IsSelecting) == 0x000004, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop::K2Node_Event_IsSelecting' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Sect_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Sect_Desktop.WBP_HeroPick_HeroCard_Sect_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct");
static_assert(sizeof(WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Sect_Desktop.WBP_HeroPick_HeroCard_Sect_Desktop_C.SetIsSelectiong
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong final
{
public:
	bool                                          IsSelecting;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong");
static_assert(sizeof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong, IsSelecting) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetIsSelectiong::IsSelecting' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Sect_Desktop.WBP_HeroPick_HeroCard_Sect_Desktop_C.SetSect
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect final
{
public:
	E_HeroPick_Sect                               Sect_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelect_0;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_Sect                               Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HeroPick_Sect                               Temp_byte_Variable_3;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_3;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect");
static_assert(sizeof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect) == 0x0000A8, "Wrong size on WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Sect_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Sect_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, IsSelect_0) == 0x000001, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::IsSelect_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_bool_Variable) == 0x000002, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_struct_Variable) == 0x000004, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_byte_Variable) == 0x000024, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_int_Variable) == 0x000028, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_int_Variable_1) == 0x00002C, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_int_Variable_2) == 0x000030, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_int_Variable_3) == 0x000034, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_byte_Variable_1) == 0x000039, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_byte_Variable_2) == 0x00003A, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_byte_Variable_3) == 0x00003B, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_object_Variable) == 0x000040, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_object_Variable_1) == 0x000048, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_object_Variable_2) == 0x000050, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_object_Variable_3) == 0x000058, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, K2Node_Select_Default) == 0x000060, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, K2Node_Select_Default_1) == 0x000064, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, K2Node_Select_Default_2) == 0x000074, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, K2Node_Select_Default_3) == 0x000078, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_struct_Variable_2) == 0x000088, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_struct_Variable_3) == 0x000090, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, Temp_bool_Variable_2) == 0x000098, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect, K2Node_Select_Default_4) == 0x00009C, "Member 'WBP_HeroPick_HeroCard_Sect_Desktop_C_SetSect::K2Node_Select_Default_4' has a wrong offset!");

}

