#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleUI_HP

#include "Basic.hpp"

#include "E_BattleControlWidgets_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleUI_HP.BattleUI_HP_C
// 0x0130 (0x0798 - 0x0668)
class UBattleUI_HP_C final : public UHUDBattleHPPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EXP_Enter;                                         // 0x0670(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Levelup_Exit;                                      // 0x0678(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Levelup_Enter;                                     // 0x0680(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               Armor;                                             // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BattleUI_HP;                                       // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        Blur_Mask;                                         // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ExtraTipsPanel;                                    // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HP;                                                // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line;                                          // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Notice_Lv_Bg;                                  // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Notice_Lv_Border;                              // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Txt_bg;                                        // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Txt_bg_1;                                      // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SP;                                                // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_FirstTips;                                     // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Notice_Congrats;                               // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Notice_Lv_Head;                                // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Notice_PlayerLevel;                            // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_SecondTips;                                    // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_SliderForWidget_C*                  UI_SliderForWidget;                                // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              DefaultHPPos;                                      // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultHPSize;                                     // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultArmorPos;                                   // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultArmorSize;                                  // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LvHPPos;                                           // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LvHPSize;                                          // 0x0738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LvArmorPos;                                        // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LvArmorSize;                                       // 0x0748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWrappedLocalTextID                    LocalText_Congrats;                                // 0x0750(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWrappedLocalTextID                    LocalText_GainExp;                                 // 0x0754(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentExpAdded;                                   // 0x0758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PendingExpAdded;                                   // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewVar_0;                                          // 0x0760(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrShieldUpgradeItemNum;                          // 0x0770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeedShieldUpgradeItemNum;                          // 0x0774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxShieldUpgradeItemNum;                           // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingLevelUpAnimation;                         // 0x077C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LevelUpTimer;                                      // 0x0780(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           GainExpTimer;                                      // 0x0788(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingExpAnim;                                  // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BattleUI_HP(int32 EntryPoint);
	void ExpAnimEnd();
	void PlayGainExpAnim();
	void LevelUpEnd();
	void LevelUpAnimFadeOut();
	void PlayLevelUpAnimation();
	void PreConstruct(bool IsDesignTime);
	void OnInitialized();
	void BindEventToSetWidgetVisibility();
	void OnWidgetVisibilitySet(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData);
	void ShowGainExp(int32 ExpAdded);
	void ShowLevelUp(int32 NewLevel, const TArray<class FString>& DynamicTips);
	void UpdateLevelAndColor(int32 PlayerLevel);
	void OnLevelupExitAnimationFinished();
	void UpdateTips(const TArray<class FString>& Tips);
	void OnShieldUpgradeItemNumChanged(const int32 ShieldLevel, const int32 ShieldMaxLevel, const int32 ShieldUpgradeItemNum, const int32 NeedShieldUpgradeItemNum_0, const int32 MaxShieldUpgradeItemNum_0);
	void ShowOneExtraTips(class FText& TipsContent);
	void Destruct();
	void Construct();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleUI_HP_C">();
	}
	static class UBattleUI_HP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleUI_HP_C>();
	}
};
static_assert(alignof(UBattleUI_HP_C) == 0x000008, "Wrong alignment on UBattleUI_HP_C");
static_assert(sizeof(UBattleUI_HP_C) == 0x000798, "Wrong size on UBattleUI_HP_C");
static_assert(offsetof(UBattleUI_HP_C, UberGraphFrame) == 0x000668, "Member 'UBattleUI_HP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, EXP_Enter) == 0x000670, "Member 'UBattleUI_HP_C::EXP_Enter' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Levelup_Exit) == 0x000678, "Member 'UBattleUI_HP_C::Levelup_Exit' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Levelup_Enter) == 0x000680, "Member 'UBattleUI_HP_C::Levelup_Enter' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Armor) == 0x000688, "Member 'UBattleUI_HP_C::Armor' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, BattleUI_HP) == 0x000690, "Member 'UBattleUI_HP_C::BattleUI_HP' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Blur_Mask) == 0x000698, "Member 'UBattleUI_HP_C::Blur_Mask' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, ExtraTipsPanel) == 0x0006A0, "Member 'UBattleUI_HP_C::ExtraTipsPanel' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, HP) == 0x0006A8, "Member 'UBattleUI_HP_C::HP' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Img_Line) == 0x0006B0, "Member 'UBattleUI_HP_C::Img_Line' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Img_Notice_Lv_Bg) == 0x0006B8, "Member 'UBattleUI_HP_C::Img_Notice_Lv_Bg' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Img_Notice_Lv_Border) == 0x0006C0, "Member 'UBattleUI_HP_C::Img_Notice_Lv_Border' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Img_Txt_bg) == 0x0006C8, "Member 'UBattleUI_HP_C::Img_Txt_bg' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Img_Txt_bg_1) == 0x0006D0, "Member 'UBattleUI_HP_C::Img_Txt_bg_1' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, SP) == 0x0006D8, "Member 'UBattleUI_HP_C::SP' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Txt_FirstTips) == 0x0006E0, "Member 'UBattleUI_HP_C::Txt_FirstTips' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Txt_Notice_Congrats) == 0x0006E8, "Member 'UBattleUI_HP_C::Txt_Notice_Congrats' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Txt_Notice_Lv_Head) == 0x0006F0, "Member 'UBattleUI_HP_C::Txt_Notice_Lv_Head' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Txt_Notice_PlayerLevel) == 0x0006F8, "Member 'UBattleUI_HP_C::Txt_Notice_PlayerLevel' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, Txt_SecondTips) == 0x000700, "Member 'UBattleUI_HP_C::Txt_SecondTips' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, UI_SliderForWidget) == 0x000708, "Member 'UBattleUI_HP_C::UI_SliderForWidget' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, DefaultHPPos) == 0x000710, "Member 'UBattleUI_HP_C::DefaultHPPos' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, DefaultHPSize) == 0x000718, "Member 'UBattleUI_HP_C::DefaultHPSize' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, DefaultArmorPos) == 0x000720, "Member 'UBattleUI_HP_C::DefaultArmorPos' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, DefaultArmorSize) == 0x000728, "Member 'UBattleUI_HP_C::DefaultArmorSize' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LvHPPos) == 0x000730, "Member 'UBattleUI_HP_C::LvHPPos' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LvHPSize) == 0x000738, "Member 'UBattleUI_HP_C::LvHPSize' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LvArmorPos) == 0x000740, "Member 'UBattleUI_HP_C::LvArmorPos' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LvArmorSize) == 0x000748, "Member 'UBattleUI_HP_C::LvArmorSize' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LocalText_Congrats) == 0x000750, "Member 'UBattleUI_HP_C::LocalText_Congrats' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LocalText_GainExp) == 0x000754, "Member 'UBattleUI_HP_C::LocalText_GainExp' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, CurrentExpAdded) == 0x000758, "Member 'UBattleUI_HP_C::CurrentExpAdded' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, PendingExpAdded) == 0x00075C, "Member 'UBattleUI_HP_C::PendingExpAdded' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, NewVar_0) == 0x000760, "Member 'UBattleUI_HP_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, CurrShieldUpgradeItemNum) == 0x000770, "Member 'UBattleUI_HP_C::CurrShieldUpgradeItemNum' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, NeedShieldUpgradeItemNum) == 0x000774, "Member 'UBattleUI_HP_C::NeedShieldUpgradeItemNum' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, MaxShieldUpgradeItemNum) == 0x000778, "Member 'UBattleUI_HP_C::MaxShieldUpgradeItemNum' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, IsPlayingLevelUpAnimation) == 0x00077C, "Member 'UBattleUI_HP_C::IsPlayingLevelUpAnimation' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, LevelUpTimer) == 0x000780, "Member 'UBattleUI_HP_C::LevelUpTimer' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, GainExpTimer) == 0x000788, "Member 'UBattleUI_HP_C::GainExpTimer' has a wrong offset!");
static_assert(offsetof(UBattleUI_HP_C, IsPlayingExpAnim) == 0x000790, "Member 'UBattleUI_HP_C::IsPlayingExpAnim' has a wrong offset!");

}

