#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Gold_Express

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Gold_Express.ABP_Gold_Express_C
// 0x05C0 (0x0870 - 0x02B0)
class UABP_Gold_Express_C final : public UExpressAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02B8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02E8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0330(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0358(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0380(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x03D0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x03F8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0428(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x04B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x04E0(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0568(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0598(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0620(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0650(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x06D8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0708(0x0088)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0790(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x07C0(0x00B0)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Gold_Express_AnimGraphNode_TransitionResult_3E1133B040D239898927ABA552BD12C5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Gold_Express_AnimGraphNode_TransitionResult_29EDA3D74A6CF10F256B0DADDAE24D28();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Gold_Express_AnimGraphNode_TransitionResult_D40C81634D3327A7241F548039B6D5DA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Gold_Express_AnimGraphNode_TransitionResult_7E47BDAB4C882CC183C7BDA5ED2CB141();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Gold_Express_AnimGraphNode_TransitionResult_3AA5DE6E41656146A4EC2EB437E99A69();
	void AnimNotify_BuddyAppearEnd();
	void AnimNotify_BuddyDisappearEnd();
	void ExecuteUbergraph_ABP_Gold_Express(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Gold_Express_C">();
	}
	static class UABP_Gold_Express_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Gold_Express_C>();
	}
};
static_assert(alignof(UABP_Gold_Express_C) == 0x000010, "Wrong alignment on UABP_Gold_Express_C");
static_assert(sizeof(UABP_Gold_Express_C) == 0x000870, "Wrong size on UABP_Gold_Express_C");
static_assert(offsetof(UABP_Gold_Express_C, UberGraphFrame) == 0x0002B0, "Member 'UABP_Gold_Express_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_Root) == 0x0002B8, "Member 'UABP_Gold_Express_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_Slot) == 0x0002E8, "Member 'UABP_Gold_Express_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_TransitionResult_4) == 0x000330, "Member 'UABP_Gold_Express_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_TransitionResult_3) == 0x000358, "Member 'UABP_Gold_Express_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_TransitionResult_2) == 0x000380, "Member 'UABP_Gold_Express_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_TransitionResult_1) == 0x0003A8, "Member 'UABP_Gold_Express_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_TransitionResult) == 0x0003D0, "Member 'UABP_Gold_Express_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult_5) == 0x0003F8, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_SequencePlayer_4) == 0x000428, "Member 'UABP_Gold_Express_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult_4) == 0x0004B0, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_SequencePlayer_3) == 0x0004E0, "Member 'UABP_Gold_Express_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult_3) == 0x000568, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_SequencePlayer_2) == 0x000598, "Member 'UABP_Gold_Express_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult_2) == 0x000620, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_SequencePlayer_1) == 0x000650, "Member 'UABP_Gold_Express_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult_1) == 0x0006D8, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_SequencePlayer) == 0x000708, "Member 'UABP_Gold_Express_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateResult) == 0x000790, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Gold_Express_C, AnimGraphNode_StateMachine) == 0x0007C0, "Member 'UABP_Gold_Express_C::AnimGraphNode_StateMachine' has a wrong offset!");

}

