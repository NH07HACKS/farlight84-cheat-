#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PokeBall_HUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.ExecuteUbergraph_UI_PokeBall_HUD
// 0x0008 (0x0008 - 0x0000)
struct UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bExpand;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEmpty;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD) == 0x000004, "Wrong alignment on UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD");
static_assert(sizeof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD) == 0x000008, "Wrong size on UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD");
static_assert(offsetof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD, EntryPoint) == 0x000000, "Member 'UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD, K2Node_Event_bExpand) == 0x000005, "Member 'UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD::K2Node_Event_bExpand' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD, K2Node_Event_bEmpty) == 0x000006, "Member 'UI_PokeBall_HUD_C_ExecuteUbergraph_UI_PokeBall_HUD::K2Node_Event_bEmpty' has a wrong offset!");

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.OnItemEmptyStateChange
// 0x0001 (0x0001 - 0x0000)
struct UI_PokeBall_HUD_C_OnItemEmptyStateChange final
{
public:
	bool                                          bEmpty;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PokeBall_HUD_C_OnItemEmptyStateChange) == 0x000001, "Wrong alignment on UI_PokeBall_HUD_C_OnItemEmptyStateChange");
static_assert(sizeof(UI_PokeBall_HUD_C_OnItemEmptyStateChange) == 0x000001, "Wrong size on UI_PokeBall_HUD_C_OnItemEmptyStateChange");
static_assert(offsetof(UI_PokeBall_HUD_C_OnItemEmptyStateChange, bEmpty) == 0x000000, "Member 'UI_PokeBall_HUD_C_OnItemEmptyStateChange::bEmpty' has a wrong offset!");

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.OnExpandStateChange
// 0x0001 (0x0001 - 0x0000)
struct UI_PokeBall_HUD_C_OnExpandStateChange final
{
public:
	bool                                          bExpand;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PokeBall_HUD_C_OnExpandStateChange) == 0x000001, "Wrong alignment on UI_PokeBall_HUD_C_OnExpandStateChange");
static_assert(sizeof(UI_PokeBall_HUD_C_OnExpandStateChange) == 0x000001, "Wrong size on UI_PokeBall_HUD_C_OnExpandStateChange");
static_assert(offsetof(UI_PokeBall_HUD_C_OnExpandStateChange, bExpand) == 0x000000, "Member 'UI_PokeBall_HUD_C_OnExpandStateChange::bExpand' has a wrong offset!");

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_PokeBall_HUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PokeBall_HUD_C_PreConstruct) == 0x000001, "Wrong alignment on UI_PokeBall_HUD_C_PreConstruct");
static_assert(sizeof(UI_PokeBall_HUD_C_PreConstruct) == 0x000001, "Wrong size on UI_PokeBall_HUD_C_PreConstruct");
static_assert(offsetof(UI_PokeBall_HUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_PokeBall_HUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.UpdateExpandState
// 0x001C (0x001C - 0x0000)
struct UI_PokeBall_HUD_C_UpdateExpandState final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PokeBall_HUD_C_UpdateExpandState) == 0x000004, "Wrong alignment on UI_PokeBall_HUD_C_UpdateExpandState");
static_assert(sizeof(UI_PokeBall_HUD_C_UpdateExpandState) == 0x00001C, "Wrong size on UI_PokeBall_HUD_C_UpdateExpandState");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, IsOpen) == 0x000000, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::IsOpen' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_bool_Variable) == 0x000001, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_byte_Variable) == 0x000002, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_byte_Variable_1) == 0x000003, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_bool_Variable_1) == 0x000004, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, K2Node_Select_Default) == 0x000005, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_int_Variable) == 0x000008, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_int_Variable_1) == 0x00000C, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_bool_Variable_2) == 0x000010, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, K2Node_Select_Default_1) == 0x000014, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_byte_Variable_2) == 0x000018, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, Temp_byte_Variable_3) == 0x000019, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateExpandState, K2Node_Select_Default_2) == 0x00001A, "Member 'UI_PokeBall_HUD_C_UpdateExpandState::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_PokeBall_HUD.UI_PokeBall_HUD_C.UpdateEmptyState
// 0x0050 (0x0050 - 0x0000)
struct UI_PokeBall_HUD_C_UpdateEmptyState final
{
public:
	bool                                          IsEmpty_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PokeBall_HUD_C_UpdateEmptyState) == 0x000004, "Wrong alignment on UI_PokeBall_HUD_C_UpdateEmptyState");
static_assert(sizeof(UI_PokeBall_HUD_C_UpdateEmptyState) == 0x000050, "Wrong size on UI_PokeBall_HUD_C_UpdateEmptyState");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, IsEmpty_0) == 0x000000, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::IsEmpty_0' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_float_Variable) == 0x000004, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_bool_Variable) == 0x000008, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_struct_Variable) == 0x00000C, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_struct_Variable_1) == 0x00001C, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_bool_Variable_1) == 0x00002C, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, K2Node_Select_Default) == 0x000030, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_byte_Variable) == 0x000040, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_byte_Variable_1) == 0x000041, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_float_Variable_1) == 0x000044, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, K2Node_Select_Default_1) == 0x000048, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, Temp_bool_Variable_2) == 0x000049, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PokeBall_HUD_C_UpdateEmptyState, K2Node_Select_Default_2) == 0x00004C, "Member 'UI_PokeBall_HUD_C_UpdateEmptyState::K2Node_Select_Default_2' has a wrong offset!");

}

