#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EQC_FishingTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EQC_FishingTarget.EQC_FishingTarget_C.ProvideSingleLocation
// 0x0080 (0x0080 - 0x0000)
struct EQC_FishingTarget_C_ProvideSingleLocation final
{
public:
	class UObject*                                QuerierObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuerierActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultingLocation;                                 // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarBotAIController*                  K2Node_DynamicCast_AsSolar_Bot_AIController;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarPreservedBotPopTask*              K2Node_DynamicCast_AsSolar_Preserved_Bot_Pop_Task; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWarmTargetLocation_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EQC_FishingTarget_C_ProvideSingleLocation) == 0x000008, "Wrong alignment on EQC_FishingTarget_C_ProvideSingleLocation");
static_assert(sizeof(EQC_FishingTarget_C_ProvideSingleLocation) == 0x000080, "Wrong size on EQC_FishingTarget_C_ProvideSingleLocation");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, QuerierObject) == 0x000000, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::QuerierObject' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, QuerierActor) == 0x000008, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::QuerierActor' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, ResultingLocation) == 0x000010, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::ResultingLocation' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, CallFunc_MakeLiteralName_ReturnValue) == 0x00001C, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_AsSolar_Bot_AIController) == 0x000028, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_AsSolar_Bot_AIController' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_AsSolar_Preserved_Bot_Pop_Task) == 0x000038, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_AsSolar_Preserved_Bot_Pop_Task' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, CallFunc_GetBlackboard_ReturnValue) == 0x000048, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, CallFunc_GetWarmTargetLocation_ReturnValue) == 0x000050, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::CallFunc_GetWarmTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, CallFunc_GetValueAsObject_ReturnValue) == 0x000060, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_AsActor) == 0x000068, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(EQC_FishingTarget_C_ProvideSingleLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000074, "Member 'EQC_FishingTarget_C_ProvideSingleLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

