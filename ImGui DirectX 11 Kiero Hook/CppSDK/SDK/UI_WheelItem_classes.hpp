#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WheelItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_WheelItem.UI_WheelItem_C
// 0x00C8 (0x06E8 - 0x0620)
class UUI_WheelItem_C final : public UActionWheelItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_3;                                     // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Voice;                               // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Select_Light;                                  // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGaugeImage_C*                          Img_ShortCD;                                       // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Sizebox_VoiceMark;                                 // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             tMarkNumber;                                       // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_MarkVoice;                                     // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Voice;                                         // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0670(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PositionSelected;                                  // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EActionWheelCommandType                       Style;                                             // 0x0689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68A[0x2];                                      // 0x068A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           标号颜色未选中;                                    // 0x0690(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           标号颜色选中;                                      // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActionWheelCommand                    ActionData;                                        // 0x06B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bDesignTime;                                       // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_WheelItem(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetSelection(bool Selected_0);
	void SetIcon(class UObject* Icon_0);
	void SetSize(const struct FVector2D& InSize);
	void SetAngle(float Angle_0, float SelectionOffset);
	void SetStyle(EActionWheelCommandType Style_0);
	void SetEnabled(bool Enabled);
	struct FLinearColor GetColor();
	void SetCount(const class FText& Count);
	void SetIndex(int32 Param_Index_0);
	void InitData(int32 Param_Index_0, float Angle_0, const struct FActionWheelCommand& ActionData_0, const struct FActionWheelStyle& ActionWheelStyle);
	void UpdateItemCount();
	struct FActionWheelCommand GetWheelItemData();
	void SetLongCDImg(class UObject* Object);
	void SetBuddyCount(const struct FActionWheelCommand& InData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_WheelItem_C">();
	}
	static class UUI_WheelItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_WheelItem_C>();
	}
};
static_assert(alignof(UUI_WheelItem_C) == 0x000008, "Wrong alignment on UUI_WheelItem_C");
static_assert(sizeof(UUI_WheelItem_C) == 0x0006E8, "Wrong size on UUI_WheelItem_C");
static_assert(offsetof(UUI_WheelItem_C, UberGraphFrame) == 0x000620, "Member 'UUI_WheelItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, CanvasPanel_3) == 0x000628, "Member 'UUI_WheelItem_C::CanvasPanel_3' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, HorizontalBox_Voice) == 0x000630, "Member 'UUI_WheelItem_C::HorizontalBox_Voice' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Icon) == 0x000638, "Member 'UUI_WheelItem_C::Icon' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, img_Select_Light) == 0x000640, "Member 'UUI_WheelItem_C::img_Select_Light' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Img_ShortCD) == 0x000648, "Member 'UUI_WheelItem_C::Img_ShortCD' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Sizebox_VoiceMark) == 0x000650, "Member 'UUI_WheelItem_C::Sizebox_VoiceMark' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, tMarkNumber) == 0x000658, "Member 'UUI_WheelItem_C::tMarkNumber' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Txt_MarkVoice) == 0x000660, "Member 'UUI_WheelItem_C::Txt_MarkVoice' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Txt_Voice) == 0x000668, "Member 'UUI_WheelItem_C::Txt_Voice' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Selected) == 0x000670, "Member 'UUI_WheelItem_C::Selected' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Angle) == 0x000674, "Member 'UUI_WheelItem_C::Angle' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Size) == 0x000678, "Member 'UUI_WheelItem_C::Size' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, PositionSelected) == 0x000680, "Member 'UUI_WheelItem_C::PositionSelected' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, bEnabled) == 0x000688, "Member 'UUI_WheelItem_C::bEnabled' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Style) == 0x000689, "Member 'UUI_WheelItem_C::Style' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, Index_0) == 0x00068C, "Member 'UUI_WheelItem_C::Index_0' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, 标号颜色未选中) == 0x000690, "Member 'UUI_WheelItem_C::标号颜色未选中' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, 标号颜色选中) == 0x0006A0, "Member 'UUI_WheelItem_C::标号颜色选中' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, ActionData) == 0x0006B0, "Member 'UUI_WheelItem_C::ActionData' has a wrong offset!");
static_assert(offsetof(UUI_WheelItem_C, bDesignTime) == 0x0006E0, "Member 'UUI_WheelItem_C::bDesignTime' has a wrong offset!");

}

