#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldMark

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WorldMark.WorldMark_C
// 0x0100 (0x0CC0 - 0x0BC0)
class UWorldMark_C final : public UHUD_WorldMark
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x0BC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Mark_Enter_Warning;                           // 0x0BD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Response;                                     // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Mark_Enter;                                   // 0x0BE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InitAnimation;                                     // 0x0BE8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Mark;                                         // 0x0BF0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Distance_Common_Time_Unit;                         // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Distance_Common_Unit;                              // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Distance_Unit;                                     // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgMarkArrow;                                      // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Item;                                        // 0x0C20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Out_Bottom;                                  // 0x0C28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Out_Left;                                    // 0x0C30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Out_Right;                                   // 0x0C38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Out_Up;                                      // 0x0C40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Response_Multiplayer;                        // 0x0C48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Response_Single;                             // 0x0C50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Time;                                        // 0x0C58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_Mark;                                     // 0x0C60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_AgreeNum;                                     // 0x0C68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Response_Symbol;                    // 0x0C70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWorldMark_FrameType_C*                 WorldMark_FrameType;                               // 0x0C78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitAnimationFinished;                             // 0x0C88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DistanceOffsetX;                                   // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WarningIconColor;                                  // 0x0C98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowAngle;                                        // 0x0CA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowOriginalAngle;                                // 0x0CAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowPositionY;                                    // 0x0CB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WorldMark(int32 EntryPoint);
	void UpdateProgressBarStyle(float NewProgress);
	void SetWidgetPendingRemoveStyle(bool bInPendingRemove, bool bInNeedPlayRemoveAnimation);
	void PreConstruct(bool IsDesignTime);
	void SwitchWidget(bool bOutOfRange);
	void OnIsInCenterRangeStateChanged(bool IsInCenterRange);
	void OnWidgetRecycled();
	void InitAttachedWidgetStyle();
	void OnNormalInitAnimationFinished();
	void OnWarningInitAnimationFinished();
	void SetBGByType(EWorldMarkType MarkType);
	void PlayInitAnimationByMarkData(const struct FWorldMarkData& MarkData);
	void SetIconVisibility(class UImage* IconImage, bool Visible);
	void InitWarningIconVisibleByScreenCoordinate(const struct FVector2D& ScreenCoordinate);
	void SetArrowAngleAndPosition(float Value);
	void RefreshWorldMarkOperation();
	void LuaInit(class UObject* Owner, const struct FWorldMarkData& InWorldMarkedData);
	void Destruct();
	void ResponseByLocal();
	void RemoveItemMarkWhenPlayerPicked();
	void OnMeshWidgetAnimationFinished();
	void CancelResponse();
	void Construct();
	void RefreshStyleOnWorldMarkDataChanged();
	void DestroySelf();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WorldMark_C">();
	}
	static class UWorldMark_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldMark_C>();
	}
};
static_assert(alignof(UWorldMark_C) == 0x000010, "Wrong alignment on UWorldMark_C");
static_assert(sizeof(UWorldMark_C) == 0x000CC0, "Wrong size on UWorldMark_C");
static_assert(offsetof(UWorldMark_C, UberGraphFrame) == 0x000BC0, "Member 'UWorldMark_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Anim_Exit) == 0x000BC8, "Member 'UWorldMark_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Anim_Mark_Enter_Warning) == 0x000BD0, "Member 'UWorldMark_C::Anim_Mark_Enter_Warning' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Anim_Response) == 0x000BD8, "Member 'UWorldMark_C::Anim_Response' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Anim_Mark_Enter) == 0x000BE0, "Member 'UWorldMark_C::Anim_Mark_Enter' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, InitAnimation) == 0x000BE8, "Member 'UWorldMark_C::InitAnimation' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Anim_Mark) == 0x000BF0, "Member 'UWorldMark_C::Anim_Mark' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, CanvasPanel_1) == 0x000BF8, "Member 'UWorldMark_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Distance_Common_Time_Unit) == 0x000C00, "Member 'UWorldMark_C::Distance_Common_Time_Unit' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Distance_Common_Unit) == 0x000C08, "Member 'UWorldMark_C::Distance_Common_Unit' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Distance_Unit) == 0x000C10, "Member 'UWorldMark_C::Distance_Unit' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, ImgMarkArrow) == 0x000C18, "Member 'UWorldMark_C::ImgMarkArrow' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Item) == 0x000C20, "Member 'UWorldMark_C::Panel_Item' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Out_Bottom) == 0x000C28, "Member 'UWorldMark_C::Panel_Out_Bottom' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Out_Left) == 0x000C30, "Member 'UWorldMark_C::Panel_Out_Left' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Out_Right) == 0x000C38, "Member 'UWorldMark_C::Panel_Out_Right' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Out_Up) == 0x000C40, "Member 'UWorldMark_C::Panel_Out_Up' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Response_Multiplayer) == 0x000C48, "Member 'UWorldMark_C::Panel_Response_Multiplayer' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Response_Single) == 0x000C50, "Member 'UWorldMark_C::Panel_Response_Single' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Panel_Time) == 0x000C58, "Member 'UWorldMark_C::Panel_Time' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Switcher_Mark) == 0x000C60, "Member 'UWorldMark_C::Switcher_Mark' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Text_AgreeNum) == 0x000C68, "Member 'UWorldMark_C::Text_AgreeNum' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, WidgetSwitcher_Response_Symbol) == 0x000C70, "Member 'UWorldMark_C::WidgetSwitcher_Response_Symbol' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, WorldMark_FrameType) == 0x000C78, "Member 'UWorldMark_C::WorldMark_FrameType' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, Curve) == 0x000C80, "Member 'UWorldMark_C::Curve' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, InitAnimationFinished) == 0x000C88, "Member 'UWorldMark_C::InitAnimationFinished' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, DistanceOffsetX) == 0x000C90, "Member 'UWorldMark_C::DistanceOffsetX' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, WarningIconColor) == 0x000C98, "Member 'UWorldMark_C::WarningIconColor' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, ArrowAngle) == 0x000CA8, "Member 'UWorldMark_C::ArrowAngle' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, ArrowOriginalAngle) == 0x000CAC, "Member 'UWorldMark_C::ArrowOriginalAngle' has a wrong offset!");
static_assert(offsetof(UWorldMark_C, ArrowPositionY) == 0x000CB0, "Member 'UWorldMark_C::ArrowPositionY' has a wrong offset!");

}

