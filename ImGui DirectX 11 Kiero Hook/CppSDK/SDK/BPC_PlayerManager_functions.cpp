#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PlayerManager

#include "Basic.hpp"

#include "BPC_PlayerManager_classes.hpp"
#include "BPC_PlayerManager_parameters.hpp"


namespace SDK
{

// Function BPC_PlayerManager.BPC_PlayerManager_C.GetPlayerList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PlayerListType                        Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ASCMPlayerState*>          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

TArray<class ASCMPlayerState*> UBPC_PlayerManager_C::GetPlayerList(E_PlayerListType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "GetPlayerList");

	Params::BPC_PlayerManager_C_GetPlayerList Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_PlayerManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.OnPlayerDie
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerManager_C::OnPlayerDie(class ASCMPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "OnPlayerDie");

	Params::BPC_PlayerManager_C_OnPlayerDie Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.OnPlayerResurrect
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerManager_C::OnPlayerResurrect(class ASCMPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "OnPlayerResurrect");

	Params::BPC_PlayerManager_C_OnPlayerResurrect Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.BattleStart
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBPC_PlayerManager_C::BattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "BattleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.PlayerOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerManager_C::PlayerOut(class ASCMPlayerState* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "PlayerOut");

	Params::BPC_PlayerManager_C_PlayerOut Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.OnPlayerJoin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsAi                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_PlayerManager_C::OnPlayerJoin(class ASCMPlayerState* NewPlayer, bool bIsAi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "OnPlayerJoin");

	Params::BPC_PlayerManager_C_OnPlayerJoin Parms{};

	Parms.NewPlayer = NewPlayer;
	Parms.bIsAi = bIsAi;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_PlayerManager.BPC_PlayerManager_C.ExecuteUbergraph_BPC_PlayerManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_PlayerManager_C::ExecuteUbergraph_BPC_PlayerManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_PlayerManager_C", "ExecuteUbergraph_BPC_PlayerManager");

	Params::BPC_PlayerManager_C_ExecuteUbergraph_BPC_PlayerManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

