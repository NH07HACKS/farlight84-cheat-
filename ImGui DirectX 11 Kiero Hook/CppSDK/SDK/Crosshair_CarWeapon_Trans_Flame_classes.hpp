#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Trans_Flame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Crosshair_CarWeapon_Trans_Flame.Crosshair_CarWeapon_Trans_Flame_C
// 0x00A0 (0x0950 - 0x08B0)
class UCrosshair_CarWeapon_Trans_Flame_C final : public UVehicleWeaponCrossHairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_ResetOverheat;                                // 0x08B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Overheat;                                     // 0x08C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_transform;                                    // 0x08C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Container_SecondReticle;                           // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Coredot;                                           // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_flame;                                         // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_lb;                                            // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_lt;                                            // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_overload;                                      // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Overload_vx;                                   // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_rb;                                            // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_rt;                                            // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           panel_trans;                                       // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReticleDirection;                                  // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_coredot;                                 // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_downarrow_1;                             // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_leftarrow_1;                             // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_rightarrow_1;                            // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpreadImg_uparrow_1;                               // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame(int32 EntryPoint);
	void OnCrosshairInNormalState();
	void OnOverloadStateChanged(bool bEnter);
	void OnTransformerWeaponChanged(ETransformerType InType);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Crosshair_CarWeapon_Trans_Flame_C">();
	}
	static class UCrosshair_CarWeapon_Trans_Flame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrosshair_CarWeapon_Trans_Flame_C>();
	}
};
static_assert(alignof(UCrosshair_CarWeapon_Trans_Flame_C) == 0x000008, "Wrong alignment on UCrosshair_CarWeapon_Trans_Flame_C");
static_assert(sizeof(UCrosshair_CarWeapon_Trans_Flame_C) == 0x000950, "Wrong size on UCrosshair_CarWeapon_Trans_Flame_C");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, UberGraphFrame) == 0x0008B0, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Anim_ResetOverheat) == 0x0008B8, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Anim_ResetOverheat' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Anim_Overheat) == 0x0008C0, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Anim_Overheat' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Anim_transform) == 0x0008C8, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Anim_transform' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Container_SecondReticle) == 0x0008D0, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Container_SecondReticle' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Coredot) == 0x0008D8, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Coredot' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_flame) == 0x0008E0, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_flame' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_lb) == 0x0008E8, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_lb' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_lt) == 0x0008F0, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_lt' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_overload) == 0x0008F8, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_overload' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, Img_Overload_vx) == 0x000900, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::Img_Overload_vx' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_rb) == 0x000908, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_rb' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, img_rt) == 0x000910, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::img_rt' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, panel_trans) == 0x000918, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::panel_trans' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, ReticleDirection) == 0x000920, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::ReticleDirection' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, SpreadImg_coredot) == 0x000928, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::SpreadImg_coredot' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, SpreadImg_downarrow_1) == 0x000930, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::SpreadImg_downarrow_1' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, SpreadImg_leftarrow_1) == 0x000938, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::SpreadImg_leftarrow_1' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, SpreadImg_rightarrow_1) == 0x000940, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::SpreadImg_rightarrow_1' has a wrong offset!");
static_assert(offsetof(UCrosshair_CarWeapon_Trans_Flame_C, SpreadImg_uparrow_1) == 0x000948, "Member 'UCrosshair_CarWeapon_Trans_Flame_C::SpreadImg_uparrow_1' has a wrong offset!");

}

