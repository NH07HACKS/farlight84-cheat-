#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Float

#include "Basic.hpp"

#include "Crosshair_CarWeapon_Float_classes.hpp"
#include "Crosshair_CarWeapon_Float_parameters.hpp"


namespace SDK
{

// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.ExecuteUbergraph_Crosshair_CarWeapon_Float
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Float_C::ExecuteUbergraph_Crosshair_CarWeapon_Float(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "ExecuteUbergraph_Crosshair_CarWeapon_Float");

	Params::Crosshair_CarWeapon_Float_C_ExecuteUbergraph_Crosshair_CarWeapon_Float Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnUpdateAimState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbLockEnemy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCrosshair_CarWeapon_Float_C::OnUpdateAimState(bool InbLockEnemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnUpdateAimState");

	Params::Crosshair_CarWeapon_Float_C_OnUpdateAimState Parms{};

	Parms.InbLockEnemy = InbLockEnemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnAnimationFinished
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const class UWidgetAnimation*           Animation                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Float_C::OnAnimationFinished(const class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnAnimationFinished");

	Params::Crosshair_CarWeapon_Float_C_OnAnimationFinished Parms{};

	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnCrosshairInNormalState
// (Event, Protected, BlueprintEvent)

void UCrosshair_CarWeapon_Float_C::OnCrosshairInNormalState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnCrosshairInNormalState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnOverloadStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCrosshair_CarWeapon_Float_C::OnOverloadStateChanged(bool bEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnOverloadStateChanged");

	Params::Crosshair_CarWeapon_Float_C_OnOverloadStateChanged Parms{};

	Parms.bEnter = bEnter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnUpdateChargeProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbCharging                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InChargeMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InChargeProgress                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InChargeBurstCount                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Float_C::OnUpdateChargeProgress(bool InbCharging, int32 InChargeMode, float InChargeProgress, int32 InChargeBurstCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnUpdateChargeProgress");

	Params::Crosshair_CarWeapon_Float_C_OnUpdateChargeProgress Parms{};

	Parms.InbCharging = InbCharging;
	Parms.InChargeMode = InChargeMode;
	Parms.InChargeProgress = InChargeProgress;
	Parms.InChargeBurstCount = InChargeBurstCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCrosshair_CarWeapon_Float_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.SetWidgetResources
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel**                    InSecondReticlePanel                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage**                          InReticleDirectionImage                                (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UImage**                          InRangedImage                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USizeBox**                        InAssistLockSizeBox                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvasPanel**                    InChangeNewAssistLockPawnPanel                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvasPanel**                    InEnterLockPawnPanel                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvasPanel**                    InCanvas_Dynamic                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCrosshair_CarWeapon_Float_C::SetWidgetResources(class UCanvasPanel** InSecondReticlePanel, class UImage** InReticleDirectionImage, class UImage** InRangedImage, class USizeBox** InAssistLockSizeBox, class UCanvasPanel** InChangeNewAssistLockPawnPanel, class UCanvasPanel** InEnterLockPawnPanel, class UCanvasPanel** InCanvas_Dynamic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "SetWidgetResources");

	Params::Crosshair_CarWeapon_Float_C_SetWidgetResources Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InSecondReticlePanel != nullptr)
		*InSecondReticlePanel = Parms.InSecondReticlePanel;

	if (InReticleDirectionImage != nullptr)
		*InReticleDirectionImage = Parms.InReticleDirectionImage;

	if (InRangedImage != nullptr)
		*InRangedImage = Parms.InRangedImage;

	if (InAssistLockSizeBox != nullptr)
		*InAssistLockSizeBox = Parms.InAssistLockSizeBox;

	if (InChangeNewAssistLockPawnPanel != nullptr)
		*InChangeNewAssistLockPawnPanel = Parms.InChangeNewAssistLockPawnPanel;

	if (InEnterLockPawnPanel != nullptr)
		*InEnterLockPawnPanel = Parms.InEnterLockPawnPanel;

	if (InCanvas_Dynamic != nullptr)
		*InCanvas_Dynamic = Parms.InCanvas_Dynamic;
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.SetChargeProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UCrosshair_CarWeapon_Float_C::SetChargeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "SetChargeProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.Set Charge Panel Size
// (Public, BlueprintCallable, BlueprintEvent)

void UCrosshair_CarWeapon_Float_C::Set_Charge_Panel_Size()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "Set Charge Panel Size");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Crosshair_CarWeapon_Float.Crosshair_CarWeapon_Float_C.OnOverloadChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InOverload                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCrosshair_CarWeapon_Float_C::OnOverloadChanged(bool InOverload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Crosshair_CarWeapon_Float_C", "OnOverloadChanged");

	Params::Crosshair_CarWeapon_Float_C_OnOverloadChanged Parms{};

	Parms.InOverload = InOverload;

	UObject::ProcessEvent(Func, &Parms);
}

}

