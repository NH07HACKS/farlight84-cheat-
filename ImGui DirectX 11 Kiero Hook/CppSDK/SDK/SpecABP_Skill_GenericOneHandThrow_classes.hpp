#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecABP_Skill_GenericOneHandThrow

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// DynamicClass SpecABP_Skill_GenericOneHandThrow.SpecABP_Skill_GenericOneHandThrow_C
// 0x0850 (0x0BC0 - 0x0370)
class USpecABP_Skill_GenericOneHandThrow_C final : public USolarSpecABP_Skill
{
public:
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0370(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x03A0(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0418(0x00C0)(NativeAccessSpecifierPublic)
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x04D8(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0550(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x0578(0x00C8)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0640(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x06C8(0x01A0)(NativeAccessSpecifierPublic)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0868(0x00C8)(NativeAccessSpecifierPublic)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0930(0x00C8)(NativeAccessSpecifierPublic)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x09F8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A20(0x00C8)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0AE8(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0B70(0x0030)(NativeAccessSpecifierPublic)
	float                                         GenderSpeedScale;                                  // 0x0BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PelvisDeflection;                                  // 0x0BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchPelvisDeflection;                            // 0x0BA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FeetAxialDirection;                                // 0x0BAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CrouchFeetAxialDirection;                          // 0x0BB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0BB4(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BB8[0x8];                                      // 0x0BB8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void AnimNotify_SixDirRunB();
	void AnimNotify_SixDirRunF();
	void BlueprintUpdateAnimation(float bpp__DeltaTimeX__pf);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_GenericOneHandThrow_AnimGraphNode_LayeredBoneBlend_303A97A543A34AA3E1BBC08F87B74068();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_SpecABP_Skill_GenericOneHandThrow_AnimGraphNode_RotationOffsetBlendSpace_B955C1D14CC452612DB5FBB915D3F314();
	void SkillAnimationLayer(const struct FPoseLink& bpp__BasePose__pf, struct FPoseLink* bpp__SkillAnimationLayer__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecABP_Skill_GenericOneHandThrow_C">();
	}
	static class USpecABP_Skill_GenericOneHandThrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecABP_Skill_GenericOneHandThrow_C>();
	}
};
static_assert(alignof(USpecABP_Skill_GenericOneHandThrow_C) == 0x000010, "Wrong alignment on USpecABP_Skill_GenericOneHandThrow_C");
static_assert(sizeof(USpecABP_Skill_GenericOneHandThrow_C) == 0x000BC0, "Wrong size on USpecABP_Skill_GenericOneHandThrow_C");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_Root_1) == 0x000370, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LinkedInputPose_1) == 0x0003A0, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_SaveCachedPose) == 0x000418, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LinkedInputPose) == 0x0004D8, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_UseCachedPose_1) == 0x000550, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LayeredBoneBlend_3) == 0x000578, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_SequencePlayer_1) == 0x000640, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0006C8, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000868, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000930, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_UseCachedPose) == 0x0009F8, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_LayeredBoneBlend) == 0x000A20, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_SequencePlayer) == 0x000AE8, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, AnimGraphNode_Root) == 0x000B70, "Member 'USpecABP_Skill_GenericOneHandThrow_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, GenderSpeedScale) == 0x000BA0, "Member 'USpecABP_Skill_GenericOneHandThrow_C::GenderSpeedScale' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, PelvisDeflection) == 0x000BA4, "Member 'USpecABP_Skill_GenericOneHandThrow_C::PelvisDeflection' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, CrouchPelvisDeflection) == 0x000BA8, "Member 'USpecABP_Skill_GenericOneHandThrow_C::CrouchPelvisDeflection' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, FeetAxialDirection) == 0x000BAC, "Member 'USpecABP_Skill_GenericOneHandThrow_C::FeetAxialDirection' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, CrouchFeetAxialDirection) == 0x000BB0, "Member 'USpecABP_Skill_GenericOneHandThrow_C::CrouchFeetAxialDirection' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_GenericOneHandThrow_C, K2Node_Event_DeltaTimeX) == 0x000BB4, "Member 'USpecABP_Skill_GenericOneHandThrow_C::K2Node_Event_DeltaTimeX' has a wrong offset!");

}

