#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QRCodeTool

#include "Basic.hpp"


namespace SDK::Params
{

// Function QRCodeTool.QRCodeWrapper.ConvertStrToRawData
// 0x0020 (0x0020 - 0x0000)
struct QRCodeWrapper_ConvertStrToRawData final
{
public:
	class FString                                 InStr;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 OutRawData;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QRCodeWrapper_ConvertStrToRawData) == 0x000008, "Wrong alignment on QRCodeWrapper_ConvertStrToRawData");
static_assert(sizeof(QRCodeWrapper_ConvertStrToRawData) == 0x000020, "Wrong size on QRCodeWrapper_ConvertStrToRawData");
static_assert(offsetof(QRCodeWrapper_ConvertStrToRawData, InStr) == 0x000000, "Member 'QRCodeWrapper_ConvertStrToRawData::InStr' has a wrong offset!");
static_assert(offsetof(QRCodeWrapper_ConvertStrToRawData, OutRawData) == 0x000010, "Member 'QRCodeWrapper_ConvertStrToRawData::OutRawData' has a wrong offset!");

// Function QRCodeTool.QRCodeWrapper.GenerateCompressedPNGData
// 0x0028 (0x0028 - 0x0000)
struct QRCodeWrapper_GenerateCompressedPNGData final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 InRawRGBA;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 OutCompressedData;                                 // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QRCodeWrapper_GenerateCompressedPNGData) == 0x000008, "Wrong alignment on QRCodeWrapper_GenerateCompressedPNGData");
static_assert(sizeof(QRCodeWrapper_GenerateCompressedPNGData) == 0x000028, "Wrong size on QRCodeWrapper_GenerateCompressedPNGData");
static_assert(offsetof(QRCodeWrapper_GenerateCompressedPNGData, Width) == 0x000000, "Member 'QRCodeWrapper_GenerateCompressedPNGData::Width' has a wrong offset!");
static_assert(offsetof(QRCodeWrapper_GenerateCompressedPNGData, Height) == 0x000004, "Member 'QRCodeWrapper_GenerateCompressedPNGData::Height' has a wrong offset!");
static_assert(offsetof(QRCodeWrapper_GenerateCompressedPNGData, InRawRGBA) == 0x000008, "Member 'QRCodeWrapper_GenerateCompressedPNGData::InRawRGBA' has a wrong offset!");
static_assert(offsetof(QRCodeWrapper_GenerateCompressedPNGData, OutCompressedData) == 0x000018, "Member 'QRCodeWrapper_GenerateCompressedPNGData::OutCompressedData' has a wrong offset!");

// Function QRCodeTool.QRCodeWrapper.GetInstance
// 0x0008 (0x0008 - 0x0000)
struct QRCodeWrapper_GetInstance final
{
public:
	class UQRCodeWrapper*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(QRCodeWrapper_GetInstance) == 0x000008, "Wrong alignment on QRCodeWrapper_GetInstance");
static_assert(sizeof(QRCodeWrapper_GetInstance) == 0x000008, "Wrong size on QRCodeWrapper_GetInstance");
static_assert(offsetof(QRCodeWrapper_GetInstance, ReturnValue) == 0x000000, "Member 'QRCodeWrapper_GetInstance::ReturnValue' has a wrong offset!");

}

