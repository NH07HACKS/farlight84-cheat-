#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BackPack_Drag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Backpack_DragState_structs.hpp"
#include "Solarland_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BackPack_Drag.UI_BackPack_Drag_C
// 0x0048 (0x0650 - 0x0608)
class UUI_BackPack_Drag_C final : public UBackpackEquipIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USolarButton*                           Btn_Touch;                                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_CanAssembly;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_NoAssembly;                                    // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Prohibit;                                      // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Touch;                                         // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_NoAssembly;                                  // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              ProhibitSize;                                      // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Backpack_DragState                          DragState;                                         // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x3];                                      // 0x0649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LineWidth;                                         // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetDragState(E_Backpack_DragState DragState_0);
	void PreConstruct(bool IsDesignTime);
	void SetAssemblyDisplay(bool bAssembly, bool bShow);
	void BndEvt__SolarButton_107_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__SolarButton_107_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void ExecuteUbergraph_UI_BackPack_Drag(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BackPack_Drag_C">();
	}
	static class UUI_BackPack_Drag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BackPack_Drag_C>();
	}
};
static_assert(alignof(UUI_BackPack_Drag_C) == 0x000008, "Wrong alignment on UUI_BackPack_Drag_C");
static_assert(sizeof(UUI_BackPack_Drag_C) == 0x000650, "Wrong size on UUI_BackPack_Drag_C");
static_assert(offsetof(UUI_BackPack_Drag_C, UberGraphFrame) == 0x000608, "Member 'UUI_BackPack_Drag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Btn_Touch) == 0x000610, "Member 'UUI_BackPack_Drag_C::Btn_Touch' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Img_CanAssembly) == 0x000618, "Member 'UUI_BackPack_Drag_C::Img_CanAssembly' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Img_NoAssembly) == 0x000620, "Member 'UUI_BackPack_Drag_C::Img_NoAssembly' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Img_Prohibit) == 0x000628, "Member 'UUI_BackPack_Drag_C::Img_Prohibit' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Img_Touch) == 0x000630, "Member 'UUI_BackPack_Drag_C::Img_Touch' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, Panel_NoAssembly) == 0x000638, "Member 'UUI_BackPack_Drag_C::Panel_NoAssembly' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, ProhibitSize) == 0x000640, "Member 'UUI_BackPack_Drag_C::ProhibitSize' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, DragState) == 0x000648, "Member 'UUI_BackPack_Drag_C::DragState' has a wrong offset!");
static_assert(offsetof(UUI_BackPack_Drag_C, LineWidth) == 0x00064C, "Member 'UUI_BackPack_Drag_C::LineWidth' has a wrong offset!");

}

