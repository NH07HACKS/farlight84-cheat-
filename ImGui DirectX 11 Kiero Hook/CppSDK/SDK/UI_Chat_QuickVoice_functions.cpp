#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Chat_QuickVoice

#include "Basic.hpp"

#include "UI_Chat_QuickVoice_classes.hpp"
#include "UI_Chat_QuickVoice_parameters.hpp"


namespace SDK
{

// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.ExecuteUbergraph_UI_Chat_QuickVoice
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chat_QuickVoice_C::ExecuteUbergraph_UI_Chat_QuickVoice(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "ExecuteUbergraph_UI_Chat_QuickVoice");

	Params::UI_Chat_QuickVoice_C_ExecuteUbergraph_UI_Chat_QuickVoice Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnSwitchChatMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPreviewMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Chat_QuickVoice_C::OnSwitchChatMode(bool bIsPreviewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnSwitchChatMode");

	Params::UI_Chat_QuickVoice_C_OnSwitchChatMode Parms{};

	Parms.bIsPreviewMode = bIsPreviewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chat_QuickVoice_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnListItemObjectSet");

	Params::UI_Chat_QuickVoice_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Chat_QuickVoice_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "BP_OnItemSelectionChanged");

	Params::UI_Chat_QuickVoice_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_Chat_QuickVoice_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "BP_OnItemExpansionChanged");

	Params::UI_Chat_QuickVoice_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UUI_Chat_QuickVoice_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.BP_IsNotSelectableOrNavigable
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UUI_Chat_QuickVoice_C::BP_IsNotSelectableOrNavigable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "BP_IsNotSelectableOrNavigable");

	Params::UI_Chat_QuickVoice_C_BP_IsNotSelectableOrNavigable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnWorldMarkDataSwitchResponse
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FWorldMarkData&            UpdatedWorldMarkData                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIsCancel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUI_Chat_QuickVoice_C::OnWorldMarkDataSwitchResponse(const struct FWorldMarkData& UpdatedWorldMarkData, bool bIsCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnWorldMarkDataSwitchResponse");

	Params::UI_Chat_QuickVoice_C_OnWorldMarkDataSwitchResponse Parms{};

	Parms.UpdatedWorldMarkData = std::move(UpdatedWorldMarkData);
	Parms.bIsCancel = bIsCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnResponseByPlayer
// (Event, Protected, BlueprintEvent)
// Parameters:
// const class FString&                    UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPlayerID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayVoiceType                      VoiceType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SpecialBehaviorUID                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Chat_QuickVoice_C::OnResponseByPlayer(const class FString& UniqueId, const class FString& InPlayerID, EGameplayVoiceType VoiceType, int32 SpecialBehaviorUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnResponseByPlayer");

	Params::UI_Chat_QuickVoice_C_OnResponseByPlayer Parms{};

	Parms.UniqueId = std::move(UniqueId);
	Parms.InPlayerID = std::move(InPlayerID);
	Parms.VoiceType = VoiceType;
	Parms.SpecialBehaviorUID = SpecialBehaviorUID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnItemWorldMarkDataUpdated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FWorldMarkData&            UpdatedWorldMarkData                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UUI_Chat_QuickVoice_C::OnItemWorldMarkDataUpdated(const struct FWorldMarkData& UpdatedWorldMarkData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnItemWorldMarkDataUpdated");

	Params::UI_Chat_QuickVoice_C_OnItemWorldMarkDataUpdated Parms{};

	Parms.UpdatedWorldMarkData = std::move(UpdatedWorldMarkData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.UpdateCanResponse
// (Event, Protected, BlueprintEvent)

void UUI_Chat_QuickVoice_C::UpdateCanResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "UpdateCanResponse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Chat_QuickVoice_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.GetQuickVoiceUniqueID
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          ItemObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUI_Chat_QuickVoice_C::GetQuickVoiceUniqueID(class UObject* ItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "GetQuickVoiceUniqueID");

	Params::UI_Chat_QuickVoice_C_GetQuickVoiceUniqueID Parms{};

	Parms.ItemObject = ItemObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.AddQuickchatContent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FInteractiveQuickChatData& InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FQuickCommunicationInteractionData&InQuickChatResponseData                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Chat_QuickVoice_C::AddQuickchatContent(const struct FInteractiveQuickChatData& InData, const struct FQuickCommunicationInteractionData& InQuickChatResponseData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "AddQuickchatContent");

	Params::UI_Chat_QuickVoice_C_AddQuickchatContent Parms{};

	Parms.InData = std::move(InData);
	Parms.InQuickChatResponseData = std::move(InQuickChatResponseData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.ResponseToAllQuickChat
// (Event, Protected, BlueprintEvent)

void UUI_Chat_QuickVoice_C::ResponseToAllQuickChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "ResponseToAllQuickChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat_QuickVoice.UI_Chat_QuickVoice_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Chat_QuickVoice_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_QuickVoice_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}

}

