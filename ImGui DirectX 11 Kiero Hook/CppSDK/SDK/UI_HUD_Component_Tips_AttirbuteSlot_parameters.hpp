#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Component_Tips_AttirbuteSlot

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Component_Tips_AttirbuteSlot.UI_HUD_Component_Tips_AttirbuteSlot_C.SetUnLock
// 0x0090 (0x0090 - 0x0000)
struct UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock final
{
public:
	ETEUILockState                                InLockState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETEUILockState                                Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETEUILockState                                Temp_byte_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	int32                                         Temp_int_Variable_1;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETEUILockState                                Temp_byte_Variable_5;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock) == 0x000008, "Wrong alignment on UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock");
static_assert(sizeof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock) == 0x000090, "Wrong size on UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, InLockState) == 0x000000, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::InLockState' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable) == 0x000001, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable_1) == 0x000002, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable_2) == 0x000003, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable_3) == 0x000004, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_struct_Variable) == 0x000008, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_struct_Variable_1) == 0x000018, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_struct_Variable_2) == 0x000028, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable_4) == 0x000038, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, K2Node_Select_Default) == 0x00003C, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_int_Variable) == 0x00004C, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_int_Variable_1) == 0x000078, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_int_Variable_2) == 0x00007C, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, Temp_byte_Variable_5) == 0x000080, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, K2Node_Select_Default_1) == 0x000084, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock, K2Node_Select_Default_2) == 0x000088, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetUnLock::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_HUD_Component_Tips_AttirbuteSlot.UI_HUD_Component_Tips_AttirbuteSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct");
static_assert(sizeof(UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Component_Tips_AttirbuteSlot.UI_HUD_Component_Tips_AttirbuteSlot_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Component_Tips_AttirbuteSlot_C_SetState final
{
public:
	ETEUILockState                                InLockState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetState) == 0x000001, "Wrong alignment on UI_HUD_Component_Tips_AttirbuteSlot_C_SetState");
static_assert(sizeof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetState) == 0x000001, "Wrong size on UI_HUD_Component_Tips_AttirbuteSlot_C_SetState");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_SetState, InLockState) == 0x000000, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_SetState::InLockState' has a wrong offset!");

// Function UI_HUD_Component_Tips_AttirbuteSlot.UI_HUD_Component_Tips_AttirbuteSlot_C.ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETEUILockState                                K2Node_Event_InLockState;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot) == 0x000004, "Wrong alignment on UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot");
static_assert(sizeof(UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot) == 0x000008, "Wrong size on UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot, EntryPoint) == 0x000000, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot, K2Node_Event_InLockState) == 0x000005, "Member 'UI_HUD_Component_Tips_AttirbuteSlot_C_ExecuteUbergraph_UI_HUD_Component_Tips_AttirbuteSlot::K2Node_Event_InLockState' has a wrong offset!");

}

