#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LLHSDK

#include "Basic.hpp"

#include "LLHSDK_classes.hpp"
#include "LLHSDK_parameters.hpp"


namespace SDK
{

// Function LLHSDK.LLHSDKAppUtils.BindOnlineSubsystemSteamPresence
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKAppUtils::BindOnlineSubsystemSteamPresence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "BindOnlineSubsystemSteamPresence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKAppUtils.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKAppUtils::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKAppUtils.DismissSteamVirtualKeyboard
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKAppUtils::DismissSteamVirtualKeyboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "DismissSteamVirtualKeyboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKAppUtils.DoesDistributeForDomestic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::DoesDistributeForDomestic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "DoesDistributeForDomestic");

	Params::LLHSDKAppUtils_DoesDistributeForDomestic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetAppID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetAppID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetAppID");

	Params::LLHSDKAppUtils_GetAppID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetAppIDRaw
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetAppIDRaw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetAppIDRaw");

	Params::LLHSDKAppUtils_GetAppIDRaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetAppName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetAppName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetAppName");

	Params::LLHSDKAppUtils_GetAppName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetBiosUUID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetBiosUUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetBiosUUID");

	Params::LLHSDKAppUtils_GetBiosUUID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetChannelID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetChannelID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetChannelID");

	Params::LLHSDKAppUtils_GetChannelID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetCommunityEnvId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsDebug                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetCommunityEnvId(bool bIsDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetCommunityEnvId");

	Params::LLHSDKAppUtils_GetCommunityEnvId Parms{};

	Parms.bIsDebug = bIsDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetDeviceUUID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetDeviceUUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetDeviceUUID");

	Params::LLHSDKAppUtils_GetDeviceUUID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetDistributionChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EDistributionChannel                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDistributionChannel ULLHSDKAppUtils::GetDistributionChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetDistributionChannel");

	Params::LLHSDKAppUtils_GetDistributionChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetEnvId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetEnvId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetEnvId");

	Params::LLHSDKAppUtils_GetEnvId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetGameID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetGameID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetGameID");

	Params::LLHSDKAppUtils_GetGameID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetGameTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 ULLHSDKAppUtils::GetGameTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetGameTime");

	Params::LLHSDKAppUtils_GetGameTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKAppUtils*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKAppUtils* ULLHSDKAppUtils::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetInstance");

	Params::LLHSDKAppUtils_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetOperatingSystemId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetOperatingSystemId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetOperatingSystemId");

	Params::LLHSDKAppUtils_GetOperatingSystemId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetPSPAppID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetPSPAppID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetPSPAppID");

	Params::LLHSDKAppUtils_GetPSPAppID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetRunningProcessName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetRunningProcessName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetRunningProcessName");

	Params::LLHSDKAppUtils_GetRunningProcessName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSDKAppId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetSDKAppId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSDKAppId");

	Params::LLHSDKAppUtils_GetSDKAppId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSDKVersionCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetSDKVersionCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSDKVersionCode");

	Params::LLHSDKAppUtils_GetSDKVersionCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSDKVersionName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetSDKVersionName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSDKVersionName");

	Params::LLHSDKAppUtils_GetSDKVersionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamFriendCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKAppUtils::GetSteamFriendCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamFriendCount");

	Params::LLHSDKAppUtils_GetSteamFriendCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamFriendIDList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> ULLHSDKAppUtils::GetSteamFriendIDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamFriendIDList");

	Params::LLHSDKAppUtils_GetSteamFriendIDList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamFriendName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SteamId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetSteamFriendName(const class FString& SteamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamFriendName");

	Params::LLHSDKAppUtils_GetSteamFriendName Parms{};

	Parms.SteamId = std::move(SteamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamFriendsNameList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> ULLHSDKAppUtils::GetSteamFriendsNameList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamFriendsNameList");

	Params::LLHSDKAppUtils_GetSteamFriendsNameList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamFriendsOnlineList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<bool> ULLHSDKAppUtils::GetSteamFriendsOnlineList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamFriendsOnlineList");

	Params::LLHSDKAppUtils_GetSteamFriendsOnlineList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetSteamID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetSteamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetSteamID");

	Params::LLHSDKAppUtils_GetSteamID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetVersionCode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetVersionCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetVersionCode");

	Params::LLHSDKAppUtils_GetVersionCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.GetVersionName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKAppUtils::GetVersionName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "GetVersionName");

	Params::LLHSDKAppUtils_GetVersionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.InviteSteamUserToGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SteamId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::InviteSteamUserToGame(const class FString& SteamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "InviteSteamUserToGame");

	Params::LLHSDKAppUtils_InviteSteamUserToGame Parms{};

	Parms.SteamId = std::move(SteamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsEarlyRelease
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsEarlyRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsEarlyRelease");

	Params::LLHSDKAppUtils_IsEarlyRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsGrayRelease
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsGrayRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsGrayRelease");

	Params::LLHSDKAppUtils_IsGrayRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsNewCheckoutCounter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsNewCheckoutCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsNewCheckoutCounter");

	Params::LLHSDKAppUtils_IsNewCheckoutCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsPackageInstalled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPackageName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsPackageInstalled(const class FString& InPackageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsPackageInstalled");

	Params::LLHSDKAppUtils_IsPackageInstalled Parms{};

	Parms.InPackageName = std::move(InPackageName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsPlatformSteamDeck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsPlatformSteamDeck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsPlatformSteamDeck");

	Params::LLHSDKAppUtils_IsPlatformSteamDeck Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsSimulator
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsSimulator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsSimulator");

	Params::LLHSDKAppUtils_IsSimulator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.IsSteamFriendOnline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SteamId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::IsSteamFriendOnline(const class FString& SteamId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "IsSteamFriendOnline");

	Params::LLHSDKAppUtils_IsSteamFriendOnline Parms{};

	Parms.SteamId = std::move(SteamId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.SDKConfigIsDebug
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::SDKConfigIsDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "SDKConfigIsDebug");

	Params::LLHSDKAppUtils_SDKConfigIsDebug Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.SDKConfigIsMultiDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::SDKConfigIsMultiDetect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "SDKConfigIsMultiDetect");

	Params::LLHSDKAppUtils_SDKConfigIsMultiDetect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.ShowSteamVirtualKeyboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::ShowSteamVirtualKeyboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "ShowSteamVirtualKeyboard");

	Params::LLHSDKAppUtils_ShowSteamVirtualKeyboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKAppUtils.SupportBothArmAndX86
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKAppUtils::SupportBothArmAndX86()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKAppUtils", "SupportBothArmAndX86");

	Params::LLHSDKAppUtils_SupportBothArmAndX86 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKCommunity.ClearCommunityRedHint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ReqMethod                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExtraHttpParams                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::ClearCommunityRedHint(const class FString& URL, const class FString& ReqMethod, const class FString& ExtraHttpParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "ClearCommunityRedHint");

	Params::LLHSDKCommunity_ClearCommunityRedHint Parms{};

	Parms.URL = std::move(URL);
	Parms.ReqMethod = std::move(ReqMethod);
	Parms.ExtraHttpParams = std::move(ExtraHttpParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.CommunitySendBindResult
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCommunity::CommunitySendBindResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "CommunitySendBindResult");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCommunity::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.DownloadImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::DownloadImage(const class FString& URL, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "DownloadImage");

	Params::LLHSDKCommunity_DownloadImage Parms{};

	Parms.URL = std::move(URL);
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.ExitCommunity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ReqMethod                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExtraHttpParams                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::ExitCommunity(const class FString& URL, const class FString& ReqMethod, const class FString& ExtraHttpParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "ExitCommunity");

	Params::LLHSDKCommunity_ExitCommunity Parms{};

	Parms.URL = std::move(URL);
	Parms.ReqMethod = std::move(ReqMethod);
	Parms.ExtraHttpParams = std::move(ExtraHttpParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.GetCommunityRedHint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ReqMethod                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExtraHttpParams                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::GetCommunityRedHint(const class FString& URL, const class FString& ReqMethod, const class FString& ExtraHttpParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "GetCommunityRedHint");

	Params::LLHSDKCommunity_GetCommunityRedHint Parms{};

	Parms.URL = std::move(URL);
	Parms.ReqMethod = std::move(ReqMethod);
	Parms.ExtraHttpParams = std::move(ExtraHttpParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKCommunity*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKCommunity* ULLHSDKCommunity::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "GetInstance");

	Params::LLHSDKCommunity_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKCommunity.HideCommunity
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCommunity::HideCommunity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "HideCommunity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.InitCommunityConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    UrlInfo                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ReqMethod                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ExtraHttpParams                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::InitCommunityConfig(const class FString& UrlInfo, const class FString& ReqMethod, const class FString& ExtraHttpParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "InitCommunityConfig");

	Params::LLHSDKCommunity_InitCommunityConfig Parms{};

	Parms.UrlInfo = std::move(UrlInfo);
	Parms.ReqMethod = std::move(ReqMethod);
	Parms.ExtraHttpParams = std::move(ExtraHttpParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.LoginCommunity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InLoginParamsJsonStr                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::LoginCommunity(const class FString& InLoginParamsJsonStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "LoginCommunity");

	Params::LLHSDKCommunity_LoginCommunity Parms{};

	Parms.InLoginParamsJsonStr = std::move(InLoginParamsJsonStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCommunity.ShowCommunity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InExtraInfo                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ELLHForumSDKOrientationMode       InOrientationMode                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCommunity::ShowCommunity(const class FString& InUrl, const class FString& InExtraInfo, const ELLHForumSDKOrientationMode InOrientationMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCommunity", "ShowCommunity");

	Params::LLHSDKCommunity_ShowCommunity Parms{};

	Parms.InUrl = std::move(InUrl);
	Parms.InExtraInfo = std::move(InExtraInfo);
	Parms.InOrientationMode = InOrientationMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKCustomerService*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKCustomerService* ULLHSDKCustomerService::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "GetInstance");

	Params::LLHSDKCustomerService_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKCustomerService.PSPAccountCloseUrlGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::PSPAccountCloseUrlGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPAccountCloseUrlGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.PSPBadgeGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::PSPBadgeGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPBadgeGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.PSPBadgeGuestGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::PSPBadgeGuestGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPBadgeGuestGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.PSPConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCustomerService::PSPConfig(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPConfig");

	Params::LLHSDKCustomerService_PSPConfig Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.PSPUrlGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::PSPUrlGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPUrlGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.PSPUrlGuestGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKCustomerService::PSPUrlGuestGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "PSPUrlGuestGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.SetCustomerServiceDebug
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bIsPspDebug                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCustomerService::SetCustomerServiceDebug(const bool bIsPspDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "SetCustomerServiceDebug");

	Params::LLHSDKCustomerService_SetCustomerServiceDebug Parms{};

	Parms.bIsPspDebug = bIsPspDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKCustomerService.ShowCustomerServicePage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ExtInfoStr                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKCustomerService::ShowCustomerServicePage(const class FString& ExtInfoStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKCustomerService", "ShowCustomerServicePage");

	Params::LLHSDKCustomerService_ShowCustomerServicePage Parms{};

	Parms.ExtInfoStr = std::move(ExtInfoStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKDeviceUtils.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKDeviceUtils::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetAdID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetAdID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetAdID");

	Params::LLHSDKDeviceUtils_GetAdID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetAndroidID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetAndroidID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetAndroidID");

	Params::LLHSDKDeviceUtils_GetAndroidID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetAvailableRAM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetAvailableRAM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetAvailableRAM");

	Params::LLHSDKDeviceUtils_GetAvailableRAM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetCPUHardWareName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetCPUHardWareName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetCPUHardWareName");

	Params::LLHSDKDeviceUtils_GetCPUHardWareName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetCPUModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetCPUModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetCPUModel");

	Params::LLHSDKDeviceUtils_GetCPUModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceAbi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceAbi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceAbi");

	Params::LLHSDKDeviceUtils_GetDeviceAbi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceBrand
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceBrand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceBrand");

	Params::LLHSDKDeviceUtils_GetDeviceBrand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceCarrier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceCarrier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceCarrier");

	Params::LLHSDKDeviceUtils_GetDeviceCarrier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceID");

	Params::LLHSDKDeviceUtils_GetDeviceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceModel");

	Params::LLHSDKDeviceUtils_GetDeviceModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceScore
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKDeviceUtils::GetDeviceScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDeviceType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetDeviceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDeviceType");

	Params::LLHSDKDeviceUtils_GetDeviceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDisplayCutout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<float> ULLHSDKDeviceUtils::GetDisplayCutout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDisplayCutout");

	Params::LLHSDKDeviceUtils_GetDisplayCutout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetDisplayMetrics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<float> ULLHSDKDeviceUtils::GetDisplayMetrics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetDisplayMetrics");

	Params::LLHSDKDeviceUtils_GetDisplayMetrics Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetGoogleAdID
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKDeviceUtils::GetGoogleAdID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetGoogleAdID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetIDFA
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetIDFA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetIDFA");

	Params::LLHSDKDeviceUtils_GetIDFA Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetIMSI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetIMSI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetIMSI");

	Params::LLHSDKDeviceUtils_GetIMSI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKDeviceUtils*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKDeviceUtils* ULLHSDKDeviceUtils::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetInstance");

	Params::LLHSDKDeviceUtils_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetLogicalPackageName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetLogicalPackageName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetLogicalPackageName");

	Params::LLHSDKDeviceUtils_GetLogicalPackageName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetMacAddress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetMacAddress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetMacAddress");

	Params::LLHSDKDeviceUtils_GetMacAddress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetNetworkType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetNetworkType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetNetworkType");

	Params::LLHSDKDeviceUtils_GetNetworkType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetNetworkTypeEnum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELLHSDKNetworkType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELLHSDKNetworkType ULLHSDKDeviceUtils::GetNetworkTypeEnum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetNetworkTypeEnum");

	Params::LLHSDKDeviceUtils_GetNetworkTypeEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetOSVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetOSVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetOSVersion");

	Params::LLHSDKDeviceUtils_GetOSVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetSerialNumber
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetSerialNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetSerialNumber");

	Params::LLHSDKDeviceUtils_GetSerialNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetTimezoneName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetTimezoneName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetTimezoneName");

	Params::LLHSDKDeviceUtils_GetTimezoneName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetTotalMemorySize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetTotalMemorySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetTotalMemorySize");

	Params::LLHSDKDeviceUtils_GetTotalMemorySize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.GetTotalRAM
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKDeviceUtils::GetTotalRAM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "GetTotalRAM");

	Params::LLHSDKDeviceUtils_GetTotalRAM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKDeviceUtils.IsEmulator
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKDeviceUtils::IsEmulator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKDeviceUtils", "IsEmulator");

	Params::LLHSDKDeviceUtils_IsEmulator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLocalization.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLocalization::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLocalization.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKLocalization*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKLocalization* ULLHSDKLocalization::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "GetInstance");

	Params::LLHSDKLocalization_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLocalization.GetLocaleEnum
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELLHSDKSupportedLanguage                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELLHSDKSupportedLanguage ULLHSDKLocalization::GetLocaleEnum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "GetLocaleEnum");

	Params::LLHSDKLocalization_GetLocaleEnum Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLocalization.GetLocaleInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FLLHSDKLocaleInfo                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLLHSDKLocaleInfo ULLHSDKLocalization::GetLocaleInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "GetLocaleInfo");

	Params::LLHSDKLocalization_GetLocaleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLocalization.GetLocaleName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKLocalization::GetLocaleName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "GetLocaleName");

	Params::LLHSDKLocalization_GetLocaleName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLocalization.SetLocale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ELLHSDKSupportedLanguage                InLocale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLocalization::SetLocale(ELLHSDKSupportedLanguage InLocale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "SetLocale");

	Params::LLHSDKLocalization_SetLocale Parms{};

	Parms.InLocale = InLocale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLocalization.SetLocaleName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InLocale                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLocalization::SetLocaleName(const class FString& InLocale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLocalization", "SetLocaleName");

	Params::LLHSDKLocalization_SetLocaleName Parms{};

	Parms.InLocale = std::move(InLocale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.CancelSteamCallBack
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::CancelSteamCallBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "CancelSteamCallBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.CanContinueLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::CanContinueLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "CanContinueLogin");

	Params::LLHSDKLogin_CanContinueLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.ChangeLIMPCLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::ChangeLIMPCLanguage(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ChangeLIMPCLanguage");

	Params::LLHSDKLogin_ChangeLIMPCLanguage Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.ClearAutoLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::ClearAutoLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ClearAutoLogin");

	Params::LLHSDKLogin_ClearAutoLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.DoSteamBind
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::DoSteamBind(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "DoSteamBind");

	Params::LLHSDKLogin_DoSteamBind Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.FreeLimPCSDK
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::FreeLimPCSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "FreeLimPCSDK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKLogin*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKLogin* ULLHSDKLogin::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "GetInstance");

	Params::LLHSDKLogin_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.GetLimPCUserInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::GetLimPCUserInfo(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "GetLimPCUserInfo");

	Params::LLHSDKLogin_GetLimPCUserInfo Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.GetSteamRegisterUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::GetSteamRegisterUrl(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "GetSteamRegisterUrl");

	Params::LLHSDKLogin_GetSteamRegisterUrl Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.GetSteamToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKLogin::GetSteamToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "GetSteamToken");

	Params::LLHSDKLogin_GetSteamToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.InitLimPCSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::InitLimPCSDK(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "InitLimPCSDK");

	Params::LLHSDKLogin_InitLimPCSDK Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.InitLimSteamSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::InitLimSteamSDK(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "InitLimSteamSDK");

	Params::LLHSDKLogin_InitLimSteamSDK Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.InitNSSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::InitNSSDK(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "InitNSSDK");

	Params::LLHSDKLogin_InitNSSDK Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.IsCurrentUserNewReg
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::IsCurrentUserNewReg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "IsCurrentUserNewReg");

	Params::LLHSDKLogin_IsCurrentUserNewReg Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.IsInitFinish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::IsInitFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "IsInitFinish");

	Params::LLHSDKLogin_IsInitFinish Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.Login
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::Login()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "Login");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.LoginLimPCSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::LoginLimPCSDK(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "LoginLimPCSDK");

	Params::LLHSDKLogin_LoginLimPCSDK Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.LoginUser_ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLLHSDKLoginUser&          InUser                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKLogin::LoginUser_ToString(const struct FLLHSDKLoginUser& InUser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "LoginUser_ToString");

	Params::LLHSDKLogin_LoginUser_ToString Parms{};

	Parms.InUser = std::move(InUser);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.LoginUserInfo_ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FLLHSDKLoginUserInfo&      InUserInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKLogin::LoginUserInfo_ToString(const struct FLLHSDKLoginUserInfo& InUserInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "LoginUserInfo_ToString");

	Params::LLHSDKLogin_LoginUserInfo_ToString Parms{};

	Parms.InUserInfo = std::move(InUserInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.LogOut
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::LogOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "LogOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.LogoutLimPCSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::LogoutLimPCSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "LogoutLimPCSDK");

	Params::LLHSDKLogin_LogoutLimPCSDK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.MobileSDKInit
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::MobileSDKInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "MobileSDKInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.NSAccountInfoGet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::NSAccountInfoGet(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "NSAccountInfoGet");

	Params::LLHSDKLogin_NSAccountInfoGet Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.NSFinalize
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::NSFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "NSFinalize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.NSLoginStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::NSLoginStart(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "NSLoginStart");

	Params::LLHSDKLogin_NSLoginStart Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.NSLogout
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::NSLogout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "NSLogout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.OpenLIMPCAccountPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::OpenLIMPCAccountPage(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "OpenLIMPCAccountPage");

	Params::LLHSDKLogin_OpenLIMPCAccountPage Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.OpenLIMPCSwitchAccPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::OpenLIMPCSwitchAccPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "OpenLIMPCSwitchAccPage");

	Params::LLHSDKLogin_OpenLIMPCSwitchAccPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.OpenSteamBindPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::OpenSteamBindPage(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "OpenSteamBindPage");

	Params::LLHSDKLogin_OpenSteamBindPage Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.QueryCurrentUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FLLHSDKLoginUser                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLLHSDKLoginUser ULLHSDKLogin::QueryCurrentUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "QueryCurrentUser");

	Params::LLHSDKLogin_QueryCurrentUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.QueryCurrentUserInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FLLHSDKLoginUserInfo             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLLHSDKLoginUserInfo ULLHSDKLogin::QueryCurrentUserInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "QueryCurrentUserInfo");

	Params::LLHSDKLogin_QueryCurrentUserInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SetLimPCSDKEventHandler
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::SetLimPCSDKEventHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SetLimPCSDKEventHandler");

	Params::LLHSDKLogin_SetLimPCSDKEventHandler Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SetLimPCSDKLogHandler
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKLogin::SetLimPCSDKLogHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SetLimPCSDKLogHandler");

	Params::LLHSDKLogin_SetLimPCSDKLogHandler Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SetShowCustomDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLogin::SetShowCustomDialog(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SetShowCustomDialog");

	Params::LLHSDKLogin_SetShowCustomDialog Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.ShowProtocolViewV2Confirm
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::ShowProtocolViewV2Confirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ShowProtocolViewV2Confirm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.ShowProtocolViewV2Ok
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::ShowProtocolViewV2Ok()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ShowProtocolViewV2Ok");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.ShowSwitchView
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::ShowSwitchView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ShowSwitchView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.ShowSystemToast
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Content                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const int32                             Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const float                             Alpha                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLogin::ShowSystemToast(const class FString& Content, const int32 Duration, const float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "ShowSystemToast");

	Params::LLHSDKLogin_ShowSystemToast Parms{};

	Parms.Content = std::move(Content);
	Parms.Duration = Duration;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.StartBindPhone
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::StartBindPhone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "StartBindPhone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamAntiAddHeartbeat
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamAntiAddHeartbeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamAntiAddHeartbeat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamAntiAddHeartbeatCheck
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamAntiAddHeartbeatCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamAntiAddHeartbeatCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamAutoLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::SteamAutoLogin(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamAutoLogin");

	Params::LLHSDKLogin_SteamAutoLogin Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SteamBindUrlGet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::SteamBindUrlGet(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamBindUrlGet");

	Params::LLHSDKLogin_SteamBindUrlGet Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SteamEULACheck
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamEULACheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamEULACheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamEulaConfirm
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLogin::SteamEulaConfirm(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamEulaConfirm");

	Params::LLHSDKLogin_SteamEulaConfirm Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamEULAUrlGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamEULAUrlGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamEULAUrlGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamFree
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamFree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamGetAccountInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::SteamGetAccountInfo(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamGetAccountInfo");

	Params::LLHSDKLogin_SteamGetAccountInfo Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SteamLoginResultSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::SteamLoginResultSet(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamLoginResultSet");

	Params::LLHSDKLogin_SteamLoginResultSet Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SteamRealNameCheck
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamRealNameCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamRealNameCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamRealNameResultSet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKLogin::SteamRealNameResultSet(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamRealNameResultSet");

	Params::LLHSDKLogin_SteamRealNameResultSet Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamRealNameUrlGet
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SteamRealNameUrlGet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamRealNameUrlGet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.SteamRegister
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKLogin::SteamRegister(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SteamRegister");

	Params::LLHSDKLogin_SteamRegister Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKLogin.SwitchOrLinkAccount
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::SwitchOrLinkAccount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "SwitchOrLinkAccount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKLogin.UpdateSteamCallBack
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKLogin::UpdateSteamCallBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKLogin", "UpdateSteamCallBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.BrocastApkDownloadErrorEventOnGameThread
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Error                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::BrocastApkDownloadErrorEventOnGameThread(const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "BrocastApkDownloadErrorEventOnGameThread");

	Params::LLHSDKMisc_BrocastApkDownloadErrorEventOnGameThread Parms{};

	Parms.Error = std::move(Error);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.BrocastApkDownloadFinishEventOnGameThread
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::BrocastApkDownloadFinishEventOnGameThread()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "BrocastApkDownloadFinishEventOnGameThread");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.BrocastApkDownloadingEventOnGameThread
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   TotalSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DownloadedSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::BrocastApkDownloadingEventOnGameThread(int32 TotalSize, int32 DownloadedSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "BrocastApkDownloadingEventOnGameThread");

	Params::LLHSDKMisc_BrocastApkDownloadingEventOnGameThread Parms{};

	Parms.TotalSize = TotalSize;
	Parms.DownloadedSize = DownloadedSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.BrocastWifiStateChangedEventOnGameThread
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bWifiEnabled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::BrocastWifiStateChangedEventOnGameThread(bool bWifiEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "BrocastWifiStateChangedEventOnGameThread");

	Params::LLHSDKMisc_BrocastWifiStateChangedEventOnGameThread Parms{};

	Parms.bWifiEnabled = bWifiEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.CheckGyroSensorSupport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::CheckGyroSensorSupport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "CheckGyroSensorSupport");

	Params::LLHSDKMisc_CheckGyroSensorSupport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.ClearDeepLinkParams
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::ClearDeepLinkParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ClearDeepLinkParams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.CloseLimPCWebPageAll
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::CloseLimPCWebPageAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "CloseLimPCWebPageAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.DnsDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InServer                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InDomain                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::DnsDetect(const class FString& InServer, const class FString& InDomain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "DnsDetect");

	Params::LLHSDKMisc_DnsDetect Parms{};

	Parms.InServer = std::move(InServer);
	Parms.InDomain = std::move(InDomain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ExecuteLimPCNetworkDiagnosis
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::ExecuteLimPCNetworkDiagnosis(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ExecuteLimPCNetworkDiagnosis");

	Params::LLHSDKMisc_ExecuteLimPCNetworkDiagnosis Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.FacebookShareLink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InLinkURL                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InPreviewURL                                           (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InTitle                                                (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InDesc                                                 (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::FacebookShareLink(const class FString& InLinkURL, const class FString& InPreviewURL, const class FString& InTitle, const class FString& InDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "FacebookShareLink");

	Params::LLHSDKMisc_FacebookShareLink Parms{};

	Parms.InLinkURL = std::move(InLinkURL);
	Parms.InPreviewURL = std::move(InPreviewURL);
	Parms.InTitle = std::move(InTitle);
	Parms.InDesc = std::move(InDesc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.FacebookSharePhoto
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::FacebookSharePhoto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "FacebookSharePhoto");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.FacebookSharePhotoByPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::FacebookSharePhotoByPath(const class FString& InFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "FacebookSharePhotoByPath");

	Params::LLHSDKMisc_FacebookSharePhotoByPath Parms{};

	Parms.InFilePath = std::move(InFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.FacebookSharePhotoWithFileAndDescription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Description                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::FacebookSharePhotoWithFileAndDescription(const class FString& Description, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "FacebookSharePhotoWithFileAndDescription");

	Params::LLHSDKMisc_FacebookSharePhotoWithFileAndDescription Parms{};

	Parms.Description = std::move(Description);
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.FreeLimPCNetworkDiagnosis
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::FreeLimPCNetworkDiagnosis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "FreeLimPCNetworkDiagnosis");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.GetAndroidAPILevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKMisc::GetAndroidAPILevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetAndroidAPILevel");

	Params::LLHSDKMisc_GetAndroidAPILevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetChannelIdOfThirdPartyChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetChannelIdOfThirdPartyChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetChannelIdOfThirdPartyChannel");

	Params::LLHSDKMisc_GetChannelIdOfThirdPartyChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetChannelName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetChannelName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetChannelName");

	Params::LLHSDKMisc_GetChannelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetDapInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetDapInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetDapInfo");

	Params::LLHSDKMisc_GetDapInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetDeepLinkParams
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetDeepLinkParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetDeepLinkParams");

	Params::LLHSDKMisc_GetDeepLinkParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetFacebookToken
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::GetFacebookToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetFacebookToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.GetFirebaseMessagingToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetFirebaseMessagingToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetFirebaseMessagingToken");

	Params::LLHSDKMisc_GetFirebaseMessagingToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetForceUpdateUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Version                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetForceUpdateUrl(const class FString& Version)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetForceUpdateUrl");

	Params::LLHSDKMisc_GetForceUpdateUrl Parms{};

	Parms.Version = std::move(Version);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKMisc*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKMisc* ULLHSDKMisc::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetInstance");

	Params::LLHSDKMisc_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetJiguangMessagingToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetJiguangMessagingToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetJiguangMessagingToken");

	Params::LLHSDKMisc_GetJiguangMessagingToken Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetLimPCPluginsDir
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetLimPCPluginsDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetLimPCPluginsDir");

	Params::LLHSDKMisc_GetLimPCPluginsDir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetNetworkDiagnosisDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetNetworkDiagnosisDeviceID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetNetworkDiagnosisDeviceID");

	Params::LLHSDKMisc_GetNetworkDiagnosisDeviceID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetTypeOfThirdPartyChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKMisc::GetTypeOfThirdPartyChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetTypeOfThirdPartyChannel");

	Params::LLHSDKMisc_GetTypeOfThirdPartyChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.GetUniSDKVersionOfThirdPartyChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKMisc::GetUniSDKVersionOfThirdPartyChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "GetUniSDKVersionOfThirdPartyChannel");

	Params::LLHSDKMisc_GetUniSDKVersionOfThirdPartyChannel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.HttpDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::HttpDetect(const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "HttpDetect");

	Params::LLHSDKMisc_HttpDetect Parms{};

	Parms.InUrl = std::move(InUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.InitLimPCNetworkDiagnosis
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::InitLimPCNetworkDiagnosis(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "InitLimPCNetworkDiagnosis");

	Params::LLHSDKMisc_InitLimPCNetworkDiagnosis Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.InitNetworkDiagnosis
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InProject                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InSecretKey                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InEndPoint                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InAccessKeyId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InAccessKeySecret                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InUid                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InChannel                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::InitNetworkDiagnosis(const class FString& InProject, const class FString& InSecretKey, const class FString& InEndPoint, const class FString& InAccessKeyId, const class FString& InAccessKeySecret, const class FString& InUid, const class FString& InChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "InitNetworkDiagnosis");

	Params::LLHSDKMisc_InitNetworkDiagnosis Parms{};

	Parms.InProject = std::move(InProject);
	Parms.InSecretKey = std::move(InSecretKey);
	Parms.InEndPoint = std::move(InEndPoint);
	Parms.InAccessKeyId = std::move(InAccessKeyId);
	Parms.InAccessKeySecret = std::move(InAccessKeySecret);
	Parms.InUid = std::move(InUid);
	Parms.InChannel = std::move(InChannel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.InitWeibo
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::InitWeibo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "InitWeibo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.IsAndroidNotificationEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsAndroidNotificationEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsAndroidNotificationEnabled");

	Params::LLHSDKMisc_IsAndroidNotificationEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsAppRooted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsAppRooted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsAppRooted");

	Params::LLHSDKMisc_IsAppRooted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsEnableIPAPCSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsEnableIPAPCSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsEnableIPAPCSDK");

	Params::LLHSDKMisc_IsEnableIPAPCSDK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsFacebookShareable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsFacebookShareable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsFacebookShareable");

	Params::LLHSDKMisc_IsFacebookShareable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsInstallSocialApp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ELLHSDKSocialPlatform             SocialPlatform                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsInstallSocialApp(const ELLHSDKSocialPlatform SocialPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsInstallSocialApp");

	Params::LLHSDKMisc_IsInstallSocialApp Parms{};

	Parms.SocialPlatform = SocialPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsUsedPCSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsUsedPCSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsUsedPCSDK");

	Params::LLHSDKMisc_IsUsedPCSDK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.IsUsedSteamSDK
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKMisc::IsUsedSteamSDK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "IsUsedSteamSDK");

	Params::LLHSDKMisc_IsUsedSteamSDK Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKMisc.JumpToAppStore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    AppStoreUrl                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::JumpToAppStore(const class FString& AppStoreUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "JumpToAppStore");

	Params::LLHSDKMisc_JumpToAppStore Parms{};

	Parms.AppStoreUrl = std::move(AppStoreUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.JumpToMarket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InAppPkg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMarketPkg                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::JumpToMarket(const class FString& InAppPkg, const class FString& InMarketPkg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "JumpToMarket");

	Params::LLHSDKMisc_JumpToMarket Parms{};

	Parms.InAppPkg = std::move(InAppPkg);
	Parms.InMarketPkg = std::move(InMarketPkg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.MtrDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDomain                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::MtrDetect(const class FString& InDomain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "MtrDetect");

	Params::LLHSDKMisc_MtrDetect Parms{};

	Parms.InDomain = std::move(InDomain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.OpenAppSettingPage
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::OpenAppSettingPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "OpenAppSettingPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.OpenLimPCPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::OpenLimPCPage(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "OpenLimPCPage");

	Params::LLHSDKMisc_OpenLimPCPage Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.OpenLimPCWebPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::OpenLimPCWebPage(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "OpenLimPCWebPage");

	Params::LLHSDKMisc_OpenLimPCWebPage Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.OpenSteamPayWebPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::OpenSteamPayWebPage(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "OpenSteamPayWebPage");

	Params::LLHSDKMisc_OpenSteamPayWebPage Parms{};

	Parms.URL = std::move(URL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.PickFileFromAlbum
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::PickFileFromAlbum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "PickFileFromAlbum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.PingDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDomain                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::PingDetect(const class FString& InDomain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "PingDetect");

	Params::LLHSDKMisc_PingDetect Parms{};

	Parms.InDomain = std::move(InDomain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.QQShareDefault
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    TargetUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Summary                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ImageUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BackAppName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ExtInt                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::QQShareDefault(const class FString& TargetUrl, const class FString& Title, const class FString& Summary, const class FString& ImageUrl, const class FString& BackAppName, int32 ExtInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "QQShareDefault");

	Params::LLHSDKMisc_QQShareDefault Parms{};

	Parms.TargetUrl = std::move(TargetUrl);
	Parms.Title = std::move(Title);
	Parms.Summary = std::move(Summary);
	Parms.ImageUrl = std::move(ImageUrl);
	Parms.BackAppName = std::move(BackAppName);
	Parms.ExtInt = ExtInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.QQSharePhoto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    LocalUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    BackAppName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ExtInt                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::QQSharePhoto(const class FString& LocalUrl, const class FString& BackAppName, int32 ExtInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "QQSharePhoto");

	Params::LLHSDKMisc_QQSharePhoto Parms{};

	Parms.LocalUrl = std::move(LocalUrl);
	Parms.BackAppName = std::move(BackAppName);
	Parms.ExtInt = ExtInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.QueryThirdPartUserInfo
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::QueryThirdPartUserInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "QueryThirdPartUserInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.RefreshAndroidMediaScanner
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFullFilePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::RefreshAndroidMediaScanner(const class FString& InFullFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "RefreshAndroidMediaScanner");

	Params::LLHSDKMisc_RefreshAndroidMediaScanner Parms{};

	Parms.InFullFilePath = std::move(InFullFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.RefreshFirebaseMessagingToken
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::RefreshFirebaseMessagingToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "RefreshFirebaseMessagingToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.RefreshJiguangMessagingToken
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::RefreshJiguangMessagingToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "RefreshJiguangMessagingToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.RequestReviewInApp
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::RequestReviewInApp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "RequestReviewInApp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.RestartApplication
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    IntentString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::RestartApplication(const class FString& IntentString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "RestartApplication");

	Params::LLHSDKMisc_RestartApplication Parms{};

	Parms.IntentString = std::move(IntentString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.SetNetworkDiagnosisDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDeviceID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::SetNetworkDiagnosisDeviceID(const class FString& InDeviceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "SetNetworkDiagnosisDeviceID");

	Params::LLHSDKMisc_SetNetworkDiagnosisDeviceID Parms{};

	Parms.InDeviceID = std::move(InDeviceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.SetNetworkMultipleDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::SetNetworkMultipleDetect(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "SetNetworkMultipleDetect");

	Params::LLHSDKMisc_SetNetworkMultipleDetect Parms{};

	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.SetNetworkPolicyDomain
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDomain                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::SetNetworkPolicyDomain(const class FString& InDomain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "SetNetworkPolicyDomain");

	Params::LLHSDKMisc_SetNetworkPolicyDomain Parms{};

	Parms.InDomain = std::move(InDomain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ShowAccountVerification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const ELLHSDKAccountVerificationType    InAccountVerificationType                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InAccountVerificationParams                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::ShowAccountVerification(const ELLHSDKAccountVerificationType InAccountVerificationType, const class FString& InAccountVerificationParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ShowAccountVerification");

	Params::LLHSDKMisc_ShowAccountVerification Parms{};

	Parms.InAccountVerificationType = InAccountVerificationType;
	Parms.InAccountVerificationParams = std::move(InAccountVerificationParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ShowCollegeVerification
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::ShowCollegeVerification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ShowCollegeVerification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ShowCommonWebView
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InJsonParamsStr                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::ShowCommonWebView(const class FString& InJsonParamsStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ShowCommonWebView");

	Params::LLHSDKMisc_ShowCommonWebView Parms{};

	Parms.InJsonParamsStr = std::move(InJsonParamsStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ShowPersonalInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            InParams                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::ShowPersonalInfo(const TArray<class FString>& InParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ShowPersonalInfo");

	Params::LLHSDKMisc_ShowPersonalInfo Parms{};

	Parms.InParams = std::move(InParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ShowThirdShareInfo
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::ShowThirdShareInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ShowThirdShareInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartBrowser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::StartBrowser(const class FString& URL, const class FString& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartBrowser");

	Params::LLHSDKMisc_StartBrowser Parms{};

	Parms.URL = std::move(URL);
	Parms.Title = std::move(Title);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartBrowserWithOrientation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELLHSDKScreenOrientation                Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::StartBrowserWithOrientation(const class FString& URL, const class FString& Title, ELLHSDKScreenOrientation Orientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartBrowserWithOrientation");

	Params::LLHSDKMisc_StartBrowserWithOrientation Parms{};

	Parms.URL = std::move(URL);
	Parms.Title = std::move(Title);
	Parms.Orientation = Orientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartDownloadApk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ApkName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ApkMD5                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutoInstall                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSupportBreakDownload                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::StartDownloadApk(const class FString& URL, const class FString& ApkName, const class FString& ApkMD5, bool bAutoInstall, bool bSupportBreakDownload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartDownloadApk");

	Params::LLHSDKMisc_StartDownloadApk Parms{};

	Parms.URL = std::move(URL);
	Parms.ApkName = std::move(ApkName);
	Parms.ApkMD5 = std::move(ApkMD5);
	Parms.bAutoInstall = bAutoInstall;
	Parms.bSupportBreakDownload = bSupportBreakDownload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartIOSFarlightBrowserWithOrientation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELLHSDKScreenOrientation                Orientation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::StartIOSFarlightBrowserWithOrientation(const class FString& URL, const class FString& Title, ELLHSDKScreenOrientation Orientation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartIOSFarlightBrowserWithOrientation");

	Params::LLHSDKMisc_StartIOSFarlightBrowserWithOrientation Parms{};

	Parms.URL = std::move(URL);
	Parms.Title = std::move(Title);
	Parms.Orientation = Orientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartMiniProgram
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InMiniProgramId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMiniProgramPath                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InExt                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InVersion                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::StartMiniProgram(const class FString& InMiniProgramId, const class FString& InMiniProgramPath, const class FString& InExt, const class FString& InVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartMiniProgram");

	Params::LLHSDKMisc_StartMiniProgram Parms{};

	Parms.InMiniProgramId = std::move(InMiniProgramId);
	Parms.InMiniProgramPath = std::move(InMiniProgramPath);
	Parms.InExt = std::move(InExt);
	Parms.InVersion = std::move(InVersion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.StartReceiveWifiStateChangeEvent
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::StartReceiveWifiStateChangeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "StartReceiveWifiStateChangeEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.SystemShare
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const int32&                            ShareType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Description                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::SystemShare(const int32& ShareType, const class FString& Description, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "SystemShare");

	Params::LLHSDKMisc_SystemShare Parms{};

	Parms.ShareType = ShareType;
	Parms.Description = std::move(Description);
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.TcpPingDetect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InDomain                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::TcpPingDetect(const class FString& InDomain, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "TcpPingDetect");

	Params::LLHSDKMisc_TcpPingDetect Parms{};

	Parms.InDomain = std::move(InDomain);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.ThirdPartyShare
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const ELLHSDKThirdPartyShareScene       InShareScene                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const ELLHSDKThirdPartyShareType        InShareType                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            InShareParams                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::ThirdPartyShare(const ELLHSDKThirdPartyShareScene InShareScene, const ELLHSDKThirdPartyShareType InShareType, const TArray<class FString>& InShareParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "ThirdPartyShare");

	Params::LLHSDKMisc_ThirdPartyShare Parms{};

	Parms.InShareScene = InShareScene;
	Parms.InShareType = InShareType;
	Parms.InShareParams = std::move(InShareParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.TryToEnableAndroidNotification
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKMisc::TryToEnableAndroidNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "TryToEnableAndroidNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.TwitterSharePhoto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InFilePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::TwitterSharePhoto(const class FString& InText, const class FString& InFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "TwitterSharePhoto");

	Params::LLHSDKMisc_TwitterSharePhoto Parms{};

	Parms.InText = std::move(InText);
	Parms.InFilePath = std::move(InFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.TwitterShareText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::TwitterShareText(const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "TwitterShareText");

	Params::LLHSDKMisc_TwitterShareText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.UpdateLimPCNetworkDiagnosisExtension
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::UpdateLimPCNetworkDiagnosisExtension(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "UpdateLimPCNetworkDiagnosisExtension");

	Params::LLHSDKMisc_UpdateLimPCNetworkDiagnosisExtension Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.UpdateNetworkExtensions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPlayerID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InDeviceID                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::UpdateNetworkExtensions(const class FString& InPlayerID, const class FString& InDeviceID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "UpdateNetworkExtensions");

	Params::LLHSDKMisc_UpdateNetworkExtensions Parms{};

	Parms.InPlayerID = std::move(InPlayerID);
	Parms.InDeviceID = std::move(InDeviceID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.WechatSharePhoto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ShareType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LocalUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::WechatSharePhoto(int32 ShareType, const class FString& LocalUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "WechatSharePhoto");

	Params::LLHSDKMisc_WechatSharePhoto Parms{};

	Parms.ShareType = ShareType;
	Parms.LocalUrl = std::move(LocalUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.WechatShareVideo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ShareType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Desc                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    VideoUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::WechatShareVideo(int32 ShareType, const class FString& Title, const class FString& Desc, const class FString& VideoUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "WechatShareVideo");

	Params::LLHSDKMisc_WechatShareVideo Parms{};

	Parms.ShareType = ShareType;
	Parms.Title = std::move(Title);
	Parms.Desc = std::move(Desc);
	Parms.VideoUrl = std::move(VideoUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.WeiboSharePhoto
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ImageUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::WeiboSharePhoto(const class FString& ImageUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "WeiboSharePhoto");

	Params::LLHSDKMisc_WeiboSharePhoto Parms{};

	Parms.ImageUrl = std::move(ImageUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKMisc.WeiboShareWithText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Desc                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ImageUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    VideoUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKMisc::WeiboShareWithText(const class FString& Desc, const class FString& ImageUrl, const class FString& VideoUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKMisc", "WeiboShareWithText");

	Params::LLHSDKMisc_WeiboShareWithText Parms{};

	Parms.Desc = std::move(Desc);
	Parms.ImageUrl = std::move(ImageUrl);
	Parms.VideoUrl = std::move(VideoUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.AndroidDomestic_StartPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const int32                             PayValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayDesc                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayContext                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::AndroidDomestic_StartPay(const int32 PayValue, const class FString& PayName, const class FString& PayDesc, const class FString& PayContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "AndroidDomestic_StartPay");

	Params::LLHSDKPay_AndroidDomestic_StartPay Parms{};

	Parms.PayValue = PayValue;
	Parms.PayName = std::move(PayName);
	Parms.PayDesc = std::move(PayDesc);
	Parms.PayContext = std::move(PayContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKPay::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKPay*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKPay* ULLHSDKPay::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "GetInstance");

	Params::LLHSDKPay_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.Google_ConsumeGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            Skus                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Contexts                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Google_ConsumeGoods(const TArray<class FString>& Skus, const TArray<class FString>& Contexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_ConsumeGoods");

	Params::LLHSDKPay_Google_ConsumeGoods Parms{};

	Parms.Skus = std::move(Skus);
	Parms.Contexts = std::move(Contexts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Google_GetConsumeGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> ULLHSDKPay::Google_GetConsumeGoods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_GetConsumeGoods");

	Params::LLHSDKPay_Google_GetConsumeGoods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.Google_GetConsumePointsGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<class FString> ULLHSDKPay::Google_GetConsumePointsGoods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_GetConsumePointsGoods");

	Params::LLHSDKPay_Google_GetConsumePointsGoods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.Google_HasConsumeGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKPay::Google_HasConsumeGoods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_HasConsumeGoods");

	Params::LLHSDKPay_Google_HasConsumeGoods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.Google_HasConsumePointsGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKPay::Google_HasConsumePointsGoods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_HasConsumePointsGoods");

	Params::LLHSDKPay_Google_HasConsumePointsGoods Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.Google_QuerySkuItemDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            Items                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Google_QuerySkuItemDetails(const TArray<class FString>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_QuerySkuItemDetails");

	Params::LLHSDKPay_Google_QuerySkuItemDetails Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Google_QuerySkuItemDetailsSubscription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            Items                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Google_QuerySkuItemDetailsSubscription(const TArray<class FString>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_QuerySkuItemDetailsSubscription");

	Params::LLHSDKPay_Google_QuerySkuItemDetailsSubscription Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Google_StartPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PayItemID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayContext                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Google_StartPay(const class FString& PayItemID, const class FString& PayContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_StartPay");

	Params::LLHSDKPay_Google_StartPay Parms{};

	Parms.PayItemID = std::move(PayItemID);
	Parms.PayContext = std::move(PayContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Google_StartPaySubscription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PayItemID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayContext                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Google_StartPaySubscription(const class FString& PayItemID, const class FString& PayContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Google_StartPaySubscription");

	Params::LLHSDKPay_Google_StartPaySubscription Parms{};

	Parms.PayItemID = std::move(PayItemID);
	Parms.PayContext = std::move(PayContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.IOS_GetAutoPayExt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKPay::IOS_GetAutoPayExt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_GetAutoPayExt");

	Params::LLHSDKPay_IOS_GetAutoPayExt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKPay.IOS_LLHPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayExt                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::IOS_LLHPay(const class FString& ProductID, const class FString& PayExt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_LLHPay");

	Params::LLHSDKPay_IOS_LLHPay Parms{};

	Parms.ProductID = std::move(ProductID);
	Parms.PayExt = std::move(PayExt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.IOS_QuerySkus
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TArray<class FString>&            ProductIDs                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::IOS_QuerySkus(const TArray<class FString>& ProductIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_QuerySkus");

	Params::LLHSDKPay_IOS_QuerySkus Parms{};

	Parms.ProductIDs = std::move(ProductIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.IOS_SetAutoPayExt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::IOS_SetAutoPayExt(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_SetAutoPayExt");

	Params::LLHSDKPay_IOS_SetAutoPayExt Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.IOS_SetUserPayExt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    PayExt                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::IOS_SetUserPayExt(const class FString& PayExt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_SetUserPayExt");

	Params::LLHSDKPay_IOS_SetUserPayExt Parms{};

	Parms.PayExt = std::move(PayExt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.IOS_SetUserPayExtInCallback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    ProductID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PayExt                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::IOS_SetUserPayExtInCallback(const class FString& ProductID, const class FString& PayExt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "IOS_SetUserPayExtInCallback");

	Params::LLHSDKPay_IOS_SetUserPayExtInCallback Parms{};

	Parms.ProductID = std::move(ProductID);
	Parms.PayExt = std::move(PayExt);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCQueryPriceLadder
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKPay::LimPCQueryPriceLadder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCQueryPriceLadder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCQueryPriceLadderV2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::LimPCQueryPriceLadderV2(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCQueryPriceLadderV2");

	Params::LLHSDKPay_LimPCQueryPriceLadderV2 Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCQueryPriceLadderWithRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::LimPCQueryPriceLadderWithRegion(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCQueryPriceLadderWithRegion");

	Params::LLHSDKPay_LimPCQueryPriceLadderWithRegion Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCStartPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::LimPCStartPay(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCStartPay");

	Params::LLHSDKPay_LimPCStartPay Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCThirdPartyCheckoutCounterItemsGet
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::LimPCThirdPartyCheckoutCounterItemsGet(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCThirdPartyCheckoutCounterItemsGet");

	Params::LLHSDKPay_LimPCThirdPartyCheckoutCounterItemsGet Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.LimPCThirdPartyCheckoutCounterItemsPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::LimPCThirdPartyCheckoutCounterItemsPay(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "LimPCThirdPartyCheckoutCounterItemsPay");

	Params::LLHSDKPay_LimPCThirdPartyCheckoutCounterItemsPay Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.SetPayNotifyUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InNotifyUrl                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::SetPayNotifyUrl(const class FString& InNotifyUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "SetPayNotifyUrl");

	Params::LLHSDKPay_SetPayNotifyUrl Parms{};

	Parms.InNotifyUrl = std::move(InNotifyUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Steam_StartPay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SteamPayInfo                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Steam_StartPay(const class FString& SteamPayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Steam_StartPay");

	Params::LLHSDKPay_Steam_StartPay Parms{};

	Parms.SteamPayInfo = std::move(SteamPayInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.SteamQuerySkus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::SteamQuerySkus(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "SteamQuerySkus");

	Params::LLHSDKPay_SteamQuerySkus Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.SteamQuerySkusV2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::SteamQuerySkusV2(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "SteamQuerySkusV2");

	Params::LLHSDKPay_SteamQuerySkusV2 Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.SteamStartPayV2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    SteamPayInfo                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::SteamStartPayV2(const class FString& SteamPayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "SteamStartPayV2");

	Params::LLHSDKPay_SteamStartPayV2 Parms{};

	Parms.SteamPayInfo = std::move(SteamPayInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Switch_EShopOpen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Switch_EShopOpen(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Switch_EShopOpen");

	Params::LLHSDKPay_Switch_EShopOpen Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Switch_GetConsumableItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Switch_GetConsumableItems(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Switch_GetConsumableItems");

	Params::LLHSDKPay_Switch_GetConsumableItems Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Switch_GetConsumables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Switch_GetConsumables(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Switch_GetConsumables");

	Params::LLHSDKPay_Switch_GetConsumables Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Switch_OrdersCheck
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Switch_OrdersCheck(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Switch_OrdersCheck");

	Params::LLHSDKPay_Switch_OrdersCheck Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Switch_OrdersConsume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKPay::Switch_OrdersConsume(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Switch_OrdersConsume");

	Params::LLHSDKPay_Switch_OrdersConsume Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKPay.Test_Google_SkuItemDetailsToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLLHSDKGenericSkuItemsDetailList&InDetails                                              (Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULLHSDKPay::Test_Google_SkuItemDetailsToString(const struct FLLHSDKGenericSkuItemsDetailList& InDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKPay", "Test_Google_SkuItemDetailsToString");

	Params::LLHSDKPay_Test_Google_SkuItemDetailsToString Parms{};

	Parms.InDetails = std::move(InDetails);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.AddLIMPCAlilog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKReport::AddLIMPCAlilog(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "AddLIMPCAlilog");

	Params::LLHSDKReport_AddLIMPCAlilog Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.AddLSLSLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::AddLSLSLog(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "AddLSLSLog");

	Params::LLHSDKReport_AddLSLSLog Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.CommonReportLimPCPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKReport::CommonReportLimPCPoint(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "CommonReportLimPCPoint");

	Params::LLHSDKReport_CommonReportLimPCPoint Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.DAPLogAdd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::DAPLogAdd(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "DAPLogAdd");

	Params::LLHSDKReport_DAPLogAdd Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.DestoryInstance
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKReport::DestoryInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "DestoryInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.EnableLogReport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const bool                              bEnable                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::EnableLogReport(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "EnableLogReport");

	Params::LLHSDKReport_EnableLogReport Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULLHSDKReport*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULLHSDKReport* ULLHSDKReport::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "GetInstance");

	Params::LLHSDKReport_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.GetLimPCAlilogFields
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKReport::GetLimPCAlilogFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "GetLimPCAlilogFields");

	Params::LLHSDKReport_GetLimPCAlilogFields Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.GetSLSFields
// (Final, Native, Static, Public, BlueprintCallable)

void ULLHSDKReport::GetSLSFields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "GetSLSFields");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.LimPCGameActionOptionsReport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKReport::LimPCGameActionOptionsReport(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "LimPCGameActionOptionsReport");

	Params::LLHSDKReport_LimPCGameActionOptionsReport Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.ReportCustomEventForDomesticChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    JsonParamsStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::ReportCustomEventForDomesticChannel(const class FString& EventName, const class FString& JsonParamsStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportCustomEventForDomesticChannel");

	Params::LLHSDKReport_ReportCustomEventForDomesticChannel Parms{};

	Parms.EventName = std::move(EventName);
	Parms.JsonParamsStr = std::move(JsonParamsStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.ReportGameInfoForDomesticChannel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    JsonParamsStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::ReportGameInfoForDomesticChannel(const class FString& EventName, const class FString& JsonParamsStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportGameInfoForDomesticChannel");

	Params::LLHSDKReport_ReportGameInfoForDomesticChannel Parms{};

	Parms.EventName = std::move(EventName);
	Parms.JsonParamsStr = std::move(JsonParamsStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.ReportJsonToLilithImmediate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    JsonContentStr                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKReport::ReportJsonToLilithImmediate(const class FString& EventName, const class FString& JsonContentStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportJsonToLilithImmediate");

	Params::LLHSDKReport_ReportJsonToLilithImmediate Parms{};

	Parms.EventName = std::move(EventName);
	Parms.JsonContentStr = std::move(JsonContentStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.ReportRevenueToThirdParty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELLHSDKReportCurrencyType               Currency                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Revenue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Parameters                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKReport::ReportRevenueToThirdParty(const class FString& EventName, ELLHSDKReportCurrencyType Currency, const class FString& Revenue, const TArray<class FString>& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportRevenueToThirdParty");

	Params::LLHSDKReport_ReportRevenueToThirdParty Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Currency = Currency;
	Parms.Revenue = std::move(Revenue);
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.ReportRoleInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonParamsStr                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::ReportRoleInfo(const class FString& JsonParamsStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportRoleInfo");

	Params::LLHSDKReport_ReportRoleInfo Parms{};

	Parms.JsonParamsStr = std::move(JsonParamsStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function LLHSDK.LLHSDKReport.ReportToThirdParty
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Parameters                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULLHSDKReport::ReportToThirdParty(const class FString& EventName, const TArray<class FString>& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "ReportToThirdParty");

	Params::LLHSDKReport_ReportToThirdParty Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.SetLIMPCAlilogConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULLHSDKReport::SetLIMPCAlilogConfig(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "SetLIMPCAlilogConfig");

	Params::LLHSDKReport_SetLIMPCAlilogConfig Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function LLHSDK.LLHSDKReport.SetLSLSConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULLHSDKReport::SetLSLSConfig(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LLHSDKReport", "SetLSLSConfig");

	Params::LLHSDKReport_SetLSLSConfig Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

