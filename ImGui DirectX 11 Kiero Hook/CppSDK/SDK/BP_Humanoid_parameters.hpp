#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Humanoid

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Humanoid.BP_Humanoid_C.ExecuteUbergraph_BP_Humanoid
// 0x0038 (0x0038 - 0x0000)
struct BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsDwon)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HumanoidTaget_Stand_C*              K2Node_DynamicCast_AsBP_Humanoid_Taget_Stand;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsDwon;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid) == 0x000008, "Wrong alignment on BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid");
static_assert(sizeof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid) == 0x000038, "Wrong size on BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, EntryPoint) == 0x000000, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000004, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, CallFunc_GetSplineLength_ReturnValue) == 0x00001C, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, K2Node_DynamicCast_AsBP_Humanoid_Taget_Stand) == 0x000028, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::K2Node_DynamicCast_AsBP_Humanoid_Taget_Stand' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid, K2Node_CustomEvent_bIsDwon) == 0x000031, "Member 'BP_Humanoid_C_ExecuteUbergraph_BP_Humanoid::K2Node_CustomEvent_bIsDwon' has a wrong offset!");

// Function BP_Humanoid.BP_Humanoid_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct BP_Humanoid_C_CustomEvent_0 final
{
public:
	bool                                          bIsDwon;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Humanoid_C_CustomEvent_0) == 0x000001, "Wrong alignment on BP_Humanoid_C_CustomEvent_0");
static_assert(sizeof(BP_Humanoid_C_CustomEvent_0) == 0x000001, "Wrong size on BP_Humanoid_C_CustomEvent_0");
static_assert(offsetof(BP_Humanoid_C_CustomEvent_0, bIsDwon) == 0x000000, "Member 'BP_Humanoid_C_CustomEvent_0::bIsDwon' has a wrong offset!");

// Function BP_Humanoid.BP_Humanoid_C.SetPosition
// 0x0110 (0x0110 - 0x0000)
struct BP_Humanoid_C_SetPosition final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtTime_ReturnValue;           // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default;                             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Humanoid_C_SetPosition) == 0x000010, "Wrong alignment on BP_Humanoid_C_SetPosition");
static_assert(sizeof(BP_Humanoid_C_SetPosition) == 0x000110, "Wrong size on BP_Humanoid_C_SetPosition");
static_assert(offsetof(BP_Humanoid_C_SetPosition, Time) == 0x000000, "Member 'BP_Humanoid_C_SetPosition::Time' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, Temp_bool_Variable) == 0x000004, "Member 'BP_Humanoid_C_SetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'BP_Humanoid_C_SetPosition::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_GetTransformAtTime_ReturnValue) == 0x000020, "Member 'BP_Humanoid_C_SetPosition::CallFunc_GetTransformAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_BreakTransform_Location) == 0x000050, "Member 'BP_Humanoid_C_SetPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'BP_Humanoid_C_SetPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_Humanoid_C_SetPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, K2Node_Select_Default) == 0x000074, "Member 'BP_Humanoid_C_SetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_SetPosition, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000080, "Member 'BP_Humanoid_C_SetPosition::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function BP_Humanoid.BP_Humanoid_C.OnRep_PlayRate
// 0x0014 (0x0014 - 0x0000)
struct BP_Humanoid_C_OnRep_PlayRate final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Humanoid_C_OnRep_PlayRate) == 0x000004, "Wrong alignment on BP_Humanoid_C_OnRep_PlayRate");
static_assert(sizeof(BP_Humanoid_C_OnRep_PlayRate) == 0x000014, "Wrong size on BP_Humanoid_C_OnRep_PlayRate");
static_assert(offsetof(BP_Humanoid_C_OnRep_PlayRate, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_Humanoid_C_OnRep_PlayRate::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_PlayRate, CallFunc_GetPlayRate_ReturnValue) == 0x000004, "Member 'BP_Humanoid_C_OnRep_PlayRate::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_PlayRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Humanoid_C_OnRep_PlayRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_PlayRate, CallFunc_Abs_ReturnValue) == 0x00000C, "Member 'BP_Humanoid_C_OnRep_PlayRate::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_PlayRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_Humanoid_C_OnRep_PlayRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Humanoid.BP_Humanoid_C.OnRep_CurrentPosition
// 0x0014 (0x0014 - 0x0000)
struct BP_Humanoid_C_OnRep_CurrentPosition final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Humanoid_C_OnRep_CurrentPosition) == 0x000004, "Wrong alignment on BP_Humanoid_C_OnRep_CurrentPosition");
static_assert(sizeof(BP_Humanoid_C_OnRep_CurrentPosition) == 0x000014, "Wrong size on BP_Humanoid_C_OnRep_CurrentPosition");
static_assert(offsetof(BP_Humanoid_C_OnRep_CurrentPosition, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_Humanoid_C_OnRep_CurrentPosition::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_CurrentPosition, CallFunc_GetPlaybackPosition_ReturnValue) == 0x000004, "Member 'BP_Humanoid_C_OnRep_CurrentPosition::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_CurrentPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Humanoid_C_OnRep_CurrentPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_CurrentPosition, CallFunc_Abs_ReturnValue) == 0x00000C, "Member 'BP_Humanoid_C_OnRep_CurrentPosition::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Humanoid_C_OnRep_CurrentPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_Humanoid_C_OnRep_CurrentPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

