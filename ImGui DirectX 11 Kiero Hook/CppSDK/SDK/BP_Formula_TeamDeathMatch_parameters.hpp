#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Formula_TeamDeathMatch

#include "Basic.hpp"

#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.GetKDA
// 0x0020 (0x0020 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_GetKDA final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_GetKDA) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_GetKDA");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_GetKDA) == 0x000020, "Wrong size on BP_Formula_TeamDeathMatch_C_GetKDA");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, InPS) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, ReturnValue) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, CallFunc_Max_ReturnValue) == 0x000010, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetKDA, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Formula_TeamDeathMatch_C_GetKDA::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.GetAccountExp
// 0x0048 (0x0048 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_GetAccountExp final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_BattleTime;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_KDA;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_LifeTime;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_KillNum;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_AssistNum;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_CauseDamage;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTDMData_Win;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTDMData_Rank;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTDMData_Side;                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_GetAccountExp) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_GetAccountExp");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_GetAccountExp) == 0x000048, "Wrong size on BP_Formula_TeamDeathMatch_C_GetAccountExp");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, InPS) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, ReturnValue) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_BattleTime) == 0x00000C, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_BattleTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_KDA) == 0x000010, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_KDA' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_LifeTime) == 0x000014, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_KillNum) == 0x000018, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_KillNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_AssistNum) == 0x00001C, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_AssistNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_CauseDamage) == 0x000020, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_Win) == 0x000024, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_Win' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_Rank) == 0x000028, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_GetTDMData_Side) == 0x000030, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_GetTDMData_Side' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetAccountExp, CallFunc_Max_ReturnValue) == 0x000044, "Member 'BP_Formula_TeamDeathMatch_C_GetAccountExp::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.GetTDMData
// 0x0100 (0x0100 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_GetTDMData final
{
public:
	class ASolarPlayerState*                      PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BattleTime;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KDA;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillNum;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AssistNum;                                         // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CauseDamage;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Win;                                               // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rank;                                              // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Side;                                              // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Local_Team;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         Local_SelfKDA;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Rank;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Local_PlayerID;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVictorious_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTeamName_ReturnValue;                  // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurBattleTime_ReturnValue;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataFloat_OutValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataFloat_ReturnValue;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetHostKeyArray_outResult;                // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDataFloat_OutValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataFloat_ReturnValue_1;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCMPlayerState*                        CallFunc_FindPlayerByPlayerID_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDataString_OutValue;                   // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataString_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDataFloat_OutValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataFloat_ReturnValue_2;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_GetTDMData) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_GetTDMData");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_GetTDMData) == 0x000100, "Wrong size on BP_Formula_TeamDeathMatch_C_GetTDMData");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, PlayerState) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, BattleTime) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::BattleTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, KDA) == 0x00000C, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::KDA' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, LifeTime) == 0x000010, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, KillNum) == 0x000014, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::KillNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, AssistNum) == 0x000018, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::AssistNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CauseDamage) == 0x00001C, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Win) == 0x000020, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Win' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Rank) == 0x000024, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Side) == 0x000028, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Side' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Local_Team) == 0x000038, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Local_Team' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Local_SelfKDA) == 0x000048, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Local_SelfKDA' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Local_Rank) == 0x00004C, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Local_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Local_PlayerID) == 0x000050, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Local_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_IsVictorious_ReturnValue) == 0x000060, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_IsVictorious_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetTeamName_ReturnValue) == 0x000068, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetTeamName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetCurBattleTime_ReturnValue) == 0x000084, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetCurBattleTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_OutValue) == 0x000088, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_ReturnValue) == 0x00008C, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetHostKeyArray_outResult) == 0x000098, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetHostKeyArray_outResult' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, Temp_int_Variable) == 0x0000A8, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_OutValue_1) == 0x0000C4, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_OutValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_ReturnValue_1) == 0x0000C8, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_FindPlayerByPlayerID_ReturnValue) == 0x0000D0, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_FindPlayerByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataString_OutValue) == 0x0000D8, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataString_OutValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataString_ReturnValue) == 0x0000E8, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E9, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000F1, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_OutValue_2) == 0x0000F4, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_OutValue_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetTDMData, CallFunc_GetDataFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_Formula_TeamDeathMatch_C_GetTDMData::CallFunc_GetDataFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.GetZomborg
// 0x0048 (0x0048 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_GetZomborg final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_BattleTime;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_KDA;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_LifeTime;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_KillNum;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTDMData_AssistNum;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTDMData_CauseDamage;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTDMData_Win;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTDMData_Rank;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTDMData_Side;                          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_GetZomborg) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_GetZomborg");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_GetZomborg) == 0x000048, "Wrong size on BP_Formula_TeamDeathMatch_C_GetZomborg");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, InPS) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, ReturnValue) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_BattleTime) == 0x00000C, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_BattleTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_KDA) == 0x000010, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_KDA' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_LifeTime) == 0x000014, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_LifeTime' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_KillNum) == 0x000018, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_KillNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_AssistNum) == 0x00001C, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_AssistNum' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_CauseDamage) == 0x000020, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_CauseDamage' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_Win) == 0x000024, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_Win' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_Rank) == 0x000028, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_Rank' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_GetTDMData_Side) == 0x000030, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_GetTDMData_Side' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_GetZomborg, CallFunc_Max_ReturnValue) == 0x000044, "Member 'BP_Formula_TeamDeathMatch_C_GetZomborg::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.CalculatePlayerRank
// 0x0010 (0x0010 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_CalculatePlayerRank final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_CalculatePlayerRank) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_CalculatePlayerRank");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_CalculatePlayerRank) == 0x000010, "Wrong size on BP_Formula_TeamDeathMatch_C_CalculatePlayerRank");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculatePlayerRank, InPS) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_CalculatePlayerRank::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculatePlayerRank, ReturnValue) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_CalculatePlayerRank::ReturnValue' has a wrong offset!");

// Function BP_Formula_TeamDeathMatch.BP_Formula_TeamDeathMatch_C.CalculateTeamRank
// 0x0020 (0x0020 - 0x0000)
struct BP_Formula_TeamDeathMatch_C_CalculateTeamRank final
{
public:
	class ASolarPlayerState*                      InPS;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMatchResult                                  Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMatchResult                                  CallFunc_GetMatchResult_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank) == 0x000008, "Wrong alignment on BP_Formula_TeamDeathMatch_C_CalculateTeamRank");
static_assert(sizeof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank) == 0x000020, "Wrong size on BP_Formula_TeamDeathMatch_C_CalculateTeamRank");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, InPS) == 0x000000, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::InPS' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, ReturnValue) == 0x000008, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, Temp_byte_Variable) == 0x00000C, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, CallFunc_GetMatchResult_ReturnValue) == 0x00000E, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::CallFunc_GetMatchResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, Temp_int_Variable) == 0x000010, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, Temp_int_Variable_1) == 0x000014, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, Temp_int_Variable_2) == 0x000018, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Formula_TeamDeathMatch_C_CalculateTeamRank, K2Node_Select_Default) == 0x00001C, "Member 'BP_Formula_TeamDeathMatch_C_CalculateTeamRank::K2Node_Select_Default' has a wrong offset!");

}

