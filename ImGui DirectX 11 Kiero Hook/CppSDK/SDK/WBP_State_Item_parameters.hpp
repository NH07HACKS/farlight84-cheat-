#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_State_Item

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_State_Item.WBP_State_Item_C.ExecuteUbergraph_WBP_State_Item
// 0x0010 (0x0010 - 0x0000)
struct WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item) == 0x000008, "Wrong alignment on WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item");
static_assert(sizeof(WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item) == 0x000010, "Wrong size on WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item");
static_assert(offsetof(WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item, EntryPoint) == 0x000000, "Member 'WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item, K2Node_Event_Animation) == 0x000008, "Member 'WBP_State_Item_C_ExecuteUbergraph_WBP_State_Item::K2Node_Event_Animation' has a wrong offset!");

// Function WBP_State_Item.WBP_State_Item_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct WBP_State_Item_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_State_Item_C_OnAnimationFinished) == 0x000008, "Wrong alignment on WBP_State_Item_C_OnAnimationFinished");
static_assert(sizeof(WBP_State_Item_C_OnAnimationFinished) == 0x000008, "Wrong size on WBP_State_Item_C_OnAnimationFinished");
static_assert(offsetof(WBP_State_Item_C_OnAnimationFinished, Animation) == 0x000000, "Member 'WBP_State_Item_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function WBP_State_Item.WBP_State_Item_C.PlayHitAnim
// 0x001C (0x001C - 0x0000)
struct WBP_State_Item_C_PlayHitAnim final
{
public:
	ESolarHitType                                 HitType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShieldLevel;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShieldColor;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_State_Item_C_PlayHitAnim) == 0x000004, "Wrong alignment on WBP_State_Item_C_PlayHitAnim");
static_assert(sizeof(WBP_State_Item_C_PlayHitAnim) == 0x00001C, "Wrong size on WBP_State_Item_C_PlayHitAnim");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnim, HitType) == 0x000000, "Member 'WBP_State_Item_C_PlayHitAnim::HitType' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnim, ShieldLevel) == 0x000004, "Member 'WBP_State_Item_C_PlayHitAnim::ShieldLevel' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnim, ShieldColor) == 0x000008, "Member 'WBP_State_Item_C_PlayHitAnim::ShieldColor' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_State_Item_C_PlayHitAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_State_Item.WBP_State_Item_C.PlayHitAnimInternal
// 0x0018 (0x0018 - 0x0000)
struct WBP_State_Item_C_PlayHitAnimInternal final
{
public:
	int32                                         SwitcherIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Anim;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_State_Item_C_PlayHitAnimInternal) == 0x000008, "Wrong alignment on WBP_State_Item_C_PlayHitAnimInternal");
static_assert(sizeof(WBP_State_Item_C_PlayHitAnimInternal) == 0x000018, "Wrong size on WBP_State_Item_C_PlayHitAnimInternal");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnimInternal, SwitcherIndex) == 0x000000, "Member 'WBP_State_Item_C_PlayHitAnimInternal::SwitcherIndex' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnimInternal, Anim) == 0x000008, "Member 'WBP_State_Item_C_PlayHitAnimInternal::Anim' has a wrong offset!");
static_assert(offsetof(WBP_State_Item_C_PlayHitAnimInternal, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_State_Item_C_PlayHitAnimInternal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

