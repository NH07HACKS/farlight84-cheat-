#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AirWall_Spline_new

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AirWall_Spline_new.BP_AirWall_Spline_new_C
// 0x0040 (0x0320 - 0x02E0)
class ABP_AirWall_Spline_new_C final : public ASolarAirWall
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMergedSplineMeshComponent*             MergedSplineMesh;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SplineActor;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      PolygonPoints;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AirWall_Spline_new(int32 EntryPoint);
	void SetTilingNum(class UMergedSplineMeshComponent* MergedMeshComp);
	void SetActorPositionParameter(const struct FVector& Location);
	void CopySplinePoint_Event();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AirWall_Spline_new_C">();
	}
	static class ABP_AirWall_Spline_new_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AirWall_Spline_new_C>();
	}
};
static_assert(alignof(ABP_AirWall_Spline_new_C) == 0x000008, "Wrong alignment on ABP_AirWall_Spline_new_C");
static_assert(sizeof(ABP_AirWall_Spline_new_C) == 0x000320, "Wrong size on ABP_AirWall_Spline_new_C");
static_assert(offsetof(ABP_AirWall_Spline_new_C, UberGraphFrame) == 0x0002E0, "Member 'ABP_AirWall_Spline_new_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, MergedSplineMesh) == 0x0002E8, "Member 'ABP_AirWall_Spline_new_C::MergedSplineMesh' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, Spline) == 0x0002F0, "Member 'ABP_AirWall_Spline_new_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, DefaultSceneRoot) == 0x0002F8, "Member 'ABP_AirWall_Spline_new_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, SplineActor) == 0x000300, "Member 'ABP_AirWall_Spline_new_C::SplineActor' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, PolygonPoints) == 0x000308, "Member 'ABP_AirWall_Spline_new_C::PolygonPoints' has a wrong offset!");
static_assert(offsetof(ABP_AirWall_Spline_new_C, MaterialInstance) == 0x000318, "Member 'ABP_AirWall_Spline_new_C::MaterialInstance' has a wrong offset!");

}

