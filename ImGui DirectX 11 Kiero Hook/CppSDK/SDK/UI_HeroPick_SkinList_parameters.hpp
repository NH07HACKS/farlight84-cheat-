#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HeroPick_SkinList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.ExecuteUbergraph_UI_HeroPick_SkinList
// 0x01E0 (0x01E0 - 0x0000)
struct UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayEvent2DByName_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0048(0x0028)()
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0070(0x0030)(NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings_1;           // 0x00A0(0x0030)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00D0(0x0068)(HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0138(0x0068)(HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList) == 0x000008, "Wrong alignment on UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList");
static_assert(sizeof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList) == 0x0001E0, "Wrong size on UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, EntryPoint) == 0x000000, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, CallFunc_PlayEvent2DByName_ReturnValue) == 0x000004, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::CallFunc_PlayEvent2DByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_SlateColor_1) == 0x000048, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_FontOutlineSettings) == 0x000070, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_FontOutlineSettings_1) == 0x0000A0, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_FontOutlineSettings_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_SlateFontInfo) == 0x0000D0, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_MakeStruct_SlateFontInfo_1) == 0x000138, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_Event_MyGeometry) == 0x0001A0, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList, K2Node_Event_InDeltaTime) == 0x0001D8, "Member 'UI_HeroPick_SkinList_C_ExecuteUbergraph_UI_HeroPick_SkinList::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_HeroPick_SkinList_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_SkinList_C_Tick) == 0x000004, "Wrong alignment on UI_HeroPick_SkinList_C_Tick");
static_assert(sizeof(UI_HeroPick_SkinList_C_Tick) == 0x00003C, "Wrong size on UI_HeroPick_SkinList_C_Tick");
static_assert(offsetof(UI_HeroPick_SkinList_C_Tick, MyGeometry) == 0x000000, "Member 'UI_HeroPick_SkinList_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_HeroPick_SkinList_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.LuaHiddenSelfAndSub
// 0x0001 (0x0001 - 0x0000)
struct UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub final
{
public:
	bool                                          IsHidden;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub) == 0x000001, "Wrong alignment on UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub");
static_assert(sizeof(UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub) == 0x000001, "Wrong size on UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub");
static_assert(offsetof(UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub, IsHidden) == 0x000000, "Member 'UI_HeroPick_SkinList_C_LuaHiddenSelfAndSub::IsHidden' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.BP_SetHeroPortrait
// 0x0030 (0x0030 - 0x0000)
struct UI_HeroPick_SkinList_C_BP_SetHeroPortrait final
{
public:
	int32                                         Pos;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CharacterIcon;                                     // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_HeroPick_SkinList_C_BP_SetHeroPortrait) == 0x000008, "Wrong alignment on UI_HeroPick_SkinList_C_BP_SetHeroPortrait");
static_assert(sizeof(UI_HeroPick_SkinList_C_BP_SetHeroPortrait) == 0x000030, "Wrong size on UI_HeroPick_SkinList_C_BP_SetHeroPortrait");
static_assert(offsetof(UI_HeroPick_SkinList_C_BP_SetHeroPortrait, Pos) == 0x000000, "Member 'UI_HeroPick_SkinList_C_BP_SetHeroPortrait::Pos' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_BP_SetHeroPortrait, CharacterIcon) == 0x000008, "Member 'UI_HeroPick_SkinList_C_BP_SetHeroPortrait::CharacterIcon' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.ShowSelect
// 0x0010 (0x0010 - 0x0000)
struct UI_HeroPick_SkinList_C_ShowSelect final
{
public:
	int32                                         Pos;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterID;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SkinID;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeroExpLevel;                                      // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_HeroPick_SkinList_C_ShowSelect) == 0x000004, "Wrong alignment on UI_HeroPick_SkinList_C_ShowSelect");
static_assert(sizeof(UI_HeroPick_SkinList_C_ShowSelect) == 0x000010, "Wrong size on UI_HeroPick_SkinList_C_ShowSelect");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowSelect, Pos) == 0x000000, "Member 'UI_HeroPick_SkinList_C_ShowSelect::Pos' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowSelect, CharacterID) == 0x000004, "Member 'UI_HeroPick_SkinList_C_ShowSelect::CharacterID' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowSelect, SkinID) == 0x000008, "Member 'UI_HeroPick_SkinList_C_ShowSelect::SkinID' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowSelect, HeroExpLevel) == 0x00000C, "Member 'UI_HeroPick_SkinList_C_ShowSelect::HeroExpLevel' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.ShowEmoji
// 0x0008 (0x0008 - 0x0000)
struct UI_HeroPick_SkinList_C_ShowEmoji final
{
public:
	int32                                         EmojiID;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Pos;                                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_HeroPick_SkinList_C_ShowEmoji) == 0x000004, "Wrong alignment on UI_HeroPick_SkinList_C_ShowEmoji");
static_assert(sizeof(UI_HeroPick_SkinList_C_ShowEmoji) == 0x000008, "Wrong size on UI_HeroPick_SkinList_C_ShowEmoji");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowEmoji, EmojiID) == 0x000000, "Member 'UI_HeroPick_SkinList_C_ShowEmoji::EmojiID' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowEmoji, Pos) == 0x000004, "Member 'UI_HeroPick_SkinList_C_ShowEmoji::Pos' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.ShowConfirm
// 0x0008 (0x0008 - 0x0000)
struct UI_HeroPick_SkinList_C_ShowConfirm final
{
public:
	int32                                         Pos;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsConfirm;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_HeroPick_SkinList_C_ShowConfirm) == 0x000004, "Wrong alignment on UI_HeroPick_SkinList_C_ShowConfirm");
static_assert(sizeof(UI_HeroPick_SkinList_C_ShowConfirm) == 0x000008, "Wrong size on UI_HeroPick_SkinList_C_ShowConfirm");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowConfirm, Pos) == 0x000000, "Member 'UI_HeroPick_SkinList_C_ShowConfirm::Pos' has a wrong offset!");
static_assert(offsetof(UI_HeroPick_SkinList_C_ShowConfirm, IsConfirm) == 0x000004, "Member 'UI_HeroPick_SkinList_C_ShowConfirm::IsConfirm' has a wrong offset!");

// Function UI_HeroPick_SkinList.UI_HeroPick_SkinList_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_HeroPick_SkinList_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_HeroPick_SkinList_C_GetModuleName) == 0x000008, "Wrong alignment on UI_HeroPick_SkinList_C_GetModuleName");
static_assert(sizeof(UI_HeroPick_SkinList_C_GetModuleName) == 0x000010, "Wrong size on UI_HeroPick_SkinList_C_GetModuleName");
static_assert(offsetof(UI_HeroPick_SkinList_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_HeroPick_SkinList_C_GetModuleName::ReturnValue' has a wrong offset!");

}

