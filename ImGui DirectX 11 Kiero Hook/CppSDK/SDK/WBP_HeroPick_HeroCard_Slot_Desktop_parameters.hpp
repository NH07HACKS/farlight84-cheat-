#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeroPick_HeroCard_Slot_Desktop

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_HeroPick_Sect_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Name;                                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESolarTablesEnum_CharacterType                K2Node_Event_HeroType;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        K2Node_Event_IconPath;                             // 0x00C8(0x0018)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x00E0(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_Event_InIsDeveloping;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHeroCellSelectedType                         K2Node_Event_SelectedType;                         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	ECharacterOwnerType                           K2Node_Event_CharacterOwnerType;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUserListEntry>        CallFunc_GetOwningListView_UserListEntry_CastInput; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UListViewBase*                          CallFunc_GetOwningListView_ReturnValue;            // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarListView*                         K2Node_DynamicCast_AsSolar_List_View;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Support;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarGameInstanceBase*                 K2Node_DynamicCast_AsSolar_Game_Instance_Base;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarLuaHelper*                        CallFunc_GetSolarLuaHelper_ReturnValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDistributeForDomestic_ReturnValue;    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrainingMode_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop) == 0x0001B8, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, EntryPoint) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, Temp_object_Variable) == 0x000008, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CustomEvent_Loaded_2) == 0x000020, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, Temp_object_Variable_1) == 0x000028, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsMaterial_Interface) == 0x000030, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CustomEvent_Loaded_1) == 0x000048, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, Temp_object_Variable_2) == 0x000050, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000058, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000068, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CustomEvent_Loaded) == 0x000070, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, Temp_object_Variable_3) == 0x000078, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x000080, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000090, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_bIsExpanded) == 0x000098, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_bIsSelected) == 0x000099, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_IsDesignTime) == 0x00009A, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_IsPCPlatform_IsPCPlatform) == 0x0000AC, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_Name) == 0x0000B0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_HeroType) == 0x0000C0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_HeroType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_IconPath) == 0x0000C8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_IconPath' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x0000E0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_InIsDeveloping) == 0x000108, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_InIsDeveloping' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_SelectedType) == 0x000109, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_SelectedType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_IsValid_ReturnValue) == 0x00010A, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_IsValid_ReturnValue_1) == 0x00011C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_IsValid_ReturnValue_2) == 0x00011D, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_CharacterOwnerType) == 0x000130, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_CharacterOwnerType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000131, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CustomEvent_Loaded_3) == 0x000138, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000140, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_CreateDelegate_OutputDelegate_3) == 0x000144, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_BooleanOR_ReturnValue) == 0x000154, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_GetOwningListView_UserListEntry_CastInput) == 0x000158, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_GetOwningListView_UserListEntry_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_GetOwningListView_ReturnValue) == 0x000168, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_GetOwningListView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsSolar_List_View) == 0x000170, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsSolar_List_View' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess_4) == 0x000178, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_PlayAnimation_ReturnValue) == 0x000180, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_GetGameInstance_ReturnValue) == 0x000188, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_Event_Support) == 0x000190, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_Event_Support' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_AsSolar_Game_Instance_Base) == 0x000198, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_AsSolar_Game_Instance_Base' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, K2Node_DynamicCast_bSuccess_5) == 0x0001A0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_GetSolarLuaHelper_ReturnValue) == 0x0001A8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_GetSolarLuaHelper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_DoesDistributeForDomestic_ReturnValue) == 0x0001B0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_DoesDistributeForDomestic_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop, CallFunc_IsTrainingMode_ReturnValue) == 0x0001B1, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_ExecuteUbergraph_WBP_HeroPick_HeroCard_Slot_Desktop::CallFunc_IsTrainingMode_ReturnValue' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetIsSupportFPP
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP final
{
public:
	bool                                          Support;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP, Support) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsSupportFPP::Support' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetCharacterOwnerType
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType final
{
public:
	ECharacterOwnerType                           CharacterOwnerType;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType, CharacterOwnerType) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetCharacterOwnerType::CharacterOwnerType' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.UpdateSelectState
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState final
{
public:
	EHeroCellSelectedType                         SelectedType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState, SelectedType) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateSelectState::SelectedType' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetIsDeveloping
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping final
{
public:
	bool                                          InIsDeveloping;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping, InIsDeveloping) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetIsDeveloping::InIsDeveloping' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.UpdateHeroIconAndName
// 0x0030 (0x0030 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESolarTablesEnum_CharacterType                HeroType;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        IconPath;                                          // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName) == 0x000030, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName, Name_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName, HeroType) == 0x000010, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName::HeroType' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName, IconPath) == 0x000018, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateHeroIconAndName::IconPath' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D) == 0x000008, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D, Loaded) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_5D08ED3E498BF124566DAF85BEEFCC7D::Loaded' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.OnLoaded_691B5F62411E679446CD70AC6D2E6456
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456) == 0x000008, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456, Loaded) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_691B5F62411E679446CD70AC6D2E6456::Loaded' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.OnLoaded_E240136F49E9229680A4ABB8C6522104
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104) == 0x000008, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104, Loaded) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_E240136F49E9229680A4ABB8C6522104::Loaded' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.OnLoaded_85283F704A0D0A2C059277BC74BF306A
// 0x0008 (0x0008 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A) == 0x000008, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A, Loaded) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_OnLoaded_85283F704A0D0A2C059277BC74BF306A::Loaded' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetSect
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect final
{
public:
	E_HeroPick_Sect                               Sect;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect, Sect) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSect::Sect' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.UpdateUI
// 0x0020 (0x0020 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI final
{
public:
	ECharacterOwnerType                           OwnerType_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterOwnerType                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI) == 0x000004, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI) == 0x000020, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, OwnerType_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::OwnerType_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_byte_Variable) == 0x000001, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable) == 0x000004, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable_1) == 0x000008, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable_2) == 0x00000C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable_3) == 0x000010, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable_4) == 0x000014, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, Temp_int_Variable_5) == 0x000018, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI, K2Node_Select_Default) == 0x00001C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_UpdateUI::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetSelect
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect final
{
public:
	bool                                          IsSelect_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_9;                            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_12;                           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_13;                           // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_14;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_15;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_16;                           // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_17;                           // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              Temp_struct_Variable_18;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_19;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_7;                           // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_8;                           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_9;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_10;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_11;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_12;                          // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_13;                          // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_14;                          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_15;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_16;                          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterOwnerType                           Temp_byte_Variable_12;                             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_18;                          // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_20;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_21;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_7;           // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_19;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect) == 0x000008, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect) == 0x0001F8, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, IsSelect_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::IsSelect_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable) == 0x000001, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable) == 0x000003, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable) == 0x000004, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_1) == 0x00000C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_1) == 0x000014, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_2) == 0x000018, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_3) == 0x000020, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_2) == 0x000028, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_2) == 0x000029, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_3) == 0x00002A, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_3) == 0x00002B, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_4) == 0x00002C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_5) == 0x000034, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_4) == 0x00003C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_6) == 0x000040, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_7) == 0x000048, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_5) == 0x000050, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_8) == 0x000054, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_9) == 0x00005C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_6) == 0x000064, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_10) == 0x000068, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_11) == 0x000070, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_7) == 0x000078, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_12) == 0x00007C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_13) == 0x000084, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_8) == 0x00008C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable) == 0x000090, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_1) == 0x000094, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_9) == 0x000098, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_2) == 0x00009C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_3) == 0x0000A0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_10) == 0x0000A4, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_4) == 0x0000A8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_5) == 0x0000AC, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_11) == 0x0000B0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_6) == 0x0000B4, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_float_Variable_7) == 0x0000B8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_12) == 0x0000BC, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_14) == 0x0000C0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_15) == 0x0000C8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_13) == 0x0000D0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_16) == 0x0000D4, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_17) == 0x0000DC, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_14) == 0x0000E4, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_4) == 0x0000E5, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_5) == 0x0000E6, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_15) == 0x0000E7, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_18) == 0x0000E8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_19) == 0x0000F0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_16) == 0x0000F8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_6) == 0x0000F9, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_7) == 0x0000FA, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000100, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default) == 0x000108, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_1) == 0x000110, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_2) == 0x000118, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_3) == 0x00011C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_4) == 0x000124, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_BreakVector2D_X) == 0x00012C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_BreakVector2D_Y) == 0x000130, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_5) == 0x000134, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_6) == 0x00013C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_7) == 0x000144, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_8) == 0x00014C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_9) == 0x000150, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_10) == 0x000154, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_11) == 0x000158, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_12) == 0x00015C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_13) == 0x000164, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_14) == 0x00016C, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_15) == 0x000170, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_16) == 0x000178, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_8) == 0x000179, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_9) == 0x00017A, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_10) == 0x00017B, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000180, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000188, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_PlayAnimation_ReturnValue) == 0x000190, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_11) == 0x000198, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_12) == 0x000199, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0001A0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_17) == 0x0001A8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_13) == 0x0001A9, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0001B0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_byte_Variable_14) == 0x0001B8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_17) == 0x0001B9, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_18) == 0x0001BA, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x0001C0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_20) == 0x0001C8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x0001D0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_struct_Variable_21) == 0x0001D8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, Temp_bool_Variable_18) == 0x0001E0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, CallFunc_SlotAsCanvasSlot_ReturnValue_7) == 0x0001E8, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::CallFunc_SlotAsCanvasSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect, K2Node_Select_Default_19) == 0x0001F0, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelect::K2Node_Select_Default_19' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetConstruction
// 0x0005 (0x0005 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction final
{
public:
	bool                                          IsConstruction_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction) == 0x000005, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction, IsConstruction_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction::IsConstruction_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction, Temp_bool_Variable) == 0x000001, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction, Temp_byte_Variable) == 0x000002, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction, K2Node_Select_Default) == 0x000004, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetConstruction::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.SetSelectedType
// 0x0002 (0x0002 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType final
{
public:
	EHeroCellSelectedType                         UISelectedType_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType) == 0x000002, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType, UISelectedType_0) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType::UISelectedType_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_SetSelectedType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_HeroPick_HeroCard_Slot_Desktop.WBP_HeroPick_HeroCard_Slot_Desktop_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'WBP_HeroPick_HeroCard_Slot_Desktop_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

}

