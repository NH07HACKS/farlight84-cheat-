#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Notice_Compensation

#include "Basic.hpp"

#include "UI_HUD_Notice_Compensation_classes.hpp"
#include "UI_HUD_Notice_Compensation_parameters.hpp"


namespace SDK
{

// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.ExecuteUbergraph_UI_HUD_Notice_Compensation
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_Compensation_C::ExecuteUbergraph_UI_HUD_Notice_Compensation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "ExecuteUbergraph_UI_HUD_Notice_Compensation");

	Params::UI_HUD_Notice_Compensation_C_ExecuteUbergraph_UI_HUD_Notice_Compensation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.ReceivePlatformLayout
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EUSolarWidgetLayoutType                 InLayoutType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_HUD_Notice_Compensation_C::ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "ReceivePlatformLayout");

	Params::UI_HUD_Notice_Compensation_C_ReceivePlatformLayout Parms{};

	Parms.InLayoutType = InLayoutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_HUD_Notice_Compensation_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.GetEnterAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidgetAnimation* UUI_HUD_Notice_Compensation_C::GetEnterAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "GetEnterAnimation");

	Params::UI_HUD_Notice_Compensation_C_GetEnterAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.GetExitAnimation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidgetAnimation* UUI_HUD_Notice_Compensation_C::GetExitAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "GetExitAnimation");

	Params::UI_HUD_Notice_Compensation_C_GetExitAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_HUD_Notice_Compensation.UI_HUD_Notice_Compensation_C.UpdateStyle
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FNoticeData&               NoticeData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UUI_HUD_Notice_Compensation_C::UpdateStyle(const struct FNoticeData& NoticeData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUD_Notice_Compensation_C", "UpdateStyle");

	Params::UI_HUD_Notice_Compensation_C_UpdateStyle Parms{};

	Parms.NoticeData = std::move(NoticeData);

	UObject::ProcessEvent(Func, &Parms);
}

}

