#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OverlayABP_Skill_Chord

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// DynamicClass OverlayABP_Skill_Chord.OverlayABP_Skill_Chord_C
// 0x0820 (0x0B90 - 0x0370)
class UOverlayABP_Skill_Chord_C final : public USolarSpecABP_Skill
{
public:
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0370(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03A0(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0418(0x00C0)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x04D8(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0500(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0528(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0550(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0578(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0600(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x0688(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x06E0(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0738(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07B0(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07E0(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0868(0x0088)(NativeAccessSpecifierPublic)
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x08F0(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x0948(0x0058)(NativeAccessSpecifierPublic)
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x09A0(0x0078)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0A18(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0A48(0x0028)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0A70(0x0030)(NativeAccessSpecifierPublic)
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0AA0(0x00B0)(NativeAccessSpecifierPublic)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0B50(0x0030)(NativeAccessSpecifierPublic)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0B80(0x0004)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B84[0xC];                                      // 0x0B84(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimGraph(struct FPoseLink* bpp__AnimGraph__pf);
	void BlueprintUpdateAnimation(float bpp__DeltaTimeX__pf);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_BlendListByBool_1102524F460F2596B6D9A494B2D6DABB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_BlendListByBool_B56E88154E4837BDA831CC9BD681D1FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_TransitionResult_4AC9C26D43D70972E62572983A16640F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_TransitionResult_98E3CE644DC5B107C50212942D5B788D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_TransitionResult_AF4521D0413FA8101489ACAE4C6C9D16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_OverlayABP_Skill_Chord_AnimGraphNode_TransitionResult_FF84092C415447E38F3855B47CE9C9AF();
	void OverlaySkillAnimationLayer(const struct FPoseLink& bpp__BasePose__pf, struct FPoseLink* bpp__OverlaySkillAnimationLayer__pf);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OverlayABP_Skill_Chord_C">();
	}
	static class UOverlayABP_Skill_Chord_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOverlayABP_Skill_Chord_C>();
	}
};
static_assert(alignof(UOverlayABP_Skill_Chord_C) == 0x000010, "Wrong alignment on UOverlayABP_Skill_Chord_C");
static_assert(sizeof(UOverlayABP_Skill_Chord_C) == 0x000B90, "Wrong size on UOverlayABP_Skill_Chord_C");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_Root_1) == 0x000370, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_LinkedInputPose) == 0x0003A0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_SaveCachedPose) == 0x000418, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_TransitionResult_3) == 0x0004D8, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_TransitionResult_2) == 0x000500, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_TransitionResult_1) == 0x000528, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_TransitionResult) == 0x000550, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_SequencePlayer_3) == 0x000578, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_SequencePlayer_2) == 0x000600, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_ModifyCurve_3) == 0x000688, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_ModifyCurve_2) == 0x0006E0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_BlendListByBool_1) == 0x000738, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_StateResult_2) == 0x0007B0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_SequencePlayer_1) == 0x0007E0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_SequencePlayer) == 0x000868, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_ModifyCurve_1) == 0x0008F0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_ModifyCurve) == 0x000948, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_BlendListByBool) == 0x0009A0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_StateResult_1) == 0x000A18, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_UseCachedPose) == 0x000A48, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_StateResult) == 0x000A70, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_StateMachine) == 0x000AA0, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, AnimGraphNode_Root) == 0x000B50, "Member 'UOverlayABP_Skill_Chord_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UOverlayABP_Skill_Chord_C, K2Node_Event_DeltaTimeX) == 0x000B80, "Member 'UOverlayABP_Skill_Chord_C::K2Node_Event_DeltaTimeX' has a wrong offset!");

}

