#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Tips_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "E_Type_Mouse_structs.hpp"
#include "E_KeyPromptStyle_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Tips_HUD.UI_Component_Tips_HUD_C
// 0x00B8 (0x0890 - 0x07D8)
class UUI_Component_Tips_HUD_C final : public UHUDTipsWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_Component_Btn_S_C*                  Btn_Left;                                          // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Btn_S_C*                  Btn_Right;                                         // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Btn_S_C*                  Btn_Right_Sec;                                     // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BtnBox;                                            // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Component_Tips_Bg_C*                Img_Bg;                                            // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Frame;                                         // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_FullBg;                                        // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_QualityTag;                                    // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        Key_1;                                             // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        Key_2;                                             // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        Key_3;                                             // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Invalid_Mobile;                            // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Invalid_PC;                                // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Panel_Btn_Right;                                   // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Panel_Tag;                                         // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Key;                                          // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Weapon_Tag_Special_C*               Tag_Special;                                       // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_Effect;                                        // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsPC;                                             // 0x0880(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETipsInputPreset                              PokeBallInputPreset;                               // 0x0881(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882[0x2];                                      // 0x0882(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PickLocID;                                         // 0x0884(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBagScopeSlotType                             CurrentSlot;                                       // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackOperationType                        LeftOperationType;                                 // 0x0889(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBackpackOperationType                        RightOperationType;                                // 0x088A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GeneralSlot;                                       // 0x088B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetHeroCoreTip();
	void SetKeyCardTip();
	void SetPickupEquipTip();
	void SetPickupReplaceTip();
	void SetBtnRight(int32 LocID);
	void UpdateTIpsByEquipAction(ETipsInputPreset TipsInputPreset);
	void SetTacticalEquipmentTip();
	void SetBtnLeft(int32 LocID);
	void SetButtons(int32 LeftLocID, int32 RightLocID);
	void SetItemTips();
	void SetBackpackSlotTips();
	void Set_Poke_Ball_Tips();
	void SetEmptySlotTip();
	void SetWeaponPartTip();
	void SetBagWeaponPartTip();
	void CheckDisablePassive();
	void SetProgressBarStyle(bool bShowBar);
	void SetHoldProgressBar(float CurrentPercent);
	void SetMouseType(E_Type_Mouse Key1MouseType, E_Type_Mouse Key2MouseType);
	void SetKeyPromptTips(ETipsInputPreset TipStyle, int32 Key1LocID, int32 Key2LocID);
	void SetEquipmentTip();
	void SetBulletTip();
	void Set_Weapon_Tip();
	void SetConsumableTip();
	void SetFullWidget(bool bShowWidget);
	void UpdatePokeBallInputPreset(EBagScopeSlotType Slot_0);
	void UpdatePokeBallBtnState(EBagScopeSlotType Slot_0);
	void UpdateInputInfo(const struct FTipsInputInfo& InputInfo);
	void UnbindBuddyBallOperation();
	void UpdateProgressBar(bool bReset);
	void UpdateProgressPanel(bool bReset);
	void SetStyle(ETipsStyleType Style, EBagScopeSlotType SlotType, const bool bIsDesktop);
	void SetQuality(EItemQualityType Quality);
	void EquipPassiveBuddy();
	void EquipActiveBuddy();
	void RemovePassiveBuddy();
	void BindBuddyBallOperation();
	void LeftButtonOperation();
	void RightButtonOperation();
	void BindBackpackOperation();
	void UnbindBackpackOperation();
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void UpdateTipsByAction(EBackpackOperationType InOperationType, ETipsInputPreset InInputPreset);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_UI_Component_Tips_HUD(int32 EntryPoint);
	void SetPickupTip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Tips_HUD_C">();
	}
	static class UUI_Component_Tips_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Tips_HUD_C>();
	}
};
static_assert(alignof(UUI_Component_Tips_HUD_C) == 0x000008, "Wrong alignment on UUI_Component_Tips_HUD_C");
static_assert(sizeof(UUI_Component_Tips_HUD_C) == 0x000890, "Wrong size on UUI_Component_Tips_HUD_C");
static_assert(offsetof(UUI_Component_Tips_HUD_C, UberGraphFrame) == 0x0007D8, "Member 'UUI_Component_Tips_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Btn_Left) == 0x0007E0, "Member 'UUI_Component_Tips_HUD_C::Btn_Left' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Btn_Right) == 0x0007E8, "Member 'UUI_Component_Tips_HUD_C::Btn_Right' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Btn_Right_Sec) == 0x0007F0, "Member 'UUI_Component_Tips_HUD_C::Btn_Right_Sec' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, BtnBox) == 0x0007F8, "Member 'UUI_Component_Tips_HUD_C::BtnBox' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, HorizontalBox_0) == 0x000800, "Member 'UUI_Component_Tips_HUD_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Img_Bg) == 0x000808, "Member 'UUI_Component_Tips_HUD_C::Img_Bg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Img_Frame) == 0x000810, "Member 'UUI_Component_Tips_HUD_C::Img_Frame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Img_FullBg) == 0x000818, "Member 'UUI_Component_Tips_HUD_C::Img_FullBg' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Img_QualityTag) == 0x000820, "Member 'UUI_Component_Tips_HUD_C::Img_QualityTag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Key_1) == 0x000828, "Member 'UUI_Component_Tips_HUD_C::Key_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Key_2) == 0x000830, "Member 'UUI_Component_Tips_HUD_C::Key_2' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Key_3) == 0x000838, "Member 'UUI_Component_Tips_HUD_C::Key_3' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Overlay_Invalid_Mobile) == 0x000840, "Member 'UUI_Component_Tips_HUD_C::Overlay_Invalid_Mobile' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Overlay_Invalid_PC) == 0x000848, "Member 'UUI_Component_Tips_HUD_C::Overlay_Invalid_PC' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Panel_Btn_Right) == 0x000850, "Member 'UUI_Component_Tips_HUD_C::Panel_Btn_Right' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Panel_Tag) == 0x000858, "Member 'UUI_Component_Tips_HUD_C::Panel_Tag' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Size_Key) == 0x000860, "Member 'UUI_Component_Tips_HUD_C::Size_Key' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, SizeBox_1) == 0x000868, "Member 'UUI_Component_Tips_HUD_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Tag_Special) == 0x000870, "Member 'UUI_Component_Tips_HUD_C::Tag_Special' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, Txt_Effect) == 0x000878, "Member 'UUI_Component_Tips_HUD_C::Txt_Effect' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, bIsPC) == 0x000880, "Member 'UUI_Component_Tips_HUD_C::bIsPC' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, PokeBallInputPreset) == 0x000881, "Member 'UUI_Component_Tips_HUD_C::PokeBallInputPreset' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, PickLocID) == 0x000884, "Member 'UUI_Component_Tips_HUD_C::PickLocID' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, CurrentSlot) == 0x000888, "Member 'UUI_Component_Tips_HUD_C::CurrentSlot' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, LeftOperationType) == 0x000889, "Member 'UUI_Component_Tips_HUD_C::LeftOperationType' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, RightOperationType) == 0x00088A, "Member 'UUI_Component_Tips_HUD_C::RightOperationType' has a wrong offset!");
static_assert(offsetof(UUI_Component_Tips_HUD_C, GeneralSlot) == 0x00088B, "Member 'UUI_Component_Tips_HUD_C::GeneralSlot' has a wrong offset!");

}

