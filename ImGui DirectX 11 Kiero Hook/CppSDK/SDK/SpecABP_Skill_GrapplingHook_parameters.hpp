#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecABP_Skill_GrapplingHook

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SpecABP_Skill_GrapplingHook.SpecABP_Skill_GrapplingHook_C.ExecuteUbergraph_SpecABP_Skill_GrapplingHook
// 0x0018 (0x0018 - 0x0000)
struct SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook) == 0x000004, "Wrong alignment on SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook");
static_assert(sizeof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook) == 0x000018, "Wrong size on SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, EntryPoint) == 0x000000, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000004, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000010, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000014, "Member 'SpecABP_Skill_GrapplingHook_C_ExecuteUbergraph_SpecABP_Skill_GrapplingHook::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SpecABP_Skill_GrapplingHook.SpecABP_Skill_GrapplingHook_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct SpecABP_Skill_GrapplingHook_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SpecABP_Skill_GrapplingHook_C_AnimGraph) == 0x000008, "Wrong alignment on SpecABP_Skill_GrapplingHook_C_AnimGraph");
static_assert(sizeof(SpecABP_Skill_GrapplingHook_C_AnimGraph) == 0x000010, "Wrong size on SpecABP_Skill_GrapplingHook_C_AnimGraph");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'SpecABP_Skill_GrapplingHook_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function SpecABP_Skill_GrapplingHook.SpecABP_Skill_GrapplingHook_C.SkillAnimationLayer
// 0x0020 (0x0020 - 0x0000)
struct SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer final
{
public:
	struct FPoseLink                              BasePose;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              SkillAnimationLayer_0;                             // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer) == 0x000008, "Wrong alignment on SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer");
static_assert(sizeof(SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer) == 0x000020, "Wrong size on SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer, BasePose) == 0x000000, "Member 'SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer::BasePose' has a wrong offset!");
static_assert(offsetof(SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer, SkillAnimationLayer_0) == 0x000010, "Member 'SpecABP_Skill_GrapplingHook_C_SkillAnimationLayer::SkillAnimationLayer_0' has a wrong offset!");

}

