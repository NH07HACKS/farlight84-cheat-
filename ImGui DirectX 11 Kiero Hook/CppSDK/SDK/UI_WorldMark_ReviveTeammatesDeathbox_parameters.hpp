#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WorldMark_ReviveTeammatesDeathbox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.Set Player ID And Change Color
// 0x0020 (0x0020 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color final
{
public:
	class FString                                 PlayerID_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_FindPlayerByPlayerID_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color) == 0x000020, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color, PlayerID_0) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color::PlayerID_0' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color, CallFunc_FindPlayerByPlayerID_ReturnValue) == 0x000010, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color::CallFunc_FindPlayerByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Set_Player_ID_And_Change_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.SetColor
// 0x0040 (0x0040 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor final
{
public:
	uint8                                         Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor) == 0x000040, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, Index_0) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::Index_0' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000001, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, CallFunc_BMax_ReturnValue) == 0x000002, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::CallFunc_BMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, CallFunc_Array_Get_Item) == 0x000008, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.GetVisibility_0
// 0x0010 (0x0010 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0) == 0x000010, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, CallFunc_GetDistance_ReturnValue) == 0x000004, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0, K2Node_Select_Default) == 0x00000D, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.Get_Distance_Text
// 0x0058 (0x0058 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text) == 0x000058, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, ReturnValue) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, CallFunc_GetDistance_ReturnValue) == 0x000018, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, CallFunc_FFloor_ReturnValue) == 0x00001C, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Get_Distance_Text::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.SetIcon
// 0x0018 (0x0018 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         隐藏距离;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon) == 0x000018, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon, Content) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon::Content' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon, 隐藏距离) == 0x000008, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon::隐藏距离' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_SetIcon::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_Tick) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_Tick");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_Tick) == 0x00003C, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_Tick");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Tick, MyGeometry) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct) == 0x000001, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct) == 0x000001, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammatesDeathbox.UI_WorldMark_ReviveTeammatesDeathbox_C.ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox
// 0x00D8 (0x00D8 - 0x0000)
struct UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            Temp_string_Variable;                              // 0x0008(0x0050)(ConstParm)
	class FString                                 CallFunc_GetNoticeFormatText_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0068(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Get_Distance_Text_ReturnValue;            // 0x00B0(0x0018)()
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox");
static_assert(sizeof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox) == 0x0000D8, "Wrong size on UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, EntryPoint) == 0x000000, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, Temp_string_Variable) == 0x000008, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, CallFunc_GetNoticeFormatText_ReturnValue) == 0x000058, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::CallFunc_GetNoticeFormatText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, K2Node_Event_MyGeometry) == 0x000068, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, K2Node_Event_InDeltaTime) == 0x0000A0, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A8, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, CallFunc_Get_Distance_Text_ReturnValue) == 0x0000B0, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::CallFunc_Get_Distance_Text_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, CallFunc_GetSize_ReturnValue) == 0x0000C8, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'UI_WorldMark_ReviveTeammatesDeathbox_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammatesDeathbox::K2Node_Event_IsDesignTime' has a wrong offset!");

}

