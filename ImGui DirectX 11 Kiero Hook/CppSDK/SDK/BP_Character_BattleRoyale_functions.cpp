#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Character_BattleRoyale

#include "Basic.hpp"

#include "BP_Character_BattleRoyale_classes.hpp"
#include "BP_Character_BattleRoyale_parameters.hpp"


namespace SDK
{

// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.GetWeaponLevelDamageBonus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_BattleRoyale_C::GetWeaponLevelDamageBonus(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "GetWeaponLevelDamageBonus");

	Params::BP_Character_BattleRoyale_C_GetWeaponLevelDamageBonus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.Death Cleanup UI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Character_BattleRoyale_C::Death_Cleanup_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "Death Cleanup UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.TakeDamageResolve
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class ASCMPlayerState*                  EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_Character_BattleRoyale_C::TakeDamageResolve(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "TakeDamageResolve");

	Params::BP_Character_BattleRoyale_C_TakeDamageResolve Parms{};

	Parms.Damage = Damage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.SetReviveCameraFade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_BattleRoyale_C::SetReviveCameraFade(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "SetReviveCameraFade");

	Params::BP_Character_BattleRoyale_C_SetReviveCameraFade Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Character_BattleRoyale_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.Debug Set DayAndNightTime
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_BattleRoyale_C::Debug_Set_DayAndNightTime(float Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "Debug Set DayAndNightTime");

	Params::BP_Character_BattleRoyale_C_Debug_Set_DayAndNightTime Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.SetMapID
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_BattleRoyale_C::SetMapID(int32 MapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "SetMapID");

	Params::BP_Character_BattleRoyale_C_SetMapID Parms{};

	Parms.MapID = MapID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.BeginPlayBlueprint
// (Event, Protected, BlueprintEvent)

void ABP_Character_BattleRoyale_C::BeginPlayBlueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "BeginPlayBlueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.ExecuteUbergraph_BP_Character_BattleRoyale
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Character_BattleRoyale_C::ExecuteUbergraph_BP_Character_BattleRoyale(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "ExecuteUbergraph_BP_Character_BattleRoyale");

	Params::BP_Character_BattleRoyale_C_ExecuteUbergraph_BP_Character_BattleRoyale Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Character_BattleRoyale.BP_Character_BattleRoyale_C.OnShouldTakeDamage
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FSolarPointDamageEvent&    DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class ASCMPlayerState*                  EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Character_BattleRoyale_C::OnShouldTakeDamage(float Damage, const struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Character_BattleRoyale_C", "OnShouldTakeDamage");

	Params::BP_Character_BattleRoyale_C_OnShouldTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

