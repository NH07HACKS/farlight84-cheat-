#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_EmptyState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_EmptyState.UI_Component_EmptyState_C
// 0x0070 (0x0660 - 0x05F0)
class UUI_Component_EmptyState_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_None;                                          // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_MainTitle;                               // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_SubTxt;                                  // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Main;                                      // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Txt;                                       // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Text_SubNone;                                      // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarTextBlock*                        Txt_MainNotice;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          UseSubText;                                        // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0638(0x0018)(Edit, BlueprintVisible)
	bool                                          UseLocID;                                          // 0x0650(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubLocalID;                                        // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESolarSupportLanguages                        Preview_Language;                                  // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMainTxt;                                        // 0x0659(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x065A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65B[0x1];                                      // 0x065B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MainLocalID;                                       // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Component_EmptyState(int32 EntryPoint);
	void OnChangeAdapterSlotWidgetParameters(const TArray<struct FWidgetOverrideParam>& Params_0);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void PreConstruct(bool IsDesignTime);
	void OnLoadAdapterSlotWidgetFinished();
	void SetLocID(int32 LocID, bool UseLocID_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_EmptyState_C">();
	}
	static class UUI_Component_EmptyState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_EmptyState_C>();
	}
};
static_assert(alignof(UUI_Component_EmptyState_C) == 0x000008, "Wrong alignment on UUI_Component_EmptyState_C");
static_assert(sizeof(UUI_Component_EmptyState_C) == 0x000660, "Wrong size on UUI_Component_EmptyState_C");
static_assert(offsetof(UUI_Component_EmptyState_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Component_EmptyState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Img_None) == 0x0005F8, "Member 'UUI_Component_EmptyState_C::Img_None' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, NamedSlot_MainTitle) == 0x000600, "Member 'UUI_Component_EmptyState_C::NamedSlot_MainTitle' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, NamedSlot_SubTxt) == 0x000608, "Member 'UUI_Component_EmptyState_C::NamedSlot_SubTxt' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Overlay_Main) == 0x000610, "Member 'UUI_Component_EmptyState_C::Overlay_Main' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Overlay_Txt) == 0x000618, "Member 'UUI_Component_EmptyState_C::Overlay_Txt' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Text_SubNone) == 0x000620, "Member 'UUI_Component_EmptyState_C::Text_SubNone' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Txt_MainNotice) == 0x000628, "Member 'UUI_Component_EmptyState_C::Txt_MainNotice' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, UseSubText) == 0x000630, "Member 'UUI_Component_EmptyState_C::UseSubText' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Text) == 0x000638, "Member 'UUI_Component_EmptyState_C::Text' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, UseLocID) == 0x000650, "Member 'UUI_Component_EmptyState_C::UseLocID' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, SubLocalID) == 0x000654, "Member 'UUI_Component_EmptyState_C::SubLocalID' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, Preview_Language) == 0x000658, "Member 'UUI_Component_EmptyState_C::Preview_Language' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, UseMainTxt) == 0x000659, "Member 'UUI_Component_EmptyState_C::UseMainTxt' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, NewVar_0) == 0x00065A, "Member 'UUI_Component_EmptyState_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UUI_Component_EmptyState_C, MainLocalID) == 0x00065C, "Member 'UUI_Component_EmptyState_C::MainLocalID' has a wrong offset!");

}

