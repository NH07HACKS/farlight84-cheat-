#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Hud_Chat

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Hud_Chat.UI_Hud_Chat_C.ExecuteUbergraph_UI_Hud_Chat
// 0x0038 (0x0038 - 0x0000)
struct UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Position;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatGroupType                                K2Node_Event_Type;                                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Name;                                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Message;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat) == 0x000008, "Wrong alignment on UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat");
static_assert(sizeof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat) == 0x000038, "Wrong size on UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, EntryPoint) == 0x000000, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_Event_Position) == 0x000008, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_Event_Position' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_Event_Type) == 0x00000C, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_Event_Name) == 0x000010, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_Event_Message) == 0x000020, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'UI_Hud_Chat_C_ExecuteUbergraph_UI_Hud_Chat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Hud_Chat_C_PreConstruct");
static_assert(sizeof(UI_Hud_Chat_C_PreConstruct) == 0x000001, "Wrong size on UI_Hud_Chat_C_PreConstruct");
static_assert(offsetof(UI_Hud_Chat_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Hud_Chat_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.UpdatePreviewModeShow
// 0x0028 (0x0028 - 0x0000)
struct UI_Hud_Chat_C_UpdatePreviewModeShow final
{
public:
	int32                                         Position;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatGroupType                                Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_C_UpdatePreviewModeShow) == 0x000008, "Wrong alignment on UI_Hud_Chat_C_UpdatePreviewModeShow");
static_assert(sizeof(UI_Hud_Chat_C_UpdatePreviewModeShow) == 0x000028, "Wrong size on UI_Hud_Chat_C_UpdatePreviewModeShow");
static_assert(offsetof(UI_Hud_Chat_C_UpdatePreviewModeShow, Position) == 0x000000, "Member 'UI_Hud_Chat_C_UpdatePreviewModeShow::Position' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_UpdatePreviewModeShow, Type) == 0x000004, "Member 'UI_Hud_Chat_C_UpdatePreviewModeShow::Type' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_UpdatePreviewModeShow, Name_0) == 0x000008, "Member 'UI_Hud_Chat_C_UpdatePreviewModeShow::Name_0' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_UpdatePreviewModeShow, Message) == 0x000018, "Member 'UI_Hud_Chat_C_UpdatePreviewModeShow::Message' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.SetMessageHigh
// 0x0018 (0x0018 - 0x0000)
struct UI_Hud_Chat_C_SetMessageHigh final
{
public:
	bool                                          IsCombat;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_C_SetMessageHigh) == 0x000004, "Wrong alignment on UI_Hud_Chat_C_SetMessageHigh");
static_assert(sizeof(UI_Hud_Chat_C_SetMessageHigh) == 0x000018, "Wrong size on UI_Hud_Chat_C_SetMessageHigh");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, IsCombat) == 0x000000, "Member 'UI_Hud_Chat_C_SetMessageHigh::IsCombat' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_bool_Variable) == 0x000001, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_byte_Variable) == 0x000002, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, K2Node_Select_Default) == 0x000005, "Member 'UI_Hud_Chat_C_SetMessageHigh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_float_Variable) == 0x000008, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, Temp_float_Variable_1) == 0x00000C, "Member 'UI_Hud_Chat_C_SetMessageHigh::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, K2Node_Select_Default_1) == 0x000010, "Member 'UI_Hud_Chat_C_SetMessageHigh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_SetMessageHigh, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000014, "Member 'UI_Hud_Chat_C_SetMessageHigh::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.AddSubtitle
// 0x0028 (0x0028 - 0x0000)
struct UI_Hud_Chat_C_AddSubtitle final
{
public:
	EChatGroupType                                InType;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PosInTeam;                                         // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Hud_Chat_C_AddSubtitle) == 0x000008, "Wrong alignment on UI_Hud_Chat_C_AddSubtitle");
static_assert(sizeof(UI_Hud_Chat_C_AddSubtitle) == 0x000028, "Wrong size on UI_Hud_Chat_C_AddSubtitle");
static_assert(offsetof(UI_Hud_Chat_C_AddSubtitle, InType) == 0x000000, "Member 'UI_Hud_Chat_C_AddSubtitle::InType' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_AddSubtitle, PosInTeam) == 0x000004, "Member 'UI_Hud_Chat_C_AddSubtitle::PosInTeam' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_AddSubtitle, Name_0) == 0x000008, "Member 'UI_Hud_Chat_C_AddSubtitle::Name_0' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_C_AddSubtitle, Message) == 0x000018, "Member 'UI_Hud_Chat_C_AddSubtitle::Message' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.ScrollChatListViewInner
// 0x0004 (0x0004 - 0x0000)
struct UI_Hud_Chat_C_ScrollChatListViewInner final
{
public:
	float                                         Interval;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Hud_Chat_C_ScrollChatListViewInner) == 0x000004, "Wrong alignment on UI_Hud_Chat_C_ScrollChatListViewInner");
static_assert(sizeof(UI_Hud_Chat_C_ScrollChatListViewInner) == 0x000004, "Wrong size on UI_Hud_Chat_C_ScrollChatListViewInner");
static_assert(offsetof(UI_Hud_Chat_C_ScrollChatListViewInner, Interval) == 0x000000, "Member 'UI_Hud_Chat_C_ScrollChatListViewInner::Interval' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.UpdateListViewShow
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_C_UpdateListViewShow final
{
public:
	bool                                          bSelfUpdate;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Hud_Chat_C_UpdateListViewShow) == 0x000001, "Wrong alignment on UI_Hud_Chat_C_UpdateListViewShow");
static_assert(sizeof(UI_Hud_Chat_C_UpdateListViewShow) == 0x000001, "Wrong size on UI_Hud_Chat_C_UpdateListViewShow");
static_assert(offsetof(UI_Hud_Chat_C_UpdateListViewShow, bSelfUpdate) == 0x000000, "Member 'UI_Hud_Chat_C_UpdateListViewShow::bSelfUpdate' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.LuaSetInGameChatScene
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_C_LuaSetInGameChatScene final
{
public:
	EInGameChatSceneType                          ChatScene;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Hud_Chat_C_LuaSetInGameChatScene) == 0x000001, "Wrong alignment on UI_Hud_Chat_C_LuaSetInGameChatScene");
static_assert(sizeof(UI_Hud_Chat_C_LuaSetInGameChatScene) == 0x000001, "Wrong size on UI_Hud_Chat_C_LuaSetInGameChatScene");
static_assert(offsetof(UI_Hud_Chat_C_LuaSetInGameChatScene, ChatScene) == 0x000000, "Member 'UI_Hud_Chat_C_LuaSetInGameChatScene::ChatScene' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.LuaOnMouseStateChange
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_C_LuaOnMouseStateChange final
{
public:
	bool                                          bMouseMoveIn;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_Hud_Chat_C_LuaOnMouseStateChange) == 0x000001, "Wrong alignment on UI_Hud_Chat_C_LuaOnMouseStateChange");
static_assert(sizeof(UI_Hud_Chat_C_LuaOnMouseStateChange) == 0x000001, "Wrong size on UI_Hud_Chat_C_LuaOnMouseStateChange");
static_assert(offsetof(UI_Hud_Chat_C_LuaOnMouseStateChange, bMouseMoveIn) == 0x000000, "Member 'UI_Hud_Chat_C_LuaOnMouseStateChange::bMouseMoveIn' has a wrong offset!");

// Function UI_Hud_Chat.UI_Hud_Chat_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Hud_Chat_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Hud_Chat_C_GetModuleName");
static_assert(sizeof(UI_Hud_Chat_C_GetModuleName) == 0x000010, "Wrong size on UI_Hud_Chat_C_GetModuleName");
static_assert(offsetof(UI_Hud_Chat_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Hud_Chat_C_GetModuleName::ReturnValue' has a wrong offset!");

}

