#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Buff

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Buff.UI_HUD_Buff_C.ExecuteUbergraph_UI_HUD_Buff
// 0x0008 (0x0008 - 0x0000)
struct UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff) == 0x000004, "Wrong alignment on UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff");
static_assert(sizeof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff) == 0x000008, "Wrong size on UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff");
static_assert(offsetof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff, EntryPoint) == 0x000000, "Member 'UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff, K2Node_Event_bIsExpanded) == 0x000004, "Member 'UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff, K2Node_Event_bIsSelected) == 0x000005, "Member 'UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff, K2Node_Event_InLayoutType) == 0x000006, "Member 'UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'UI_HUD_Buff_C_ExecuteUbergraph_UI_HUD_Buff::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_HUD_Buff.UI_HUD_Buff_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Buff_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Buff_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_HUD_Buff_C_ReceivePlatformLayout");
static_assert(sizeof(UI_HUD_Buff_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_HUD_Buff_C_ReceivePlatformLayout");
static_assert(offsetof(UI_HUD_Buff_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_HUD_Buff_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_HUD_Buff.UI_HUD_Buff_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Buff_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Buff_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_HUD_Buff_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_HUD_Buff_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_HUD_Buff_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_HUD_Buff_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_HUD_Buff_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_HUD_Buff.UI_HUD_Buff_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Buff_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Buff_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_HUD_Buff_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_HUD_Buff_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_HUD_Buff_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_HUD_Buff_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_HUD_Buff_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_HUD_Buff.UI_HUD_Buff_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_HUD_Buff_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

}

