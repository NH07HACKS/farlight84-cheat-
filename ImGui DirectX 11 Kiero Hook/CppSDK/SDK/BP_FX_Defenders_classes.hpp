#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_Defenders

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_Defenders.BP_FX_Defenders_C
// 0x0020 (0x02F8 - 0x02D8)
class ABP_FX_Defenders_C final : public ASolarTrailEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               FX_DropPathSmallDefenderFinal_Trail;               // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayer;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FXMulti;                                           // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnFinished();
	void GetFXDistance(float* Distance);
	void AttachToCharacter(const class ASolarCharacter* Character);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_FX_Defenders(int32 EntryPoint);

	struct FTransform GetTrackingTransform(const class ASolarCharacter* Character) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_Defenders_C">();
	}
	static class ABP_FX_Defenders_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_Defenders_C>();
	}
};
static_assert(alignof(ABP_FX_Defenders_C) == 0x000008, "Wrong alignment on ABP_FX_Defenders_C");
static_assert(sizeof(ABP_FX_Defenders_C) == 0x0002F8, "Wrong size on ABP_FX_Defenders_C");
static_assert(offsetof(ABP_FX_Defenders_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_FX_Defenders_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FX_Defenders_C, FX_DropPathSmallDefenderFinal_Trail) == 0x0002E0, "Member 'ABP_FX_Defenders_C::FX_DropPathSmallDefenderFinal_Trail' has a wrong offset!");
static_assert(offsetof(ABP_FX_Defenders_C, DefaultSceneRoot) == 0x0002E8, "Member 'ABP_FX_Defenders_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FX_Defenders_C, IsPlayer) == 0x0002F0, "Member 'ABP_FX_Defenders_C::IsPlayer' has a wrong offset!");
static_assert(offsetof(ABP_FX_Defenders_C, FXMulti) == 0x0002F4, "Member 'ABP_FX_Defenders_C::FXMulti' has a wrong offset!");

}

