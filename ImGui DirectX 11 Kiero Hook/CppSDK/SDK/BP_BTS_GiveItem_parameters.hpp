#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTS_GiveItem

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BTS_GiveItem.BP_BTS_GiveItem_C.ExecuteUbergraph_BP_BTS_GiveItem
// 0x0068 (0x0068 - 0x0000)
struct BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentShieldLevel_ReturnValue;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem) == 0x000008, "Wrong alignment on BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem");
static_assert(sizeof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem) == 0x000068, "Wrong size on BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, EntryPoint) == 0x000000, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_OwnerController_1) == 0x000020, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_ControlledPawn_1) == 0x000028, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_DynamicCast_AsSolar_Character) == 0x000038, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_GetCurrentShieldLevel_ReturnValue) == 0x000044, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_GetCurrentShieldLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_OwnerController) == 0x000050, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, K2Node_Event_ControlledPawn) == 0x000058, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000060, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000064, "Member 'BP_BTS_GiveItem_C_ExecuteUbergraph_BP_BTS_GiveItem::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");

// Function BP_BTS_GiveItem.BP_BTS_GiveItem_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BP_BTS_GiveItem_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTS_GiveItem_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BP_BTS_GiveItem_C_ReceiveActivationAI");
static_assert(sizeof(BP_BTS_GiveItem_C_ReceiveActivationAI) == 0x000010, "Wrong size on BP_BTS_GiveItem_C_ReceiveActivationAI");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BP_BTS_GiveItem_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveActivationAI, ControlledPawn_0) == 0x000008, "Member 'BP_BTS_GiveItem_C_ReceiveActivationAI::ControlledPawn_0' has a wrong offset!");

// Function BP_BTS_GiveItem.BP_BTS_GiveItem_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BP_BTS_GiveItem_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTS_GiveItem_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BP_BTS_GiveItem_C_ReceiveTickAI");
static_assert(sizeof(BP_BTS_GiveItem_C_ReceiveTickAI) == 0x000018, "Wrong size on BP_BTS_GiveItem_C_ReceiveTickAI");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BP_BTS_GiveItem_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveTickAI, ControlledPawn_0) == 0x000008, "Member 'BP_BTS_GiveItem_C_ReceiveTickAI::ControlledPawn_0' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BP_BTS_GiveItem_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BP_BTS_GiveItem.BP_BTS_GiveItem_C.ReceiveSearchStartAI
// 0x0010 (0x0010 - 0x0000)
struct BP_BTS_GiveItem_C_ReceiveSearchStartAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTS_GiveItem_C_ReceiveSearchStartAI) == 0x000008, "Wrong alignment on BP_BTS_GiveItem_C_ReceiveSearchStartAI");
static_assert(sizeof(BP_BTS_GiveItem_C_ReceiveSearchStartAI) == 0x000010, "Wrong size on BP_BTS_GiveItem_C_ReceiveSearchStartAI");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveSearchStartAI, OwnerController) == 0x000000, "Member 'BP_BTS_GiveItem_C_ReceiveSearchStartAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BP_BTS_GiveItem_C_ReceiveSearchStartAI, ControlledPawn_0) == 0x000008, "Member 'BP_BTS_GiveItem_C_ReceiveSearchStartAI::ControlledPawn_0' has a wrong offset!");

}

