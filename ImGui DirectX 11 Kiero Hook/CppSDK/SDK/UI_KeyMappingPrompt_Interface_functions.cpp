#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_KeyMappingPrompt_Interface

#include "Basic.hpp"

#include "UI_KeyMappingPrompt_Interface_classes.hpp"
#include "UI_KeyMappingPrompt_Interface_parameters.hpp"


namespace SDK
{

// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.SetKeyPromptCustomInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_KeyPrompt&              InInfo                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::SetKeyPromptCustomInfo(const struct FS_KeyPrompt& InInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "SetKeyPromptCustomInfo");

	Params::UI_KeyMappingPrompt_Interface_C_SetKeyPromptCustomInfo Parms{};

	Parms.InInfo = std::move(InInfo);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.SetStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_KeyPromptStyle                        Style                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::SetStyle(E_KeyPromptStyle Style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "SetStyle");

	Params::UI_KeyMappingPrompt_Interface_C_SetStyle Parms{};

	Parms.Style = Style;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.SetMouseType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Type_Mouse                            MouseType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::SetMouseType(E_Type_Mouse MouseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "SetMouseType");

	Params::UI_KeyMappingPrompt_Interface_C_SetMouseType Parms{};

	Parms.MouseType = MouseType;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.Update Key Prompt Custom Info
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_KeyPrompt&              CustomInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::Update_Key_Prompt_Custom_Info(const struct FS_KeyPrompt& CustomInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "Update Key Prompt Custom Info");

	Params::UI_KeyMappingPrompt_Interface_C_Update_Key_Prompt_Custom_Info Parms{};

	Parms.CustomInfo = std::move(CustomInfo);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.SetCustomText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    InCustomText                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::SetCustomText(const class FString& InCustomText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "SetCustomText");

	Params::UI_KeyMappingPrompt_Interface_C_SetCustomText Parms{};

	Parms.InCustomText = std::move(InCustomText);

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.SetHover
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hover                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IUI_KeyMappingPrompt_Interface_C::SetHover(bool Hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "SetHover");

	Params::UI_KeyMappingPrompt_Interface_C_SetHover Parms{};

	Parms.Hover = Hover;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.GetKeyMappingProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarComponentKeyProgress**      NewParam                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::GetKeyMappingProgress(class USolarComponentKeyProgress** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "GetKeyMappingProgress");

	Params::UI_KeyMappingPrompt_Interface_C_GetKeyMappingProgress Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function UI_KeyMappingPrompt_Interface.UI_KeyMappingPrompt_Interface_C.GetKeyMappingProgressAdapter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarAdapterWidget**             AdapterProgress                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IUI_KeyMappingPrompt_Interface_C::GetKeyMappingProgressAdapter(class USolarAdapterWidget** AdapterProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("UI_KeyMappingPrompt_Interface_C", "GetKeyMappingProgressAdapter");

	Params::UI_KeyMappingPrompt_Interface_C_GetKeyMappingProgressAdapter Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (AdapterProgress != nullptr)
		*AdapterProgress = Parms.AdapterProgress;
}

}

