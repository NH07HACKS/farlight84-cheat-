#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BTS_TeamTaskAllocator

#include "Basic.hpp"

#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.SelfUpdateTaskState
// 0x0078 (0x0078 - 0x0000)
struct BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState final
{
public:
	class ASolarCharacter*                        RescueTarget;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarBotAITeamManager*                 CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarBotAITeamManager*                 CallFunc_Get_ReturnValue_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarBotAITeamManager*                 CallFunc_Get_ReturnValue_2;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerState*                      CallFunc_GetSolarPlayerState_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingRescue_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerWaitingForTeammatesHelp_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsAlive_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCancelCurrentRescueTarget_ReturnValue; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState) == 0x000008, "Wrong alignment on BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState");
static_assert(sizeof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState) == 0x000078, "Wrong size on BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, RescueTarget) == 0x000000, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::RescueTarget' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Get_ReturnValue_1) == 0x000018, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Get_ReturnValue_2) == 0x000028, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_GetSolarPlayerState_ReturnValue) == 0x000030, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_GetSolarPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_IsBeingRescue_ReturnValue) == 0x000038, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_IsBeingRescue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_IsPlayerWaitingForTeammatesHelp_ReturnValue) == 0x000039, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_IsPlayerWaitingForTeammatesHelp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_IsDying_ReturnValue) == 0x00003A, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_K2_IsAlive_ReturnValue) == 0x00003D, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_K2_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003E, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003F, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanAND_ReturnValue_1) == 0x000041, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanOR_ReturnValue_1) == 0x000042, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000048, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, K2Node_DynamicCast_AsSolar_Character) == 0x000050, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_GetDistanceTo_ReturnValue) == 0x00005C, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_TryCancelCurrentRescueTarget_ReturnValue) == 0x000061, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_TryCancelCurrentRescueTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_GetBlackboardValueAsActor_ReturnValue_1) == 0x000068, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_GetBlackboardValueAsActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_Not_PreBool_ReturnValue_3) == 0x000071, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanAND_ReturnValue_2) == 0x000072, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState, CallFunc_BooleanOR_ReturnValue_2) == 0x000073, "Member 'BP_BTS_TeamTaskAllocator_C_SelfUpdateTaskState::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.GetSuitableRescueBot
// 0x02B8 (0x02B8 - 0x0000)
struct BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot final
{
public:
	class ASolarCharacter*                        TeammateInDanger;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarBotAITeamManager*                 TeamManager;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarBotAIController*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarBotAIController*                  MinDistanceTeammate;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDistance;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarBotTeamInfo                      CallFunc_GetBotTeamInfo_OutTeamInfo;               // 0x0030(0x00D0)()
	bool                                          CallFunc_GetBotTeamInfo_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarBotMemberInfo                    CallFunc_Array_Get_Item;                           // 0x0108(0x00B0)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAccompanyingPlayer_ReturnValue;         // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarVehiclePawn*                      K2Node_DynamicCast_AsSolar_Vehicle_Pawn;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsAlive_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarBotAITeamManager*                 CallFunc_Get_ReturnValue;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarBotMemberInfo                    CallFunc_GetBotMemberInfo_OutMemberInfo;           // 0x0200(0x00B0)()
	bool                                          CallFunc_GetBotMemberInfo_ReturnValue;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot) == 0x000008, "Wrong alignment on BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot");
static_assert(sizeof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot) == 0x0002B8, "Wrong size on BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, TeammateInDanger) == 0x000000, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::TeammateInDanger' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, TeamManager) == 0x000008, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::TeamManager' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, ReturnValue) == 0x000010, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, MinDistanceTeammate) == 0x000018, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::MinDistanceTeammate' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, MinDistance) == 0x000020, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::MinDistance' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_GetBotTeamInfo_OutTeamInfo) == 0x000030, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_GetBotTeamInfo_OutTeamInfo' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_GetBotTeamInfo_ReturnValue) == 0x000100, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_GetBotTeamInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Array_Length_ReturnValue) == 0x0001B8, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Less_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_IsAccompanyingPlayer_ReturnValue) == 0x0001BD, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_IsAccompanyingPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_K2_GetPawn_ReturnValue) == 0x0001C0, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_GetDistanceTo_ReturnValue) == 0x0001C8, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, K2Node_DynamicCast_AsSolar_Vehicle_Pawn) == 0x0001D0, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::K2Node_DynamicCast_AsSolar_Vehicle_Pawn' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001D9, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, K2Node_DynamicCast_AsSolar_Character) == 0x0001E0, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_K2_IsAlive_ReturnValue) == 0x0001E9, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_K2_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_IsDying_ReturnValue) == 0x0001EA, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Get_ReturnValue) == 0x0001F0, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_Not_PreBool_ReturnValue) == 0x0001F8, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_GetBotMemberInfo_OutMemberInfo) == 0x000200, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_GetBotMemberInfo_OutMemberInfo' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_GetBotMemberInfo_ReturnValue) == 0x0002B0, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_GetBotMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_BooleanAND_ReturnValue) == 0x0002B1, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002B2, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002B3, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_BooleanOR_ReturnValue) == 0x0002B4, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_BooleanOR_ReturnValue_1) == 0x0002B5, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot, CallFunc_BooleanAND_ReturnValue_1) == 0x0002B6, "Member 'BP_BTS_TeamTaskAllocator_C_GetSuitableRescueBot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.CheckIfRescueBot
// 0x0010 (0x0010 - 0x0000)
struct BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot final
{
public:
	class ASolarBotAIController*                  InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         InState;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot) == 0x000008, "Wrong alignment on BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot");
static_assert(sizeof(BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot) == 0x000010, "Wrong size on BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot, InController) == 0x000000, "Member 'BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot::InController' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot, InState) == 0x000008, "Member 'BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot::InState' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot, ReturnValue) == 0x000009, "Member 'BP_BTS_TeamTaskAllocator_C_CheckIfRescueBot::ReturnValue' has a wrong offset!");

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.DebugAllTaskScore
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore final
{
public:
	TArray<struct FSolarScoringItemStruct>        TaskScoresList;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarScoringItemStruct                CallFunc_Array_Get_Item;                           // 0x001C(0x0014)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAccompanyingPlayer_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore) == 0x000008, "Wrong alignment on BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore");
static_assert(sizeof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore) == 0x0000D0, "Wrong size on BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, TaskScoresList) == 0x000000, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::TaskScoresList' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_GetAIController_ReturnValue) == 0x000048, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_SelectObject_ReturnValue) == 0x000078, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_GetObjectName_ReturnValue_1) == 0x000088, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore, CallFunc_IsAccompanyingPlayer_ReturnValue) == 0x0000C8, "Member 'BP_BTS_TeamTaskAllocator_C_DebugAllTaskScore::CallFunc_IsAccompanyingPlayer_ReturnValue' has a wrong offset!");

// Function BP_BTS_TeamTaskAllocator.BP_BTS_TeamTaskAllocator_C.DebugEachTaskScoreItem
// 0x0100 (0x0100 - 0x0000)
struct BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem final
{
public:
	struct FSolarScoringItemStruct                TaskScore;                                         // 0x0000(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	ESolarTaskScoringItemType                     ItemType;                                          // 0x0014(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Score;                                             // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAccompanyingPlayer_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem) == 0x000008, "Wrong alignment on BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem");
static_assert(sizeof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem) == 0x000100, "Wrong size on BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, TaskScore) == 0x000000, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::TaskScore' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, ItemType) == 0x000014, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::ItemType' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, Score) == 0x000018, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::Score' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, Value) == 0x00001C, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::Value' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Conv_FloatToString_ReturnValue) == 0x000020, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_IsAccompanyingPlayer_ReturnValue) == 0x000030, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_IsAccompanyingPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000038, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_GetEnumeratorName_ReturnValue) == 0x000048, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_GetDisplayName_ReturnValue_1) == 0x000070, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F0, "Member 'BP_BTS_TeamTaskAllocator_C_DebugEachTaskScoreItem::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

}

