#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Logic_TrainingMode

#include "Basic.hpp"

#include "BP_Logic_TrainingMode_classes.hpp"
#include "BP_Logic_TrainingMode_parameters.hpp"


namespace SDK
{

// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.GetPlayerCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_Logic_TrainingMode_C::GetPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "GetPlayerCount");

	Params::BP_Logic_TrainingMode_C_GetPlayerCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.FindSpawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ASolarPlayerStart*>*       Spawn                                                  (Parm, OutParm, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::FindSpawn(TArray<class ASolarPlayerStart*>* Spawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "FindSpawn");

	Params::BP_Logic_TrainingMode_C_FindSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Spawn != nullptr)
		*Spawn = std::move(Parms.Spawn);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.PlayerPositionReporting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Logic_TrainingMode_C::PlayerPositionReporting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "PlayerPositionReporting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ReceiveBattleBegin
// (Event, Public, BlueprintEvent)

void UBP_Logic_TrainingMode_C::ReceiveBattleBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ReceiveBattleBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ReceivePlayerJoin
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAI                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Logic_TrainingMode_C::ReceivePlayerJoin(class ASCMPlayerState* NewPlayer, bool IsAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ReceivePlayerJoin");

	Params::BP_Logic_TrainingMode_C_ReceivePlayerJoin Parms{};

	Parms.NewPlayer = NewPlayer;
	Parms.IsAI = IsAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.PreSettle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESCMPlayerOutType                       OutType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::PreSettle(class ASCMPlayerState* Player, ESCMPlayerOutType OutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "PreSettle");

	Params::BP_Logic_TrainingMode_C_PreSettle Parms{};

	Parms.Player = Player;
	Parms.OutType = OutType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.PlayerChangeCharacter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::PlayerChangeCharacter(class ASCMPlayerState* Player, int32 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "PlayerChangeCharacter");

	Params::BP_Logic_TrainingMode_C_PlayerChangeCharacter Parms{};

	Parms.Player = Player;
	Parms.CharacterID = CharacterID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_Logic_TrainingMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.DestroyVehicle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GetOffSeatIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASolarCharacter*                  GetOffPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::DestroyVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "DestroyVehicle");

	Params::BP_Logic_TrainingMode_C_DestroyVehicle Parms{};

	Parms.GetOffSeatIndex = GetOffSeatIndex;
	Parms.GetOffPlayer = GetOffPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.StopDestroyVehicle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   GetOnSeatIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASolarCharacter*                  GetOnPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::StopDestroyVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "StopDestroyVehicle");

	Params::BP_Logic_TrainingMode_C_StopDestroyVehicle Parms{};

	Parms.GetOnSeatIndex = GetOnSeatIndex;
	Parms.GetOnPlayer = GetOnPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ReceiveGameModeInit
// (Event, Public, BlueprintEvent)

void UBP_Logic_TrainingMode_C::ReceiveGameModeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ReceiveGameModeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.SetLifeSpan
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SpawnedVehicle                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::SetLifeSpan(class AActor* SpawnedVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "SetLifeSpan");

	Params::BP_Logic_TrainingMode_C_SetLifeSpan Parms{};

	Parms.SpawnedVehicle = SpawnedVehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ReceivePlayerJoinBattle
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASCMPlayerState*                  NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAI                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Logic_TrainingMode_C::ReceivePlayerJoinBattle(class ASCMPlayerState* NewPlayer, bool IsAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ReceivePlayerJoinBattle");

	Params::BP_Logic_TrainingMode_C_ReceivePlayerJoinBattle Parms{};

	Parms.NewPlayer = NewPlayer;
	Parms.IsAI = IsAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.OnDSClose
// (Event, Public, BlueprintEvent)

void UBP_Logic_TrainingMode_C::OnDSClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "OnDSClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.LogPlayerPosition
// (BlueprintCallable, BlueprintEvent)

void UBP_Logic_TrainingMode_C::LogPlayerPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "LogPlayerPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Logic_TrainingMode.BP_Logic_TrainingMode_C.ExecuteUbergraph_BP_Logic_TrainingMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Logic_TrainingMode_C::ExecuteUbergraph_BP_Logic_TrainingMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Logic_TrainingMode_C", "ExecuteUbergraph_BP_Logic_TrainingMode");

	Params::BP_Logic_TrainingMode_C_ExecuteUbergraph_BP_Logic_TrainingMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

