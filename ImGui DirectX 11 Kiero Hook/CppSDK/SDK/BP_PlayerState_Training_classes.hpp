#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_Training

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerState_Training.BP_PlayerState_Training_C
// 0x0078 (0x20D0 - 0x2058)
class ABP_PlayerState_Training_C final : public ATrainingPlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2058(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_ChangeCharacterManager_TrainingMode_C* BPC_ChangeCharacterManager;                    // 0x2060(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x2068(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Logic_Framework_C*                  Logic;                                             // 0x2070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_MapMark_ReviveTeammates_C*>  UI_MapMark_ReviveTeammatesArr;                     // 0x2078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UActorMarkBase*                         DeathBoxMark;                                      // 0x2088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SI_RebornLine_C*                    RebornLine;                                        // 0x2090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LandedDetectionHandel;                             // 0x2098(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMapMarkBase*>                   DeathBoxMiniMapMark;                               // 0x20A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UActorMarkBase*                         RebirthedDeathBoxMark;                             // 0x20B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempDeathBoxLoc;                                   // 0x20B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C4[0x4];                                     // 0x20C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_HUD_Notice_Revive_C*                ResurrectUIObj;                                    // 0x20C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Remove_Punctuation(bool bKeepRebornLine);
	int32 GetExpByBehavior(EExpBehaviorType InBehaviorType, int32 InParamOne, int32 InParamTwo, float InDamage);
	void Create_Punctuation(const struct FVector& InputPin);
	void GetLogicBase(class UBP_Logic_Framework_C** Output_Get);
	void Death_Cleanup_UI();
	void Get_Revive_UI(class UUI_HUD_Notice_Revive_C** Output_Get);
	void ReceiveBeginPlay();
	void OnOtherPlayerStopSpectateMyTeam(class ASolarSpectateInfo* InSpectateInfo);
	void OnRep_Resurrecting();
	void OnRep_IsReviveSkydiving();
	void ShowResurrectUI(int32 Time);
	void CreateDeathBoxMark();
	void DropPickableItem(class UObject* Item);
	void PickupPickableItem(class UObject* Item);
	void OnCharacterLanded();
	void ExecuteUbergraph_BP_PlayerState_Training(int32 EntryPoint);
	void Remove_All_Revive_Mark();
	bool PlayerCanRebirthBlueprint();
	void GetSpecialHitTypeArray(TArray<int32>* NewParam);
	void NotifyUpdateTeamMateLevelUI();
	void OnRep_BattleVoiceId();
	void OnRep_RTCType();
	void LuaRejectPlayerJoinCustomRoomOB();
	void OnRep_UserId();
	void OnRep_TeammatesState();
	void ReceiveSideReplicatedAfter();
	void ReceiveClientInitialize(class AController* C);
	void ReceivePostInitializeComponents();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	int32 LuaGetExpFromWeaponImplementation(EExpBehaviorType InBehaviorType, int32 InParamOne, int32 InParamTwo, float InDamage);
	void OnRep_RTCMicSendType();
	void ReceiveTeamIdReplicated(bool bRelatedToSelf);

	const struct FVector GetDeathBoxLocation() const;
	int32 GetExpAddValueFromItem(int32 ItemID) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerState_Training_C">();
	}
	static class ABP_PlayerState_Training_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerState_Training_C>();
	}
};
static_assert(alignof(ABP_PlayerState_Training_C) == 0x000008, "Wrong alignment on ABP_PlayerState_Training_C");
static_assert(sizeof(ABP_PlayerState_Training_C) == 0x0020D0, "Wrong size on ABP_PlayerState_Training_C");
static_assert(offsetof(ABP_PlayerState_Training_C, UberGraphFrame) == 0x002058, "Member 'ABP_PlayerState_Training_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, BPC_ChangeCharacterManager) == 0x002060, "Member 'ABP_PlayerState_Training_C::BPC_ChangeCharacterManager' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, DefaultSceneRoot) == 0x002068, "Member 'ABP_PlayerState_Training_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, Logic) == 0x002070, "Member 'ABP_PlayerState_Training_C::Logic' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, UI_MapMark_ReviveTeammatesArr) == 0x002078, "Member 'ABP_PlayerState_Training_C::UI_MapMark_ReviveTeammatesArr' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, DeathBoxMark) == 0x002088, "Member 'ABP_PlayerState_Training_C::DeathBoxMark' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, RebornLine) == 0x002090, "Member 'ABP_PlayerState_Training_C::RebornLine' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, LandedDetectionHandel) == 0x002098, "Member 'ABP_PlayerState_Training_C::LandedDetectionHandel' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, DeathBoxMiniMapMark) == 0x0020A0, "Member 'ABP_PlayerState_Training_C::DeathBoxMiniMapMark' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, RebirthedDeathBoxMark) == 0x0020B0, "Member 'ABP_PlayerState_Training_C::RebirthedDeathBoxMark' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, TempDeathBoxLoc) == 0x0020B8, "Member 'ABP_PlayerState_Training_C::TempDeathBoxLoc' has a wrong offset!");
static_assert(offsetof(ABP_PlayerState_Training_C, ResurrectUIObj) == 0x0020C8, "Member 'ABP_PlayerState_Training_C::ResurrectUIObj' has a wrong offset!");

}

