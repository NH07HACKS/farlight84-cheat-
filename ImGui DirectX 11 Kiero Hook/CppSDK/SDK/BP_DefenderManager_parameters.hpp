#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DefenderManager

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "E_State_DefenderManager_structs.hpp"


namespace SDK::Params
{

// Function BP_DefenderManager.BP_DefenderManager_C.GetNowTeamShowType
// 0x0008 (0x0008 - 0x0000)
struct BP_DefenderManager_C_GetNowTeamShowType final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_GetNowTeamShowType) == 0x000004, "Wrong alignment on BP_DefenderManager_C_GetNowTeamShowType");
static_assert(sizeof(BP_DefenderManager_C_GetNowTeamShowType) == 0x000008, "Wrong size on BP_DefenderManager_C_GetNowTeamShowType");
static_assert(offsetof(BP_DefenderManager_C_GetNowTeamShowType, ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_GetNowTeamShowType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetNowTeamShowType, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_DefenderManager_C_GetNowTeamShowType::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.CheckTeamShowIsStart
// 0x0002 (0x0002 - 0x0000)
struct BP_DefenderManager_C_CheckTeamShowIsStart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DefenderManager_C_CheckTeamShowIsStart) == 0x000001, "Wrong alignment on BP_DefenderManager_C_CheckTeamShowIsStart");
static_assert(sizeof(BP_DefenderManager_C_CheckTeamShowIsStart) == 0x000002, "Wrong size on BP_DefenderManager_C_CheckTeamShowIsStart");
static_assert(offsetof(BP_DefenderManager_C_CheckTeamShowIsStart, ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_CheckTeamShowIsStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_CheckTeamShowIsStart, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_DefenderManager_C_CheckTeamShowIsStart::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.GetShowTimeByType
// 0x0014 (0x0014 - 0x0000)
struct BP_DefenderManager_C_GetShowTimeByType final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_GetShowTimeByType) == 0x000004, "Wrong alignment on BP_DefenderManager_C_GetShowTimeByType");
static_assert(sizeof(BP_DefenderManager_C_GetShowTimeByType) == 0x000014, "Wrong size on BP_DefenderManager_C_GetShowTimeByType");
static_assert(offsetof(BP_DefenderManager_C_GetShowTimeByType, Type) == 0x000000, "Member 'BP_DefenderManager_C_GetShowTimeByType::Type' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetShowTimeByType, ReturnValue) == 0x000004, "Member 'BP_DefenderManager_C_GetShowTimeByType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetShowTimeByType, Temp_int_Variable) == 0x000008, "Member 'BP_DefenderManager_C_GetShowTimeByType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetShowTimeByType, Temp_float_Variable) == 0x00000C, "Member 'BP_DefenderManager_C_GetShowTimeByType::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetShowTimeByType, K2Node_Select_Default) == 0x000010, "Member 'BP_DefenderManager_C_GetShowTimeByType::K2Node_Select_Default' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.OnDefenderShowStart
// 0x0028 (0x0028 - 0x0000)
struct BP_DefenderManager_C_OnDefenderShowStart final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Mode_BattleRoyale_C*                K2Node_DynamicCast_AsBP_Mode_Battle_Royale;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Logic_BattleRoyale_C*               K2Node_DynamicCast_AsBP_Logic_Battle_Royale;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DefenderManager_C_OnDefenderShowStart) == 0x000008, "Wrong alignment on BP_DefenderManager_C_OnDefenderShowStart");
static_assert(sizeof(BP_DefenderManager_C_OnDefenderShowStart) == 0x000028, "Wrong size on BP_DefenderManager_C_OnDefenderShowStart");
static_assert(offsetof(BP_DefenderManager_C_OnDefenderShowStart, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_OnDefenderShowStart::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnDefenderShowStart, K2Node_DynamicCast_AsBP_Mode_Battle_Royale) == 0x000008, "Member 'BP_DefenderManager_C_OnDefenderShowStart::K2Node_DynamicCast_AsBP_Mode_Battle_Royale' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnDefenderShowStart, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_DefenderManager_C_OnDefenderShowStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnDefenderShowStart, K2Node_DynamicCast_AsBP_Logic_Battle_Royale) == 0x000018, "Member 'BP_DefenderManager_C_OnDefenderShowStart::K2Node_DynamicCast_AsBP_Logic_Battle_Royale' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnDefenderShowStart, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_DefenderManager_C_OnDefenderShowStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.GetTotalTime
// 0x0008 (0x0008 - 0x0000)
struct BP_DefenderManager_C_GetTotalTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_GetTotalTime) == 0x000004, "Wrong alignment on BP_DefenderManager_C_GetTotalTime");
static_assert(sizeof(BP_DefenderManager_C_GetTotalTime) == 0x000008, "Wrong size on BP_DefenderManager_C_GetTotalTime");
static_assert(offsetof(BP_DefenderManager_C_GetTotalTime, ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_GetTotalTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_GetTotalTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_DefenderManager_C_GetTotalTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.DataTraceDefender
// 0x0088 (0x0088 - 0x0000)
struct BP_DefenderManager_C_DataTraceDefender final
{
public:
	class ASolarPlayerState*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Data;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDefender_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTerminator_ReturnValue;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_DataTraceDefender) == 0x000008, "Wrong alignment on BP_DefenderManager_C_DataTraceDefender");
static_assert(sizeof(BP_DefenderManager_C_DataTraceDefender) == 0x000088, "Wrong size on BP_DefenderManager_C_DataTraceDefender");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Target) == 0x000000, "Member 'BP_DefenderManager_C_DataTraceDefender::Target' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Name_0) == 0x000008, "Member 'BP_DefenderManager_C_DataTraceDefender::Name_0' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Data) == 0x000018, "Member 'BP_DefenderManager_C_DataTraceDefender::Data' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Temp_bool_Variable) == 0x000028, "Member 'BP_DefenderManager_C_DataTraceDefender::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, CallFunc_IsDefender_ReturnValue) == 0x000029, "Member 'BP_DefenderManager_C_DataTraceDefender::CallFunc_IsDefender_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, CallFunc_IsTerminator_ReturnValue) == 0x00002A, "Member 'BP_DefenderManager_C_DataTraceDefender::CallFunc_IsTerminator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Temp_string_Variable) == 0x000030, "Member 'BP_DefenderManager_C_DataTraceDefender::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Temp_string_Variable_1) == 0x000040, "Member 'BP_DefenderManager_C_DataTraceDefender::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Temp_bool_Variable_1) == 0x000050, "Member 'BP_DefenderManager_C_DataTraceDefender::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, K2Node_Select_Default) == 0x000058, "Member 'BP_DefenderManager_C_DataTraceDefender::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, Temp_string_Variable_2) == 0x000068, "Member 'BP_DefenderManager_C_DataTraceDefender::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_DataTraceDefender, K2Node_Select_Default_1) == 0x000078, "Member 'BP_DefenderManager_C_DataTraceDefender::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.GetExtraReward
// 0x0004 (0x0004 - 0x0000)
struct BP_DefenderManager_C_GetExtraReward final
{
public:
	int32                                         Reward;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_GetExtraReward) == 0x000004, "Wrong alignment on BP_DefenderManager_C_GetExtraReward");
static_assert(sizeof(BP_DefenderManager_C_GetExtraReward) == 0x000004, "Wrong size on BP_DefenderManager_C_GetExtraReward");
static_assert(offsetof(BP_DefenderManager_C_GetExtraReward, Reward) == 0x000000, "Member 'BP_DefenderManager_C_GetExtraReward::Reward' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.SetShowTime
// 0x000C (0x000C - 0x0000)
struct BP_DefenderManager_C_SetShowTime final
{
public:
	float                                         ShowTime_Self_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShowTime_Defender_0;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShowTime_Dazzling_0;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_SetShowTime) == 0x000004, "Wrong alignment on BP_DefenderManager_C_SetShowTime");
static_assert(sizeof(BP_DefenderManager_C_SetShowTime) == 0x00000C, "Wrong size on BP_DefenderManager_C_SetShowTime");
static_assert(offsetof(BP_DefenderManager_C_SetShowTime, ShowTime_Self_0) == 0x000000, "Member 'BP_DefenderManager_C_SetShowTime::ShowTime_Self_0' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_SetShowTime, ShowTime_Defender_0) == 0x000004, "Member 'BP_DefenderManager_C_SetShowTime::ShowTime_Defender_0' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_SetShowTime, ShowTime_Dazzling_0) == 0x000008, "Member 'BP_DefenderManager_C_SetShowTime::ShowTime_Dazzling_0' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.OnRep_UIState
// 0x0080 (0x0080 - 0x0000)
struct BP_DefenderManager_C_OnRep_UIState final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReplay_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASCMPlayerState*                        CallFunc_GetLocalPlayer_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0028(0x0050)(ConstParm)
	bool                                          CallFunc_IsOBPlayer_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DefenderManager_C_OnRep_UIState) == 0x000008, "Wrong alignment on BP_DefenderManager_C_OnRep_UIState");
static_assert(sizeof(BP_DefenderManager_C_OnRep_UIState) == 0x000080, "Wrong size on BP_DefenderManager_C_OnRep_UIState");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_IsPlayingReplay_ReturnValue) == 0x000001, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_IsPlayingReplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_GetLocalPlayer_ReturnValue) == 0x000008, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_GetLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_IsServer_ReturnValue_1) == 0x000010, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_Conv_BoolToString_ReturnValue) == 0x000018, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, K2Node_MakeMap_Map) == 0x000028, "Member 'BP_DefenderManager_C_OnRep_UIState::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_IsOBPlayer_ReturnValue) == 0x000078, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_IsOBPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_OnRep_UIState, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'BP_DefenderManager_C_OnRep_UIState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.OnUIStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_DefenderManager_C_OnUIStateChanged final
{
public:
	E_State_DefenderManager                       UiState_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_OnUIStateChanged) == 0x000001, "Wrong alignment on BP_DefenderManager_C_OnUIStateChanged");
static_assert(sizeof(BP_DefenderManager_C_OnUIStateChanged) == 0x000001, "Wrong size on BP_DefenderManager_C_OnUIStateChanged");
static_assert(offsetof(BP_DefenderManager_C_OnUIStateChanged, UiState_0) == 0x000000, "Member 'BP_DefenderManager_C_OnUIStateChanged::UiState_0' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.ExecuteUbergraph_BP_DefenderManager
// 0x00F0 (0x00F0 - 0x0000)
struct BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESCMInGameState                               CallFunc_GetInGameState_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_GetLocalPlayer_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOBPlayer_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_State_DefenderManager                       K2Node_CustomEvent_UIState;                        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0068(0x0050)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHeroPickManager*                       CallFunc_GetHeroPickManager_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIDefenderTeamShowWidget*              CallFunc_GetDefenderTeamShowWidget_ReturnValue;    // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIDefenderTeamShowWidget*              CallFunc_GetDefenderTeamShowWidget_ReturnValue_1;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEanble3DLevel_ReturnValue;              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEanble3DLevel_ReturnValue_1;            // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager) == 0x000008, "Wrong alignment on BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager");
static_assert(sizeof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager) == 0x0000F0, "Wrong size on BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, EntryPoint) == 0x000000, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetInGameState_ReturnValue) == 0x000005, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetInGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetLocalPlayer_ReturnValue) == 0x000040, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsOBPlayer_ReturnValue) == 0x000048, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsOBPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, K2Node_CustomEvent_UIState) == 0x000049, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::K2Node_CustomEvent_UIState' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000050, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, K2Node_MakeMap_Map) == 0x000068, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000B8, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B9, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsServer_ReturnValue_1) == 0x0000BA, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetGameState_ReturnValue) == 0x0000C0, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x0000C8, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetHeroPickManager_ReturnValue) == 0x0000D0, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetHeroPickManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetDefenderTeamShowWidget_ReturnValue) == 0x0000D8, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetDefenderTeamShowWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_GetDefenderTeamShowWidget_ReturnValue_1) == 0x0000E0, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_GetDefenderTeamShowWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsEanble3DLevel_ReturnValue) == 0x0000EA, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsEanble3DLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_IsEanble3DLevel_ReturnValue_1) == 0x0000EB, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_IsEanble3DLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000ED, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_BooleanAND_ReturnValue) == 0x0000EE, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EF, "Member 'BP_DefenderManager_C_ExecuteUbergraph_BP_DefenderManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_DefenderManager.BP_DefenderManager_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_DefenderManager_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_DefenderManager_C_GetModuleName) == 0x000008, "Wrong alignment on BP_DefenderManager_C_GetModuleName");
static_assert(sizeof(BP_DefenderManager_C_GetModuleName) == 0x000010, "Wrong size on BP_DefenderManager_C_GetModuleName");
static_assert(offsetof(BP_DefenderManager_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_DefenderManager_C_GetModuleName::ReturnValue' has a wrong offset!");

}

