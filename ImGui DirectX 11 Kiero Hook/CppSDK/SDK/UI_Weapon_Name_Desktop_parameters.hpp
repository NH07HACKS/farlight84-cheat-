#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Weapon_Name_Desktop

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Weapon_Name_Desktop.UI_Weapon_Name_Desktop_C.ExecuteUbergraph_UI_Weapon_Name_Desktop
// 0x00C0 (0x00C0 - 0x0000)
struct UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInSelected;                          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInHasColorHUD;                       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InQuality;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_InSelectedColor;                      // 0x0080(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop) == 0x000004, "Wrong alignment on UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop");
static_assert(sizeof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop) == 0x0000C0, "Wrong size on UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, EntryPoint) == 0x000000, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_int_Variable) == 0x000004, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable) == 0x000008, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_1) == 0x000018, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_2) == 0x000028, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_3) == 0x000038, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_4) == 0x000048, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_5) == 0x000058, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, Temp_struct_Variable_6) == 0x000068, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Event_IsDesignTime) == 0x000078, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Event_bInSelected) == 0x000079, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Event_bInSelected' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Event_bInHasColorHUD) == 0x00007A, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Event_bInHasColorHUD' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Event_InQuality) == 0x00007C, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Event_InQuality' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Event_InSelectedColor) == 0x000080, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Event_InSelectedColor' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, CallFunc_SelectColor_ReturnValue) == 0x000090, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, K2Node_Select_Default) == 0x0000A0, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop, CallFunc_SelectColor_ReturnValue_1) == 0x0000B0, "Member 'UI_Weapon_Name_Desktop_C_ExecuteUbergraph_UI_Weapon_Name_Desktop::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function UI_Weapon_Name_Desktop.UI_Weapon_Name_Desktop_C.PostSetSelected
// 0x0018 (0x0018 - 0x0000)
struct UI_Weapon_Name_Desktop_C_PostSetSelected final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInHasColorHUD;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InQuality;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InSelectedColor;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Weapon_Name_Desktop_C_PostSetSelected) == 0x000004, "Wrong alignment on UI_Weapon_Name_Desktop_C_PostSetSelected");
static_assert(sizeof(UI_Weapon_Name_Desktop_C_PostSetSelected) == 0x000018, "Wrong size on UI_Weapon_Name_Desktop_C_PostSetSelected");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_PostSetSelected, bInSelected) == 0x000000, "Member 'UI_Weapon_Name_Desktop_C_PostSetSelected::bInSelected' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_PostSetSelected, bInHasColorHUD) == 0x000001, "Member 'UI_Weapon_Name_Desktop_C_PostSetSelected::bInHasColorHUD' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_PostSetSelected, InQuality) == 0x000004, "Member 'UI_Weapon_Name_Desktop_C_PostSetSelected::InQuality' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_PostSetSelected, InSelectedColor) == 0x000008, "Member 'UI_Weapon_Name_Desktop_C_PostSetSelected::InSelectedColor' has a wrong offset!");

// Function UI_Weapon_Name_Desktop.UI_Weapon_Name_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Weapon_Name_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Weapon_Name_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Weapon_Name_Desktop_C_PreConstruct");
static_assert(sizeof(UI_Weapon_Name_Desktop_C_PreConstruct) == 0x000001, "Wrong size on UI_Weapon_Name_Desktop_C_PreConstruct");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Weapon_Name_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Weapon_Name_Desktop.UI_Weapon_Name_Desktop_C.UpdateSelected
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Weapon_Name_Desktop_C_UpdateSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           SelectedColor;                                     // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedColor;                                   // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0070(0x0028)()
	bool                                          Temp_bool_Variable_2;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Select_Default_2;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Weapon_Name_Desktop_C_UpdateSelected) == 0x000008, "Wrong alignment on UI_Weapon_Name_Desktop_C_UpdateSelected");
static_assert(sizeof(UI_Weapon_Name_Desktop_C_UpdateSelected) == 0x0000A8, "Wrong size on UI_Weapon_Name_Desktop_C_UpdateSelected");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, IsSelected_0) == 0x000000, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::IsSelected_0' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, SelectedColor) == 0x000004, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::SelectedColor' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, UnselectedColor) == 0x000014, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::UnselectedColor' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_bool_Variable) == 0x000024, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_byte_Variable) == 0x000025, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_byte_Variable_1) == 0x000026, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_bool_Variable_1) == 0x000027, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_struct_Variable) == 0x000028, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_struct_Variable_1) == 0x000038, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, K2Node_Select_Default) == 0x000048, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, K2Node_Select_Default_1) == 0x00004C, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, CallFunc_SelectColor_ReturnValue) == 0x00005C, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, K2Node_MakeStruct_SlateColor) == 0x000070, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, Temp_bool_Variable_2) == 0x000098, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Weapon_Name_Desktop_C_UpdateSelected, K2Node_Select_Default_2) == 0x0000A0, "Member 'UI_Weapon_Name_Desktop_C_UpdateSelected::K2Node_Select_Default_2' has a wrong offset!");

}

