#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KawaiiPhysics

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class KawaiiPhysics.AnimNotify_KawaiiPhysicsAddExternalForce
// 0x0068 (0x00A0 - 0x0038)
class UAnimNotify_KawaiiPhysicsAddExternalForce final : public UAnimNotify
{
public:
	TArray<struct FKawaiiPhysics_ExternalForce_Basic> AdditionalExternalBasicForces;                 // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Curve> AdditionalExternalCurveForces;                 // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Gravity> AdditionalExternalGravityForces;             // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Wind> AdditionalExternalWindForces;                   // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0078(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0098(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0099(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotify_KawaiiPhysicsAddExternalForce">();
	}
	static class UAnimNotify_KawaiiPhysicsAddExternalForce* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_KawaiiPhysicsAddExternalForce>();
	}
};
static_assert(alignof(UAnimNotify_KawaiiPhysicsAddExternalForce) == 0x000008, "Wrong alignment on UAnimNotify_KawaiiPhysicsAddExternalForce");
static_assert(sizeof(UAnimNotify_KawaiiPhysicsAddExternalForce) == 0x0000A0, "Wrong size on UAnimNotify_KawaiiPhysicsAddExternalForce");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, AdditionalExternalBasicForces) == 0x000038, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::AdditionalExternalBasicForces' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, AdditionalExternalCurveForces) == 0x000048, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::AdditionalExternalCurveForces' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, AdditionalExternalGravityForces) == 0x000058, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::AdditionalExternalGravityForces' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, AdditionalExternalWindForces) == 0x000068, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::AdditionalExternalWindForces' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, FilterTags) == 0x000078, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::FilterTags' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, bFilterExactMatch) == 0x000098, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(UAnimNotify_KawaiiPhysicsAddExternalForce, bSupportChildComponent) == 0x000099, "Member 'UAnimNotify_KawaiiPhysicsAddExternalForce::bSupportChildComponent' has a wrong offset!");

// Class KawaiiPhysics.AnimNotifyState_KawaiiPhysicsAddExternalForce
// 0x0068 (0x0098 - 0x0030)
class UAnimNotifyState_KawaiiPhysicsAddExternalForce final : public UAnimNotifyState
{
public:
	TArray<struct FKawaiiPhysics_ExternalForce_Basic> AdditionalExternalBasicForces;                 // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Curve> AdditionalExternalCurveForces;                 // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Gravity> AdditionalExternalGravityForces;             // 0x0050(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKawaiiPhysics_ExternalForce_Wind> AdditionalExternalWindForces;                   // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  FilterTags;                                        // 0x0070(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bFilterExactMatch;                                 // 0x0090(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSupportChildComponent;                            // 0x0091(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AnimNotifyState_KawaiiPhysicsAddExternalForce">();
	}
	static class UAnimNotifyState_KawaiiPhysicsAddExternalForce* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_KawaiiPhysicsAddExternalForce>();
	}
};
static_assert(alignof(UAnimNotifyState_KawaiiPhysicsAddExternalForce) == 0x000008, "Wrong alignment on UAnimNotifyState_KawaiiPhysicsAddExternalForce");
static_assert(sizeof(UAnimNotifyState_KawaiiPhysicsAddExternalForce) == 0x000098, "Wrong size on UAnimNotifyState_KawaiiPhysicsAddExternalForce");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, AdditionalExternalBasicForces) == 0x000030, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::AdditionalExternalBasicForces' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, AdditionalExternalCurveForces) == 0x000040, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::AdditionalExternalCurveForces' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, AdditionalExternalGravityForces) == 0x000050, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::AdditionalExternalGravityForces' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, AdditionalExternalWindForces) == 0x000060, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::AdditionalExternalWindForces' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, FilterTags) == 0x000070, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::FilterTags' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, bFilterExactMatch) == 0x000090, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::bFilterExactMatch' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_KawaiiPhysicsAddExternalForce, bSupportChildComponent) == 0x000091, "Member 'UAnimNotifyState_KawaiiPhysicsAddExternalForce::bSupportChildComponent' has a wrong offset!");

// Class KawaiiPhysics.KawaiiPhysicsBoneConstraintsDataAsset
// 0x0018 (0x0048 - 0x0030)
class UKawaiiPhysicsBoneConstraintsDataAsset final : public UDataAsset
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FModifyBoneConstraintData>      BoneConstraintsData;                               // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KawaiiPhysicsBoneConstraintsDataAsset">();
	}
	static class UKawaiiPhysicsBoneConstraintsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKawaiiPhysicsBoneConstraintsDataAsset>();
	}
};
static_assert(alignof(UKawaiiPhysicsBoneConstraintsDataAsset) == 0x000008, "Wrong alignment on UKawaiiPhysicsBoneConstraintsDataAsset");
static_assert(sizeof(UKawaiiPhysicsBoneConstraintsDataAsset) == 0x000048, "Wrong size on UKawaiiPhysicsBoneConstraintsDataAsset");
static_assert(offsetof(UKawaiiPhysicsBoneConstraintsDataAsset, BoneConstraintsData) == 0x000038, "Member 'UKawaiiPhysicsBoneConstraintsDataAsset::BoneConstraintsData' has a wrong offset!");

// Class KawaiiPhysics.KawaiiPhysics_CustomExternalForce
// 0x0008 (0x0030 - 0x0028)
class UKawaiiPhysics_CustomExternalForce final : public UObject
{
public:
	bool                                          bIsEnabled;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawDebug;                                        // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Apply(struct FAnimNode_KawaiiPhysics& Node, int32 ModifyBoneIndex, const class USkeletalMeshComponent* SkelComp, const struct FTransform& BoneTransform);
	bool IsDebugEnabled();
	void PreApply(struct FAnimNode_KawaiiPhysics& Node, const class USkeletalMeshComponent* SkelComp);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KawaiiPhysics_CustomExternalForce">();
	}
	static class UKawaiiPhysics_CustomExternalForce* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKawaiiPhysics_CustomExternalForce>();
	}
};
static_assert(alignof(UKawaiiPhysics_CustomExternalForce) == 0x000008, "Wrong alignment on UKawaiiPhysics_CustomExternalForce");
static_assert(sizeof(UKawaiiPhysics_CustomExternalForce) == 0x000030, "Wrong size on UKawaiiPhysics_CustomExternalForce");
static_assert(offsetof(UKawaiiPhysics_CustomExternalForce, bIsEnabled) == 0x000028, "Member 'UKawaiiPhysics_CustomExternalForce::bIsEnabled' has a wrong offset!");
static_assert(offsetof(UKawaiiPhysics_CustomExternalForce, bDrawDebug) == 0x000029, "Member 'UKawaiiPhysics_CustomExternalForce::bDrawDebug' has a wrong offset!");

// Class KawaiiPhysics.KawaiiPhysicsLibrary
// 0x0000 (0x0028 - 0x0028)
class UKawaiiPhysicsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AddExternalBasicForcesToComponent(class USkeletalMeshComponent* MeshComp, const TArray<struct FKawaiiPhysics_ExternalForce_Basic>& ExternalForces, class UObject* Owner, const struct FGameplayTagContainer& FilterTags, bool bFilterExactMatch, bool bIsOneShot, bool bSupportChildComponent);
	static bool AddExternalCurveForcesToComponent(class USkeletalMeshComponent* MeshComp, const TArray<struct FKawaiiPhysics_ExternalForce_Curve>& ExternalForces, class UObject* Owner, const struct FGameplayTagContainer& FilterTags, bool bFilterExactMatch, bool bIsOneShot, bool bSupportChildComponent);
	static bool AddExternalGravityForcesToComponent(class USkeletalMeshComponent* MeshComp, const TArray<struct FKawaiiPhysics_ExternalForce_Gravity>& ExternalForces, class UObject* Owner, const struct FGameplayTagContainer& FilterTags, bool bFilterExactMatch, bool bIsOneShot, bool bSupportChildComponent);
	static bool AddExternalWindForcesToComponent(class USkeletalMeshComponent* MeshComp, const TArray<struct FKawaiiPhysics_ExternalForce_Wind>& ExternalForces, class UObject* Owner, const struct FGameplayTagContainer& FilterTags, bool bFilterExactMatch, bool bIsOneShot, bool bSupportChildComponent);
	static bool RemoveExternalForcesFromComponent(class USkeletalMeshComponent* MeshComp, class UObject* Owner, struct FGameplayTagContainer& FilterTags, bool bFilterExactMatch, bool bSupportChildComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KawaiiPhysicsLibrary">();
	}
	static class UKawaiiPhysicsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKawaiiPhysicsLibrary>();
	}
};
static_assert(alignof(UKawaiiPhysicsLibrary) == 0x000008, "Wrong alignment on UKawaiiPhysicsLibrary");
static_assert(sizeof(UKawaiiPhysicsLibrary) == 0x000028, "Wrong size on UKawaiiPhysicsLibrary");

// Class KawaiiPhysics.KawaiiPhysicsLimitsDataAsset
// 0x0040 (0x0070 - 0x0030)
class UKawaiiPhysicsLimitsDataAsset final : public UDataAsset
{
public:
	TArray<struct FSphericalLimit>                SphericalLimits;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCapsuleLimit>                  CapsuleLimits;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoxLimit>                      BoxLimits;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlanarLimit>                   PlanarLimits;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KawaiiPhysicsLimitsDataAsset">();
	}
	static class UKawaiiPhysicsLimitsDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKawaiiPhysicsLimitsDataAsset>();
	}
};
static_assert(alignof(UKawaiiPhysicsLimitsDataAsset) == 0x000008, "Wrong alignment on UKawaiiPhysicsLimitsDataAsset");
static_assert(sizeof(UKawaiiPhysicsLimitsDataAsset) == 0x000070, "Wrong size on UKawaiiPhysicsLimitsDataAsset");
static_assert(offsetof(UKawaiiPhysicsLimitsDataAsset, SphericalLimits) == 0x000030, "Member 'UKawaiiPhysicsLimitsDataAsset::SphericalLimits' has a wrong offset!");
static_assert(offsetof(UKawaiiPhysicsLimitsDataAsset, CapsuleLimits) == 0x000040, "Member 'UKawaiiPhysicsLimitsDataAsset::CapsuleLimits' has a wrong offset!");
static_assert(offsetof(UKawaiiPhysicsLimitsDataAsset, BoxLimits) == 0x000050, "Member 'UKawaiiPhysicsLimitsDataAsset::BoxLimits' has a wrong offset!");
static_assert(offsetof(UKawaiiPhysicsLimitsDataAsset, PlanarLimits) == 0x000060, "Member 'UKawaiiPhysicsLimitsDataAsset::PlanarLimits' has a wrong offset!");

// Class KawaiiPhysics.KawaiiPhysicsParamsInterface
// 0x0000 (0x0000 - 0x0000)
class IKawaiiPhysicsParamsInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KawaiiPhysicsParamsInterface">();
	}
	static class IKawaiiPhysicsParamsInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IKawaiiPhysicsParamsInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IKawaiiPhysicsParamsInterface) == 0x000001, "Wrong alignment on IKawaiiPhysicsParamsInterface");
static_assert(sizeof(IKawaiiPhysicsParamsInterface) == 0x000001, "Wrong size on IKawaiiPhysicsParamsInterface");

}

