#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubUI_InteractBtn_Horizontal

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BPS_InteractionButtonViewConfig_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Interact_Type_structs.hpp"
#include "UMG_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.ExecuteUbergraph_SubUI_InteractBtn_Horizontal
// 0x0150 (0x0150 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Interact_Type                               Temp_byte_Variable_4;                              // 0x0033(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	const class UWidgetAnimation*                 K2Node_Event_Animation_1;                          // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        K2Node_CustomEvent_BrushResoucePath;               // 0x0050(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0068(0x0028)(HasGetValueTypeHash)
	int32                                         K2Node_Event_InNum;                                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag;                    // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0028)()
	struct FCountDownInfo                         K2Node_Event_Info;                                 // 0x00C8(0x0058)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0120(0x0028)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal) == 0x000150, "Wrong size on SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, EntryPoint) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_bool_Variable) == 0x000004, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_byte_Variable) == 0x000018, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_byte_Variable_1) == 0x000019, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_object_Variable) == 0x000028, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_bool_Variable_1) == 0x000030, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_byte_Variable_2) == 0x000031, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_byte_Variable_3) == 0x000032, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, Temp_byte_Variable_4) == 0x000033, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_bIsExpanded) == 0x000034, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_bIsSelected) == 0x000035, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_IsDesignTime) == 0x000036, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000037, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_Animation_1) == 0x000038, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_Animation_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Select_Default) == 0x000040, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_Animation) == 0x000048, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_CustomEvent_BrushResoucePath) == 0x000050, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_CustomEvent_BrushResoucePath' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000068, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_InNum) == 0x000090, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_InNum' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000094, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_CustomEvent_GameplayTag) == 0x000098, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_CustomEvent_GameplayTag' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Event_Info) == 0x0000C8, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Event_Info' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_MakeStruct_SlateColor_1) == 0x000120, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, CallFunc_Array_Contains_ReturnValue) == 0x000148, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, CallFunc_BooleanAND_ReturnValue) == 0x000149, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal, K2Node_Select_Default_1) == 0x00014A, "Member 'SubUI_InteractBtn_Horizontal_C_ExecuteUbergraph_SubUI_InteractBtn_Horizontal::K2Node_Select_Default_1' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.BP_SetInteractType
// 0x0058 (0x0058 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_BP_SetInteractType final
{
public:
	struct FCountDownInfo                         Info;                                              // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_BP_SetInteractType) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_BP_SetInteractType");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_BP_SetInteractType) == 0x000058, "Wrong size on SubUI_InteractBtn_Horizontal_C_BP_SetInteractType");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BP_SetInteractType, Info) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_BP_SetInteractType::Info' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.DoSetInteractType
// 0x0008 (0x0008 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_DoSetInteractType final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_DoSetInteractType) == 0x000004, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_DoSetInteractType");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_DoSetInteractType) == 0x000008, "Wrong size on SubUI_InteractBtn_Horizontal_C_DoSetInteractType");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_DoSetInteractType, GameplayTag) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_DoSetInteractType::GameplayTag' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.UpdateInteractNum
// 0x0004 (0x0004 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_UpdateInteractNum final
{
public:
	int32                                         InNum;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_UpdateInteractNum) == 0x000004, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_UpdateInteractNum");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_UpdateInteractNum) == 0x000004, "Wrong size on SubUI_InteractBtn_Horizontal_C_UpdateInteractNum");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_UpdateInteractNum, InNum) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_UpdateInteractNum::InNum' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.SetBurshIcon
// 0x0018 (0x0018 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_SetBurshIcon final
{
public:
	struct FSoftObjectPath                        BrushResoucePath;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_SetBurshIcon) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_SetBurshIcon");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_SetBurshIcon) == 0x000018, "Wrong size on SubUI_InteractBtn_Horizontal_C_SetBurshIcon");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetBurshIcon, BrushResoucePath) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_SetBurshIcon::BrushResoucePath' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.OnAnimationStarted
// 0x0008 (0x0008 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_OnAnimationStarted final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_OnAnimationStarted) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_OnAnimationStarted");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_OnAnimationStarted) == 0x000008, "Wrong size on SubUI_InteractBtn_Horizontal_C_OnAnimationStarted");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_OnAnimationStarted, Animation) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_OnAnimationStarted::Animation' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_OnAnimationFinished) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_OnAnimationFinished");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_OnAnimationFinished) == 0x000008, "Wrong size on SubUI_InteractBtn_Horizontal_C_OnAnimationFinished");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_OnAnimationFinished, Animation) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_PreConstruct) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_PreConstruct");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_PreConstruct) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_PreConstruct");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.OnLoaded_67319900453E0DAB7C4CDB887DB055A5
// 0x0008 (0x0008 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5) == 0x000008, "Wrong size on SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5, Loaded) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_OnLoaded_67319900453E0DAB7C4CDB887DB055A5::Loaded' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.UpdateStateView
// 0x000C (0x000C - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_UpdateStateView final
{
public:
	ECountDownState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_ConditionalReplaceInteractType_ResultType; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_UpdateStateView) == 0x000004, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_UpdateStateView");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_UpdateStateView) == 0x00000C, "Wrong size on SubUI_InteractBtn_Horizontal_C_UpdateStateView");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_UpdateStateView, InState) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_UpdateStateView::InState' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_UpdateStateView, CallFunc_ConditionalReplaceInteractType_ResultType) == 0x000004, "Member 'SubUI_InteractBtn_Horizontal_C_UpdateStateView::CallFunc_ConditionalReplaceInteractType_ResultType' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.SetInteractType
// 0x0138 (0x0138 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_SetInteractType final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_InteractionButtonViewConfig       CallFunc_GetInteractionCofigByTag_Config;          // 0x0010(0x00D0)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E0(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0110(0x0028)()
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_SetInteractType) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_SetInteractType");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_SetInteractType) == 0x000138, "Wrong size on SubUI_InteractBtn_Horizontal_C_SetInteractType");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, GameplayTag) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::GameplayTag' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000008, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, CallFunc_GetInteractionCofigByTag_Config) == 0x000010, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::CallFunc_GetInteractionCofigByTag_Config' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, K2Node_MakeStruct_SlateColor) == 0x0000E0, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetInteractType, K2Node_MakeStruct_SlateColor_1) == 0x000110, "Member 'SubUI_InteractBtn_Horizontal_C_SetInteractType::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.SetProgressBarVisiblity
// 0x0005 (0x0005 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity) == 0x000005, "Wrong size on SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity, bShow) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity::bShow' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity, Temp_bool_Variable) == 0x000001, "Member 'SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity, Temp_byte_Variable) == 0x000002, "Member 'SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity, Temp_byte_Variable_1) == 0x000003, "Member 'SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity, K2Node_Select_Default) == 0x000004, "Member 'SubUI_InteractBtn_Horizontal_C_SetProgressBarVisiblity::K2Node_Select_Default' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.EnablePassiveBuffDisplay
// 0x0008 (0x0008 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalTextID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay) == 0x000004, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay) == 0x000008, "Wrong size on SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay, CharacterID) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay::CharacterID' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay, LocalTextID) == 0x000004, "Member 'SubUI_InteractBtn_Horizontal_C_EnablePassiveBuffDisplay::LocalTextID' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.ConditionalReplaceInteractType
// 0x0078 (0x0078 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType final
{
public:
	bool                                          IsBuffed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ResultType;                                        // 0x0004(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GeneralInteractionListConfig_C*     CallFunc_BPGetConfigDataAsset_DataAsset;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, struct FGameplayTag> K2Node_Select_Default;                            // 0x0018(0x0050)()
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType) == 0x000078, "Wrong size on SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, IsBuffed) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::IsBuffed' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, ResultType) == 0x000004, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::ResultType' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, Temp_bool_Variable) == 0x00000C, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, CallFunc_BPGetConfigDataAsset_DataAsset) == 0x000010, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::CallFunc_BPGetConfigDataAsset_DataAsset' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, K2Node_Select_Default) == 0x000018, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, CallFunc_Map_Find_Value) == 0x000068, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'SubUI_InteractBtn_Horizontal_C_ConditionalReplaceInteractType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.UpdateGuideVXVisibility
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility final
{
public:
	bool                                          CanShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility, CanShow) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_UpdateGuideVXVisibility::CanShow' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.BPGetConfigDataAsset
// 0x0020 (0x0020 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset final
{
public:
	class UBP_GeneralInteractionListConfig_C*     DataAsset;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneralInteractionButtonConfigDataAsset* CallFunc_GetConfigDataAsset_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneralInteractionListConfig_C*     K2Node_DynamicCast_AsBP_General_Interaction_List_Config; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset) == 0x000020, "Wrong size on SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset, DataAsset) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset::DataAsset' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset, CallFunc_GetConfigDataAsset_ReturnValue) == 0x000008, "Member 'SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset::CallFunc_GetConfigDataAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset, K2Node_DynamicCast_AsBP_General_Interaction_List_Config) == 0x000010, "Member 'SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset::K2Node_DynamicCast_AsBP_General_Interaction_List_Config' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SubUI_InteractBtn_Horizontal_C_BPGetConfigDataAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.Set Help Num Visible
// 0x0048 (0x0048 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible final
{
public:
	class USolarTextBlock*                        NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible) == 0x000048, "Wrong size on SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, NewLocalVar_0) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000008, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000009, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_Greater_IntInt_ReturnValue) == 0x00000B, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'SubUI_InteractBtn_Horizontal_C_Set_Help_Num_Visible::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.DoGetInteractType
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_DoGetInteractType final
{
public:
	E_Interact_Type                               NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_DoGetInteractType) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_DoGetInteractType");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_DoGetInteractType) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_DoGetInteractType");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_DoGetInteractType, NewParam) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_DoGetInteractType::NewParam' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.SetBtnSize
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_SetBtnSize final
{
public:
	bool                                          bInCD;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_SetBtnSize) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_SetBtnSize");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_SetBtnSize) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_SetBtnSize");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_SetBtnSize, bInCD) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_SetBtnSize::bInCD' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.GetInteractionCofigByTag
// 0x01B8 (0x01B8 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FBPS_InteractionButtonViewConfig       Config;                                            // 0x0008(0x00D0)(Parm, OutParm, HasGetValueTypeHash)
	class UBP_GeneralInteractionListConfig_C*     CallFunc_BPGetConfigDataAsset_DataAsset;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_InteractionButtonViewConfig       CallFunc_Map_Find_Value;                           // 0x00E0(0x00D0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag) == 0x000008, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag) == 0x0001B8, "Wrong size on SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag, GameplayTag) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag::GameplayTag' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag, Config) == 0x000008, "Member 'SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag::Config' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag, CallFunc_BPGetConfigDataAsset_DataAsset) == 0x0000D8, "Member 'SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag::CallFunc_BPGetConfigDataAsset_DataAsset' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag, CallFunc_Map_Find_ReturnValue) == 0x0001B0, "Member 'SubUI_InteractBtn_Horizontal_C_GetInteractionCofigByTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function SubUI_InteractBtn_Horizontal.SubUI_InteractBtn_Horizontal_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'SubUI_InteractBtn_Horizontal_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

}

