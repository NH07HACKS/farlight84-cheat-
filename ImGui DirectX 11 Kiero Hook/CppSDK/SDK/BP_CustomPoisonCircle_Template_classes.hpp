#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomPoisonCircle_Template

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CustomPoisonCircle_Template.BP_CustomPoisonCircle_Template_C
// 0x0030 (0x07C8 - 0x0798)
class ABP_CustomPoisonCircle_Template_C : public ASolarCircleSafeArea
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0798(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SafeArea;                                          // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshCicle;                                   // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Distance_Threshold;                                // 0x07B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitRadius;                                        // 0x07B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitPosition;                                      // 0x07B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DataIndex;                                         // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnLoaded_2CF9BD9E4D7B992D773DE7AE62F29135(class UObject* Loaded);
	void ReceiveBeginPlay();
	void _S_SetNextArea(const struct FVector& Center, float Radius, float WaitTime, float MoveTime, int32 DamageLevel, float SignalLevel);
	void ShowEffectInside(bool bInSide);
	void Evnet_ResetMaterial();
	void ExecuteUbergraph_BP_CustomPoisonCircle_Template(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomPoisonCircle_Template_C">();
	}
	static class ABP_CustomPoisonCircle_Template_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CustomPoisonCircle_Template_C>();
	}
};
static_assert(alignof(ABP_CustomPoisonCircle_Template_C) == 0x000008, "Wrong alignment on ABP_CustomPoisonCircle_Template_C");
static_assert(sizeof(ABP_CustomPoisonCircle_Template_C) == 0x0007C8, "Wrong size on ABP_CustomPoisonCircle_Template_C");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, UberGraphFrame) == 0x000798, "Member 'ABP_CustomPoisonCircle_Template_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, SafeArea) == 0x0007A0, "Member 'ABP_CustomPoisonCircle_Template_C::SafeArea' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, StaticMeshCicle) == 0x0007A8, "Member 'ABP_CustomPoisonCircle_Template_C::StaticMeshCicle' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, Distance_Threshold) == 0x0007B0, "Member 'ABP_CustomPoisonCircle_Template_C::Distance_Threshold' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, InitRadius) == 0x0007B4, "Member 'ABP_CustomPoisonCircle_Template_C::InitRadius' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, InitPosition) == 0x0007B8, "Member 'ABP_CustomPoisonCircle_Template_C::InitPosition' has a wrong offset!");
static_assert(offsetof(ABP_CustomPoisonCircle_Template_C, DataIndex) == 0x0007C4, "Member 'ABP_CustomPoisonCircle_Template_C::DataIndex' has a wrong offset!");

}

