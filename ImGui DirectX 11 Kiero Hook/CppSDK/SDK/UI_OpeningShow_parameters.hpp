#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_OpeningShow

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_OpeningShow.UI_OpeningShow_C.ExecuteUbergraph_UI_OpeningShow
// 0x0048 (0x0048 - 0x0000)
struct UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           K2Node_CustomEvent_Panel_Logo_Root;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_SetTimerForNextTick_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	EDefenderTeamType                             K2Node_Event_TeamType;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarUserWidget*                       CallFunc__c__Create_Widget_And_Display_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalKillNum;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayEvent2DByName_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopEventByName_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bSkip;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow) == 0x000008, "Wrong alignment on UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow");
static_assert(sizeof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow) == 0x000048, "Wrong size on UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, EntryPoint) == 0x000000, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_CustomEvent_Panel_Logo_Root) == 0x000018, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_CustomEvent_Panel_Logo_Root' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, CallFunc_SetTimerForNextTick_ReturnValue) == 0x000020, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::CallFunc_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_Event_TeamType) == 0x000028, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_Event_TeamType' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_Event_IsDesignTime) == 0x000029, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, CallFunc__c__Create_Widget_And_Display_ReturnValue) == 0x000030, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::CallFunc__c__Create_Widget_And_Display_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_Event_TotalKillNum) == 0x000038, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_Event_TotalKillNum' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, CallFunc_PlayEvent2DByName_ReturnValue) == 0x00003C, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::CallFunc_PlayEvent2DByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, CallFunc_StopEventByName_ReturnValue) == 0x000040, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::CallFunc_StopEventByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow, K2Node_Event_bSkip) == 0x000041, "Member 'UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow::K2Node_Event_bSkip' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.SetIsSkipOpeningHUD
// 0x0001 (0x0001 - 0x0000)
struct UI_OpeningShow_C_SetIsSkipOpeningHUD final
{
public:
	bool                                          bSkip;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_OpeningShow_C_SetIsSkipOpeningHUD) == 0x000001, "Wrong alignment on UI_OpeningShow_C_SetIsSkipOpeningHUD");
static_assert(sizeof(UI_OpeningShow_C_SetIsSkipOpeningHUD) == 0x000001, "Wrong size on UI_OpeningShow_C_SetIsSkipOpeningHUD");
static_assert(offsetof(UI_OpeningShow_C_SetIsSkipOpeningHUD, bSkip) == 0x000000, "Member 'UI_OpeningShow_C_SetIsSkipOpeningHUD::bSkip' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.SetDefenderTeamTotalKill
// 0x0004 (0x0004 - 0x0000)
struct UI_OpeningShow_C_SetDefenderTeamTotalKill final
{
public:
	int32                                         TotalKillNum;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_SetDefenderTeamTotalKill) == 0x000004, "Wrong alignment on UI_OpeningShow_C_SetDefenderTeamTotalKill");
static_assert(sizeof(UI_OpeningShow_C_SetDefenderTeamTotalKill) == 0x000004, "Wrong size on UI_OpeningShow_C_SetDefenderTeamTotalKill");
static_assert(offsetof(UI_OpeningShow_C_SetDefenderTeamTotalKill, TotalKillNum) == 0x000000, "Member 'UI_OpeningShow_C_SetDefenderTeamTotalKill::TotalKillNum' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_OpeningShow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_OpeningShow_C_PreConstruct) == 0x000001, "Wrong alignment on UI_OpeningShow_C_PreConstruct");
static_assert(sizeof(UI_OpeningShow_C_PreConstruct) == 0x000001, "Wrong size on UI_OpeningShow_C_PreConstruct");
static_assert(offsetof(UI_OpeningShow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_OpeningShow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.UpdateOpeningShow
// 0x0001 (0x0001 - 0x0000)
struct UI_OpeningShow_C_UpdateOpeningShow final
{
public:
	EDefenderTeamType                             TeamType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_UpdateOpeningShow) == 0x000001, "Wrong alignment on UI_OpeningShow_C_UpdateOpeningShow");
static_assert(sizeof(UI_OpeningShow_C_UpdateOpeningShow) == 0x000001, "Wrong size on UI_OpeningShow_C_UpdateOpeningShow");
static_assert(offsetof(UI_OpeningShow_C_UpdateOpeningShow, TeamType) == 0x000000, "Member 'UI_OpeningShow_C_UpdateOpeningShow::TeamType' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.StartPlayExitAnim
// 0x0008 (0x0008 - 0x0000)
struct UI_OpeningShow_C_StartPlayExitAnim final
{
public:
	class UCanvasPanel*                           Panel_Logo_Root;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_StartPlayExitAnim) == 0x000008, "Wrong alignment on UI_OpeningShow_C_StartPlayExitAnim");
static_assert(sizeof(UI_OpeningShow_C_StartPlayExitAnim) == 0x000008, "Wrong size on UI_OpeningShow_C_StartPlayExitAnim");
static_assert(offsetof(UI_OpeningShow_C_StartPlayExitAnim, Panel_Logo_Root) == 0x000000, "Member 'UI_OpeningShow_C_StartPlayExitAnim::Panel_Logo_Root' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.SequenceEvent__ENTRYPOINTUI_OpeningShow_0
// 0x0008 (0x0008 - 0x0000)
struct UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0 final
{
public:
	class UCanvasPanel*                           Panel_Logo_Root;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0) == 0x000008, "Wrong alignment on UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0");
static_assert(sizeof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0) == 0x000008, "Wrong size on UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0");
static_assert(offsetof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0, Panel_Logo_Root) == 0x000000, "Member 'UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0::Panel_Logo_Root' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.SequenceEvent__ENTRYPOINTUI_OpeningShow_1
// 0x0008 (0x0008 - 0x0000)
struct UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1 final
{
public:
	class UCanvasPanel*                           Panel_Logo_Root;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1) == 0x000008, "Wrong alignment on UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1");
static_assert(sizeof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1) == 0x000008, "Wrong size on UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1");
static_assert(offsetof(UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1, Panel_Logo_Root) == 0x000000, "Member 'UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1::Panel_Logo_Root' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.UpdateHeroImg
// 0x0008 (0x0008 - 0x0000)
struct UI_OpeningShow_C_UpdateHeroImg final
{
public:
	class ASolarPlayerState*                      PS;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_OpeningShow_C_UpdateHeroImg) == 0x000008, "Wrong alignment on UI_OpeningShow_C_UpdateHeroImg");
static_assert(sizeof(UI_OpeningShow_C_UpdateHeroImg) == 0x000008, "Wrong size on UI_OpeningShow_C_UpdateHeroImg");
static_assert(offsetof(UI_OpeningShow_C_UpdateHeroImg, PS) == 0x000000, "Member 'UI_OpeningShow_C_UpdateHeroImg::PS' has a wrong offset!");

// Function UI_OpeningShow.UI_OpeningShow_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_OpeningShow_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_OpeningShow_C_GetModuleName) == 0x000008, "Wrong alignment on UI_OpeningShow_C_GetModuleName");
static_assert(sizeof(UI_OpeningShow_C_GetModuleName) == 0x000010, "Wrong size on UI_OpeningShow_C_GetModuleName");
static_assert(offsetof(UI_OpeningShow_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_OpeningShow_C_GetModuleName::ReturnValue' has a wrong offset!");

}

