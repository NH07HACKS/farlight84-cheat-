#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Notice_NameIcon

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.ExecuteUbergraph_UI_Notice_NameIcon
// 0x0008 (0x0008 - 0x0000)
struct UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              K2Node_Event_NewQuality;                           // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon) == 0x000004, "Wrong alignment on UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon");
static_assert(sizeof(UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon) == 0x000008, "Wrong size on UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon");
static_assert(offsetof(UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon, EntryPoint) == 0x000000, "Member 'UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon, K2Node_Event_NewQuality) == 0x000004, "Member 'UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon::K2Node_Event_NewQuality' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon, K2Node_Event_IsDesignTime) == 0x000005, "Member 'UI_Notice_NameIcon_C_ExecuteUbergraph_UI_Notice_NameIcon::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.SetStrongholdQuality
// 0x0001 (0x0001 - 0x0000)
struct UI_Notice_NameIcon_C_SetStrongholdQuality final
{
public:
	EItemQualityType                              NewQuality;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Notice_NameIcon_C_SetStrongholdQuality) == 0x000001, "Wrong alignment on UI_Notice_NameIcon_C_SetStrongholdQuality");
static_assert(sizeof(UI_Notice_NameIcon_C_SetStrongholdQuality) == 0x000001, "Wrong size on UI_Notice_NameIcon_C_SetStrongholdQuality");
static_assert(offsetof(UI_Notice_NameIcon_C_SetStrongholdQuality, NewQuality) == 0x000000, "Member 'UI_Notice_NameIcon_C_SetStrongholdQuality::NewQuality' has a wrong offset!");

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Notice_NameIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Notice_NameIcon_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Notice_NameIcon_C_PreConstruct");
static_assert(sizeof(UI_Notice_NameIcon_C_PreConstruct) == 0x000001, "Wrong size on UI_Notice_NameIcon_C_PreConstruct");
static_assert(offsetof(UI_Notice_NameIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Notice_NameIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.SetNameQuality
// 0x00C0 (0x00C0 - 0x0000)
struct UI_Notice_NameIcon_C_SetNameQuality final
{
public:
	EItemQualityType                              NameQuality_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0098(0x0028)()
};
static_assert(alignof(UI_Notice_NameIcon_C_SetNameQuality) == 0x000008, "Wrong alignment on UI_Notice_NameIcon_C_SetNameQuality");
static_assert(sizeof(UI_Notice_NameIcon_C_SetNameQuality) == 0x0000C0, "Wrong size on UI_Notice_NameIcon_C_SetNameQuality");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, NameQuality_0) == 0x000000, "Member 'UI_Notice_NameIcon_C_SetNameQuality::NameQuality_0' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_byte_Variable) == 0x000001, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable) == 0x000004, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_3) == 0x000034, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_4) == 0x000044, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_5) == 0x000054, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_6) == 0x000064, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, Temp_struct_Variable_7) == 0x000074, "Member 'UI_Notice_NameIcon_C_SetNameQuality::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, K2Node_Select_Default) == 0x000084, "Member 'UI_Notice_NameIcon_C_SetNameQuality::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Notice_NameIcon_C_SetNameQuality, K2Node_MakeStruct_SlateColor) == 0x000098, "Member 'UI_Notice_NameIcon_C_SetNameQuality::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.GetEnterAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_Notice_NameIcon_C_GetEnterAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Notice_NameIcon_C_GetEnterAnimation) == 0x000008, "Wrong alignment on UI_Notice_NameIcon_C_GetEnterAnimation");
static_assert(sizeof(UI_Notice_NameIcon_C_GetEnterAnimation) == 0x000008, "Wrong size on UI_Notice_NameIcon_C_GetEnterAnimation");
static_assert(offsetof(UI_Notice_NameIcon_C_GetEnterAnimation, ReturnValue) == 0x000000, "Member 'UI_Notice_NameIcon_C_GetEnterAnimation::ReturnValue' has a wrong offset!");

// Function UI_Notice_NameIcon.UI_Notice_NameIcon_C.GetExitAnimation
// 0x0008 (0x0008 - 0x0000)
struct UI_Notice_NameIcon_C_GetExitAnimation final
{
public:
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Notice_NameIcon_C_GetExitAnimation) == 0x000008, "Wrong alignment on UI_Notice_NameIcon_C_GetExitAnimation");
static_assert(sizeof(UI_Notice_NameIcon_C_GetExitAnimation) == 0x000008, "Wrong size on UI_Notice_NameIcon_C_GetExitAnimation");
static_assert(offsetof(UI_Notice_NameIcon_C_GetExitAnimation, ReturnValue) == 0x000000, "Member 'UI_Notice_NameIcon_C_GetExitAnimation::ReturnValue' has a wrong offset!");

}

