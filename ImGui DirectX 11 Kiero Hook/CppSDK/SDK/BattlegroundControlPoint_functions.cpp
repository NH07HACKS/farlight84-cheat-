#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlegroundControlPoint

#include "Basic.hpp"

#include "BattlegroundControlPoint_classes.hpp"
#include "BattlegroundControlPoint_parameters.hpp"


namespace SDK
{

// Function BattlegroundControlPoint.BattlegroundControlPoint_C.GetOccupying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   NewOccupying                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABattlegroundControlPoint_C::GetOccupying(bool* NewOccupying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "GetOccupying");

	Params::BattlegroundControlPoint_C_GetOccupying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewOccupying != nullptr)
		*NewOccupying = Parms.NewOccupying;
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.K2_OnCharactersInsideChanged
// (Event, Protected, BlueprintEvent)

void ABattlegroundControlPoint_C::K2_OnCharactersInsideChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "K2_OnCharactersInsideChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.K2_OnProgressOwnerFactionChanged
// (Event, Protected, BlueprintEvent)

void ABattlegroundControlPoint_C::K2_OnProgressOwnerFactionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "K2_OnProgressOwnerFactionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.K2_OnProgressStatusChanged
// (Event, Protected, BlueprintEvent)

void ABattlegroundControlPoint_C::K2_OnProgressStatusChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "K2_OnProgressStatusChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.ExecuteUbergraph_BattlegroundControlPoint
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattlegroundControlPoint_C::ExecuteUbergraph_BattlegroundControlPoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "ExecuteUbergraph_BattlegroundControlPoint");

	Params::BattlegroundControlPoint_C_ExecuteUbergraph_BattlegroundControlPoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.GetStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EFactionType                            InFaction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EControlPointStatus*                    OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABattlegroundControlPoint_C::GetStatus(EFactionType InFaction, EControlPointStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "GetStatus");

	Params::BattlegroundControlPoint_C_GetStatus Parms{};

	Parms.InFaction = InFaction;

	UObject::ProcessEvent(Func, &Parms);

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.OnOccupiedChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABattlegroundControlPoint_C::OnOccupiedChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "OnOccupiedChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.OnOccupyingChanged
// (Public, BlueprintCallable, BlueprintEvent)

void ABattlegroundControlPoint_C::OnOccupyingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "OnOccupyingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABattlegroundControlPoint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BattlegroundControlPoint.BattlegroundControlPoint_C.K2_OnOccupiedFactionChanged
// (Event, Protected, BlueprintEvent)

void ABattlegroundControlPoint_C::K2_OnOccupiedFactionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlegroundControlPoint_C", "K2_OnOccupiedFactionChanged");

	UObject::ProcessEvent(Func, nullptr);
}

}

