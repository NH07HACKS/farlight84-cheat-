#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ACCM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ACCM.BP_ACCM_C
// 0x00D0 (0x07F0 - 0x0720)
class ABP_ACCM_C final : public AAccelerationBandManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0720(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSet<class ASolarCharacter*>                  IgnoreCharacters;                                  // 0x0728(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         BandLifeTime_0;                                    // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class ASolarCharacter*>                  ApplyShieldCharacters;                             // 0x0780(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          EnableTempShield;                                  // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarProjectileMovementComponent*      ProjectileMovement_0;                              // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereRoot_0;                                      // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void FixRotationForBox(const struct FTransform& OriginWorldTransform, struct FTransform* FixedWorldTransform);
	void TryApplyTempShieldEffect(class ASolarCharacter* TargetCharacter);
	void ApplyEffectToOverlapCharacter();
	void ReceiveBeginPlay();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void CreateBox(const struct FTransform& WorldTransform);
	void SetBandLifetime(float LifeTime);
	void CreateBand(const struct FTransform& WorldTransform);
	void OnActivateAbility(bool bEnableTempShieldEffect);
	void ExecuteUbergraph_BP_ACCM(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ACCM_C">();
	}
	static class ABP_ACCM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ACCM_C>();
	}
};
static_assert(alignof(ABP_ACCM_C) == 0x000010, "Wrong alignment on ABP_ACCM_C");
static_assert(sizeof(ABP_ACCM_C) == 0x0007F0, "Wrong size on ABP_ACCM_C");
static_assert(offsetof(ABP_ACCM_C, UberGraphFrame) == 0x000720, "Member 'ABP_ACCM_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, IgnoreCharacters) == 0x000728, "Member 'ABP_ACCM_C::IgnoreCharacters' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, BandLifeTime_0) == 0x000778, "Member 'ABP_ACCM_C::BandLifeTime_0' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, ApplyShieldCharacters) == 0x000780, "Member 'ABP_ACCM_C::ApplyShieldCharacters' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, EnableTempShield) == 0x0007D0, "Member 'ABP_ACCM_C::EnableTempShield' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, ProjectileMovement_0) == 0x0007D8, "Member 'ABP_ACCM_C::ProjectileMovement_0' has a wrong offset!");
static_assert(offsetof(ABP_ACCM_C, SphereRoot_0) == 0x0007E0, "Member 'ABP_ACCM_C::SphereRoot_0' has a wrong offset!");

}

