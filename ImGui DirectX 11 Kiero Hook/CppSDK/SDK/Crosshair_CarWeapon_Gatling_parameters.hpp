#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Gatling

#include "Basic.hpp"


namespace SDK::Params
{

// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.ExecuteUbergraph_Crosshair_CarWeapon_Gatling
// 0x0018 (0x0018 - 0x0000)
struct Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTmie;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InRollSpeedInterp;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWantFire;                            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateRotAngle_OutAngle;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling) == 0x000004, "Wrong alignment on Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling");
static_assert(sizeof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling) == 0x000018, "Wrong size on Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, EntryPoint) == 0x000000, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::EntryPoint' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, K2Node_Event_DeltaTmie) == 0x000004, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::K2Node_Event_DeltaTmie' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, K2Node_Event_InRollSpeedInterp) == 0x000008, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::K2Node_Event_InRollSpeedInterp' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, K2Node_Event_bWantFire) == 0x00000C, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::K2Node_Event_bWantFire' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, CallFunc_CalculateRotAngle_OutAngle) == 0x000010, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::CallFunc_CalculateRotAngle_OutAngle' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000015, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling, CallFunc_BooleanAND_ReturnValue) == 0x000017, "Member 'Crosshair_CarWeapon_Gatling_C_ExecuteUbergraph_Crosshair_CarWeapon_Gatling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.OnUpdateGatlingRoll
// 0x000C (0x000C - 0x0000)
struct Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll final
{
public:
	float                                         DeltaTmie;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRollSpeedInterp;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWantFire;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll) == 0x000004, "Wrong alignment on Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll");
static_assert(sizeof(Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll) == 0x00000C, "Wrong size on Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll, DeltaTmie) == 0x000000, "Member 'Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll::DeltaTmie' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll, InRollSpeedInterp) == 0x000004, "Member 'Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll::InRollSpeedInterp' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll, bWantFire) == 0x000008, "Member 'Crosshair_CarWeapon_Gatling_C_OnUpdateGatlingRoll::bWantFire' has a wrong offset!");

// Function Crosshair_CarWeapon_Gatling.Crosshair_CarWeapon_Gatling_C.CalculateRotAngle
// 0x0048 (0x0048 - 0x0000)
struct Crosshair_CarWeapon_Gatling_C_CalculateRotAngle final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSpeed;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFire;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OutAngle;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDeltaAngle;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampAxis_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle) == 0x000004, "Wrong alignment on Crosshair_CarWeapon_Gatling_C_CalculateRotAngle");
static_assert(sizeof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle) == 0x000048, "Wrong size on Crosshair_CarWeapon_Gatling_C_CalculateRotAngle");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, DeltaTime) == 0x000000, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::DeltaTime' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, InSpeed) == 0x000004, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::InSpeed' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, bFire) == 0x000008, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::bFire' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, OutAngle) == 0x00000C, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::OutAngle' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CurrentDeltaAngle) == 0x000010, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CurrentDeltaAngle' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, Temp_bool_Variable) == 0x000014, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Less_FloatFloat_ReturnValue) == 0x000016, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, Temp_float_Variable) == 0x000024, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, Temp_bool_Variable_1) == 0x00002C, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000034, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, CallFunc_ClampAxis_ReturnValue) == 0x00003C, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::CallFunc_ClampAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, K2Node_Select_Default) == 0x000040, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Gatling_C_CalculateRotAngle, K2Node_Select_Default_1) == 0x000044, "Member 'Crosshair_CarWeapon_Gatling_C_CalculateRotAngle::K2Node_Select_Default_1' has a wrong offset!");

}

