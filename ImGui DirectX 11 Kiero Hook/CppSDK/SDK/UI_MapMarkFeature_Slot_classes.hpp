#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_MapMarkFeature_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_MapMarkFeature_Slot.UI_MapMarkFeature_Slot_C
// 0x0070 (0x06D8 - 0x0668)
class UUI_MapMarkFeature_Slot_C final : public UMapMarkFeatureSlotWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0668(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               SizeBox_Icon;                                      // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Sizebox_Thumbnail;                                 // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarRichTextBlock*                    Txt_Second;                                        // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_84;                                    // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0690(0x0018)(Edit, BlueprintVisible)
	bool                                          IsTitleLoc;                                        // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TitleLocID;                                        // 0x06AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   DescribeText;                                      // 0x06B0(0x0018)(Edit, BlueprintVisible)
	bool                                          IsDescribeLoc;                                     // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C9[0x3];                                      // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DescribeLocID;                                     // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLine;                                            // 0x06D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_MapMarkFeature_Slot(int32 EntryPoint);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void PreConstruct(bool IsDesignTime);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	bool BP_IsNotSelectableOrNavigable();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_MapMarkFeature_Slot_C">();
	}
	static class UUI_MapMarkFeature_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_MapMarkFeature_Slot_C>();
	}
};
static_assert(alignof(UUI_MapMarkFeature_Slot_C) == 0x000008, "Wrong alignment on UUI_MapMarkFeature_Slot_C");
static_assert(sizeof(UUI_MapMarkFeature_Slot_C) == 0x0006D8, "Wrong size on UUI_MapMarkFeature_Slot_C");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, UberGraphFrame) == 0x000668, "Member 'UUI_MapMarkFeature_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, SizeBox_Icon) == 0x000670, "Member 'UUI_MapMarkFeature_Slot_C::SizeBox_Icon' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, Sizebox_Thumbnail) == 0x000678, "Member 'UUI_MapMarkFeature_Slot_C::Sizebox_Thumbnail' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, Txt_Second) == 0x000680, "Member 'UUI_MapMarkFeature_Slot_C::Txt_Second' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, VerticalBox_84) == 0x000688, "Member 'UUI_MapMarkFeature_Slot_C::VerticalBox_84' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, TitleText) == 0x000690, "Member 'UUI_MapMarkFeature_Slot_C::TitleText' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, IsTitleLoc) == 0x0006A8, "Member 'UUI_MapMarkFeature_Slot_C::IsTitleLoc' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, TitleLocID) == 0x0006AC, "Member 'UUI_MapMarkFeature_Slot_C::TitleLocID' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, DescribeText) == 0x0006B0, "Member 'UUI_MapMarkFeature_Slot_C::DescribeText' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, IsDescribeLoc) == 0x0006C8, "Member 'UUI_MapMarkFeature_Slot_C::IsDescribeLoc' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, DescribeLocID) == 0x0006CC, "Member 'UUI_MapMarkFeature_Slot_C::DescribeLocID' has a wrong offset!");
static_assert(offsetof(UUI_MapMarkFeature_Slot_C, IsLine) == 0x0006D0, "Member 'UUI_MapMarkFeature_Slot_C::IsLine' has a wrong offset!");

}

