#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChaGCBP_DuckRollingEnableCharacterHit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChaGCBP_DuckRollingEnableCharacterHit.ChaGCBP_DuckRollingEnableCharacterHit_C
// 0x0038 (0x0490 - 0x0458)
class AChaGCBP_DuckRollingEnableCharacterHit_C final : public AChaGC_CharacterActorCueBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleAsset;                                     // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               _ParticleComponent;                                // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationOffset;                                    // 0x0480(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ChaGCBP_DuckRollingEnableCharacterHit(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChaGCBP_DuckRollingEnableCharacterHit_C">();
	}
	static class AChaGCBP_DuckRollingEnableCharacterHit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AChaGCBP_DuckRollingEnableCharacterHit_C>();
	}
};
static_assert(alignof(AChaGCBP_DuckRollingEnableCharacterHit_C) == 0x000008, "Wrong alignment on AChaGCBP_DuckRollingEnableCharacterHit_C");
static_assert(sizeof(AChaGCBP_DuckRollingEnableCharacterHit_C) == 0x000490, "Wrong size on AChaGCBP_DuckRollingEnableCharacterHit_C");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, UberGraphFrame) == 0x000458, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, DefaultSceneRoot) == 0x000460, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, ParticleAsset) == 0x000468, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::ParticleAsset' has a wrong offset!");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, MeshComponent) == 0x000470, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::MeshComponent' has a wrong offset!");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, _ParticleComponent) == 0x000478, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::_ParticleComponent' has a wrong offset!");
static_assert(offsetof(AChaGCBP_DuckRollingEnableCharacterHit_C, RotationOffset) == 0x000480, "Member 'AChaGCBP_DuckRollingEnableCharacterHit_C::RotationOffset' has a wrong offset!");

}

