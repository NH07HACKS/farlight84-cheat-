#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameTest_CN

#include "Basic.hpp"

#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_GameTest_CN.UI_GameTest_CN_C.ExecuteUbergraph_UI_GameTest_CN
// 0x0028 (0x0028 - 0x0000)
struct UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN) == 0x000008, "Wrong alignment on UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN");
static_assert(sizeof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN) == 0x000028, "Wrong size on UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, EntryPoint) == 0x000000, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, Temp_byte_Variable) == 0x000004, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, Temp_object_Variable) == 0x000008, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, Temp_object_Variable_1) == 0x000010, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, K2Node_Event_InLayoutType) == 0x000018, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN, K2Node_Select_Default) == 0x000020, "Member 'UI_GameTest_CN_C_ExecuteUbergraph_UI_GameTest_CN::K2Node_Select_Default' has a wrong offset!");

// Function UI_GameTest_CN.UI_GameTest_CN_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_GameTest_CN_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameTest_CN_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_GameTest_CN_C_ReceivePlatformLayout");
static_assert(sizeof(UI_GameTest_CN_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_GameTest_CN_C_ReceivePlatformLayout");
static_assert(offsetof(UI_GameTest_CN_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_GameTest_CN_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

}

