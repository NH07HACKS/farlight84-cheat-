#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TutorialSequence_3_C01_Test

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x03E8 (0x03E8 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0_4;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0_3;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0_2;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x00E0(0x0018)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0150(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0190(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x01A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0200(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0240(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0280(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x0298(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x02F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0330(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0340(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0380(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0398(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_SkeletalMeshComponent0_1;       // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x0003E8, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0_4) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0_4' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0_3) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0_2) == 0x000020, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000028, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000040, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_GetEnumeratorName_ReturnValue) == 0x0000D8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_BoolToText_ReturnValue) == 0x0000E0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_NameToText_ReturnValue) == 0x0000F8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_3) == 0x000150, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000190, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0001A8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001C0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_5) == 0x000200, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_6) == 0x000240, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000280, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x000298, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002B0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_8) == 0x0002F0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeArray_Array) == 0x000330, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeStruct_FormatArgumentData_9) == 0x000340, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Format_ReturnValue) == 0x000380, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_MakeArray_Array_1) == 0x000398, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_TextToString_ReturnValue) == 0x0003A8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Format_ReturnValue_1) == 0x0003B8, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0003D0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_SkeletalMeshComponent0_1) == 0x0003E0, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_SkeletalMeshComponent0_1' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SkeletalMeshComponent0_Event_4
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_4 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_4) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_4");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_4) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_4");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_4, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_4::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SkeletalMeshComponent0_Event_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_3 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_3) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_3");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_3) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_3");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_3, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_3::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SkeletalMeshComponent0_Event_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_2 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_2");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_2) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_2");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_2, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_2::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SkeletalMeshComponent0_Event_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_1 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_1");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_1) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_1");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_1, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_1::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SkeletalMeshComponent0_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SkeletalMeshComponent0_Event_0 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SkeletalMeshComponent0_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SkeletalMeshComponent0_Event_0");
static_assert(sizeof(SequenceDirector_C_SkeletalMeshComponent0_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_SkeletalMeshComponent0_Event_0");
static_assert(offsetof(SequenceDirector_C_SkeletalMeshComponent0_Event_0, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SkeletalMeshComponent0_Event_0::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3::SkeletalMeshComponent0' has a wrong offset!");

// Function TutorialSequence_3_C01_Test.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_4
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4 final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4, SkeletalMeshComponent0) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_4::SkeletalMeshComponent0' has a wrong offset!");

}

