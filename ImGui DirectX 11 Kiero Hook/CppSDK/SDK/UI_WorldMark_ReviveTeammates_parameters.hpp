#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WorldMark_ReviveTeammates

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetIsOnScreen
// 0x0080 (0x0080 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetIsOnScreen final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPromisedToMark_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetIsOnScreen");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen) == 0x000080, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetIsOnScreen");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_struct_Variable) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable) == 0x000008, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable) == 0x000009, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable_1) == 0x00000A, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_1) == 0x00000B, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_2) == 0x00000C, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_3) == 0x00000D, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_4) == 0x00000E, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_struct_Variable_1) == 0x000010, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_5) == 0x000018, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable_2) == 0x000019, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable_3) == 0x00001A, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_6) == 0x00001B, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_float_Variable) == 0x00001C, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_float_Variable_1) == 0x000020, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_7) == 0x000024, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable_4) == 0x000025, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_byte_Variable_5) == 0x000026, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_struct_Variable_2) == 0x000028, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_GetIsPromisedToMark_ReturnValue) == 0x000030, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_GetIsPromisedToMark_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, Temp_bool_Variable_8) == 0x000040, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default) == 0x000044, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_1) == 0x000058, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_2) == 0x000059, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_3) == 0x00005C, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_4) == 0x000064, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_5) == 0x000065, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_Select_Default_6) == 0x000068, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIsOnScreen, K2Node_MakeStruct_Margin) == 0x00006C, "Member 'UI_WorldMark_ReviveTeammates_C_SetIsOnScreen::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.Set Player ID And Change Color
// 0x01F0 (0x01F0 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        CallFunc_FindPlayerByPlayerID_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarResurrectionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarTablesData_Skin                  CallFunc_GetCharacterSkinData_ReturnValue;         // 0x0020(0x0180)()
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x01A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_LoadTexture2DBySoftPath_ReturnValue;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color) == 0x0001F0, "Wrong size on UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, PlayerID) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::PlayerID' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_FindPlayerByPlayerID_ReturnValue) == 0x000010, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_FindPlayerByPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_GetCharacterSkinData_ReturnValue) == 0x000020, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_GetCharacterSkinData_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x0001A0, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_LoadTexture2DBySoftPath_ReturnValue) == 0x0001B8, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_LoadTexture2DBySoftPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_Map_Find_Value) == 0x0001C4, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_Map_Find_ReturnValue) == 0x0001D4, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, K2Node_DynamicCast_AsMaterial_Instance) == 0x0001D8, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, K2Node_DynamicCast_bSuccess) == 0x0001E0, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001E8, "Member 'UI_WorldMark_ReviveTeammates_C_Set_Player_ID_And_Change_Color::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetColor
// 0x0001 (0x0001 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetColor final
{
public:
	uint8                                         Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetColor) == 0x000001, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetColor");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetColor) == 0x000001, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetColor");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetColor, Index_0) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetColor::Index_0' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.GetVisibility_0
// 0x0010 (0x0010 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_GetVisibility_0");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0) == 0x000010, "Wrong size on UI_WorldMark_ReviveTeammates_C_GetVisibility_0");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, CallFunc_GetDistance_ReturnValue) == 0x000004, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_GetVisibility_0, K2Node_Select_Default) == 0x00000D, "Member 'UI_WorldMark_ReviveTeammates_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetIcon
// 0x0018 (0x0018 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetIcon final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         隐藏距离;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetIcon) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetIcon");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetIcon) == 0x000018, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetIcon");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIcon, Content) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetIcon::Content' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIcon, 隐藏距离) == 0x000008, "Member 'UI_WorldMark_ReviveTeammates_C_SetIcon::隐藏距离' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetIcon, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'UI_WorldMark_ReviveTeammates_C_SetIcon::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_PreConstruct) == 0x000001, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_PreConstruct");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_PreConstruct) == 0x000001, "Wrong size on UI_WorldMark_ReviveTeammates_C_PreConstruct");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_Tick) == 0x000004, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_Tick");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_Tick) == 0x00003C, "Wrong size on UI_WorldMark_ReviveTeammates_C_Tick");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Tick, MyGeometry) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_WorldMark_ReviveTeammates_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetPlayerIDAndChangeColor
// 0x0010 (0x0010 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor) == 0x000010, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor, PlayerID) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetPlayerIDAndChangeColor::PlayerID' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetOutOfScreen
// 0x0001 (0x0001 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetOutOfScreen final
{
public:
	bool                                          OutOfScreen;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetOutOfScreen) == 0x000001, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetOutOfScreen");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetOutOfScreen) == 0x000001, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetOutOfScreen");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetOutOfScreen, OutOfScreen) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetOutOfScreen::OutOfScreen' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.SetWidgetStyleByPlayerState
// 0x0008 (0x0008 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState final
{
public:
	const class ASolarPlayerState*                PlayerState;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState) == 0x000008, "Wrong size on UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState, PlayerState) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_SetWidgetStyleByPlayerState::PlayerState' has a wrong offset!");

// Function UI_WorldMark_ReviveTeammates.UI_WorldMark_ReviveTeammates_C.ExecuteUbergraph_UI_WorldMark_ReviveTeammates
// 0x0088 (0x0088 - 0x0000)
struct UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_PlayerID;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_OutOfScreen;                          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class ASolarPlayerState*                K2Node_Event_PlayerState;                          // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates) == 0x000008, "Wrong alignment on UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates");
static_assert(sizeof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates) == 0x000088, "Wrong size on UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, EntryPoint) == 0x000000, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_MyGeometry) == 0x000010, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_InDeltaTime) == 0x000048, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_PlayerID) == 0x000058, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_PlayerID' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_GetSize_ReturnValue) == 0x000068, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_OutOfScreen) == 0x000070, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_OutOfScreen' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, K2Node_Event_PlayerState) == 0x000078, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::K2Node_Event_PlayerState' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000084, "Member 'UI_WorldMark_ReviveTeammates_C_ExecuteUbergraph_UI_WorldMark_ReviveTeammates::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

}

