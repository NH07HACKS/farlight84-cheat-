#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Tips_HUD

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "E_Type_Mouse_structs.hpp"
#include "E_KeyPromptStyle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetKeyCardTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetKeyCardTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetKeyCardTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetKeyCardTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetKeyCardTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetKeyCardTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyCardTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetKeyCardTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyCardTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetKeyCardTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyCardTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetKeyCardTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetPickupEquipTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetPickupEquipTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForbidPickupHeroCore_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetPickupEquipTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetPickupEquipTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetPickupEquipTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetPickupEquipTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupEquipTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetPickupEquipTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupEquipTip, CallFunc_IsForbidPickupHeroCore_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetPickupEquipTip::CallFunc_IsForbidPickupHeroCore_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupEquipTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetPickupEquipTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupEquipTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetPickupEquipTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetPickupReplaceTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetPickupReplaceTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForbidPickupHeroCore_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetPickupReplaceTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetPickupReplaceTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetPickupReplaceTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetPickupReplaceTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupReplaceTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetPickupReplaceTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupReplaceTip, CallFunc_IsForbidPickupHeroCore_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetPickupReplaceTip::CallFunc_IsForbidPickupHeroCore_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupReplaceTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetPickupReplaceTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupReplaceTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetPickupReplaceTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetBtnRight
// 0x0018 (0x0018 - 0x0000)
struct UI_Component_Tips_HUD_C_SetBtnRight final
{
public:
	int32                                         LocID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalText_bSuccess;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TryGetLocalText_LocalText;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetBtnRight) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetBtnRight");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetBtnRight) == 0x000018, "Wrong size on UI_Component_Tips_HUD_C_SetBtnRight");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnRight, LocID) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetBtnRight::LocID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnRight, CallFunc_TryGetLocalText_bSuccess) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetBtnRight::CallFunc_TryGetLocalText_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnRight, CallFunc_TryGetLocalText_LocalText) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetBtnRight::CallFunc_TryGetLocalText_LocalText' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdateTIpsByEquipAction
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction final
{
public:
	ETipsInputPreset                              TipsInputPreset;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemQualityType                              CallFunc_GetQuality_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0008(0x0050)()
	bool                                          CallFunc_IsSlotFull_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, TipsInputPreset) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::TipsInputPreset' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, CallFunc_GetQuality_ReturnValue) == 0x000002, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::CallFunc_GetQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, K2Node_MakeStruct_TipsInputInfo) == 0x000008, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, CallFunc_IsSlotFull_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::CallFunc_IsSlotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'UI_Component_Tips_HUD_C_UpdateTIpsByEquipAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetTacticalEquipmentTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetTacticalEquipmentTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedLongPressingDrop_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetTacticalEquipmentTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetTacticalEquipmentTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetTacticalEquipmentTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip, CallFunc_NeedLongPressingDrop_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetTacticalEquipmentTip::CallFunc_NeedLongPressingDrop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetTacticalEquipmentTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetTacticalEquipmentTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetTacticalEquipmentTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetBtnLeft
// 0x0018 (0x0018 - 0x0000)
struct UI_Component_Tips_HUD_C_SetBtnLeft final
{
public:
	int32                                         LocID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetLocalText_bSuccess;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TryGetLocalText_LocalText;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetBtnLeft) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetBtnLeft");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetBtnLeft) == 0x000018, "Wrong size on UI_Component_Tips_HUD_C_SetBtnLeft");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnLeft, LocID) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetBtnLeft::LocID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnLeft, CallFunc_TryGetLocalText_bSuccess) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetBtnLeft::CallFunc_TryGetLocalText_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBtnLeft, CallFunc_TryGetLocalText_LocalText) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetBtnLeft::CallFunc_TryGetLocalText_LocalText' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetButtons
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_Tips_HUD_C_SetButtons final
{
public:
	int32                                         LeftLocID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightLocID;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetButtons) == 0x000004, "Wrong alignment on UI_Component_Tips_HUD_C_SetButtons");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetButtons) == 0x000008, "Wrong size on UI_Component_Tips_HUD_C_SetButtons");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetButtons, LeftLocID) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetButtons::LeftLocID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetButtons, RightLocID) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetButtons::RightLocID' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetItemTips
// 0x0003 (0x0003 - 0x0000)
struct UI_Component_Tips_HUD_C_SetItemTips final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetItemTips) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_SetItemTips");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetItemTips) == 0x000003, "Wrong size on UI_Component_Tips_HUD_C_SetItemTips");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetItemTips, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetItemTips::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetItemTips, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetItemTips::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetItemTips, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'UI_Component_Tips_HUD_C_SetItemTips::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.Set Poke Ball Tips
// 0x0068 (0x0068 - 0x0000)
struct UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0010(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips");
static_assert(sizeof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips) == 0x000068, "Wrong size on UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000003, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000007, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000008, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_BooleanOR_ReturnValue_2) == 0x000009, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_BooleanOR_ReturnValue_3) == 0x00000A, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_Map_Find_Value) == 0x000010, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'UI_Component_Tips_HUD_C_Set_Poke_Ball_Tips::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetEmptySlotTip
// 0x0050 (0x0050 - 0x0000)
struct UI_Component_Tips_HUD_C_SetEmptySlotTip final
{
public:
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0000(0x0050)()
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetEmptySlotTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetEmptySlotTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetEmptySlotTip) == 0x000050, "Wrong size on UI_Component_Tips_HUD_C_SetEmptySlotTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetEmptySlotTip, K2Node_MakeStruct_TipsInputInfo) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetEmptySlotTip::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetWeaponPartTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetWeaponPartTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipToWeapon_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponPartSlotMode                           CallFunc_GetWeaponPartSlotMode_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHighestQualityWeaponPart_ReturnValue;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanEquipToWeapon_ReturnValue_1;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetWeaponPartTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetWeaponPartTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetWeaponPartTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetWeaponPartTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_CanEquipToWeapon_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_CanEquipToWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_GetWeaponPartSlotMode_ReturnValue) == 0x000002, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_GetWeaponPartSlotMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_IsHighestQualityWeaponPart_ReturnValue) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_IsHighestQualityWeaponPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_CanEquipToWeapon_ReturnValue_1) == 0x000005, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_CanEquipToWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetWeaponPartTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetWeaponPartTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetBagWeaponPartTip
// 0x00B8 (0x00B8 - 0x0000)
struct UI_Component_Tips_HUD_C_SetBagWeaponPartTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipToWeapon_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0060(0x0050)()
	bool                                          CallFunc_CanEquipToWeapon_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetBagWeaponPartTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip) == 0x0000B8, "Wrong size on UI_Component_Tips_HUD_C_SetBagWeaponPartTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, CallFunc_CanEquipToWeapon_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::CallFunc_CanEquipToWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, K2Node_MakeStruct_TipsInputInfo) == 0x000060, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBagWeaponPartTip, CallFunc_CanEquipToWeapon_ReturnValue_1) == 0x0000B0, "Member 'UI_Component_Tips_HUD_C_SetBagWeaponPartTip::CallFunc_CanEquipToWeapon_ReturnValue_1' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetProgressBarStyle
// 0x00E8 (0x00E8 - 0x0000)
struct UI_Component_Tips_HUD_C_SetProgressBarStyle final
{
public:
	bool                                          bShowBar;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ProgressBarLocTextID;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              CallFunc_GetQuality_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectEquippedWeapon_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetAdapteeWidget_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUI_KeyMappingPrompt_Interface_C> K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarAdapterWidget*                    CallFunc_GetKeyMappingProgressAdapter_AdapterProgress; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0038(0x0050)()
	class USolarComponentKeyProgress*             CallFunc_GetKeyMappingProgress_NewParam;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo_1;                 // 0x0090(0x0050)()
	bool                                          CallFunc_IsSlotFull_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotFull_ReturnValue_1;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetProgressBarStyle) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetProgressBarStyle");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetProgressBarStyle) == 0x0000E8, "Wrong size on UI_Component_Tips_HUD_C_SetProgressBarStyle");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, bShowBar) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::bShowBar' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, ProgressBarLocTextID) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::ProgressBarLocTextID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_GetQuality_ReturnValue) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_GetQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_SelectEquippedWeapon_ReturnValue) == 0x000009, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_SelectEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_GetAdapteeWidget_ReturnValue) == 0x000010, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_GetAdapteeWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface) == 0x000018, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_GetKeyMappingProgressAdapter_AdapterProgress) == 0x000030, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_GetKeyMappingProgressAdapter_AdapterProgress' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, K2Node_MakeStruct_TipsInputInfo) == 0x000038, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_GetKeyMappingProgress_NewParam) == 0x000088, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_GetKeyMappingProgress_NewParam' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, K2Node_MakeStruct_TipsInputInfo_1) == 0x000090, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::K2Node_MakeStruct_TipsInputInfo_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_IsSlotFull_ReturnValue) == 0x0000E0, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_IsSlotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetProgressBarStyle, CallFunc_IsSlotFull_ReturnValue_1) == 0x0000E1, "Member 'UI_Component_Tips_HUD_C_SetProgressBarStyle::CallFunc_IsSlotFull_ReturnValue_1' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetHoldProgressBar
// 0x0070 (0x0070 - 0x0000)
struct UI_Component_Tips_HUD_C_SetHoldProgressBar final
{
public:
	float                                         CurrentPercent;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetAdapteeWidget_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetAdapteeWidget_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUI_KeyMappingPrompt_Interface_C> K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUI_KeyMappingPrompt_Interface_C> K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarAdapterWidget*                    CallFunc_GetKeyMappingProgressAdapter_AdapterProgress; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarAdapterWidget*                    CallFunc_GetKeyMappingProgressAdapter_AdapterProgress_1; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarComponentKeyProgress*             CallFunc_GetKeyMappingProgress_NewParam;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarComponentKeyProgress*             CallFunc_GetKeyMappingProgress_NewParam_1;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectEquippedWeapon_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetHoldProgressBar) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetHoldProgressBar");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetHoldProgressBar) == 0x000070, "Wrong size on UI_Component_Tips_HUD_C_SetHoldProgressBar");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CurrentPercent) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CurrentPercent' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetAdapteeWidget_ReturnValue) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetAdapteeWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetAdapteeWidget_ReturnValue_1) == 0x000010, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetAdapteeWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface) == 0x000018, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface_1) == 0x000030, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::K2Node_DynamicCast_AsUI_Key_Mapping_Prompt_Interface_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetKeyMappingProgressAdapter_AdapterProgress) == 0x000048, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetKeyMappingProgressAdapter_AdapterProgress' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetKeyMappingProgressAdapter_AdapterProgress_1) == 0x000050, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetKeyMappingProgressAdapter_AdapterProgress_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetKeyMappingProgress_NewParam) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetKeyMappingProgress_NewParam' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_GetKeyMappingProgress_NewParam_1) == 0x000060, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_GetKeyMappingProgress_NewParam_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetHoldProgressBar, CallFunc_SelectEquippedWeapon_ReturnValue) == 0x000068, "Member 'UI_Component_Tips_HUD_C_SetHoldProgressBar::CallFunc_SelectEquippedWeapon_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetMouseType
// 0x0002 (0x0002 - 0x0000)
struct UI_Component_Tips_HUD_C_SetMouseType final
{
public:
	E_Type_Mouse                                  Key1MouseType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_Mouse                                  Key2MouseType;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetMouseType) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_SetMouseType");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetMouseType) == 0x000002, "Wrong size on UI_Component_Tips_HUD_C_SetMouseType");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetMouseType, Key1MouseType) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetMouseType::Key1MouseType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetMouseType, Key2MouseType) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetMouseType::Key2MouseType' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetKeyPromptTips
// 0x0020 (0x0020 - 0x0000)
struct UI_Component_Tips_HUD_C_SetKeyPromptTips final
{
public:
	ETipsInputPreset                              TipStyle;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Key1LocID;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Key2LocID;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_5;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_6;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_7;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_8;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_9;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_10;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_11;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_12;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_13;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_14;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_15;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_16;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_17;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetKeyPromptTips) == 0x000004, "Wrong alignment on UI_Component_Tips_HUD_C_SetKeyPromptTips");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetKeyPromptTips) == 0x000020, "Wrong size on UI_Component_Tips_HUD_C_SetKeyPromptTips");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, TipStyle) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::TipStyle' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Key1LocID) == 0x000004, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Key1LocID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Key2LocID) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Key2LocID' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable) == 0x00000C, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_1) == 0x00000D, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_2) == 0x00000E, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_3) == 0x00000F, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_4) == 0x000010, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_5) == 0x000011, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_6) == 0x000012, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_7) == 0x000013, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_8) == 0x000014, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_9) == 0x000015, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_10) == 0x000016, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_11) == 0x000017, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_12) == 0x000018, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_13) == 0x000019, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_14) == 0x00001A, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_15) == 0x00001B, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_16) == 0x00001C, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, Temp_byte_Variable_17) == 0x00001D, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetKeyPromptTips, K2Node_Select_Default) == 0x00001E, "Member 'UI_Component_Tips_HUD_C_SetKeyPromptTips::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetEquipmentTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetEquipmentTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedLongPressingDrop_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetEquipmentTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetEquipmentTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetEquipmentTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetEquipmentTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetEquipmentTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetEquipmentTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetEquipmentTip, CallFunc_NeedLongPressingDrop_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetEquipmentTip::CallFunc_NeedLongPressingDrop_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetEquipmentTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetEquipmentTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetEquipmentTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetEquipmentTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetBulletTip
// 0x0060 (0x0060 - 0x0000)
struct UI_Component_Tips_HUD_C_SetBulletTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotFull_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetBulletTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetBulletTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetBulletTip) == 0x000060, "Wrong size on UI_Component_Tips_HUD_C_SetBulletTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBulletTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetBulletTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBulletTip, CallFunc_IsSlotFull_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetBulletTip::CallFunc_IsSlotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBulletTip, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'UI_Component_Tips_HUD_C_SetBulletTip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBulletTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetBulletTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetBulletTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetBulletTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.Set Weapon Tip
// 0x00B8 (0x00B8 - 0x0000)
struct UI_Component_Tips_HUD_C_Set_Weapon_Tip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemQualityType                              CallFunc_GetQuality_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectEquippedWeapon_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectEquippedWeapon_ReturnValue_1;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotFull_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotFull_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0010(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0068(0x0050)()
};
static_assert(alignof(UI_Component_Tips_HUD_C_Set_Weapon_Tip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_Set_Weapon_Tip");
static_assert(sizeof(UI_Component_Tips_HUD_C_Set_Weapon_Tip) == 0x0000B8, "Wrong size on UI_Component_Tips_HUD_C_Set_Weapon_Tip");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_GetQuality_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_GetQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_SelectEquippedWeapon_ReturnValue) == 0x000003, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_SelectEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_SelectEquippedWeapon_ReturnValue_1) == 0x000004, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_SelectEquippedWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_IsSlotFull_ReturnValue) == 0x000005, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_IsSlotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_IsSlotFull_ReturnValue_1) == 0x000007, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_IsSlotFull_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_Not_PreBool_ReturnValue_1) == 0x000008, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_Map_Find_Value) == 0x000010, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_Set_Weapon_Tip, K2Node_MakeStruct_TipsInputInfo) == 0x000068, "Member 'UI_Component_Tips_HUD_C_Set_Weapon_Tip::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetConsumableTip
// 0x00B0 (0x00B0 - 0x0000)
struct UI_Component_Tips_HUD_C_SetConsumableTip final
{
public:
	struct FTipsInputInfo                         Consumable;                                        // 0x0000(0x0050)(Edit, BlueprintVisible)
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckConsumableIsFull_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0058(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotFull_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetConsumableTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetConsumableTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetConsumableTip) == 0x0000B0, "Wrong size on UI_Component_Tips_HUD_C_SetConsumableTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, Consumable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::Consumable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, Temp_byte_Variable) == 0x000050, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, CallFunc_CheckConsumableIsFull_ReturnValue) == 0x000051, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::CallFunc_CheckConsumableIsFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, CallFunc_Map_Find_Value) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, CallFunc_IsSlotFull_ReturnValue) == 0x0000A9, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::CallFunc_IsSlotFull_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetConsumableTip, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'UI_Component_Tips_HUD_C_SetConsumableTip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetFullWidget
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_SetFullWidget final
{
public:
	bool                                          bShowWidget;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetFullWidget) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_SetFullWidget");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetFullWidget) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_SetFullWidget");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetFullWidget, bShowWidget) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetFullWidget::bShowWidget' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdatePokeBallInputPreset
// 0x0002 (0x0002 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset final
{
public:
	EBagScopeSlotType                             Slot_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset) == 0x000002, "Wrong size on UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset, Slot_0) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset::Slot_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallInputPreset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdatePokeBallBtnState
// 0x0038 (0x0038 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdatePokeBallBtnState final
{
public:
	EBagScopeSlotType                             Slot_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLocalText_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLocalText_ReturnValue_1;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLocalText_ReturnValue_2;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_UpdatePokeBallBtnState");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState) == 0x000038, "Wrong size on UI_Component_Tips_HUD_C_UpdatePokeBallBtnState");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState, Slot_0) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallBtnState::Slot_0' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallBtnState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState, CallFunc_GetLocalText_ReturnValue) == 0x000008, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallBtnState::CallFunc_GetLocalText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState, CallFunc_GetLocalText_ReturnValue_1) == 0x000018, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallBtnState::CallFunc_GetLocalText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdatePokeBallBtnState, CallFunc_GetLocalText_ReturnValue_2) == 0x000028, "Member 'UI_Component_Tips_HUD_C_UpdatePokeBallBtnState::CallFunc_GetLocalText_ReturnValue_2' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdateInputInfo
// 0x0050 (0x0050 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdateInputInfo final
{
public:
	struct FTipsInputInfo                         InputInfo;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdateInputInfo) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_UpdateInputInfo");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdateInputInfo) == 0x000050, "Wrong size on UI_Component_Tips_HUD_C_UpdateInputInfo");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateInputInfo, InputInfo) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdateInputInfo::InputInfo' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdateProgressBar
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdateProgressBar final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdateProgressBar) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_UpdateProgressBar");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdateProgressBar) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_UpdateProgressBar");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateProgressBar, bReset) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdateProgressBar::bReset' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdateProgressPanel
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdateProgressPanel final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdateProgressPanel) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_UpdateProgressPanel");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdateProgressPanel) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_UpdateProgressPanel");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateProgressPanel, bReset) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdateProgressPanel::bReset' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetStyle
// 0x0003 (0x0003 - 0x0000)
struct UI_Component_Tips_HUD_C_SetStyle final
{
public:
	ETipsStyleType                                Style;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBagScopeSlotType                             SlotType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDesktop;                                        // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetStyle) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_SetStyle");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetStyle) == 0x000003, "Wrong size on UI_Component_Tips_HUD_C_SetStyle");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetStyle, Style) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetStyle::Style' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetStyle, SlotType) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetStyle::SlotType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetStyle, bIsDesktop) == 0x000002, "Member 'UI_Component_Tips_HUD_C_SetStyle::bIsDesktop' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetQuality
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_SetQuality final
{
public:
	EItemQualityType                              Quality;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetQuality) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_SetQuality");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetQuality) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_SetQuality");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetQuality, Quality) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetQuality::Quality' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Component_Tips_HUD_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Component_Tips_HUD_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Component_Tips_HUD_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.UpdateTipsByAction
// 0x0002 (0x0002 - 0x0000)
struct UI_Component_Tips_HUD_C_UpdateTipsByAction final
{
public:
	EBackpackOperationType                        InOperationType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETipsInputPreset                              InInputPreset;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_Tips_HUD_C_UpdateTipsByAction) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_UpdateTipsByAction");
static_assert(sizeof(UI_Component_Tips_HUD_C_UpdateTipsByAction) == 0x000002, "Wrong size on UI_Component_Tips_HUD_C_UpdateTipsByAction");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTipsByAction, InOperationType) == 0x000000, "Member 'UI_Component_Tips_HUD_C_UpdateTipsByAction::InOperationType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_UpdateTipsByAction, InInputPreset) == 0x000001, "Member 'UI_Component_Tips_HUD_C_UpdateTipsByAction::InInputPreset' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_Tips_HUD_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_Tips_HUD_C_PreConstruct");
static_assert(sizeof(UI_Component_Tips_HUD_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_Tips_HUD_C_PreConstruct");
static_assert(offsetof(UI_Component_Tips_HUD_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_Tips_HUD_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.ExecuteUbergraph_UI_Component_Tips_HUD
// 0x0150 (0x0150 - 0x0000)
struct UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         K2Node_Event_InputInfo;                            // 0x00D8(0x0050)(ConstParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bReset_1;                             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bReset;                               // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETipsStyleType                                K2Node_Event_Style;                                // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBagScopeSlotType                             K2Node_Event_SlotType;                             // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsDesktop;                           // 0x0130(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemQualityType                              K2Node_Event_Quality;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemQualityType                              Temp_byte_Variable_1;                              // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBackpackOperationType                        K2Node_Event_InOperationType;                      // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETipsInputPreset                              K2Node_Event_InInputPreset;                        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD");
static_assert(sizeof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD) == 0x000150, "Wrong size on UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, EntryPoint) == 0x000000, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable) == 0x000004, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_3) == 0x000034, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_4) == 0x000044, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_5) == 0x000054, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_6) == 0x000064, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_struct_Variable_7) == 0x000074, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000C4, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_byte_Variable) == 0x0000D4, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_bool_Variable) == 0x0000D5, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_bool_Variable_1) == 0x0000D6, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_InputInfo) == 0x0000D8, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_InputInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_bReset_1) == 0x00012C, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_bReset_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_bReset) == 0x00012D, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_bReset' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_Style) == 0x00012E, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_Style' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_SlotType) == 0x00012F, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_SlotType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_bIsDesktop) == 0x000130, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_bIsDesktop' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_Quality) == 0x000131, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_Quality' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_SwitchEnum_CmpSuccess) == 0x000132, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, Temp_byte_Variable_1) == 0x000133, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Select_Default) == 0x000134, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_SwitchEnum_CmpSuccess_1) == 0x000144, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_InLayoutType) == 0x000145, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Select_Default_1) == 0x000146, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_InOperationType) == 0x000147, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_InOperationType' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_InInputPreset) == 0x000148, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_InInputPreset' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_SwitchEnum_CmpSuccess_2) == 0x000149, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD, K2Node_Event_IsDesignTime) == 0x00014A, "Member 'UI_Component_Tips_HUD_C_ExecuteUbergraph_UI_Component_Tips_HUD::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Component_Tips_HUD.UI_Component_Tips_HUD_C.SetPickupTip
// 0x00B8 (0x00B8 - 0x0000)
struct UI_Component_Tips_HUD_C_SetPickupTip final
{
public:
	ETipsInputPreset                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForbidPickupHeroCore_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         CallFunc_Map_Find_Value;                           // 0x0008(0x0050)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTipsInputInfo                         K2Node_MakeStruct_TipsInputInfo;                   // 0x0060(0x0050)()
	bool                                          CallFunc_CanItemBeReplaced_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_Tips_HUD_C_SetPickupTip) == 0x000008, "Wrong alignment on UI_Component_Tips_HUD_C_SetPickupTip");
static_assert(sizeof(UI_Component_Tips_HUD_C_SetPickupTip) == 0x0000B8, "Wrong size on UI_Component_Tips_HUD_C_SetPickupTip");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, Temp_byte_Variable) == 0x000000, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, CallFunc_IsForbidPickupHeroCore_ReturnValue) == 0x000001, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::CallFunc_IsForbidPickupHeroCore_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, CallFunc_Map_Find_Value) == 0x000008, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, K2Node_MakeStruct_TipsInputInfo) == 0x000060, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::K2Node_MakeStruct_TipsInputInfo' has a wrong offset!");
static_assert(offsetof(UI_Component_Tips_HUD_C_SetPickupTip, CallFunc_CanItemBeReplaced_ReturnValue) == 0x0000B0, "Member 'UI_Component_Tips_HUD_C_SetPickupTip::CallFunc_CanItemBeReplaced_ReturnValue' has a wrong offset!");

}

