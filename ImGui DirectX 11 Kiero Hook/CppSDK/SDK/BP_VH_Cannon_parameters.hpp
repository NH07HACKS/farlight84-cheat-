#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VH_Cannon

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VH_Cannon.BP_VH_Cannon_C.TryClearDelayTimer
// 0x0001 (0x0001 - 0x0000)
struct BP_VH_Cannon_C_TryClearDelayTimer final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VH_Cannon_C_TryClearDelayTimer) == 0x000001, "Wrong alignment on BP_VH_Cannon_C_TryClearDelayTimer");
static_assert(sizeof(BP_VH_Cannon_C_TryClearDelayTimer) == 0x000001, "Wrong size on BP_VH_Cannon_C_TryClearDelayTimer");
static_assert(offsetof(BP_VH_Cannon_C_TryClearDelayTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'BP_VH_Cannon_C_TryClearDelayTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function BP_VH_Cannon.BP_VH_Cannon_C.ResetVHCannonTickable
// 0x0010 (0x0010 - 0x0000)
struct BP_VH_Cannon_C_ResetVHCannonTickable final
{
public:
	class ASolarCharacter*                        CallFunc_GetDriverCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPassengerCount_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VH_Cannon_C_ResetVHCannonTickable) == 0x000008, "Wrong alignment on BP_VH_Cannon_C_ResetVHCannonTickable");
static_assert(sizeof(BP_VH_Cannon_C_ResetVHCannonTickable) == 0x000010, "Wrong size on BP_VH_Cannon_C_ResetVHCannonTickable");
static_assert(offsetof(BP_VH_Cannon_C_ResetVHCannonTickable, CallFunc_GetDriverCharacter_ReturnValue) == 0x000000, "Member 'BP_VH_Cannon_C_ResetVHCannonTickable::CallFunc_GetDriverCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ResetVHCannonTickable, CallFunc_GetPassengerCount_ReturnValue) == 0x000008, "Member 'BP_VH_Cannon_C_ResetVHCannonTickable::CallFunc_GetPassengerCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ResetVHCannonTickable, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_VH_Cannon_C_ResetVHCannonTickable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ResetVHCannonTickable, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'BP_VH_Cannon_C_ResetVHCannonTickable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ResetVHCannonTickable, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'BP_VH_Cannon_C_ResetVHCannonTickable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_VH_Cannon.BP_VH_Cannon_C.EnableTickOnPlayerGetOnVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle final
{
public:
	int32                                         GetOnSeatIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        GetOnPlayer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle) == 0x000008, "Wrong alignment on BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle");
static_assert(sizeof(BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle) == 0x000010, "Wrong size on BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle");
static_assert(offsetof(BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle, GetOnSeatIndex) == 0x000000, "Member 'BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle::GetOnSeatIndex' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle, GetOnPlayer) == 0x000008, "Member 'BP_VH_Cannon_C_EnableTickOnPlayerGetOnVehicle::GetOnPlayer' has a wrong offset!");

// Function BP_VH_Cannon.BP_VH_Cannon_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_VH_Cannon_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VH_Cannon_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_VH_Cannon_C_ReceiveEndPlay");
static_assert(sizeof(BP_VH_Cannon_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_VH_Cannon_C_ReceiveEndPlay");
static_assert(offsetof(BP_VH_Cannon_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_VH_Cannon_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_VH_Cannon.BP_VH_Cannon_C.DisableTickOnPlayerGetOffVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle final
{
public:
	int32                                         GetOffSeatIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        GetOffPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle) == 0x000008, "Wrong alignment on BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle");
static_assert(sizeof(BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle) == 0x000010, "Wrong size on BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle");
static_assert(offsetof(BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle, GetOffSeatIndex) == 0x000000, "Member 'BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle::GetOffSeatIndex' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle, GetOffPlayer) == 0x000008, "Member 'BP_VH_Cannon_C_DisableTickOnPlayerGetOffVehicle::GetOffPlayer' has a wrong offset!");

// Function BP_VH_Cannon.BP_VH_Cannon_C.ExecuteUbergraph_BP_VH_Cannon
// 0x0048 (0x0048 - 0x0000)
struct BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_GetOnSeatIndex;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_CustomEvent_GetOnPlayer;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_GetOffSeatIndex;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_CustomEvent_GetOffPlayer;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon) == 0x000008, "Wrong alignment on BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon");
static_assert(sizeof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon) == 0x000048, "Wrong size on BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, EntryPoint) == 0x000000, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CustomEvent_GetOnSeatIndex) == 0x000024, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CustomEvent_GetOnSeatIndex' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CustomEvent_GetOnPlayer) == 0x000028, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CustomEvent_GetOnPlayer' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_Event_EndPlayReason) == 0x000030, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CustomEvent_GetOffSeatIndex) == 0x000034, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CustomEvent_GetOffSeatIndex' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, K2Node_CustomEvent_GetOffPlayer) == 0x000038, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::K2Node_CustomEvent_GetOffPlayer' has a wrong offset!");
static_assert(offsetof(BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon, CallFunc_K2_SetTimer_ReturnValue) == 0x000040, "Member 'BP_VH_Cannon_C_ExecuteUbergraph_BP_VH_Cannon::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

