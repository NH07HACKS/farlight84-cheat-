#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshWidget

#include "Basic.hpp"

#include "MeshWidget_classes.hpp"
#include "MeshWidget_parameters.hpp"


namespace SDK
{

// Function MeshWidget.UIMeshWidget.DownloadImage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    InNecessaryURL                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            InBaseCDNUrlList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::DownloadImage(const class FString& InNecessaryURL, const TArray<class FString>& InBaseCDNUrlList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "DownloadImage");

	Params::UIMeshWidget_DownloadImage Parms{};

	Parms.InNecessaryURL = std::move(InNecessaryURL);
	Parms.InBaseCDNUrlList = std::move(InBaseCDNUrlList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UUIMeshWidget::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "GetDynamicMaterial");

	Params::UIMeshWidget_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MeshWidget.UIMeshWidget.OnGetTextureFinished
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::OnGetTextureFinished(const class FString& FilePath, class UTexture2DDynamic* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "OnGetTextureFinished");

	Params::UIMeshWidget_OnGetTextureFinished Parms{};

	Parms.FilePath = std::move(FilePath);
	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.ResetToPlaceholder
// (Final, Native, Public, BlueprintCallable)

void UUIMeshWidget::ResetToPlaceholder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "ResetToPlaceholder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetBrushByTexture2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       NewTexture                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetBrushByTexture2D(class UTexture2D* NewTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetBrushByTexture2D");

	Params::UIMeshWidget_SetBrushByTexture2D Parms{};

	Parms.NewTexture = NewTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetBrushFromTextureDynamic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetBrushFromTextureDynamic");

	Params::UIMeshWidget_SetBrushFromTextureDynamic Parms{};

	Parms.Texture = Texture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetBrushMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetBrushMaterial(class UMaterialInterface* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetBrushMaterial");

	Params::UIMeshWidget_SetBrushMaterial Parms{};

	Parms.Material = Material;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetBrushScalar
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, float>&         ScalarParameterValues                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetBrushScalar(const TMap<class FName, float>& ScalarParameterValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetBrushScalar");

	Params::UIMeshWidget_SetBrushScalar Parms{};

	Parms.ScalarParameterValues = std::move(ScalarParameterValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetCameraPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InCameraPosition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetCameraPosition(const struct FVector& InCameraPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetCameraPosition");

	Params::UIMeshWidget_SetCameraPosition Parms{};

	Parms.InCameraPosition = std::move(InCameraPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetCameraRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InCameraRotate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetCameraRotate(const struct FVector& InCameraRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetCameraRotate");

	Params::UIMeshWidget_SetCameraRotate Parms{};

	Parms.InCameraRotate = std::move(InCameraRotate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetHalfFov
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   HalfFov                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetHalfFov(float HalfFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetHalfFov");

	Params::UIMeshWidget_SetHalfFov Parms{};

	Parms.HalfFov = HalfFov;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetInstanceData1
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector4&                  InstanceData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GEN_PARAM_ARRAY_INDEX                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetInstanceData1(const struct FVector4& InstanceData, int32 GEN_PARAM_ARRAY_INDEX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetInstanceData1");

	Params::UIMeshWidget_SetInstanceData1 Parms{};

	Parms.InstanceData = std::move(InstanceData);
	Parms.GEN_PARAM_ARRAY_INDEX = GEN_PARAM_ARRAY_INDEX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetInstanceData2
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector4&                  InstanceData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GEN_PARAM_ARRAY_INDEX                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetInstanceData2(const struct FVector4& InstanceData, int32 GEN_PARAM_ARRAY_INDEX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetInstanceData2");

	Params::UIMeshWidget_SetInstanceData2 Parms{};

	Parms.InstanceData = std::move(InstanceData);
	Parms.GEN_PARAM_ARRAY_INDEX = GEN_PARAM_ARRAY_INDEX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetMeshRotate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InRotate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GEN_PARAM_ARRAY_INDEX                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetMeshRotate(const struct FVector& InRotate, int32 GEN_PARAM_ARRAY_INDEX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetMeshRotate");

	Params::UIMeshWidget_SetMeshRotate Parms{};

	Parms.InRotate = std::move(InRotate);
	Parms.GEN_PARAM_ARRAY_INDEX = GEN_PARAM_ARRAY_INDEX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetMeshScale
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GEN_PARAM_ARRAY_INDEX                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetMeshScale(const struct FVector& InScale, int32 GEN_PARAM_ARRAY_INDEX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetMeshScale");

	Params::UIMeshWidget_SetMeshScale Parms{};

	Parms.InScale = std::move(InScale);
	Parms.GEN_PARAM_ARRAY_INDEX = GEN_PARAM_ARRAY_INDEX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetMeshTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FTransform&                InMeshTransform                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   MeshId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetMeshTransform(const struct FTransform& InMeshTransform, int32 MeshId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetMeshTransform");

	Params::UIMeshWidget_SetMeshTransform Parms{};

	Parms.InMeshTransform = std::move(InMeshTransform);
	Parms.MeshId = MeshId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetMeshTranslate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FVector&                   InTranslate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GEN_PARAM_ARRAY_INDEX                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetMeshTranslate(const struct FVector& InTranslate, int32 GEN_PARAM_ARRAY_INDEX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetMeshTranslate");

	Params::UIMeshWidget_SetMeshTranslate Parms{};

	Parms.InTranslate = std::move(InTranslate);
	Parms.GEN_PARAM_ARRAY_INDEX = GEN_PARAM_ARRAY_INDEX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetNearClip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NearClip                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetNearClip(float NearClip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetNearClip");

	Params::UIMeshWidget_SetNearClip Parms{};

	Parms.NearClip = NearClip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetPlaceHolderBrushScalar
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const TMap<class FName, float>&         ScalarParameterValues                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetPlaceHolderBrushScalar(const TMap<class FName, float>& ScalarParameterValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetPlaceHolderBrushScalar");

	Params::UIMeshWidget_SetPlaceHolderBrushScalar Parms{};

	Parms.ScalarParameterValues = std::move(ScalarParameterValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.UIMeshWidget.SetViewProjectionMatrix
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// const struct FMatrix&                   ViewProjectionMatrix                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UUIMeshWidget::SetViewProjectionMatrix(const struct FMatrix& ViewProjectionMatrix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIMeshWidget", "SetViewProjectionMatrix");

	Params::UIMeshWidget_SetViewProjectionMatrix Parms{};

	Parms.ViewProjectionMatrix = std::move(ViewProjectionMatrix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.MeshRectangleWidget.InitUnitTestProvider
// (Final, Native, Public, BlueprintCallable)

void UMeshRectangleWidget::InitUnitTestProvider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeshRectangleWidget", "InitUnitTestProvider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.MeshRectangleWidget.ModifyInstanceNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   dNum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMeshRectangleWidget::ModifyInstanceNum(int32 dNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeshRectangleWidget", "ModifyInstanceNum");

	Params::MeshRectangleWidget_ModifyInstanceNum Parms{};

	Parms.dNum = dNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.MeshRectangleWidget.SetInstanceNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewNum                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMeshRectangleWidget::SetInstanceNum(int32 NewNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeshRectangleWidget", "SetInstanceNum");

	Params::MeshRectangleWidget_SetInstanceNum Parms{};

	Parms.NewNum = NewNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MeshWidget.MeshRectangleWidget.SetInstancesHittestability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMeshRectangleWidget::SetInstancesHittestability(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MeshRectangleWidget", "SetInstancesHittestability");

	Params::MeshRectangleWidget_SetInstancesHittestability Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

