#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattleInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BattleInfo.UI_BattleInfo_C
// 0x0090 (0x0858 - 0x07C8)
class UUI_BattleInfo_C final : public UUINoticeGlobalKill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Exit;                                         // 0x07D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Common_Anim;                                       // 0x07D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Special_Anim;                                      // 0x07E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_HUDBlur_C*                Blur_BattleInfo;                                   // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_44;                                          // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_Common;                                     // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Revenge;                                       // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Shutdown;                                      // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               KillLeader;                                        // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USolarImage*                            KillType;                                          // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Revenge;                                           // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Shutdown;                                          // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_EnemyBoss;                                 // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_KillIcon;                                  // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Weapon;                                    // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponType;                                        // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         swticher_num;                                      // 0x0850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vip_Color;                                         // 0x0854(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UI_BattleInfo(int32 EntryPoint);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void PreConstruct(bool IsDesignTime);
	void SetIconColor();
	class UWidgetAnimation* GetEnterAnimation();
	class UWidgetAnimation* GetExitAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BattleInfo_C">();
	}
	static class UUI_BattleInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BattleInfo_C>();
	}
};
static_assert(alignof(UUI_BattleInfo_C) == 0x000008, "Wrong alignment on UUI_BattleInfo_C");
static_assert(sizeof(UUI_BattleInfo_C) == 0x000858, "Wrong size on UUI_BattleInfo_C");
static_assert(offsetof(UUI_BattleInfo_C, UberGraphFrame) == 0x0007C8, "Member 'UUI_BattleInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Anim_Exit) == 0x0007D0, "Member 'UUI_BattleInfo_C::Anim_Exit' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Common_Anim) == 0x0007D8, "Member 'UUI_BattleInfo_C::Common_Anim' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Special_Anim) == 0x0007E0, "Member 'UUI_BattleInfo_C::Special_Anim' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Blur_BattleInfo) == 0x0007E8, "Member 'UUI_BattleInfo_C::Blur_BattleInfo' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Image_44) == 0x0007F0, "Member 'UUI_BattleInfo_C::Image_44' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Img_Bg_Common) == 0x0007F8, "Member 'UUI_BattleInfo_C::Img_Bg_Common' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Img_Revenge) == 0x000800, "Member 'UUI_BattleInfo_C::Img_Revenge' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Img_Shutdown) == 0x000808, "Member 'UUI_BattleInfo_C::Img_Shutdown' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, KillLeader) == 0x000810, "Member 'UUI_BattleInfo_C::KillLeader' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, KillType) == 0x000818, "Member 'UUI_BattleInfo_C::KillType' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Revenge) == 0x000820, "Member 'UUI_BattleInfo_C::Revenge' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Shutdown) == 0x000828, "Member 'UUI_BattleInfo_C::Shutdown' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, SizeBox_EnemyBoss) == 0x000830, "Member 'UUI_BattleInfo_C::SizeBox_EnemyBoss' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, SizeBox_KillIcon) == 0x000838, "Member 'UUI_BattleInfo_C::SizeBox_KillIcon' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, SizeBox_Weapon) == 0x000840, "Member 'UUI_BattleInfo_C::SizeBox_Weapon' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, WeaponType) == 0x000848, "Member 'UUI_BattleInfo_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, swticher_num) == 0x000850, "Member 'UUI_BattleInfo_C::swticher_num' has a wrong offset!");
static_assert(offsetof(UUI_BattleInfo_C, Vip_Color) == 0x000854, "Member 'UUI_BattleInfo_C::Vip_Color' has a wrong offset!");

}

