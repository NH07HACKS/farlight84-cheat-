#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarModeCharacter_Base

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SolarModeCharacter_Base_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SolarModeCharacter_Base_C_ReceiveEndPlay");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SolarModeCharacter_Base_C_ReceiveEndPlay");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.ExecuteUbergraph_BP_SolarModeCharacter_Base
// 0x0040 (0x0040 - 0x0000)
struct BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilitySpecHandle             CallFunc_K2_GiveAbility_ReturnValue;               // 0x0038(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base) == 0x000040, "Wrong size on BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, EntryPoint) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_IsServer_ReturnValue) == 0x000020, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, K2Node_Event_EndPlayReason) == 0x000035, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base, CallFunc_K2_GiveAbility_ReturnValue) == 0x000038, "Member 'BP_SolarModeCharacter_Base_C_ExecuteUbergraph_BP_SolarModeCharacter_Base::CallFunc_K2_GiveAbility_ReturnValue' has a wrong offset!");

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.GetSolarCameraComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarModeCharacter_Base_C_GetSolarCameraComponent final
{
public:
	class USolarCameraComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_GetSolarCameraComponent) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_Base_C_GetSolarCameraComponent");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_GetSolarCameraComponent) == 0x000008, "Wrong size on BP_SolarModeCharacter_Base_C_GetSolarCameraComponent");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetSolarCameraComponent, ReturnValue) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_GetSolarCameraComponent::ReturnValue' has a wrong offset!");

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.GetSolarSpringArmComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent final
{
public:
	class USolarSpringArmComponent*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent) == 0x000008, "Wrong size on BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent, ReturnValue) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_GetSolarSpringArmComponent::ReturnValue' has a wrong offset!");

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.GetWeaponLevelDamageBonus
// 0x0150 (0x0150 - 0x0000)
struct BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCGMGameplayConfig*                     CallFunc__A_GetModeConfig_ModeConfig;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentActiveSlot_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarItemData                         CallFunc_GetBackpackWeaponBySlot_ItemData;         // 0x0020(0x0120)()
	bool                                          CallFunc_GetBackpackWeaponBySlot_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus) == 0x000150, "Wrong size on BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, ReturnValue) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, Temp_bool_Variable) == 0x000004, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, Temp_float_Variable) == 0x000008, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc__A_GetModeConfig_ModeConfig) == 0x000010, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc__A_GetModeConfig_ModeConfig' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_GetCurrentActiveSlot_ReturnValue) == 0x000018, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_GetCurrentActiveSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_GetBackpackWeaponBySlot_ItemData) == 0x000020, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_GetBackpackWeaponBySlot_ItemData' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_GetBackpackWeaponBySlot_ReturnValue) == 0x000140, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_GetBackpackWeaponBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_Map_Find_Value) == 0x000144, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, CallFunc_BooleanAND_ReturnValue) == 0x000149, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus, K2Node_Select_Default) == 0x00014C, "Member 'BP_SolarModeCharacter_Base_C_GetWeaponLevelDamageBonus::K2Node_Select_Default' has a wrong offset!");

// Function BP_SolarModeCharacter_Base.BP_SolarModeCharacter_Base_C.GetUnDecelerationEffectCurveValue
// 0x0018 (0x0018 - 0x0000)
struct BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue final
{
public:
	float                                         Altitude;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            L_UndecelerationEffectCurve;                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue");
static_assert(sizeof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue) == 0x000018, "Wrong size on BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue, Altitude) == 0x000000, "Member 'BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue::Altitude' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue, ReturnValue) == 0x000004, "Member 'BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue, L_UndecelerationEffectCurve) == 0x000008, "Member 'BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue::L_UndecelerationEffectCurve' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'BP_SolarModeCharacter_Base_C_GetUnDecelerationEffectCurveValue::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

}

