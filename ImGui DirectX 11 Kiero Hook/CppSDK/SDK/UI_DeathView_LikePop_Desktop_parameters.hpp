#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DeathView_LikePop_Desktop

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_Appointment_State_structs.hpp"
#include "E_Type_LikePop_structs.hpp"
#include "UMG_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_DeathView_LikePop_Desktop.UI_DeathView_LikePop_Desktop_C.ExecuteUbergraph_UI_DeathView_LikePop_Desktop
// 0x000C (0x000C - 0x0000)
struct UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop) == 0x000004, "Wrong alignment on UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop");
static_assert(sizeof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop) == 0x00000C, "Wrong size on UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, EntryPoint) == 0x000000, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, Temp_byte_Variable) == 0x000004, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, Temp_bool_Variable) == 0x000005, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, Temp_bool_Variable_1) == 0x000006, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, K2Node_Event_IsDesignTime) == 0x000007, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, K2Node_Event_InLayoutType) == 0x000008, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop, K2Node_Select_Default) == 0x000009, "Member 'UI_DeathView_LikePop_Desktop_C_ExecuteUbergraph_UI_DeathView_LikePop_Desktop::K2Node_Select_Default' has a wrong offset!");

// Function UI_DeathView_LikePop_Desktop.UI_DeathView_LikePop_Desktop_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout");
static_assert(sizeof(UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_DeathView_LikePop_Desktop_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_DeathView_LikePop_Desktop.UI_DeathView_LikePop_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_DeathView_LikePop_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_DeathView_LikePop_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on UI_DeathView_LikePop_Desktop_C_PreConstruct");
static_assert(sizeof(UI_DeathView_LikePop_Desktop_C_PreConstruct) == 0x000001, "Wrong size on UI_DeathView_LikePop_Desktop_C_PreConstruct");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_DeathView_LikePop_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_DeathView_LikePop_Desktop.UI_DeathView_LikePop_Desktop_C.SetPopType
// 0x00D0 (0x00D0 - 0x0000)
struct UI_DeathView_LikePop_Desktop_C_SetPopType final
{
public:
	E_Type_LikePop                                PopType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           AppointmentState_0;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_14;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_15;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_16;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Appointment_State                           Temp_byte_Variable_21;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_22;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_23;                             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_10;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_24;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_29;                             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_34;                             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_6;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_39;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_42;                             // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_43;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Type_LikePop                                Temp_byte_Variable_44;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_12;                          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DeathView_LikePop_Desktop_C_SetPopType) == 0x000008, "Wrong alignment on UI_DeathView_LikePop_Desktop_C_SetPopType");
static_assert(sizeof(UI_DeathView_LikePop_Desktop_C_SetPopType) == 0x0000D0, "Wrong size on UI_DeathView_LikePop_Desktop_C_SetPopType");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, PopType_0) == 0x000000, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::PopType_0' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, AppointmentState_0) == 0x000001, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::AppointmentState_0' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable) == 0x000002, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_1) == 0x000003, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_2) == 0x000004, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_3) == 0x000005, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_4) == 0x000006, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_5) == 0x000007, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_6) == 0x000008, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_7) == 0x000009, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_8) == 0x00000A, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_9) == 0x00000B, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_10) == 0x00000C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_11) == 0x00000D, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_12) == 0x00000E, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_13) == 0x00000F, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_14) == 0x000010, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable) == 0x000014, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_1) == 0x000018, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_2) == 0x00001C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_3) == 0x000020, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_15) == 0x000024, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_4) == 0x000028, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_5) == 0x00002C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_6) == 0x000030, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_7) == 0x000034, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_16) == 0x000038, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_17) == 0x000039, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_18) == 0x00003A, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_19) == 0x00003B, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_20) == 0x00003C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_21) == 0x00003D, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable) == 0x000040, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_1) == 0x000044, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_2) == 0x000048, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_3) == 0x00004C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_22) == 0x000050, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_4) == 0x000054, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default) == 0x000058, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_5) == 0x00005C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_int_Variable_6) == 0x000060, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_23) == 0x000064, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_8) == 0x000068, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_9) == 0x00006C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_10) == 0x000070, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_float_Variable_11) == 0x000074, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_24) == 0x000078, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_25) == 0x000079, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_26) == 0x00007A, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_27) == 0x00007B, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_28) == 0x00007C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_29) == 0x00007D, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_30) == 0x00007E, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_31) == 0x00007F, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_32) == 0x000080, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_33) == 0x000081, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_34) == 0x000082, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_35) == 0x000083, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_36) == 0x000084, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_37) == 0x000085, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_38) == 0x000086, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_1) == 0x000087, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_2) == 0x000088, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_3) == 0x00008C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_4) == 0x000090, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_5) == 0x000094, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_6) == 0x000098, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_7) == 0x00009C, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_8) == 0x0000A0, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_MakeStruct_Margin) == 0x0000A4, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_9) == 0x0000B4, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_10) == 0x0000B5, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_39) == 0x0000B6, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_11) == 0x0000B7, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_40) == 0x0000B8, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_41) == 0x0000B9, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_42) == 0x0000BA, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x0000C0, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_43) == 0x0000C8, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, Temp_byte_Variable_44) == 0x0000C9, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_SetPopType, K2Node_Select_Default_12) == 0x0000CA, "Member 'UI_DeathView_LikePop_Desktop_C_SetPopType::K2Node_Select_Default_12' has a wrong offset!");

// Function UI_DeathView_LikePop_Desktop.UI_DeathView_LikePop_Desktop_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_DeathView_LikePop_Desktop_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_DeathView_LikePop_Desktop_C_GetModuleName) == 0x000008, "Wrong alignment on UI_DeathView_LikePop_Desktop_C_GetModuleName");
static_assert(sizeof(UI_DeathView_LikePop_Desktop_C_GetModuleName) == 0x000010, "Wrong size on UI_DeathView_LikePop_Desktop_C_GetModuleName");
static_assert(offsetof(UI_DeathView_LikePop_Desktop_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_DeathView_LikePop_Desktop_C_GetModuleName::ReturnValue' has a wrong offset!");

}

