#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarBackpackActor

#include "Basic.hpp"

#include "BP_SolarBackpackActor_classes.hpp"
#include "BP_SolarBackpackActor_parameters.hpp"


namespace SDK
{

// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.FX_Default
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::FX_Default()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "FX_Default");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.FX_LowPower
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::FX_LowPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "FX_LowPower");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.FX_Charging
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::FX_Charging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "FX_Charging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.FX_Flying
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::FX_Flying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "FX_Flying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.FX_Idle
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::FX_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "FX_Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.TryCreateDynamicMaterialInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ElementIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               SourceMaterial                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             OptionlName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UMaterialInstanceDynamic* ABP_SolarBackpackActor_C::TryCreateDynamicMaterialInstance(class UPrimitiveComponent* Component, int32 ElementIndex, class UMaterialInterface* SourceMaterial, class FName OptionlName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "TryCreateDynamicMaterialInstance");

	Params::BP_SolarBackpackActor_C_TryCreateDynamicMaterialInstance Parms{};

	Parms.Component = Component;
	Parms.ElementIndex = ElementIndex;
	Parms.SourceMaterial = SourceMaterial;
	Parms.OptionlName = OptionlName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.LobbyForceSetLOD
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::LobbyForceSetLOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "LobbyForceSetLOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.SetOutline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SolarBackpackActor_C::SetOutline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "SetOutline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.Check Platform Graphics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   NeedOutLine                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SolarBackpackActor_C::Check_Platform_Graphics(bool* NeedOutLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "Check Platform Graphics");

	Params::BP_SolarBackpackActor_C_Check_Platform_Graphics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NeedOutLine != nullptr)
		*NeedOutLine = Parms.NeedOutLine;
}


// Function BP_SolarBackpackActor.BP_SolarBackpackActor_C.Check Platform PCOnly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   isIgnoreTranslucentSection                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SolarBackpackActor_C::Check_Platform_PCOnly(bool* isIgnoreTranslucentSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SolarBackpackActor_C", "Check Platform PCOnly");

	Params::BP_SolarBackpackActor_C_Check_Platform_PCOnly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (isIgnoreTranslucentSection != nullptr)
		*isIgnoreTranslucentSection = Parms.isIgnoreTranslucentSection;
}

}

