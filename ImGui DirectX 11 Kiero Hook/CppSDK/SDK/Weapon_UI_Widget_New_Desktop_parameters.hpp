#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_UI_Widget_New_Desktop

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Solarland_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.ExecuteUbergraph_Weapon_UI_Widget_New_Desktop
// 0x0058 (0x0058 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShootPattern                           K2Node_Event_CurrentShootPattern_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponShootPattern                           K2Node_Event_CurrentShootPattern;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInHasColorHUD;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInAnyPartNotEmptyWithoutScope;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_InQualityHUDColor;                    // 0x000C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSelectedIndex;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bUseHUDColor1;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bUseHUDColor2;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_InHUDColor1;                          // 0x0024(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_InHUDColor2;                          // 0x0034(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInSelected;                          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECommonInputType                              K2Node_Event_CurrentInputType;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop) == 0x000004, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop) == 0x000058, "Wrong size on Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, EntryPoint) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_CurrentShootPattern_1) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_CurrentShootPattern_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bEnabled) == 0x000005, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_CurrentShootPattern) == 0x000006, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_CurrentShootPattern' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bInHasColorHUD) == 0x000007, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bInHasColorHUD' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bInAnyPartNotEmptyWithoutScope) == 0x000008, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bInAnyPartNotEmptyWithoutScope' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_InQualityHUDColor) == 0x00000C, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_InQualityHUDColor' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_InSelectedIndex) == 0x00001C, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_InSelectedIndex' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bUseHUDColor1) == 0x000020, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bUseHUDColor1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bUseHUDColor2) == 0x000021, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bUseHUDColor2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_InHUDColor1) == 0x000024, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_InHUDColor1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_InHUDColor2) == 0x000034, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_InHUDColor2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_bInSelected) == 0x000045, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_bInSelected' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_IsDesignTime) == 0x000046, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, CallFunc_MakeLiteralByte_ReturnValue) == 0x000047, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, Temp_int_Variable) == 0x000048, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, Temp_int_Variable_1) == 0x00004C, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, Temp_bool_Variable) == 0x000050, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Event_CurrentInputType) == 0x000051, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Event_CurrentInputType' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000052, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop, K2Node_Select_Default) == 0x000054, "Member 'Weapon_UI_Widget_New_Desktop_C_ExecuteUbergraph_Weapon_UI_Widget_New_Desktop::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.K2_OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged) == 0x000001, "Wrong size on Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged, CurrentInputType) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_K2_OnInputMethodChanged::CurrentInputType' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.UpdateNameBackground
// 0x0028 (0x0028 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground final
{
public:
	int32                                         InSelectedIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseHUDColor1;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseHUDColor2;                                     // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InHUDColor1;                                       // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InHUDColor2;                                       // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground) == 0x000004, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground) == 0x000028, "Wrong size on Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground, InSelectedIndex) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground::InSelectedIndex' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground, bUseHUDColor1) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground::bUseHUDColor1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground, bUseHUDColor2) == 0x000005, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground::bUseHUDColor2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground, InHUDColor1) == 0x000008, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground::InHUDColor1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground, InHUDColor2) == 0x000018, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateNameBackground::InHUDColor2' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.K2_OnUpdateCurrentSlot
// 0x0014 (0x0014 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot final
{
public:
	bool                                          bInHasColorHUD;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInAnyPartNotEmptyWithoutScope;                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InQualityHUDColor;                                 // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot) == 0x000004, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot) == 0x000014, "Wrong size on Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot, bInHasColorHUD) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot::bInHasColorHUD' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot, bInAnyPartNotEmptyWithoutScope) == 0x000001, "Member 'Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot::bInAnyPartNotEmptyWithoutScope' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot, InQualityHUDColor) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_K2_OnUpdateCurrentSlot::InQualityHUDColor' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.UpdateShootPatternUI
// 0x0002 (0x0002 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeaponShootPattern                           CurrentShootPattern;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI) == 0x000002, "Wrong size on Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI, bEnabled) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI::bEnabled' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI, CurrentShootPattern) == 0x000001, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateShootPatternUI::CurrentShootPattern' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.PostWeaponSwitchShootPattern
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern final
{
public:
	EWeaponShootPattern                           CurrentShootPattern;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern) == 0x000001, "Wrong size on Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern, CurrentShootPattern) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_PostWeaponSwitchShootPattern::CurrentShootPattern' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.PostSetSelected
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_PostSetSelected final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_PostSetSelected) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_PostSetSelected");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_PostSetSelected) == 0x000001, "Wrong size on Weapon_UI_Widget_New_Desktop_C_PostSetSelected");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_PostSetSelected, bInSelected) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_PostSetSelected::bInSelected' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_PreConstruct) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_PreConstruct");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_PreConstruct) == 0x000001, "Wrong size on Weapon_UI_Widget_New_Desktop_C_PreConstruct");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.SetSelected
// 0x0108 (0x0108 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_SetSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0028)()
	bool                                          Temp_bool_Variable_3;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00E0(0x0028)()
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_SetSelected) == 0x000008, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_SetSelected");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_SetSelected) == 0x000108, "Wrong size on Weapon_UI_Widget_New_Desktop_C_SetSelected");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, IsSelected_0) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::IsSelected_0' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_bool_Variable) == 0x000014, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_float_Variable) == 0x000018, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_float_Variable_1) == 0x00001C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_bool_Variable_1) == 0x000020, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable_1) == 0x000024, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable_2) == 0x000034, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_bool_Variable_2) == 0x000044, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable_3) == 0x000048, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable_4) == 0x000058, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_Select_Default) == 0x000068, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_Select_Default_1) == 0x00006C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_Select_Default_2) == 0x00007C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_struct_Variable_5) == 0x00008C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, Temp_bool_Variable_3) == 0x0000C8, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_Select_Default_3) == 0x0000CC, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetSelected, K2Node_MakeStruct_SlateColor_1) == 0x0000E0, "Member 'Weapon_UI_Widget_New_Desktop_C_SetSelected::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.SetFullEquipedParts
// 0x0005 (0x0005 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts final
{
public:
	bool                                          IsFullEquipedParts_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts) == 0x000001, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts) == 0x000005, "Wrong size on Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts, IsFullEquipedParts_0) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts::IsFullEquipedParts_0' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts, Temp_byte_Variable) == 0x000002, "Member 'Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts, Temp_byte_Variable_1) == 0x000003, "Member 'Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts, K2Node_Select_Default) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_SetFullEquipedParts::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.UpdateFullyPartStyle
// 0x001C (0x001C - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle final
{
public:
	bool                                          bHasColorHUD;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasPartWithoutScope;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HUDColor;                                          // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle) == 0x000004, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle) == 0x00001C, "Wrong size on Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, bHasColorHUD) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::bHasColorHUD' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, bHasPartWithoutScope) == 0x000001, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::bHasPartWithoutScope' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, HUDColor) == 0x000004, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::HUDColor' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, Temp_byte_Variable) == 0x000014, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, Temp_byte_Variable_1) == 0x000016, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, Temp_bool_Variable) == 0x000017, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle, K2Node_Select_Default) == 0x000018, "Member 'Weapon_UI_Widget_New_Desktop_C_UpdateFullyPartStyle::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI_Widget_New_Desktop.Weapon_UI_Widget_New_Desktop_C.SetNameBackground
// 0x0048 (0x0048 - 0x0000)
struct Weapon_UI_Widget_New_Desktop_C_SetNameBackground final
{
public:
	class UImage*                                 InNameBg;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSelectIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInUseHUDColor;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InHUDColor;                                        // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground) == 0x000008, "Wrong alignment on Weapon_UI_Widget_New_Desktop_C_SetNameBackground");
static_assert(sizeof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground) == 0x000048, "Wrong size on Weapon_UI_Widget_New_Desktop_C_SetNameBackground");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, InNameBg) == 0x000000, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::InNameBg' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, InSelectIndex) == 0x000008, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::InSelectIndex' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, InIndex) == 0x00000C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::InIndex' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, bInUseHUDColor) == 0x000010, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::bInUseHUDColor' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, InHUDColor) == 0x000014, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::InHUDColor' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, Temp_float_Variable) == 0x000024, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, Temp_float_Variable_1) == 0x00002C, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, Temp_bool_Variable) == 0x000031, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, K2Node_Select_Default) == 0x000034, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weapon_UI_Widget_New_Desktop_C_SetNameBackground, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'Weapon_UI_Widget_New_Desktop_C_SetNameBackground::K2Node_MakeStruct_LinearColor' has a wrong offset!");

}

