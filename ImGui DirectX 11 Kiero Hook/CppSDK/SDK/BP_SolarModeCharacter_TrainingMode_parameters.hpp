#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarModeCharacter_TrainingMode

#include "Basic.hpp"

#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function BP_SolarModeCharacter_TrainingMode.BP_SolarModeCharacter_TrainingMode_C.ShouldForceOverrideDamageTaken
// 0x0150 (0x0150 - 0x0000)
struct BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarPointDamageEvent                 DamageEvent;                                       // 0x0008(0x0128)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class ASCMPlayerState*                        EventInstigator;                                   // 0x0130(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0138(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideDamageTaken;                               // 0x0140(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0144(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBotControlled_ReturnValue;              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ShouldForceOverrideDamageTaken_OverrideDamageTaken; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldForceOverrideDamageTaken_ReturnValue; // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken");
static_assert(sizeof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken) == 0x000150, "Wrong size on BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, Damage) == 0x000000, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::Damage' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, DamageEvent) == 0x000008, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::DamageEvent' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, EventInstigator) == 0x000130, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, DamageCauser) == 0x000138, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, OverrideDamageTaken) == 0x000140, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::OverrideDamageTaken' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, ReturnValue) == 0x000144, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, CallFunc_IsBotControlled_ReturnValue) == 0x000145, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::CallFunc_IsBotControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, CallFunc_ShouldForceOverrideDamageTaken_OverrideDamageTaken) == 0x000148, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::CallFunc_ShouldForceOverrideDamageTaken_OverrideDamageTaken' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken, CallFunc_ShouldForceOverrideDamageTaken_ReturnValue) == 0x00014C, "Member 'BP_SolarModeCharacter_TrainingMode_C_ShouldForceOverrideDamageTaken::CallFunc_ShouldForceOverrideDamageTaken_ReturnValue' has a wrong offset!");

// Function BP_SolarModeCharacter_TrainingMode.BP_SolarModeCharacter_TrainingMode_C.ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode
// 0x0058 (0x0058 - 0x0000)
struct BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0008(0x0050)(ConstParm)
};
static_assert(alignof(BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode) == 0x000008, "Wrong alignment on BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode");
static_assert(sizeof(BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode) == 0x000058, "Wrong size on BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode, EntryPoint) == 0x000000, "Member 'BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode, K2Node_MakeMap_Map) == 0x000008, "Member 'BP_SolarModeCharacter_TrainingMode_C_ExecuteUbergraph_BP_SolarModeCharacter_TrainingMode::K2Node_MakeMap_Map' has a wrong offset!");

}

