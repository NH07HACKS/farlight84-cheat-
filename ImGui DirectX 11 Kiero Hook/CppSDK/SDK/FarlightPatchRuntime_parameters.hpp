#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FarlightPatchRuntime

#include "Basic.hpp"

#include "FarlightPatchRuntime_structs.hpp"


namespace SDK::Params
{

// Function FarlightPatchRuntime.PakHelper.AddConfigValue
// 0x0048 (0x0048 - 0x0000)
struct PakHelper_AddConfigValue final
{
public:
	class FString                                 StrippedConfigFileName;                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Section;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         NewValue;                                          // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PakHelper_AddConfigValue) == 0x000008, "Wrong alignment on PakHelper_AddConfigValue");
static_assert(sizeof(PakHelper_AddConfigValue) == 0x000048, "Wrong size on PakHelper_AddConfigValue");
static_assert(offsetof(PakHelper_AddConfigValue, StrippedConfigFileName) == 0x000000, "Member 'PakHelper_AddConfigValue::StrippedConfigFileName' has a wrong offset!");
static_assert(offsetof(PakHelper_AddConfigValue, Section) == 0x000010, "Member 'PakHelper_AddConfigValue::Section' has a wrong offset!");
static_assert(offsetof(PakHelper_AddConfigValue, Key) == 0x000020, "Member 'PakHelper_AddConfigValue::Key' has a wrong offset!");
static_assert(offsetof(PakHelper_AddConfigValue, NewValue) == 0x000030, "Member 'PakHelper_AddConfigValue::NewValue' has a wrong offset!");
static_assert(offsetof(PakHelper_AddConfigValue, ReturnValue) == 0x000040, "Member 'PakHelper_AddConfigValue::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.CreatePakReader
// 0x0020 (0x0020 - 0x0000)
struct PakHelper_CreatePakReader final
{
public:
	class FString                                 InFilename;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoadIndex;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPakReader*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_CreatePakReader) == 0x000008, "Wrong alignment on PakHelper_CreatePakReader");
static_assert(sizeof(PakHelper_CreatePakReader) == 0x000020, "Wrong size on PakHelper_CreatePakReader");
static_assert(offsetof(PakHelper_CreatePakReader, InFilename) == 0x000000, "Member 'PakHelper_CreatePakReader::InFilename' has a wrong offset!");
static_assert(offsetof(PakHelper_CreatePakReader, bLoadIndex) == 0x000010, "Member 'PakHelper_CreatePakReader::bLoadIndex' has a wrong offset!");
static_assert(offsetof(PakHelper_CreatePakReader, ReturnValue) == 0x000018, "Member 'PakHelper_CreatePakReader::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.CreatePakWriter
// 0x0028 (0x0028 - 0x0000)
struct PakHelper_CreatePakWriter final
{
public:
	class FString                                 InFilename;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InMountPoint;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPakWriter*                             ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_CreatePakWriter) == 0x000008, "Wrong alignment on PakHelper_CreatePakWriter");
static_assert(sizeof(PakHelper_CreatePakWriter) == 0x000028, "Wrong size on PakHelper_CreatePakWriter");
static_assert(offsetof(PakHelper_CreatePakWriter, InFilename) == 0x000000, "Member 'PakHelper_CreatePakWriter::InFilename' has a wrong offset!");
static_assert(offsetof(PakHelper_CreatePakWriter, InMountPoint) == 0x000010, "Member 'PakHelper_CreatePakWriter::InMountPoint' has a wrong offset!");
static_assert(offsetof(PakHelper_CreatePakWriter, ReturnValue) == 0x000020, "Member 'PakHelper_CreatePakWriter::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.GetProjectName
// 0x0010 (0x0010 - 0x0000)
struct PakHelper_GetProjectName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_GetProjectName) == 0x000008, "Wrong alignment on PakHelper_GetProjectName");
static_assert(sizeof(PakHelper_GetProjectName) == 0x000010, "Wrong size on PakHelper_GetProjectName");
static_assert(offsetof(PakHelper_GetProjectName, ReturnValue) == 0x000000, "Member 'PakHelper_GetProjectName::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.GetStrippedConfigFileName
// 0x0020 (0x0020 - 0x0000)
struct PakHelper_GetStrippedConfigFileName final
{
public:
	class FString                                 IniName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_GetStrippedConfigFileName) == 0x000008, "Wrong alignment on PakHelper_GetStrippedConfigFileName");
static_assert(sizeof(PakHelper_GetStrippedConfigFileName) == 0x000020, "Wrong size on PakHelper_GetStrippedConfigFileName");
static_assert(offsetof(PakHelper_GetStrippedConfigFileName, IniName) == 0x000000, "Member 'PakHelper_GetStrippedConfigFileName::IniName' has a wrong offset!");
static_assert(offsetof(PakHelper_GetStrippedConfigFileName, ReturnValue) == 0x000010, "Member 'PakHelper_GetStrippedConfigFileName::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.MountPak
// 0x0018 (0x0018 - 0x0000)
struct PakHelper_MountPak final
{
public:
	class FString                                 InPakFilename;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PakOrder;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PakHelper_MountPak) == 0x000008, "Wrong alignment on PakHelper_MountPak");
static_assert(sizeof(PakHelper_MountPak) == 0x000018, "Wrong size on PakHelper_MountPak");
static_assert(offsetof(PakHelper_MountPak, InPakFilename) == 0x000000, "Member 'PakHelper_MountPak::InPakFilename' has a wrong offset!");
static_assert(offsetof(PakHelper_MountPak, PakOrder) == 0x000010, "Member 'PakHelper_MountPak::PakOrder' has a wrong offset!");
static_assert(offsetof(PakHelper_MountPak, ReturnValue) == 0x000014, "Member 'PakHelper_MountPak::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.OpenShaderPatchLibrary
// 0x0028 (0x0028 - 0x0000)
struct PakHelper_OpenShaderPatchLibrary final
{
public:
	class FString                                 ShaderPatchLibraryName;                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LibraryDir;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShaderPatchLibUnique;                             // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PakHelper_OpenShaderPatchLibrary) == 0x000008, "Wrong alignment on PakHelper_OpenShaderPatchLibrary");
static_assert(sizeof(PakHelper_OpenShaderPatchLibrary) == 0x000028, "Wrong size on PakHelper_OpenShaderPatchLibrary");
static_assert(offsetof(PakHelper_OpenShaderPatchLibrary, ShaderPatchLibraryName) == 0x000000, "Member 'PakHelper_OpenShaderPatchLibrary::ShaderPatchLibraryName' has a wrong offset!");
static_assert(offsetof(PakHelper_OpenShaderPatchLibrary, LibraryDir) == 0x000010, "Member 'PakHelper_OpenShaderPatchLibrary::LibraryDir' has a wrong offset!");
static_assert(offsetof(PakHelper_OpenShaderPatchLibrary, bShaderPatchLibUnique) == 0x000020, "Member 'PakHelper_OpenShaderPatchLibrary::bShaderPatchLibUnique' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.ReloadIniFile
// 0x0028 (0x0028 - 0x0000)
struct PakHelper_ReloadIniFile final
{
public:
	class FString                                 StrippedConfigFileName;                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FilePath;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PakHelper_ReloadIniFile) == 0x000008, "Wrong alignment on PakHelper_ReloadIniFile");
static_assert(sizeof(PakHelper_ReloadIniFile) == 0x000028, "Wrong size on PakHelper_ReloadIniFile");
static_assert(offsetof(PakHelper_ReloadIniFile, StrippedConfigFileName) == 0x000000, "Member 'PakHelper_ReloadIniFile::StrippedConfigFileName' has a wrong offset!");
static_assert(offsetof(PakHelper_ReloadIniFile, FilePath) == 0x000010, "Member 'PakHelper_ReloadIniFile::FilePath' has a wrong offset!");
static_assert(offsetof(PakHelper_ReloadIniFile, ReturnValue) == 0x000020, "Member 'PakHelper_ReloadIniFile::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.ReloadRedirectSettingsFromIni
// 0x0010 (0x0010 - 0x0000)
struct PakHelper_ReloadRedirectSettingsFromIni final
{
public:
	class FString                                 IniPath;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_ReloadRedirectSettingsFromIni) == 0x000008, "Wrong alignment on PakHelper_ReloadRedirectSettingsFromIni");
static_assert(sizeof(PakHelper_ReloadRedirectSettingsFromIni) == 0x000010, "Wrong size on PakHelper_ReloadRedirectSettingsFromIni");
static_assert(offsetof(PakHelper_ReloadRedirectSettingsFromIni, IniPath) == 0x000000, "Member 'PakHelper_ReloadRedirectSettingsFromIni::IniPath' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.SetSkipDelBroad
// 0x0001 (0x0001 - 0x0000)
struct PakHelper_SetSkipDelBroad final
{
public:
	bool                                          bInSkipDelBroad;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakHelper_SetSkipDelBroad) == 0x000001, "Wrong alignment on PakHelper_SetSkipDelBroad");
static_assert(sizeof(PakHelper_SetSkipDelBroad) == 0x000001, "Wrong size on PakHelper_SetSkipDelBroad");
static_assert(offsetof(PakHelper_SetSkipDelBroad, bInSkipDelBroad) == 0x000000, "Member 'PakHelper_SetSkipDelBroad::bInSkipDelBroad' has a wrong offset!");

// Function FarlightPatchRuntime.PakHelper.UpdateConfigValue
// 0x0048 (0x0048 - 0x0000)
struct PakHelper_UpdateConfigValue final
{
public:
	class FString                                 StrippedConfigFileName;                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Section;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewValue;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PakHelper_UpdateConfigValue) == 0x000008, "Wrong alignment on PakHelper_UpdateConfigValue");
static_assert(sizeof(PakHelper_UpdateConfigValue) == 0x000048, "Wrong size on PakHelper_UpdateConfigValue");
static_assert(offsetof(PakHelper_UpdateConfigValue, StrippedConfigFileName) == 0x000000, "Member 'PakHelper_UpdateConfigValue::StrippedConfigFileName' has a wrong offset!");
static_assert(offsetof(PakHelper_UpdateConfigValue, Section) == 0x000010, "Member 'PakHelper_UpdateConfigValue::Section' has a wrong offset!");
static_assert(offsetof(PakHelper_UpdateConfigValue, Key) == 0x000020, "Member 'PakHelper_UpdateConfigValue::Key' has a wrong offset!");
static_assert(offsetof(PakHelper_UpdateConfigValue, NewValue) == 0x000030, "Member 'PakHelper_UpdateConfigValue::NewValue' has a wrong offset!");
static_assert(offsetof(PakHelper_UpdateConfigValue, ReturnValue) == 0x000040, "Member 'PakHelper_UpdateConfigValue::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakReader.GetPakIndex
// 0x0010 (0x0010 - 0x0000)
struct PakReader_GetPakIndex final
{
public:
	TArray<struct FPakEntryInfo>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakReader_GetPakIndex) == 0x000008, "Wrong alignment on PakReader_GetPakIndex");
static_assert(sizeof(PakReader_GetPakIndex) == 0x000010, "Wrong size on PakReader_GetPakIndex");
static_assert(offsetof(PakReader_GetPakIndex, ReturnValue) == 0x000000, "Member 'PakReader_GetPakIndex::ReturnValue' has a wrong offset!");

// Function FarlightPatchRuntime.PakReader.GetTotalSize
// 0x0008 (0x0008 - 0x0000)
struct PakReader_GetTotalSize final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PakReader_GetTotalSize) == 0x000008, "Wrong alignment on PakReader_GetTotalSize");
static_assert(sizeof(PakReader_GetTotalSize) == 0x000008, "Wrong size on PakReader_GetTotalSize");
static_assert(offsetof(PakReader_GetTotalSize, ReturnValue) == 0x000000, "Member 'PakReader_GetTotalSize::ReturnValue' has a wrong offset!");

}

