#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_TeamDeathMatch

#include "Basic.hpp"

#include "S_Shop_TDM_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.ExecuteUbergraph_BP_PlayerState_TeamDeathMatch
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Shop_TDM>                    K2Node_CustomEvent_____;                           // 0x0008(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FS_Shop_TDM>                    K2Node_CustomEvent______1;                         // 0x0018(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	const class ASCMPlayerState*                  K2Node_CustomEvent___;                             // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESCMDataChangeType                            K2Node_CustomEvent_ChangeType_1;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Time;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESCMDataChangeType                            K2Node_CustomEvent_ChangeType;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_OldValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch) == 0x000058, "Wrong size on BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, EntryPoint) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_____) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_____' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent______1) == 0x000018, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent______1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent___) == 0x000028, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent___' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_ActorRef) == 0x000030, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_ChangeType_1) == 0x000038, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_ChangeType_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_OldValue_1) == 0x00003C, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_OldValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_NewValue_1) == 0x000040, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_Event_Time) == 0x000044, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_ChangeType) == 0x000048, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_ChangeType' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_OldValue) == 0x00004C, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_OldValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_CustomEvent_NewValue) == 0x000050, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, K2Node_SwitchEnum_CmpSuccess) == 0x000054, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, CallFunc_Conv_IntToByte_ReturnValue) == 0x000055, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch, CallFunc_GetValidValue_ReturnValue) == 0x000056, "Member 'BP_PlayerState_TeamDeathMatch_C_ExecuteUbergraph_BP_PlayerState_TeamDeathMatch::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.自定义事件_0
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_自定义事件_0 final
{
public:
	ESCMDataChangeType                            ChangeType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_自定义事件_0) == 0x000004, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_自定义事件_0");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_自定义事件_0) == 0x00000C, "Wrong size on BP_PlayerState_TeamDeathMatch_C_自定义事件_0");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_自定义事件_0, ChangeType) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_自定义事件_0::ChangeType' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_自定义事件_0, OldValue) == 0x000004, "Member 'BP_PlayerState_TeamDeathMatch_C_自定义事件_0::OldValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_自定义事件_0, NewValue) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_自定义事件_0::NewValue' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.ShowResurrectUI
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI) == 0x000004, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI) == 0x000004, "Wrong size on BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI, Time) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_ShowResurrectUI::Time' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.EUpdateMvpScore
// 0x000C (0x000C - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore final
{
public:
	ESCMDataChangeType                            ChangeType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore) == 0x000004, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore) == 0x00000C, "Wrong size on BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore, ChangeType) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore::ChangeType' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore, OldValue) == 0x000004, "Member 'BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore::OldValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore, NewValue) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_EUpdateMvpScore::NewValue' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.Event_UpdateChangeWeaponDate
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate final
{
public:
	TArray<struct FS_Shop_TDM>                    武器数据_0;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate) == 0x000010, "Wrong size on BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate, 武器数据_0) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_Event_UpdateChangeWeaponDate::武器数据_0' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.ServerUpdateAndChangePlayerWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon final
{
public:
	TArray<struct FS_Shop_TDM>                    武器数据_0;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	const class ASCMPlayerState*                  玩家;                                              // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon) == 0x000020, "Wrong size on BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon, 武器数据_0) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon::武器数据_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon, 玩家) == 0x000010, "Member 'BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon::玩家' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon, ActorRef) == 0x000018, "Member 'BP_PlayerState_TeamDeathMatch_C_ServerUpdateAndChangePlayerWeapon::ActorRef' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.PlayerCanRebirthBlueprint
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint) == 0x000001, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint) == 0x000001, "Wrong size on BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint, ReturnValue) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_PlayerCanRebirthBlueprint::ReturnValue' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.Get Cur Chang Weapon Data
// 0x0348 (0x0348 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data final
{
public:
	TArray<struct FS_Shop_TDM>                    Local_WeaponData;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_TDMGMData_____;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData______;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_Loading__;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_______;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData______1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_______1;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData________3;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Shop_TDM>                    CallFunc_Get_TDMGMData________4;                   // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Get_TDMGMData_AILevel;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            CallFunc_Get_TDMGMData___ItemID;                   // 0x0060(0x0050)()
	TMap<int32, int32>                            CallFunc_Get_TDMGMData___ItemID_1;                 // 0x00B0(0x0050)()
	TMap<int32, int32>                            CallFunc_Get_TDMGMData_AITempleteMap;              // 0x0100(0x0050)()
	int32                                         CallFunc_Get_TDMGMData_________;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_TDMGMData_ReportingInterval;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Shop_TDM                            CallFunc_Array_Get_Item;                           // 0x0158(0x00A0)(HasGetValueTypeHash)
	struct FS_Shop_TDM                            CallFunc_Array_Get_Item_1;                         // 0x01F8(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Shop_TDM                            K2Node_Select_Default;                             // 0x02A0(0x00A0)(ConstParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data) == 0x000348, "Wrong size on BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, Local_WeaponData) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::Local_WeaponData' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, Temp_bool_Variable) == 0x00001C, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_____) == 0x000020, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_____' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData______) == 0x000024, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData______' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_Loading__) == 0x000028, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_Loading__' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_______) == 0x00002C, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_______' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData________1) == 0x000030, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData________1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData______1) == 0x000034, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData______1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData________) == 0x000038, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData________' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_______1) == 0x00003C, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_______1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData________2) == 0x000040, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData________2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData________3) == 0x000044, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData________3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData________4) == 0x000048, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData________4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_AILevel) == 0x000058, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_AILevel' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData___ItemID) == 0x000060, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData___ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData___ItemID_1) == 0x0000B0, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData___ItemID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_AITempleteMap) == 0x000100, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_AITempleteMap' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_________) == 0x000150, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_________' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Get_TDMGMData_ReportingInterval) == 0x000154, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Get_TDMGMData_ReportingInterval' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Array_Length_ReturnValue) == 0x000298, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00029C, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Less_IntInt_ReturnValue) == 0x00029D, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, K2Node_Select_Default) == 0x0002A0, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data, CallFunc_Array_Add_ReturnValue) == 0x000340, "Member 'BP_PlayerState_TeamDeathMatch_C_Get_Cur_Chang_Weapon_Data::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.Set Map WeaponID Weight 
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_ final
{
public:
	int32                                         Local_Sum;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Shop_TDM                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_) == 0x0000D8, "Wrong size on BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, Local_Sum) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::Local_Sum' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D0, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Map_WeaponID_Weight_::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.Set Random Weapon Date
// 0x0168 (0x0168 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date final
{
public:
	int32                                         WeaponNum;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Shop_TDM>                    Local_WeaponData;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Local_RandomInt;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Shop_TDM                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date) == 0x000168, "Wrong size on BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, WeaponNum) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::WeaponNum' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Local_WeaponData) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Local_WeaponData' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Local_RandomInt) == 0x000018, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Local_RandomInt' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, Temp_int_Variable) == 0x000030, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000110, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_BooleanAND_ReturnValue) == 0x000111, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Conv_NameToString_ReturnValue) == 0x000118, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Map_Find_Value) == 0x000128, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Map_Find_ReturnValue) == 0x00012C, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Concat_StrStr_ReturnValue) == 0x000130, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000148, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000158, "Member 'BP_PlayerState_TeamDeathMatch_C_Set_Random_Weapon_Date::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerState_TeamDeathMatch.BP_PlayerState_TeamDeathMatch_C.FUpdateMvpScore
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore final
{
public:
	class ABP_FormulaBase_C*                      CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMVPScore_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore) == 0x000008, "Wrong alignment on BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore");
static_assert(sizeof(BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore) == 0x000010, "Wrong size on BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore, CallFunc_CalculateMVPScore_ReturnValue) == 0x000008, "Member 'BP_PlayerState_TeamDeathMatch_C_FUpdateMvpScore::CallFunc_CalculateMVPScore_ReturnValue' has a wrong offset!");

}

