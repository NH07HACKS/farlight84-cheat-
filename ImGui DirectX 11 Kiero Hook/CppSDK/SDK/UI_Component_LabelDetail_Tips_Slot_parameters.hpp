#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_LabelDetail_Tips_Slot

#include "Basic.hpp"

#include "SolarUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "E_ItemLabel_Quality_Type_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot
// 0x0130 (0x0130 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0050(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C0(0x0070)(ConstParm)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot) == 0x000130, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, EntryPoint) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000004, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_bIsExpanded) == 0x000005, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_bIsSelected) == 0x000006, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_ListItemObject) == 0x000008, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_InLayoutType) == 0x000011, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_MyGeometry) == 0x000014, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_MouseEvent_1) == 0x000050, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot, K2Node_Event_MouseEvent) == 0x0000C0, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ExecuteUbergraph_UI_Component_LabelDetail_Tips_Slot::K2Node_Event_MouseEvent' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave) == 0x000070, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter) == 0x0000A8, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_Component_LabelDetail_Tips_Slot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_PreConstruct");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_PreConstruct");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetQualityColor
// 0x0218 (0x0218 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor final
{
public:
	E_ItemLabel_Quality_Type                      Quality_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemLabel_Quality_Type                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemLabel_Quality_Type                      Temp_byte_Variable_1;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A8(0x0028)()
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemLabel_Quality_Type                      Temp_byte_Variable_2;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x01B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_23;                           // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_24;                           // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_25;                           // 0x01E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_26;                           // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor) == 0x000218, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Quality_0) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Quality_0' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_byte_Variable) == 0x000001, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable) == 0x000004, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_1) == 0x000014, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_2) == 0x000024, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_3) == 0x000034, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_4) == 0x000044, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_5) == 0x000054, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_6) == 0x000064, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_7) == 0x000074, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_8) == 0x000084, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_byte_Variable_1) == 0x000094, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, K2Node_Select_Default) == 0x000098, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, K2Node_MakeStruct_SlateColor) == 0x0000A8, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_9) == 0x0000D0, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_10) == 0x0000E0, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_11) == 0x0000F0, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_12) == 0x000100, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_13) == 0x000110, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_14) == 0x000120, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_15) == 0x000130, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_16) == 0x000140, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_17) == 0x000150, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_byte_Variable_2) == 0x000160, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, K2Node_Select_Default_1) == 0x000164, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_18) == 0x000174, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_19) == 0x000184, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_20) == 0x000194, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_21) == 0x0001A4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_22) == 0x0001B4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_23) == 0x0001C4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_24) == 0x0001D4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_25) == 0x0001E4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, Temp_struct_Variable_26) == 0x0001F4, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::Temp_struct_Variable_26' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor, K2Node_Select_Default_2) == 0x000204, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetQualityColor::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetIsDescribe
// 0x0006 (0x0006 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe final
{
public:
	bool                                          IsDescribe_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_0;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe) == 0x000006, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, IsDescribe_0) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::IsDescribe_0' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, NewLocalVar_0) == 0x000001, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, Temp_bool_Variable) == 0x000002, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, Temp_byte_Variable) == 0x000003, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, Temp_byte_Variable_1) == 0x000004, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe, K2Node_Select_Default) == 0x000005, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetIsDescribe::K2Node_Select_Default' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetLabelTxt
// 0x0018 (0x0018 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt) == 0x000018, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt, InText) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetLabelTxt::InText' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetSwitchMore
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore final
{
public:
	bool                                          bShowMore;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore) == 0x000004, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore) == 0x000008, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore, bShowMore) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore::bShowMore' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000004, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetSwitchMore::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetDescTxt
// 0x0018 (0x0018 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt final
{
public:
	class FText                                   InTxt;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt) == 0x000018, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt, InTxt) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetDescTxt::InTxt' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.SetTipsSizeContent
// 0x0068 (0x0068 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent final
{
public:
	bool                                          IsTipsSizeContent_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStretch                                      Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStretch                                      Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStretch                                      K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_8;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent) == 0x000004, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent) == 0x000068, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, IsTipsSizeContent_0) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::IsTipsSizeContent_0' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable) == 0x000001, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_byte_Variable) == 0x000002, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_1) == 0x000004, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default) == 0x000005, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable) == 0x000008, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_1) == 0x00000C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_2) == 0x000010, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_2) == 0x000014, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_3) == 0x000018, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_3) == 0x00001C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_4) == 0x000020, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_5) == 0x000024, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_4) == 0x000028, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_6) == 0x00002C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_7) == 0x000030, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_5) == 0x000034, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_8) == 0x000038, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_9) == 0x00003C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_bool_Variable_6) == 0x000040, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_10) == 0x000044, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, Temp_float_Variable_11) == 0x000048, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_1) == 0x00004C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_2) == 0x000050, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_3) == 0x000054, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_4) == 0x000058, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_5) == 0x00005C, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, K2Node_Select_Default_6) == 0x000060, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000064, "Member 'UI_Component_LabelDetail_Tips_Slot_C_SetTipsSizeContent::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.OnListItemObjectSetCopy
// 0x0008 (0x0008 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy) == 0x000008, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy, ListItemObject) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_OnListItemObjectSetCopy::ListItemObject' has a wrong offset!");

// Function UI_Component_LabelDetail_Tips_Slot.UI_Component_LabelDetail_Tips_Slot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Component_LabelDetail_Tips_Slot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Component_LabelDetail_Tips_Slot_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Component_LabelDetail_Tips_Slot_C_GetModuleName");
static_assert(sizeof(UI_Component_LabelDetail_Tips_Slot_C_GetModuleName) == 0x000010, "Wrong size on UI_Component_LabelDetail_Tips_Slot_C_GetModuleName");
static_assert(offsetof(UI_Component_LabelDetail_Tips_Slot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Component_LabelDetail_Tips_Slot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

