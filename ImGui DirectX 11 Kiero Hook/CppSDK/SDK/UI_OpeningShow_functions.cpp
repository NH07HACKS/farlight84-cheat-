#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_OpeningShow

#include "Basic.hpp"

#include "UI_OpeningShow_classes.hpp"
#include "UI_OpeningShow_parameters.hpp"


namespace SDK
{

// Function UI_OpeningShow.UI_OpeningShow_C.ExecuteUbergraph_UI_OpeningShow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::ExecuteUbergraph_UI_OpeningShow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "ExecuteUbergraph_UI_OpeningShow");

	Params::UI_OpeningShow_C_ExecuteUbergraph_UI_OpeningShow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.SetIsSkipOpeningHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSkip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_OpeningShow_C::SetIsSkipOpeningHUD(bool bSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "SetIsSkipOpeningHUD");

	Params::UI_OpeningShow_C_SetIsSkipOpeningHUD Parms{};

	Parms.bSkip = bSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void UUI_OpeningShow_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.OnTeamShowUIClose
// (Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::OnTeamShowUIClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "OnTeamShowUIClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.SetDefenderTeamTotalKill
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TotalKillNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::SetDefenderTeamTotalKill(int32 TotalKillNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "SetDefenderTeamTotalKill");

	Params::UI_OpeningShow_C_SetDefenderTeamTotalKill Parms{};

	Parms.TotalKillNum = TotalKillNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.UpdateUIStateOn3DTeamShow
// (Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::UpdateUIStateOn3DTeamShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "UpdateUIStateOn3DTeamShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.ResetHeroImg
// (Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::ResetHeroImg()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "ResetHeroImg");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_OpeningShow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "PreConstruct");

	Params::UI_OpeningShow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.OnSolarUIClosed
// (Event, Protected, BlueprintEvent)

void UUI_OpeningShow_C::OnSolarUIClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "OnSolarUIClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.OnSolarUIOpened
// (Event, Protected, BlueprintEvent)

void UUI_OpeningShow_C::OnSolarUIOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "OnSolarUIOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.UpdateOpeningShow
// (Event, Public, BlueprintEvent)
// Parameters:
// EDefenderTeamType                       TeamType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::UpdateOpeningShow(EDefenderTeamType TeamType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "UpdateOpeningShow");

	Params::UI_OpeningShow_C_UpdateOpeningShow Parms{};

	Parms.TeamType = TeamType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.StartPlayExitAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     Panel_Logo_Root                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::StartPlayExitAnim(class UCanvasPanel* Panel_Logo_Root)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "StartPlayExitAnim");

	Params::UI_OpeningShow_C_StartPlayExitAnim Parms{};

	Parms.Panel_Logo_Root = Panel_Logo_Root;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.UpdateTeamState
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_OpeningShow_C::UpdateTeamState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "UpdateTeamState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.SequenceEvent__ENTRYPOINTUI_OpeningShow_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     Panel_Logo_Root                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::SequenceEvent__ENTRYPOINTUI_OpeningShow_0(class UCanvasPanel* Panel_Logo_Root)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "SequenceEvent__ENTRYPOINTUI_OpeningShow_0");

	Params::UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_0 Parms{};

	Parms.Panel_Logo_Root = Panel_Logo_Root;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.SequenceEvent__ENTRYPOINTUI_OpeningShow_1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvasPanel*                     Panel_Logo_Root                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_OpeningShow_C::SequenceEvent__ENTRYPOINTUI_OpeningShow_1(class UCanvasPanel* Panel_Logo_Root)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "SequenceEvent__ENTRYPOINTUI_OpeningShow_1");

	Params::UI_OpeningShow_C_SequenceEvent__ENTRYPOINTUI_OpeningShow_1 Parms{};

	Parms.Panel_Logo_Root = Panel_Logo_Root;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.DestructCopy
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_OpeningShow_C::DestructCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "DestructCopy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_OpeningShow.UI_OpeningShow_C.UpdateHeroImg
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASolarPlayerState*                PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OpeningShow_C::UpdateHeroImg(class ASolarPlayerState* PS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "UpdateHeroImg");

	Params::UI_OpeningShow_C_UpdateHeroImg Parms{};

	Parms.PS = PS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_OpeningShow.UI_OpeningShow_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_OpeningShow_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OpeningShow_C", "GetModuleName");

	Params::UI_OpeningShow_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

