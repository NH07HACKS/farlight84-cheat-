#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SliderForWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_SliderForWidget.UI_SliderForWidget_C
// 0x0290 (0x0880 - 0x05F0)
class UUI_SliderForWidget_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UOverlay*                               Overlay;                                           // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Progess;                                           // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider;                                            // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUserWidget*                            UsedWidget;                                        // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HandleWidgetClass;                                 // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              HandleOffset;                                      // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         滑条厚度;                                          // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0xC];                                      // 0x0644(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            普通的条图像;                                      // 0x0650(0x0110)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            悬浮的条图像;                                      // 0x0760(0x0110)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           FillColor;                                         // 0x0870(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_SliderForWidget(int32 EntryPoint);
	void BndEvt__Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value_0);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Init_Slot_Offset(const struct FVector2D& InOffset);
	void OnWidgetChanged(class UClass* InWidgetClass);
	void SetValue(float InValue);
	void SetHandlePos(const struct FVector2D& InOffset, float InValue);
	void SetBarThickness(float InValue);
	void SetBarColor(const struct FLinearColor& InValue);
	void SetBarImage(const struct FSlateBrush& InNormalBarImage, const struct FSlateBrush& InHoveredBarImage);
	void GetHandleUsedWidget(class UWidget** NewParam);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_SliderForWidget_C">();
	}
	static class UUI_SliderForWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_SliderForWidget_C>();
	}
};
static_assert(alignof(UUI_SliderForWidget_C) == 0x000010, "Wrong alignment on UUI_SliderForWidget_C");
static_assert(sizeof(UUI_SliderForWidget_C) == 0x000880, "Wrong size on UUI_SliderForWidget_C");
static_assert(offsetof(UUI_SliderForWidget_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_SliderForWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, Overlay) == 0x0005F8, "Member 'UUI_SliderForWidget_C::Overlay' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, Progess) == 0x000600, "Member 'UUI_SliderForWidget_C::Progess' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, SizeBox) == 0x000608, "Member 'UUI_SliderForWidget_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, Slider) == 0x000610, "Member 'UUI_SliderForWidget_C::Slider' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, UsedWidget) == 0x000618, "Member 'UUI_SliderForWidget_C::UsedWidget' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, Size) == 0x000620, "Member 'UUI_SliderForWidget_C::Size' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, Value) == 0x000628, "Member 'UUI_SliderForWidget_C::Value' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, HandleWidgetClass) == 0x000630, "Member 'UUI_SliderForWidget_C::HandleWidgetClass' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, HandleOffset) == 0x000638, "Member 'UUI_SliderForWidget_C::HandleOffset' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, 滑条厚度) == 0x000640, "Member 'UUI_SliderForWidget_C::滑条厚度' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, 普通的条图像) == 0x000650, "Member 'UUI_SliderForWidget_C::普通的条图像' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, 悬浮的条图像) == 0x000760, "Member 'UUI_SliderForWidget_C::悬浮的条图像' has a wrong offset!");
static_assert(offsetof(UUI_SliderForWidget_C, FillColor) == 0x000870, "Member 'UUI_SliderForWidget_C::FillColor' has a wrong offset!");

}

