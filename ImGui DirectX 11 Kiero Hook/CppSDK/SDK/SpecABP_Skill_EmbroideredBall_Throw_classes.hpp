#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecABP_Skill_EmbroideredBall_Throw

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SpecABP_Skill_EmbroideredBall_Throw.SpecABP_Skill_EmbroideredBall_Throw_C
// 0x0760 (0x0AD0 - 0x0370)
class USpecABP_Skill_EmbroideredBall_Throw_C final : public USolarSpecABP_Skill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0378(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x03A8(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0420(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x04E0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0508(0x00C8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x05D0(0x01A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0770(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0838(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0900(0x0088)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0988(0x0088)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0A10(0x0088)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0A98(0x0030)()

public:
	void ExecuteUbergraph_SpecABP_Skill_EmbroideredBall_Throw(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void SkillAnimationLayer(const struct FPoseLink& BasePose, struct FPoseLink* SkillAnimationLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpecABP_Skill_EmbroideredBall_Throw_C">();
	}
	static class USpecABP_Skill_EmbroideredBall_Throw_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecABP_Skill_EmbroideredBall_Throw_C>();
	}
};
static_assert(alignof(USpecABP_Skill_EmbroideredBall_Throw_C) == 0x000010, "Wrong alignment on USpecABP_Skill_EmbroideredBall_Throw_C");
static_assert(sizeof(USpecABP_Skill_EmbroideredBall_Throw_C) == 0x000AD0, "Wrong size on USpecABP_Skill_EmbroideredBall_Throw_C");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, UberGraphFrame) == 0x000370, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_Root_1) == 0x000378, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_LinkedInputPose) == 0x0003A8, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_SaveCachedPose) == 0x000420, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_UseCachedPose) == 0x0004E0, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000508, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0005D0, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000770, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_LayeredBoneBlend) == 0x000838, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_SequencePlayer_2) == 0x000900, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_SequencePlayer_1) == 0x000988, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_SequencePlayer) == 0x000A10, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USpecABP_Skill_EmbroideredBall_Throw_C, AnimGraphNode_Root) == 0x000A98, "Member 'USpecABP_Skill_EmbroideredBall_Throw_C::AnimGraphNode_Root' has a wrong offset!");

}

