#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleRoyaleGameModeAIComp_Custom

#include "Basic.hpp"

#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BattleRoyaleGameModeAIComp_Custom.BattleRoyaleGameModeAIComp_Custom_C
// 0x0038 (0x05B8 - 0x0580)
class UBattleRoyaleGameModeAIComp_Custom_C final : public USBattleRoyaleGameModeAIComp
{
public:
	int32                                         AllBOT_Num;                                        // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584[0x4];                                      // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SolarCharacterPlayer_C*>     AllBOT_Falling;                                    // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class ABP_SolarCharacterPlayer_C*             Player;                                            // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCustomMod;                                       // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASCMPlayerState*>                AllRealPlayers;                                    // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnGameModeHandleMatchHasStarted(bool* bOutSuccess, const TArray<class UGameModeCompBase*>& ComponentCollection);
	void OnGameModeStartPlay(bool* bOutSuccess, const TArray<class UGameModeCompBase*>& ComponentCollection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleRoyaleGameModeAIComp_Custom_C">();
	}
	static class UBattleRoyaleGameModeAIComp_Custom_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleRoyaleGameModeAIComp_Custom_C>();
	}
};
static_assert(alignof(UBattleRoyaleGameModeAIComp_Custom_C) == 0x000008, "Wrong alignment on UBattleRoyaleGameModeAIComp_Custom_C");
static_assert(sizeof(UBattleRoyaleGameModeAIComp_Custom_C) == 0x0005B8, "Wrong size on UBattleRoyaleGameModeAIComp_Custom_C");
static_assert(offsetof(UBattleRoyaleGameModeAIComp_Custom_C, AllBOT_Num) == 0x000580, "Member 'UBattleRoyaleGameModeAIComp_Custom_C::AllBOT_Num' has a wrong offset!");
static_assert(offsetof(UBattleRoyaleGameModeAIComp_Custom_C, AllBOT_Falling) == 0x000588, "Member 'UBattleRoyaleGameModeAIComp_Custom_C::AllBOT_Falling' has a wrong offset!");
static_assert(offsetof(UBattleRoyaleGameModeAIComp_Custom_C, Player) == 0x000598, "Member 'UBattleRoyaleGameModeAIComp_Custom_C::Player' has a wrong offset!");
static_assert(offsetof(UBattleRoyaleGameModeAIComp_Custom_C, IsCustomMod) == 0x0005A0, "Member 'UBattleRoyaleGameModeAIComp_Custom_C::IsCustomMod' has a wrong offset!");
static_assert(offsetof(UBattleRoyaleGameModeAIComp_Custom_C, AllRealPlayers) == 0x0005A8, "Member 'UBattleRoyaleGameModeAIComp_Custom_C::AllRealPlayers' has a wrong offset!");

}

