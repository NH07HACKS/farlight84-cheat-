#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FX_Matching

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FX_Matching.BP_FX_Matching_C
// 0x0030 (0x0308 - 0x02D8)
class ABP_FX_Matching_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_FX_MatchingCenter;                              // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Matching_Line03;                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Matching_Line02;                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Matching_Line01;                             // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FX_Matching;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FX_Matching_C">();
	}
	static class ABP_FX_Matching_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FX_Matching_C>();
	}
};
static_assert(alignof(ABP_FX_Matching_C) == 0x000008, "Wrong alignment on ABP_FX_Matching_C");
static_assert(sizeof(ABP_FX_Matching_C) == 0x000308, "Wrong size on ABP_FX_Matching_C");
static_assert(offsetof(ABP_FX_Matching_C, SM_FX_MatchingCenter) == 0x0002D8, "Member 'ABP_FX_Matching_C::SM_FX_MatchingCenter' has a wrong offset!");
static_assert(offsetof(ABP_FX_Matching_C, SM_FX_Matching_Line03) == 0x0002E0, "Member 'ABP_FX_Matching_C::SM_FX_Matching_Line03' has a wrong offset!");
static_assert(offsetof(ABP_FX_Matching_C, SM_FX_Matching_Line02) == 0x0002E8, "Member 'ABP_FX_Matching_C::SM_FX_Matching_Line02' has a wrong offset!");
static_assert(offsetof(ABP_FX_Matching_C, SM_FX_Matching_Line01) == 0x0002F0, "Member 'ABP_FX_Matching_C::SM_FX_Matching_Line01' has a wrong offset!");
static_assert(offsetof(ABP_FX_Matching_C, SM_FX_Matching) == 0x0002F8, "Member 'ABP_FX_Matching_C::SM_FX_Matching' has a wrong offset!");
static_assert(offsetof(ABP_FX_Matching_C, DefaultSceneRoot) == 0x000300, "Member 'ABP_FX_Matching_C::DefaultSceneRoot' has a wrong offset!");

}

