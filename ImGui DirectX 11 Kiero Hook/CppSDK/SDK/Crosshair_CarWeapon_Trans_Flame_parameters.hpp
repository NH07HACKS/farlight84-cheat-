#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_CarWeapon_Trans_Flame

#include "Basic.hpp"

#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function Crosshair_CarWeapon_Trans_Flame.Crosshair_CarWeapon_Trans_Flame_C.ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame
// 0x0030 (0x0030 - 0x0000)
struct Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETransformerType                              K2Node_Event_InType;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnter;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame) == 0x000008, "Wrong alignment on Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame");
static_assert(sizeof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame) == 0x000030, "Wrong size on Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, EntryPoint) == 0x000000, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::EntryPoint' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, K2Node_Event_InType) == 0x000004, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::K2Node_Event_InType' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, K2Node_Event_bEnter) == 0x000010, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::K2Node_Event_bEnter' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000020, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'Crosshair_CarWeapon_Trans_Flame_C_ExecuteUbergraph_Crosshair_CarWeapon_Trans_Flame::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function Crosshair_CarWeapon_Trans_Flame.Crosshair_CarWeapon_Trans_Flame_C.OnOverloadStateChanged
// 0x0001 (0x0001 - 0x0000)
struct Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged final
{
public:
	bool                                          bEnter;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged) == 0x000001, "Wrong alignment on Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged");
static_assert(sizeof(Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged) == 0x000001, "Wrong size on Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged, bEnter) == 0x000000, "Member 'Crosshair_CarWeapon_Trans_Flame_C_OnOverloadStateChanged::bEnter' has a wrong offset!");

// Function Crosshair_CarWeapon_Trans_Flame.Crosshair_CarWeapon_Trans_Flame_C.OnTransformerWeaponChanged
// 0x0001 (0x0001 - 0x0000)
struct Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged final
{
public:
	ETransformerType                              InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged) == 0x000001, "Wrong alignment on Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged");
static_assert(sizeof(Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged) == 0x000001, "Wrong size on Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged");
static_assert(offsetof(Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged, InType) == 0x000000, "Member 'Crosshair_CarWeapon_Trans_Flame_C_OnTransformerWeaponChanged::InType' has a wrong offset!");

}

