#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ACCM

#include "Basic.hpp"

#include "BP_ACCM_classes.hpp"
#include "BP_ACCM_parameters.hpp"


namespace SDK
{

// Function BP_ACCM.BP_ACCM_C.FixRotationForBox
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                OriginWorldTransform                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform*                      FixedWorldTransform                                    (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_ACCM_C::FixRotationForBox(const struct FTransform& OriginWorldTransform, struct FTransform* FixedWorldTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "FixRotationForBox");

	Params::BP_ACCM_C_FixRotationForBox Parms{};

	Parms.OriginWorldTransform = std::move(OriginWorldTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (FixedWorldTransform != nullptr)
		*FixedWorldTransform = std::move(Parms.FixedWorldTransform);
}


// Function BP_ACCM.BP_ACCM_C.TryApplyTempShieldEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASolarCharacter*                  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::TryApplyTempShieldEffect(class ASolarCharacter* TargetCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "TryApplyTempShieldEffect");

	Params::BP_ACCM_C_TryApplyTempShieldEffect Parms{};

	Parms.TargetCharacter = TargetCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.ApplyEffectToOverlapCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ACCM_C::ApplyEffectToOverlapCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ApplyEffectToOverlapCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ACCM.BP_ACCM_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ACCM_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ACCM.BP_ACCM_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ReceiveActorBeginOverlap");

	Params::BP_ACCM_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ReceiveTick");

	Params::BP_ACCM_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ReceiveActorEndOverlap");

	Params::BP_ACCM_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.CreateBox
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                WorldTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_ACCM_C::CreateBox(const struct FTransform& WorldTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "CreateBox");

	Params::BP_ACCM_C_CreateBox Parms{};

	Parms.WorldTransform = std::move(WorldTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.SetBandLifetime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LifeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::SetBandLifetime(float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "SetBandLifetime");

	Params::BP_ACCM_C_SetBandLifetime Parms{};

	Parms.LifeTime = LifeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.CreateBand
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                WorldTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_ACCM_C::CreateBand(const struct FTransform& WorldTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "CreateBand");

	Params::BP_ACCM_C_CreateBand Parms{};

	Parms.WorldTransform = std::move(WorldTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.OnActivateAbility
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableTempShieldEffect                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ACCM_C::OnActivateAbility(bool bEnableTempShieldEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "OnActivateAbility");

	Params::BP_ACCM_C_OnActivateAbility Parms{};

	Parms.bEnableTempShieldEffect = bEnableTempShieldEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ACCM.BP_ACCM_C.ExecuteUbergraph_BP_ACCM
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ACCM_C::ExecuteUbergraph_BP_ACCM(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ACCM_C", "ExecuteUbergraph_BP_ACCM");

	Params::BP_ACCM_C_ExecuteUbergraph_BP_ACCM Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

