#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MessageObj

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "S_MessageRequest_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MessageObj.BP_MessageObj_C
// 0x0038 (0x0060 - 0x0028)
class UBP_MessageObj_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(const struct FS_MessageRequest& Info)> OnTimeout;                  // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsRunning;                                         // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBlocking;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MessageRequest                      NewVar_0;                                          // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MessageObj(int32 EntryPoint);
	void BlockTimeUp();
	void Timeout();
	void ReplyDeal(int32 BlockTime, bool Reply);
	void Init(const struct FS_MessageRequest& MessageInfo, int32 Time, bool* Return);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MessageObj_C">();
	}
	static class UBP_MessageObj_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MessageObj_C>();
	}
};
static_assert(alignof(UBP_MessageObj_C) == 0x000008, "Wrong alignment on UBP_MessageObj_C");
static_assert(sizeof(UBP_MessageObj_C) == 0x000060, "Wrong size on UBP_MessageObj_C");
static_assert(offsetof(UBP_MessageObj_C, UberGraphFrame) == 0x000028, "Member 'UBP_MessageObj_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MessageObj_C, OnTimeout) == 0x000030, "Member 'UBP_MessageObj_C::OnTimeout' has a wrong offset!");
static_assert(offsetof(UBP_MessageObj_C, IsRunning) == 0x000040, "Member 'UBP_MessageObj_C::IsRunning' has a wrong offset!");
static_assert(offsetof(UBP_MessageObj_C, Timer) == 0x000048, "Member 'UBP_MessageObj_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_MessageObj_C, IsBlocking) == 0x000050, "Member 'UBP_MessageObj_C::IsBlocking' has a wrong offset!");
static_assert(offsetof(UBP_MessageObj_C, NewVar_0) == 0x000054, "Member 'UBP_MessageObj_C::NewVar_0' has a wrong offset!");

}

