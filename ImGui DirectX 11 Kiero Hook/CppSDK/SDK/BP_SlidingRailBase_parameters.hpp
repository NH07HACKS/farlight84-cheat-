#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SlidingRailBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SlidingRailBase.BP_SlidingRailBase_C.CreatePillar
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SlidingRailBase_C_CreatePillar final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZiplinePillar_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZiplinePillar_C*                    CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlidingRailBase_C_CreatePillar) == 0x000010, "Wrong alignment on BP_SlidingRailBase_C_CreatePillar");
static_assert(sizeof(BP_SlidingRailBase_C_CreatePillar) == 0x0000C0, "Wrong size on BP_SlidingRailBase_C_CreatePillar");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00000C, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000024, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_MakeTransform_ReturnValue_1) == 0x000060, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000098, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A0, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000A8, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B0, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_CreatePillar, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_SlidingRailBase_C_CreatePillar::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SlidingRailBase.BP_SlidingRailBase_C.FixRrailLocation
// 0x03C8 (0x03C8 - 0x0000)
struct BP_SlidingRailBase_C_FixRrailLocation final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0020(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0188(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0290(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x031C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ZiplinePillar_C*                    K2Node_DynamicCast_AsBP_Zipline_Pillar;            // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPillarTransform_bSuccess;              // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SlidingRailBase_C_FixRrailLocation) == 0x000008, "Wrong alignment on BP_SlidingRailBase_C_FixRrailLocation");
static_assert(sizeof(BP_SlidingRailBase_C_FixRrailLocation) == 0x0003C8, "Wrong size on BP_SlidingRailBase_C_FixRrailLocation");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, Temp_object_Variable) == 0x000000, "Member 'BP_SlidingRailBase_C_FixRrailLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SlidingRailBase_C_FixRrailLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SlidingRailBase_C_FixRrailLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, Temp_object_Variable_1) == 0x000020, "Member 'BP_SlidingRailBase_C_FixRrailLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_SlidingRailBase_C_FixRrailLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BP_SlidingRailBase_C_FixRrailLocation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000068, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000074, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000FC, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000100, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x00010C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00010D, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Time) == 0x000110, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Distance) == 0x000114, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000124, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x00013C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_FaceIndex) == 0x00016C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_TraceStart) == 0x000170, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_TraceEnd) == 0x00017C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000188, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000210, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000211, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000212, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000213, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Time_1) == 0x000214, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Distance_1) == 0x000218, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Location_1) == 0x00021C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000228, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_Normal_1) == 0x000234, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000240, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000250, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000258, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000260, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000268, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_HitItem_1) == 0x000270, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x000274, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x000278, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x000284, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000290, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000318, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x00031C, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Array_Length_ReturnValue) == 0x0003A4, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Array_Get_Item) == 0x0003A8, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0003B0, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, K2Node_DynamicCast_AsBP_Zipline_Pillar) == 0x0003B8, "Member 'BP_SlidingRailBase_C_FixRrailLocation::K2Node_DynamicCast_AsBP_Zipline_Pillar' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, K2Node_DynamicCast_bSuccess) == 0x0003C0, "Member 'BP_SlidingRailBase_C_FixRrailLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_FixRrailLocation, CallFunc_SetPillarTransform_bSuccess) == 0x0003C1, "Member 'BP_SlidingRailBase_C_FixRrailLocation::CallFunc_SetPillarTransform_bSuccess' has a wrong offset!");

// Function BP_SlidingRailBase.BP_SlidingRailBase_C.GetEndPointLocation
// 0x00AC (0x00AC - 0x0000)
struct BP_SlidingRailBase_C_GetEndPointLocation final
{
public:
	struct FVector                                PillarLoc;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPointLoc;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPointDir;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue_1;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlidingRailBase_C_GetEndPointLocation) == 0x000004, "Wrong alignment on BP_SlidingRailBase_C_GetEndPointLocation");
static_assert(sizeof(BP_SlidingRailBase_C_GetEndPointLocation) == 0x0000AC, "Wrong size on BP_SlidingRailBase_C_GetEndPointLocation");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, PillarLoc) == 0x000000, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::PillarLoc' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, EndPointLoc) == 0x00000C, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::EndPointLoc' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, EndPointDir) == 0x000018, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::EndPointDir' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, Temp_bool_Variable) == 0x000024, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, Temp_bool_Variable_1) == 0x000025, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_GetForwardVector_ReturnValue_1) == 0x000034, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_Multiply_VectorInt_ReturnValue) == 0x00004C, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000064, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_VSizeXY_ReturnValue) == 0x000070, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000074, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_VSizeXY_ReturnValue_1) == 0x000080, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_VSizeXY_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, K2Node_Select_Default) == 0x000088, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, K2Node_Select_Default_1) == 0x000094, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SlidingRailBase_C_GetEndPointLocation, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000A0, "Member 'BP_SlidingRailBase_C_GetEndPointLocation::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");

}

