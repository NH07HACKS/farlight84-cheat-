#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BackPack_Drag

#include "Basic.hpp"

#include "E_Backpack_DragState_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_BackPack_Drag.UI_BackPack_Drag_C.SetDragState
// 0x0009 (0x0009 - 0x0000)
struct UI_BackPack_Drag_C_SetDragState final
{
public:
	E_Backpack_DragState                          DragState_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Backpack_DragState                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Backpack_DragState                          Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BackPack_Drag_C_SetDragState) == 0x000001, "Wrong alignment on UI_BackPack_Drag_C_SetDragState");
static_assert(sizeof(UI_BackPack_Drag_C_SetDragState) == 0x000009, "Wrong size on UI_BackPack_Drag_C_SetDragState");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, DragState_0) == 0x000000, "Member 'UI_BackPack_Drag_C_SetDragState::DragState_0' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable) == 0x000001, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable_1) == 0x000002, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable_2) == 0x000003, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable_3) == 0x000004, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable_4) == 0x000005, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, Temp_byte_Variable_5) == 0x000006, "Member 'UI_BackPack_Drag_C_SetDragState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, K2Node_Select_Default) == 0x000007, "Member 'UI_BackPack_Drag_C_SetDragState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetDragState, K2Node_Select_Default_1) == 0x000008, "Member 'UI_BackPack_Drag_C_SetDragState::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_BackPack_Drag.UI_BackPack_Drag_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BackPack_Drag_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Drag_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BackPack_Drag_C_PreConstruct");
static_assert(sizeof(UI_BackPack_Drag_C_PreConstruct) == 0x000001, "Wrong size on UI_BackPack_Drag_C_PreConstruct");
static_assert(offsetof(UI_BackPack_Drag_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BackPack_Drag_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BackPack_Drag.UI_BackPack_Drag_C.SetAssemblyDisplay
// 0x0002 (0x0002 - 0x0000)
struct UI_BackPack_Drag_C_SetAssemblyDisplay final
{
public:
	bool                                          bAssembly;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShow;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BackPack_Drag_C_SetAssemblyDisplay) == 0x000001, "Wrong alignment on UI_BackPack_Drag_C_SetAssemblyDisplay");
static_assert(sizeof(UI_BackPack_Drag_C_SetAssemblyDisplay) == 0x000002, "Wrong size on UI_BackPack_Drag_C_SetAssemblyDisplay");
static_assert(offsetof(UI_BackPack_Drag_C_SetAssemblyDisplay, bAssembly) == 0x000000, "Member 'UI_BackPack_Drag_C_SetAssemblyDisplay::bAssembly' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_SetAssemblyDisplay, bShow) == 0x000001, "Member 'UI_BackPack_Drag_C_SetAssemblyDisplay::bShow' has a wrong offset!");

// Function UI_BackPack_Drag.UI_BackPack_Drag_C.ExecuteUbergraph_UI_BackPack_Drag
// 0x01C0 (0x01C0 - 0x0000)
struct UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Backpack_DragState                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAssembly;                            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShow;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0028)()
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushOutlineSettings             K2Node_MakeStruct_SlateBrushOutlineSettings;       // 0x0070(0x0040)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00B0(0x0110)()
};
static_assert(alignof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag) == 0x000010, "Wrong alignment on UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag");
static_assert(sizeof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag) == 0x0001C0, "Wrong size on UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, EntryPoint) == 0x000000, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, Temp_byte_Variable) == 0x000004, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, Temp_struct_Variable) == 0x000008, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, Temp_struct_Variable_1) == 0x000018, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_Event_IsDesignTime) == 0x000028, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_Event_bAssembly) == 0x000029, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_Event_bAssembly' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_Event_bShow) == 0x00002A, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_Select_Default) == 0x00002C, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_MakeStruct_SlateBrushOutlineSettings) == 0x000070, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_MakeStruct_SlateBrushOutlineSettings' has a wrong offset!");
static_assert(offsetof(UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag, K2Node_MakeStruct_SlateBrush) == 0x0000B0, "Member 'UI_BackPack_Drag_C_ExecuteUbergraph_UI_BackPack_Drag::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

}

