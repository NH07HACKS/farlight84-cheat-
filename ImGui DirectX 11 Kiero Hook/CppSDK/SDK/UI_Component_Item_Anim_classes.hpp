#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Item_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Item_Quality_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Item_Anim.UI_Component_Item_Anim_C
// 0x0048 (0x0638 - 0x05F0)
class UUI_Component_Item_Anim_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_VX_Loop_Base;                                  // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Glow;                                  // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Point;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Quality;                               // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_VX_Loop_Tex;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_Claim_Loop;                                  // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Item;                                         // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_Item_Quality                                Quality;                                           // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Component_Item_Anim(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void BP_OnEntryReleased();
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void SetQuality(E_Item_Quality Quality_0);
	bool BP_IsNotSelectableOrNavigable();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Item_Anim_C">();
	}
	static class UUI_Component_Item_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Item_Anim_C>();
	}
};
static_assert(alignof(UUI_Component_Item_Anim_C) == 0x000008, "Wrong alignment on UUI_Component_Item_Anim_C");
static_assert(sizeof(UUI_Component_Item_Anim_C) == 0x000638, "Wrong size on UUI_Component_Item_Anim_C");
static_assert(offsetof(UUI_Component_Item_Anim_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Component_Item_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Img_VX_Loop_Base) == 0x0005F8, "Member 'UUI_Component_Item_Anim_C::Img_VX_Loop_Base' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Img_VX_Loop_Glow) == 0x000600, "Member 'UUI_Component_Item_Anim_C::Img_VX_Loop_Glow' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Img_VX_Loop_Point) == 0x000608, "Member 'UUI_Component_Item_Anim_C::Img_VX_Loop_Point' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Img_VX_Loop_Quality) == 0x000610, "Member 'UUI_Component_Item_Anim_C::Img_VX_Loop_Quality' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Img_VX_Loop_Tex) == 0x000618, "Member 'UUI_Component_Item_Anim_C::Img_VX_Loop_Tex' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Panel_Claim_Loop) == 0x000620, "Member 'UUI_Component_Item_Anim_C::Panel_Claim_Loop' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Size_Item) == 0x000628, "Member 'UUI_Component_Item_Anim_C::Size_Item' has a wrong offset!");
static_assert(offsetof(UUI_Component_Item_Anim_C, Quality) == 0x000630, "Member 'UUI_Component_Item_Anim_C::Quality' has a wrong offset!");

}

