#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_SetFollowDistance

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_SetFollowDistance.BTT_SetFollowDistance_C.ExecuteUbergraph_BTT_SetFollowDistance
// 0x0038 (0x0038 - 0x0000)
struct BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        K2Node_DynamicCast_AsSolar_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharacterID_CharacterID;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterID_SkinID;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharacterID_ColorID;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance) == 0x000008, "Wrong alignment on BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance");
static_assert(sizeof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance) == 0x000038, "Wrong size on BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, EntryPoint) == 0x000000, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, K2Node_DynamicCast_AsSolar_Character) == 0x000018, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::K2Node_DynamicCast_AsSolar_Character' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_GetCharacterID_CharacterID) == 0x000024, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_GetCharacterID_CharacterID' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_GetCharacterID_SkinID) == 0x000028, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_GetCharacterID_SkinID' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_GetCharacterID_ColorID) == 0x00002C, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_GetCharacterID_ColorID' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_Array_Contains_ReturnValue_1) == 0x000031, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance, CallFunc_Array_Contains_ReturnValue_2) == 0x000032, "Member 'BTT_SetFollowDistance_C_ExecuteUbergraph_BTT_SetFollowDistance::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");

// Function BTT_SetFollowDistance.BTT_SetFollowDistance_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_SetFollowDistance_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_SetFollowDistance_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_SetFollowDistance_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_SetFollowDistance_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_SetFollowDistance_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_SetFollowDistance_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_SetFollowDistance_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_SetFollowDistance_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_SetFollowDistance_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

