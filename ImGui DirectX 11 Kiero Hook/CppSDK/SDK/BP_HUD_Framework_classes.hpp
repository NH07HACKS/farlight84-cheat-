#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Framework

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_BattleUIType_structs.hpp"
#include "E_WidgetVisibility_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HUD_Framework.BP_HUD_Framework_C
// 0x0020 (0x04B8 - 0x0498)
class ABP_HUD_Framework_C : public ABattleHUDForTechDesign
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(E_BattleUIType UIType, E_WidgetVisibility Visibility)> OnWindowVisibiltyChanged; // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void RemoveInputActionFlagTeamDeath();
	void AddInputActionFlagTeamDeath();
	void BP_SCustomHUDBase_AutoGenFunc(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData);
	void ReceiveBeginPlay();
	void EventOnWindowVisibiltyChanged(E_BattleUIType UIType, E_WidgetVisibility Visibility);
	void ExecuteUbergraph_BP_HUD_Framework(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_Framework_C">();
	}
	static class ABP_HUD_Framework_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HUD_Framework_C>();
	}
};
static_assert(alignof(ABP_HUD_Framework_C) == 0x000008, "Wrong alignment on ABP_HUD_Framework_C");
static_assert(sizeof(ABP_HUD_Framework_C) == 0x0004B8, "Wrong size on ABP_HUD_Framework_C");
static_assert(offsetof(ABP_HUD_Framework_C, UberGraphFrame) == 0x000498, "Member 'ABP_HUD_Framework_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HUD_Framework_C, DefaultSceneRoot) == 0x0004A0, "Member 'ABP_HUD_Framework_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HUD_Framework_C, OnWindowVisibiltyChanged) == 0x0004A8, "Member 'ABP_HUD_Framework_C::OnWindowVisibiltyChanged' has a wrong offset!");

}

