#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD_Talent_TaticalSkill_Slot

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.OnSkillLevelChanged
// 0x0002 (0x0002 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged final
{
public:
	uint8                                         Level;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSecondSkill;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged) == 0x000001, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged) == 0x000002, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged, Level) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged::Level' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged, bIsSecondSkill) == 0x000001, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_OnSkillLevelChanged::bIsSecondSkill' has a wrong offset!");

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.SetIsDoubleSkill
// 0x0001 (0x0001 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill final
{
public:
	bool                                          bNewIsDoubleSkill;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill) == 0x000001, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill) == 0x000001, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill, bNewIsDoubleSkill) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_SetIsDoubleSkill::bNewIsDoubleSkill' has a wrong offset!");

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.SetActionName
// 0x0010 (0x0010 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName final
{
public:
	class FString                                 ActionName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName) == 0x000008, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName) == 0x000010, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName, ActionName) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_SetActionName::ActionName' has a wrong offset!");

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.SetDoubleSkillActionName
// 0x0020 (0x0020 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName final
{
public:
	class FString                                 FirstActionName;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SecondActionName;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName) == 0x000008, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName) == 0x000020, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName, FirstActionName) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName::FirstActionName' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName, SecondActionName) == 0x000010, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_SetDoubleSkillActionName::SecondActionName' has a wrong offset!");

// Function UI_HUD_Talent_TaticalSkill_Slot.UI_HUD_Talent_TaticalSkill_Slot_C.ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot
// 0x0120 (0x0120 - 0x0000)
struct UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0008(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_Level;                                // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSecondSkill;                       // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_2;                           // 0x00B8(0x0028)(HasGetValueTypeHash)
	class UImage*                                 K2Node_Select_Default_3;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewIsDoubleSkill;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_ActionName;                           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_FirstActionName;                      // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SecondActionName;                     // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot) == 0x000008, "Wrong alignment on UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot");
static_assert(sizeof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot) == 0x000120, "Wrong size on UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, EntryPoint) == 0x000000, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_byte_Variable) == 0x000004, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_softobject_Variable) == 0x000008, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_softobject_Variable_1) == 0x000030, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_softobject_Variable_2) == 0x000058, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_softobject_Variable_3) == 0x000080, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_bool_Variable) == 0x0000A8, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_byte_Variable_1) == 0x0000A9, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_byte_Variable_2) == 0x0000AA, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_bool_Variable_1) == 0x0000AB, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_byte_Variable_3) == 0x0000AC, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_byte_Variable_4) == 0x0000AD, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, Temp_bool_Variable_2) == 0x0000AE, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Select_Default) == 0x0000AF, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Select_Default_1) == 0x0000B0, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_IsDesignTime) == 0x0000B1, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_Level) == 0x0000B2, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_bIsSecondSkill) == 0x0000B3, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_bIsSecondSkill' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Select_Default_2) == 0x0000B8, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Select_Default_3) == 0x0000E0, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_bNewIsDoubleSkill) == 0x0000E8, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_bNewIsDoubleSkill' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_ActionName) == 0x0000F0, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_ActionName' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_FirstActionName) == 0x000100, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_FirstActionName' has a wrong offset!");
static_assert(offsetof(UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot, K2Node_Event_SecondActionName) == 0x000110, "Member 'UI_HUD_Talent_TaticalSkill_Slot_C_ExecuteUbergraph_UI_HUD_Talent_TaticalSkill_Slot::K2Node_Event_SecondActionName' has a wrong offset!");

}

