#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleUI_Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_classes.hpp"
#include "SolarUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleUI_Map.BattleUI_Map_C
// 0x0060 (0x0650 - 0x05F0)
class UBattleUI_Map_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hunter_Lv3;                                   // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hunter_Lv2;                                   // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hunter_Lv1;                                   // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_HUDBlur_C*                Blur_Map;                                          // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg;                                            // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MapSwitcher;                                       // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMiniMapUMG_C*                          MiniMapUMG_C_0;                                    // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_BG;                                          // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RetainerBox_61;                                    // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyPrompt_C*                        UI_KeyPrompt_Map_M;                                // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsExtraBgVisible;                                  // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BattleUI_Map(int32 EntryPoint);
	void Construct();
	void OnWidgetVisibilitySet(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData);
	void ReceivePlatformLayout(EUSolarWidgetLayoutType InLayoutType);
	void Set_Extra_Bg_Visible(bool IsExtraBgVisible_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleUI_Map_C">();
	}
	static class UBattleUI_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleUI_Map_C>();
	}
};
static_assert(alignof(UBattleUI_Map_C) == 0x000008, "Wrong alignment on UBattleUI_Map_C");
static_assert(sizeof(UBattleUI_Map_C) == 0x000650, "Wrong size on UBattleUI_Map_C");
static_assert(offsetof(UBattleUI_Map_C, UberGraphFrame) == 0x0005F0, "Member 'UBattleUI_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Anim_Hunter_Lv3) == 0x0005F8, "Member 'UBattleUI_Map_C::Anim_Hunter_Lv3' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Anim_Hunter_Lv2) == 0x000600, "Member 'UBattleUI_Map_C::Anim_Hunter_Lv2' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Anim_Hunter_Lv1) == 0x000608, "Member 'UBattleUI_Map_C::Anim_Hunter_Lv1' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Blur_Map) == 0x000610, "Member 'UBattleUI_Map_C::Blur_Map' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Img_Bg) == 0x000618, "Member 'UBattleUI_Map_C::Img_Bg' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, MapSwitcher) == 0x000620, "Member 'UBattleUI_Map_C::MapSwitcher' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, MiniMapUMG_C_0) == 0x000628, "Member 'UBattleUI_Map_C::MiniMapUMG_C_0' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, Panel_BG) == 0x000630, "Member 'UBattleUI_Map_C::Panel_BG' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, RetainerBox_61) == 0x000638, "Member 'UBattleUI_Map_C::RetainerBox_61' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, UI_KeyPrompt_Map_M) == 0x000640, "Member 'UBattleUI_Map_C::UI_KeyPrompt_Map_M' has a wrong offset!");
static_assert(offsetof(UBattleUI_Map_C, IsExtraBgVisible) == 0x000648, "Member 'UBattleUI_Map_C::IsExtraBgVisible' has a wrong offset!");

}

