#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BackPack_Info_Desktop

#include "Basic.hpp"

#include "UI_BackPack_Info_Desktop_classes.hpp"
#include "UI_BackPack_Info_Desktop_parameters.hpp"


namespace SDK
{

// Function UI_BackPack_Info_Desktop.UI_BackPack_Info_Desktop_C.SetView
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InTitle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InContent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InShowOptional                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   InOption1_Txt                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InOption2_Txt                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_BackPack_Info_Desktop_C::SetView(int32 InTitle, int32 InContent, bool InShowOptional, int32 InOption1_Txt, int32 InOption2_Txt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BackPack_Info_Desktop_C", "SetView");

	Params::UI_BackPack_Info_Desktop_C_SetView Parms{};

	Parms.InTitle = InTitle;
	Parms.InContent = InContent;
	Parms.InShowOptional = InShowOptional;
	Parms.InOption1_Txt = InOption1_Txt;
	Parms.InOption2_Txt = InOption2_Txt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BackPack_Info_Desktop.UI_BackPack_Info_Desktop_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_BackPack_Info_Desktop_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BackPack_Info_Desktop_C", "PreConstruct");

	Params::UI_BackPack_Info_Desktop_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BackPack_Info_Desktop.UI_BackPack_Info_Desktop_C.ExecuteUbergraph_UI_BackPack_Info_Desktop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_BackPack_Info_Desktop_C::ExecuteUbergraph_UI_BackPack_Info_Desktop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BackPack_Info_Desktop_C", "ExecuteUbergraph_UI_BackPack_Info_Desktop");

	Params::UI_BackPack_Info_Desktop_C_ExecuteUbergraph_UI_BackPack_Info_Desktop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BackPack_Info_Desktop.UI_BackPack_Info_Desktop_C.GetModuleName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UUI_BackPack_Info_Desktop_C::GetModuleName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BackPack_Info_Desktop_C", "GetModuleName");

	Params::UI_BackPack_Info_Desktop_C_GetModuleName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

