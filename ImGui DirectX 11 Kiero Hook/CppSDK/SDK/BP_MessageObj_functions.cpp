#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MessageObj

#include "Basic.hpp"

#include "BP_MessageObj_classes.hpp"
#include "BP_MessageObj_parameters.hpp"


namespace SDK
{

// Function BP_MessageObj.BP_MessageObj_C.ExecuteUbergraph_BP_MessageObj
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MessageObj_C::ExecuteUbergraph_BP_MessageObj(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessageObj_C", "ExecuteUbergraph_BP_MessageObj");

	Params::BP_MessageObj_C_ExecuteUbergraph_BP_MessageObj Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessageObj.BP_MessageObj_C.BlockTimeUp
// (BlueprintCallable, BlueprintEvent)

void UBP_MessageObj_C::BlockTimeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessageObj_C", "BlockTimeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessageObj.BP_MessageObj_C.Timeout
// (BlueprintCallable, BlueprintEvent)

void UBP_MessageObj_C::Timeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessageObj_C", "Timeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MessageObj.BP_MessageObj_C.ReplyDeal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BlockTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MessageObj_C::ReplyDeal(int32 BlockTime, bool Reply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessageObj_C", "ReplyDeal");

	Params::BP_MessageObj_C_ReplyDeal Parms{};

	Parms.BlockTime = BlockTime;
	Parms.Reply = Reply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MessageObj.BP_MessageObj_C.Init
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_MessageRequest&         MessageInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MessageObj_C::Init(const struct FS_MessageRequest& MessageInfo, int32 Time, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MessageObj_C", "Init");

	Params::BP_MessageObj_C_Init Parms{};

	Parms.MessageInfo = std::move(MessageInfo);
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

