#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_BattleRoyale

#include "Basic.hpp"

#include "BP_PlayerState_BattleRoyale_classes.hpp"
#include "BP_PlayerState_BattleRoyale_parameters.hpp"


namespace SDK
{

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerItems
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_PlayerState_BattleRoyale_C::GetPlayerItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetPlayerItems");

	Params::BP_PlayerState_BattleRoyale_C_GetPlayerItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerAccessories
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_PlayerState_BattleRoyale_C::GetPlayerAccessories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetPlayerAccessories");

	Params::BP_PlayerState_BattleRoyale_C_GetPlayerAccessories Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetSpecialHitTypeArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>*                          NewParam                                               (Parm, OutParm, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::GetSpecialHitTypeArray(TArray<int32>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetSpecialHitTypeArray");

	Params::BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetExpByBehavior
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EExpBehaviorType                        InBehaviorType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InParamOne                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InParamTwo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InDamage                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_PlayerState_BattleRoyale_C::GetExpByBehavior(EExpBehaviorType InBehaviorType, int32 InParamOne, int32 InParamTwo, float InDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetExpByBehavior");

	Params::BP_PlayerState_BattleRoyale_C_GetExpByBehavior Parms{};

	Parms.InBehaviorType = InBehaviorType;
	Parms.InParamOne = InParamOne;
	Parms.InParamTwo = InParamTwo;
	Parms.InDamage = InDamage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PlayerCanRebirthBlueprint
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_BattleRoyale_C::PlayerCanRebirthBlueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "PlayerCanRebirthBlueprint");

	Params::BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PlayerIsResurrecting
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_BattleRoyale_C::PlayerIsResurrecting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "PlayerIsResurrecting");

	Params::BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.IsPlayerWaitingForTeammatesHelp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerState_BattleRoyale_C::IsPlayerWaitingForTeammatesHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "IsPlayerWaitingForTeammatesHelp");

	Params::BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetItemData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Quality                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::GetItemData(int32 ItemID, bool* Valid, int32* ID, int32* Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetItemData");

	Params::BP_PlayerState_BattleRoyale_C_GetItemData Parms{};

	Parms.ItemID = ItemID;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (ID != nullptr)
		*ID = Parms.ID;

	if (Quality != nullptr)
		*Quality = Parms.Quality;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerChestOpen
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          Output                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::GetPlayerChestOpen(class FString* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetPlayerChestOpen");

	Params::BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetSinglePlayerItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasItem                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::GetSinglePlayerItem(int32 ItemID, bool* HasItem, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetSinglePlayerItem");

	Params::BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem Parms{};

	Parms.ItemID = ItemID;

	UObject::ProcessEvent(Func, &Parms);

	if (HasItem != nullptr)
		*HasItem = Parms.HasItem;

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetWeaponPartData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32*                                  ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  Quality                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::GetWeaponPartData(int32 ItemID, bool* Valid, int32* ID, int32* Quality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetWeaponPartData");

	Params::BP_PlayerState_BattleRoyale_C_GetWeaponPartData Parms{};

	Parms.ItemID = ItemID;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (ID != nullptr)
		*ID = Parms.ID;

	if (Quality != nullptr)
		*Quality = Parms.Quality;
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.BPGetPlayerItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          Output                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::BPGetPlayerItems(class FString* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "BPGetPlayerItems");

	Params::BP_PlayerState_BattleRoyale_C_BPGetPlayerItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.BPGetPlayerAccessories
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString*                          Output                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::BPGetPlayerAccessories(class FString* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "BPGetPlayerAccessories");

	Params::BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.Set Intervened By AI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::Set_Intervened_By_AI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "Set Intervened By AI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.Event_RespondReconnection
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::Event_RespondReconnection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "Event_RespondReconnection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.ResurrectionStateChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EResurrectionState                      NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::ResurrectionStateChange(EResurrectionState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "ResurrectionStateChange");

	Params::BP_PlayerState_BattleRoyale_C_ResurrectionStateChange Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.OnRep_Resurrecting
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::OnRep_Resurrecting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "OnRep_Resurrecting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.OnRep_IsReviveSkydiving
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::OnRep_IsReviveSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "OnRep_IsReviveSkydiving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.CreateDeathBoxMark
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::CreateDeathBoxMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "CreateDeathBoxMark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.DropPickableItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::DropPickableItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "DropPickableItem");

	Params::BP_PlayerState_BattleRoyale_C_DropPickableItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PickupPickableItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::PickupPickableItem(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "PickupPickableItem");

	Params::BP_PlayerState_BattleRoyale_C_PickupPickableItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.DelayAndBeginSpectate
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::DelayAndBeginSpectate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "DelayAndBeginSpectate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.OnCharacterLanded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::OnCharacterLanded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "OnCharacterLanded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerState_BattleRoyale_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.ExecuteUbergraph_BP_PlayerState_BattleRoyale
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerState_BattleRoyale_C::ExecuteUbergraph_BP_PlayerState_BattleRoyale(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "ExecuteUbergraph_BP_PlayerState_BattleRoyale");

	Params::BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetDeathBoxLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

const struct FVector ABP_PlayerState_BattleRoyale_C::GetDeathBoxLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerState_BattleRoyale_C", "GetDeathBoxLocation");

	Params::BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

