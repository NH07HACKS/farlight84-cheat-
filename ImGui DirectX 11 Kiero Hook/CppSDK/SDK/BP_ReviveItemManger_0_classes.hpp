#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReviveItemManger_0

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ReviveItemSoundType_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReviveItemManger_0.BP_ReviveItemManger_0_C
// 0x0078 (0x0550 - 0x04D8)
class ABP_ReviveItemManger_0_C : public AGameReviveItemManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         ReviveItem;                                        // 0x04E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AdvanceNoticeTime;                                 // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearItemNotice;                                   // 0x04E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          AdvanceNotice;                                     // 0x04E9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_4EA[0x2];                                      // 0x04EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurTime;                                           // 0x04EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReviveDisableCountDown;                            // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReviveStartRecycleTime;                            // 0x04F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_ReviveItemSoundType, class FString>    NoticeSound;                                       // 0x04F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_HUD_Notice_Revive_C*                ReviveUI;                                          // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class UHUDNoticeRevive* GetResurrectByItemUI();
	bool RevivePlayer(class ASCMPlayerState* InPlayerState, const struct FVector& ResurrectLocation);
	void OnRep_AdvanceNotice();
	void OnRep_ClearItemNotice();
	bool CanGlobalUseReviveItem();
	void ReceiveBeginPlay();
	void Event_ClearRevive();
	void Event_ClearReviveNotifyInAdvance();
	void Event_InitReviveItem();
	void UpdateTime();
	void ReviveDisableNotice(int32 Time);
	void Event_PlayerReconnect(class ASCMPlayerState* Player);
	void OnStartReviveItemRecycleCountDownDataRequested();
	void OnSpecTargetChanged_Event_0(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void DownReviveImmediately(class ASolarPlayerState* Player);
	void ExecuteUbergraph_BP_ReviveItemManger_0(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReviveItemManger_0_C">();
	}
	static class ABP_ReviveItemManger_0_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReviveItemManger_0_C>();
	}
};
static_assert(alignof(ABP_ReviveItemManger_0_C) == 0x000008, "Wrong alignment on ABP_ReviveItemManger_0_C");
static_assert(sizeof(ABP_ReviveItemManger_0_C) == 0x000550, "Wrong size on ABP_ReviveItemManger_0_C");
static_assert(offsetof(ABP_ReviveItemManger_0_C, UberGraphFrame) == 0x0004D8, "Member 'ABP_ReviveItemManger_0_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, ReviveItem) == 0x0004E0, "Member 'ABP_ReviveItemManger_0_C::ReviveItem' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, AdvanceNoticeTime) == 0x0004E4, "Member 'ABP_ReviveItemManger_0_C::AdvanceNoticeTime' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, ClearItemNotice) == 0x0004E8, "Member 'ABP_ReviveItemManger_0_C::ClearItemNotice' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, AdvanceNotice) == 0x0004E9, "Member 'ABP_ReviveItemManger_0_C::AdvanceNotice' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, CurTime) == 0x0004EC, "Member 'ABP_ReviveItemManger_0_C::CurTime' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, ReviveDisableCountDown) == 0x0004F0, "Member 'ABP_ReviveItemManger_0_C::ReviveDisableCountDown' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, ReviveStartRecycleTime) == 0x0004F4, "Member 'ABP_ReviveItemManger_0_C::ReviveStartRecycleTime' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, NoticeSound) == 0x0004F8, "Member 'ABP_ReviveItemManger_0_C::NoticeSound' has a wrong offset!");
static_assert(offsetof(ABP_ReviveItemManger_0_C, ReviveUI) == 0x000548, "Member 'ABP_ReviveItemManger_0_C::ReviveUI' has a wrong offset!");

}

