#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SolarlandResUpdate

#include "Basic.hpp"


namespace SDK::Params
{

// Function SolarlandResUpdate.DownloadFileTask.Create
// 0x0040 (0x0040 - 0x0000)
struct DownloadFileTask_Create final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FileDirectory;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bByChunk;                                          // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceWrite;                                       // 0x0031(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAsyncWrite;                                       // 0x0032(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDownloadFileTask*                      ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_Create) == 0x000008, "Wrong alignment on DownloadFileTask_Create");
static_assert(sizeof(DownloadFileTask_Create) == 0x000040, "Wrong size on DownloadFileTask_Create");
static_assert(offsetof(DownloadFileTask_Create, URL) == 0x000000, "Member 'DownloadFileTask_Create::URL' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, FileDirectory) == 0x000010, "Member 'DownloadFileTask_Create::FileDirectory' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, Filename) == 0x000020, "Member 'DownloadFileTask_Create::Filename' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, bByChunk) == 0x000030, "Member 'DownloadFileTask_Create::bByChunk' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, bForceWrite) == 0x000031, "Member 'DownloadFileTask_Create::bForceWrite' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, bAsyncWrite) == 0x000032, "Member 'DownloadFileTask_Create::bAsyncWrite' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_Create, ReturnValue) == 0x000038, "Member 'DownloadFileTask_Create::ReturnValue' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.CreateNoFile
// 0x0020 (0x0020 - 0x0000)
struct DownloadFileTask_CreateNoFile final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bByChunk;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDownloadFileTask*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_CreateNoFile) == 0x000008, "Wrong alignment on DownloadFileTask_CreateNoFile");
static_assert(sizeof(DownloadFileTask_CreateNoFile) == 0x000020, "Wrong size on DownloadFileTask_CreateNoFile");
static_assert(offsetof(DownloadFileTask_CreateNoFile, URL) == 0x000000, "Member 'DownloadFileTask_CreateNoFile::URL' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_CreateNoFile, bByChunk) == 0x000010, "Member 'DownloadFileTask_CreateNoFile::bByChunk' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_CreateNoFile, ReturnValue) == 0x000018, "Member 'DownloadFileTask_CreateNoFile::ReturnValue' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.OnWriteFileComplete
// 0x0001 (0x0001 - 0x0000)
struct DownloadFileTask_OnWriteFileComplete final
{
public:
	bool                                          bWriteResult;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_OnWriteFileComplete) == 0x000001, "Wrong alignment on DownloadFileTask_OnWriteFileComplete");
static_assert(sizeof(DownloadFileTask_OnWriteFileComplete) == 0x000001, "Wrong size on DownloadFileTask_OnWriteFileComplete");
static_assert(offsetof(DownloadFileTask_OnWriteFileComplete, bWriteResult) == 0x000000, "Member 'DownloadFileTask_OnWriteFileComplete::bWriteResult' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.SetForceCheckSize
// 0x0008 (0x0008 - 0x0000)
struct DownloadFileTask_SetForceCheckSize final
{
public:
	bool                                          InIfForceCheckSize;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InTotalSize;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_SetForceCheckSize) == 0x000004, "Wrong alignment on DownloadFileTask_SetForceCheckSize");
static_assert(sizeof(DownloadFileTask_SetForceCheckSize) == 0x000008, "Wrong size on DownloadFileTask_SetForceCheckSize");
static_assert(offsetof(DownloadFileTask_SetForceCheckSize, InIfForceCheckSize) == 0x000000, "Member 'DownloadFileTask_SetForceCheckSize::InIfForceCheckSize' has a wrong offset!");
static_assert(offsetof(DownloadFileTask_SetForceCheckSize, InTotalSize) == 0x000004, "Member 'DownloadFileTask_SetForceCheckSize::InTotalSize' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.SetForceRedownload
// 0x0001 (0x0001 - 0x0000)
struct DownloadFileTask_SetForceRedownload final
{
public:
	bool                                          inForceRedownload;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_SetForceRedownload) == 0x000001, "Wrong alignment on DownloadFileTask_SetForceRedownload");
static_assert(sizeof(DownloadFileTask_SetForceRedownload) == 0x000001, "Wrong size on DownloadFileTask_SetForceRedownload");
static_assert(offsetof(DownloadFileTask_SetForceRedownload, inForceRedownload) == 0x000000, "Member 'DownloadFileTask_SetForceRedownload::inForceRedownload' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.SetSaveToFile
// 0x0001 (0x0001 - 0x0000)
struct DownloadFileTask_SetSaveToFile final
{
public:
	bool                                          Inset;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_SetSaveToFile) == 0x000001, "Wrong alignment on DownloadFileTask_SetSaveToFile");
static_assert(sizeof(DownloadFileTask_SetSaveToFile) == 0x000001, "Wrong size on DownloadFileTask_SetSaveToFile");
static_assert(offsetof(DownloadFileTask_SetSaveToFile, Inset) == 0x000000, "Member 'DownloadFileTask_SetSaveToFile::Inset' has a wrong offset!");

// Function SolarlandResUpdate.DownloadFileTask.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct DownloadFileTask_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadFileTask_GetUrl) == 0x000008, "Wrong alignment on DownloadFileTask_GetUrl");
static_assert(sizeof(DownloadFileTask_GetUrl) == 0x000010, "Wrong size on DownloadFileTask_GetUrl");
static_assert(offsetof(DownloadFileTask_GetUrl, ReturnValue) == 0x000000, "Member 'DownloadFileTask_GetUrl::ReturnValue' has a wrong offset!");

}

