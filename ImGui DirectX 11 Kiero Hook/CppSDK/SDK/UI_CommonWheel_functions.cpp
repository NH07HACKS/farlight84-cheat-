#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CommonWheel

#include "Basic.hpp"

#include "UI_CommonWheel_classes.hpp"
#include "UI_CommonWheel_parameters.hpp"


namespace SDK
{

// Function UI_CommonWheel.UI_CommonWheel_C.ExecuteUbergraph_UI_CommonWheel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::ExecuteUbergraph_UI_CommonWheel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "ExecuteUbergraph_UI_CommonWheel");

	Params::UI_CommonWheel_C_ExecuteUbergraph_UI_CommonWheel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.InOutBufferZone
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CommonWheel_C::InOutBufferZone(bool bEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "InOutBufferZone");

	Params::UI_CommonWheel_C_InOutBufferZone Parms{};

	Parms.bEnter = bEnter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.PreSelectedWheelIndex
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CurPage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::PreSelectedWheelIndex(int32 CurPage, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "PreSelectedWheelIndex");

	Params::UI_CommonWheel_C_PreSelectedWheelIndex Parms{};

	Parms.CurPage = CurPage;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_CommonWheel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.UpdateQuickItemEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Publisher                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class FString>&            MetaData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UUI_CommonWheel_C::UpdateQuickItemEvent(class UObject* Publisher, class UObject* Payload, const TArray<class FString>& MetaData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "UpdateQuickItemEvent");

	Params::UI_CommonWheel_C_UpdateQuickItemEvent Parms{};

	Parms.Publisher = Publisher;
	Parms.Payload = Payload;
	Parms.MetaData = std::move(MetaData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnCancel
// (BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::OnCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnCommandExec
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InGroupId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InSelectedIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::OnCommandExec(int32 InGroupId, int32 InSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnCommandExec");

	Params::UI_CommonWheel_C_OnCommandExec Parms{};

	Parms.InGroupId = InGroupId;
	Parms.InSelectedIndex = InSelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnConsumeItemUpdated
// (Event, Public, BlueprintEvent)

void UUI_CommonWheel_C::OnConsumeItemUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnConsumeItemUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnActionWheelClosed
// (Event, Public, BlueprintEvent)

void UUI_CommonWheel_C::OnActionWheelClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnActionWheelClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnActionWheelOpened
// (Event, Public, BlueprintEvent)

void UUI_CommonWheel_C::OnActionWheelOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnActionWheelOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.UpdateWheelArrowAngle
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Degree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::UpdateWheelArrowAngle(float Degree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "UpdateWheelArrowAngle");

	Params::UI_CommonWheel_C_UpdateWheelArrowAngle Parms{};

	Parms.Degree = Degree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SelecteActionWheelItem
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   page                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SelecteActionWheelItem(int32 page, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SelecteActionWheelItem");

	Params::UI_CommonWheel_C_SelecteActionWheelItem Parms{};

	Parms.page = page;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.OnActionWheelConfigInit
// (Event, Public, BlueprintEvent)

void UUI_CommonWheel_C::OnActionWheelConfigInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "OnActionWheelConfigInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CommonWheel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "PreConstruct");

	Params::UI_CommonWheel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetSelectedIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetSelectedIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetSelectedIndex");

	Params::UI_CommonWheel_C_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActionWheelCommandType                 WheelStyleType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CommonWheel_C::SetWheelStyle(EActionWheelCommandType WheelStyleType, bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetWheelStyle");

	Params::UI_CommonWheel_C_SetWheelStyle Parms{};

	Parms.WheelStyleType = WheelStyleType;
	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetItemCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetItemCount(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetItemCount");

	Params::UI_CommonWheel_C_SetItemCount Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.GetMaterial
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic**        Material                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::GetMaterial(class UMaterialInstanceDynamic** Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "GetMaterial");

	Params::UI_CommonWheel_C_GetMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Material != nullptr)
		*Material = Parms.Material;
}


// Function UI_CommonWheel.UI_CommonWheel_C.GetPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       Position                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::GetPosition(float Radius, float Angle, struct FVector2D* Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "GetPosition");

	Params::UI_CommonWheel_C_GetPosition Parms{};

	Parms.Radius = Radius;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (Position != nullptr)
		*Position = std::move(Parms.Position);
}


// Function UI_CommonWheel.UI_CommonWheel_C.GetItemByIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUI_WheelItem_C*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UUI_WheelItem_C* UUI_CommonWheel_C::GetItemByIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "GetItemByIndex");

	Params::UI_CommonWheel_C_GetItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetCurrentPage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PageIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetCurrentPage(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetCurrentPage");

	Params::UI_CommonWheel_C_SetCurrentPage Parms{};

	Parms.PageIndex = PageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelItemStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::SetWheelItemStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetWheelItemStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EActionWheelCommandType                 Style_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetStyle(EActionWheelCommandType Style_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetStyle");

	Params::UI_CommonWheel_C_SetStyle Parms{};

	Parms.Style_0 = Style_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetCommandName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Dimension_1                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetCommandName(int32 Dimension_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetCommandName");

	Params::UI_CommonWheel_C_SetCommandName Parms{};

	Parms.Dimension_1 = Dimension_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetPageInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::SetPageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetPageInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.UpdateItemCountText
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::UpdateItemCountText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "UpdateItemCountText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetOperationTextVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::SetOperationTextVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetOperationTextVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.UpdateLastSelectedIndex
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   GroupID_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::UpdateLastSelectedIndex(const class FString& ItemID, int32 GroupID_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "UpdateLastSelectedIndex");

	Params::UI_CommonWheel_C_UpdateLastSelectedIndex Parms{};

	Parms.ItemID = std::move(ItemID);
	Parms.GroupID_0 = GroupID_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetEachWheeltemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  WheelItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetEachWheeltemStyle(class UUI_WheelItem_C* WheelItem, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetEachWheeltemStyle");

	Params::UI_CommonWheel_C_SetEachWheeltemStyle Parms{};

	Parms.WheelItem = WheelItem;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.GetActionWheelCommandByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FActionWheelCommand*             ActionWheelCommand                                     (Parm, OutParm)

void UUI_CommonWheel_C::GetActionWheelCommandByType(int32 Index_0, struct FActionWheelCommand* ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "GetActionWheelCommandByType");

	Params::UI_CommonWheel_C_GetActionWheelCommandByType Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ActionWheelCommand != nullptr)
		*ActionWheelCommand = std::move(Parms.ActionWheelCommand);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetPlaySoundItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommadn                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetPlaySoundItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommadn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetPlaySoundItemStyle");

	Params::UI_CommonWheel_C_SetPlaySoundItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommadn = std::move(ActionWheelCommadn);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetBuddyBallItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetBuddyBallItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetBuddyBallItemStyle");

	Params::UI_CommonWheel_C_SetBuddyBallItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetUseItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetUseItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetUseItemStyle");

	Params::UI_CommonWheel_C_SetUseItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetStickerItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetStickerItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetStickerItemStyle");

	Params::UI_CommonWheel_C_SetStickerItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetDanceItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetDanceItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetDanceItemStyle");

	Params::UI_CommonWheel_C_SetDanceItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetHoverAreaStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_CommonWheel_C::SetHoverAreaStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetHoverAreaStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetPreselectedndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetPreselectedndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetPreselectedndex");

	Params::UI_CommonWheel_C_SetPreselectedndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.UpdateSelectedColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectedIndex_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::UpdateSelectedColor(int32 SelectedIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "UpdateSelectedColor");

	Params::UI_CommonWheel_C_UpdateSelectedColor Parms{};

	Parms.SelectedIndex_0 = SelectedIndex_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetEachItemAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActionWheelItem*                 WheelItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::SetEachItemAlpha(float Alpha, class UActionWheelItem* WheelItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetEachItemAlpha");

	Params::UI_CommonWheel_C_SetEachItemAlpha Parms{};

	Parms.Alpha = Alpha;
	Parms.WheelItem = WheelItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetWorldMarkItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetWorldMarkItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetWorldMarkItemStyle");

	Params::UI_CommonWheel_C_SetWorldMarkItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetQuickVoiceItemStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_WheelItem_C*                  UIWheelItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FActionWheelCommand&       ActionWheelCommand                                     (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_CommonWheel_C::SetQuickVoiceItemStyle(class UUI_WheelItem_C* UIWheelItem, const struct FActionWheelCommand& ActionWheelCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetQuickVoiceItemStyle");

	Params::UI_CommonWheel_C_SetQuickVoiceItemStyle Parms{};

	Parms.UIWheelItem = UIWheelItem;
	Parms.ActionWheelCommand = std::move(ActionWheelCommand);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetWheelBGIsHalfStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHalfStyle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CommonWheel_C::SetWheelBGIsHalfStyle(bool IsHalfStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetWheelBGIsHalfStyle");

	Params::UI_CommonWheel_C_SetWheelBGIsHalfStyle Parms{};

	Parms.IsHalfStyle = IsHalfStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.SetCrosshairVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_CommonWheel_C::SetCrosshairVisible(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "SetCrosshairVisible");

	Params::UI_CommonWheel_C_SetCrosshairVisible Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CommonWheel.UI_CommonWheel_C.ResetWheelItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActionWheelItem*&                WheelItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CommonWheel_C::ResetWheelItem(class UActionWheelItem*& WheelItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "ResetWheelItem");

	Params::UI_CommonWheel_C_ResetWheelItem Parms{};

	Parms.WheelItem = WheelItem;

	UObject::ProcessEvent(Func, &Parms);

	WheelItem = Parms.WheelItem;
}


// Function UI_CommonWheel.UI_CommonWheel_C.GetWorldMarkDotTargetPosition
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UUI_CommonWheel_C::GetWorldMarkDotTargetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CommonWheel_C", "GetWorldMarkDotTargetPosition");

	Params::UI_CommonWheel_C_GetWorldMarkDotTargetPosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

