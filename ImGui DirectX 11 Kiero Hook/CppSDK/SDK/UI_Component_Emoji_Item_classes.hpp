#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Component_Emoji_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Item_Quality_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Component_Emoji_Item.UI_Component_Emoji_Item_C
// 0x0048 (0x0638 - 0x05F0)
class UUI_Component_Emoji_Item_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn_Use;                                           // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Quality_BottomBar;                             // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_BG;                                           // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_BG_Empty;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_icon;                                         // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_Item_Quality                                Quality;                                           // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EmojiUseCD;                                        // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValidEmojiUseDistance;                             // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Component_Emoji_Item(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void SetQuality(E_Item_Quality Quality_0);
	bool BP_IsNotSelectableOrNavigable();

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Component_Emoji_Item_C">();
	}
	static class UUI_Component_Emoji_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Component_Emoji_Item_C>();
	}
};
static_assert(alignof(UUI_Component_Emoji_Item_C) == 0x000008, "Wrong alignment on UUI_Component_Emoji_Item_C");
static_assert(sizeof(UUI_Component_Emoji_Item_C) == 0x000638, "Wrong size on UUI_Component_Emoji_Item_C");
static_assert(offsetof(UUI_Component_Emoji_Item_C, UberGraphFrame) == 0x0005F0, "Member 'UUI_Component_Emoji_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Btn_Use) == 0x0005F8, "Member 'UUI_Component_Emoji_Item_C::Btn_Use' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Img_Quality_BottomBar) == 0x000600, "Member 'UUI_Component_Emoji_Item_C::Img_Quality_BottomBar' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Item_BG) == 0x000608, "Member 'UUI_Component_Emoji_Item_C::Item_BG' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Item_BG_Empty) == 0x000610, "Member 'UUI_Component_Emoji_Item_C::Item_BG_Empty' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Item_icon) == 0x000618, "Member 'UUI_Component_Emoji_Item_C::Item_icon' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Switcher) == 0x000620, "Member 'UUI_Component_Emoji_Item_C::Switcher' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, Quality) == 0x000628, "Member 'UUI_Component_Emoji_Item_C::Quality' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, EmojiUseCD) == 0x00062C, "Member 'UUI_Component_Emoji_Item_C::EmojiUseCD' has a wrong offset!");
static_assert(offsetof(UUI_Component_Emoji_Item_C, ValidEmojiUseDistance) == 0x000630, "Member 'UUI_Component_Emoji_Item_C::ValidEmojiUseDistance' has a wrong offset!");

}

