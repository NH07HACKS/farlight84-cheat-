#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_UI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Weapon_UI.Weapon_UI_C.ExecuteUbergraph_Weapon_UI
// 0x0068 (0x0068 - 0x0000)
struct Weapon_UI_C_ExecuteUbergraph_Weapon_UI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPCPlatform_IsPCPlatform;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USolarWeaponSlotWidgetMobile*>   K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInReload;                            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInSuccess;                           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_5;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESolarITemHUDStyle                            K2Node_Event_InStyle;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsLeftIconMirrorFlip;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bHide_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHide;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI) == 0x000008, "Wrong alignment on Weapon_UI_C_ExecuteUbergraph_Weapon_UI");
static_assert(sizeof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI) == 0x000068, "Wrong size on Weapon_UI_C_ExecuteUbergraph_Weapon_UI");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, EntryPoint) == 0x000000, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable) == 0x000004, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_bool_Variable) == 0x000008, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_byte_Variable) == 0x000009, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_byte_Variable_1) == 0x00000A, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_bool_Variable_1) == 0x00000B, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable_1) == 0x00000C, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable_2) == 0x000010, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_bool_Variable_2) == 0x000014, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable_3) == 0x000018, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable_4) == 0x00001C, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, CallFunc_IsPCPlatform_IsPCPlatform) == 0x000020, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::CallFunc_IsPCPlatform_IsPCPlatform' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, CallFunc_IsPlatformDesktop_ReturnValue) == 0x000021, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_MakeArray_Array) == 0x000028, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_bInReload) == 0x000038, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_bInReload' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_bInSuccess) == 0x000039, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_bInSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Select_Default) == 0x00003A, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_float_Variable_5) == 0x00003C, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, Temp_bool_Variable_3) == 0x000040, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Select_Default_1) == 0x000050, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_IsDesignTime) == 0x000054, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_InStyle) == 0x000055, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_InStyle' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_bIsLeftIconMirrorFlip) == 0x000056, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_bIsLeftIconMirrorFlip' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_SwitchEnum_CmpSuccess) == 0x000057, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_bHide_1) == 0x000058, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_bHide_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Select_Default_2) == 0x00005C, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Event_bHide) == 0x000060, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Event_bHide' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_ExecuteUbergraph_Weapon_UI, K2Node_Select_Default_3) == 0x000064, "Member 'Weapon_UI_C_ExecuteUbergraph_Weapon_UI::K2Node_Select_Default_3' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.OnRoleAbilityHideHUD
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_C_OnRoleAbilityHideHUD final
{
public:
	bool                                          bHide;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_OnRoleAbilityHideHUD) == 0x000001, "Wrong alignment on Weapon_UI_C_OnRoleAbilityHideHUD");
static_assert(sizeof(Weapon_UI_C_OnRoleAbilityHideHUD) == 0x000001, "Wrong size on Weapon_UI_C_OnRoleAbilityHideHUD");
static_assert(offsetof(Weapon_UI_C_OnRoleAbilityHideHUD, bHide) == 0x000000, "Member 'Weapon_UI_C_OnRoleAbilityHideHUD::bHide' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetFireIconVisibility
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_C_SetFireIconVisibility final
{
public:
	bool                                          bHide;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_SetFireIconVisibility) == 0x000001, "Wrong alignment on Weapon_UI_C_SetFireIconVisibility");
static_assert(sizeof(Weapon_UI_C_SetFireIconVisibility) == 0x000001, "Wrong size on Weapon_UI_C_SetFireIconVisibility");
static_assert(offsetof(Weapon_UI_C_SetFireIconVisibility, bHide) == 0x000000, "Member 'Weapon_UI_C_SetFireIconVisibility::bHide' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetFireIconLeftMirrorFlip
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_C_SetFireIconLeftMirrorFlip final
{
public:
	bool                                          bIsLeftIconMirrorFlip;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_SetFireIconLeftMirrorFlip) == 0x000001, "Wrong alignment on Weapon_UI_C_SetFireIconLeftMirrorFlip");
static_assert(sizeof(Weapon_UI_C_SetFireIconLeftMirrorFlip) == 0x000001, "Wrong size on Weapon_UI_C_SetFireIconLeftMirrorFlip");
static_assert(offsetof(Weapon_UI_C_SetFireIconLeftMirrorFlip, bIsLeftIconMirrorFlip) == 0x000000, "Member 'Weapon_UI_C_SetFireIconLeftMirrorFlip::bIsLeftIconMirrorFlip' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.OnGameUserItemHUDStyleChanged
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_C_OnGameUserItemHUDStyleChanged final
{
public:
	ESolarITemHUDStyle                            InStyle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_OnGameUserItemHUDStyleChanged) == 0x000001, "Wrong alignment on Weapon_UI_C_OnGameUserItemHUDStyleChanged");
static_assert(sizeof(Weapon_UI_C_OnGameUserItemHUDStyleChanged) == 0x000001, "Wrong size on Weapon_UI_C_OnGameUserItemHUDStyleChanged");
static_assert(offsetof(Weapon_UI_C_OnGameUserItemHUDStyleChanged, InStyle) == 0x000000, "Member 'Weapon_UI_C_OnGameUserItemHUDStyleChanged::InStyle' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Weapon_UI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_PreConstruct) == 0x000001, "Wrong alignment on Weapon_UI_C_PreConstruct");
static_assert(sizeof(Weapon_UI_C_PreConstruct) == 0x000001, "Wrong size on Weapon_UI_C_PreConstruct");
static_assert(offsetof(Weapon_UI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Weapon_UI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.OnChangedCurrentWeaponReloadState
// 0x0002 (0x0002 - 0x0000)
struct Weapon_UI_C_OnChangedCurrentWeaponReloadState final
{
public:
	bool                                          bInReload;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInSuccess;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_OnChangedCurrentWeaponReloadState) == 0x000001, "Wrong alignment on Weapon_UI_C_OnChangedCurrentWeaponReloadState");
static_assert(sizeof(Weapon_UI_C_OnChangedCurrentWeaponReloadState) == 0x000002, "Wrong size on Weapon_UI_C_OnChangedCurrentWeaponReloadState");
static_assert(offsetof(Weapon_UI_C_OnChangedCurrentWeaponReloadState, bInReload) == 0x000000, "Member 'Weapon_UI_C_OnChangedCurrentWeaponReloadState::bInReload' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_OnChangedCurrentWeaponReloadState, bInSuccess) == 0x000001, "Member 'Weapon_UI_C_OnChangedCurrentWeaponReloadState::bInSuccess' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetState
// 0x0048 (0x0048 - 0x0000)
struct Weapon_UI_C_SetState final
{
public:
	bool                                          IsAll_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_SetState) == 0x000008, "Wrong alignment on Weapon_UI_C_SetState");
static_assert(sizeof(Weapon_UI_C_SetState) == 0x000048, "Wrong size on Weapon_UI_C_SetState");
static_assert(offsetof(Weapon_UI_C_SetState, IsAll_0) == 0x000000, "Member 'Weapon_UI_C_SetState::IsAll_0' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_C_SetState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_struct_Variable) == 0x000004, "Member 'Weapon_UI_C_SetState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_struct_Variable_1) == 0x00000C, "Member 'Weapon_UI_C_SetState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_bool_Variable_1) == 0x000014, "Member 'Weapon_UI_C_SetState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, K2Node_Select_Default) == 0x000018, "Member 'Weapon_UI_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_struct_Variable_2) == 0x000020, "Member 'Weapon_UI_C_SetState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, Temp_struct_Variable_3) == 0x000028, "Member 'Weapon_UI_C_SetState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, K2Node_Select_Default_1) == 0x000030, "Member 'Weapon_UI_C_SetState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'Weapon_UI_C_SetState::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetState, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000040, "Member 'Weapon_UI_C_SetState::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.GetWeaponPanelWidgetDesktop
// 0x0030 (0x0030 - 0x0000)
struct Weapon_UI_C_GetWeaponPanelWidgetDesktop final
{
public:
	class USolarWeaponPanelWidgetDesktop*         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetAdapteeWidget_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUI_Weapon_SlotWidgetInterface_C> K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarWeaponPanelWidgetDesktop*         CallFunc_GetWeaponPanelWidget_OutWidget;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_GetWeaponPanelWidgetDesktop) == 0x000008, "Wrong alignment on Weapon_UI_C_GetWeaponPanelWidgetDesktop");
static_assert(sizeof(Weapon_UI_C_GetWeaponPanelWidgetDesktop) == 0x000030, "Wrong size on Weapon_UI_C_GetWeaponPanelWidgetDesktop");
static_assert(offsetof(Weapon_UI_C_GetWeaponPanelWidgetDesktop, ReturnValue) == 0x000000, "Member 'Weapon_UI_C_GetWeaponPanelWidgetDesktop::ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_GetWeaponPanelWidgetDesktop, CallFunc_GetAdapteeWidget_ReturnValue) == 0x000008, "Member 'Weapon_UI_C_GetWeaponPanelWidgetDesktop::CallFunc_GetAdapteeWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_GetWeaponPanelWidgetDesktop, K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface) == 0x000010, "Member 'Weapon_UI_C_GetWeaponPanelWidgetDesktop::K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_GetWeaponPanelWidgetDesktop, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Weapon_UI_C_GetWeaponPanelWidgetDesktop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_GetWeaponPanelWidgetDesktop, CallFunc_GetWeaponPanelWidget_OutWidget) == 0x000028, "Member 'Weapon_UI_C_GetWeaponPanelWidgetDesktop::CallFunc_GetWeaponPanelWidget_OutWidget' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetSelectState
// 0x0090 (0x0090 - 0x0000)
struct Weapon_UI_C_SetSelectState final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotID;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponShootPattern                           CurrentShootPattern;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUI_Weapon_SlotWidgetInterface_C> K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUI_Weapon_SlotWidgetInterface_C> K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Weapon_Model_C*                     CallFunc_GetShootPatternWidget_OutWidget;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Weapon_Model_C*                     CallFunc_GetShootPatternWidget_OutWidget_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUI_Weapon_SlotWidgetInterface_C> K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_2; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Weapon_Model_C*                     CallFunc_GetShootPatternWidget_OutWidget_2;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_SetSelectState) == 0x000008, "Wrong alignment on Weapon_UI_C_SetSelectState");
static_assert(sizeof(Weapon_UI_C_SetSelectState) == 0x000090, "Wrong size on Weapon_UI_C_SetSelectState");
static_assert(offsetof(Weapon_UI_C_SetSelectState, bEnabled) == 0x000000, "Member 'Weapon_UI_C_SetSelectState::bEnabled' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, SlotID) == 0x000004, "Member 'Weapon_UI_C_SetSelectState::SlotID' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CurrentShootPattern) == 0x000008, "Member 'Weapon_UI_C_SetSelectState::CurrentShootPattern' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface) == 0x000010, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_1) == 0x000028, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_GetShootPatternWidget_OutWidget) == 0x000040, "Member 'Weapon_UI_C_SetSelectState::CallFunc_GetShootPatternWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_GetShootPatternWidget_OutWidget_1) == 0x000048, "Member 'Weapon_UI_C_SetSelectState::CallFunc_GetShootPatternWidget_OutWidget_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Weapon_UI_C_SetSelectState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'Weapon_UI_C_SetSelectState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, Temp_int_Variable) == 0x000054, "Member 'Weapon_UI_C_SetSelectState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_Select_Default) == 0x000058, "Member 'Weapon_UI_C_SetSelectState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'Weapon_UI_C_SetSelectState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_2) == 0x000068, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_AsUI_Weapon_Slot_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'Weapon_UI_C_SetSelectState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'Weapon_UI_C_SetSelectState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_GetShootPatternWidget_OutWidget_2) == 0x000080, "Member 'Weapon_UI_C_SetSelectState::CallFunc_GetShootPatternWidget_OutWidget_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSelectState, CallFunc_IsValid_ReturnValue_3) == 0x000088, "Member 'Weapon_UI_C_SetSelectState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetSkillUIVisibility
// 0x0005 (0x0005 - 0x0000)
struct Weapon_UI_C_SetSkillUIVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_SetSkillUIVisibility) == 0x000001, "Wrong alignment on Weapon_UI_C_SetSkillUIVisibility");
static_assert(sizeof(Weapon_UI_C_SetSkillUIVisibility) == 0x000005, "Wrong size on Weapon_UI_C_SetSkillUIVisibility");
static_assert(offsetof(Weapon_UI_C_SetSkillUIVisibility, NewVisibility) == 0x000000, "Member 'Weapon_UI_C_SetSkillUIVisibility::NewVisibility' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSkillUIVisibility, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_C_SetSkillUIVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSkillUIVisibility, Temp_byte_Variable) == 0x000002, "Member 'Weapon_UI_C_SetSkillUIVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSkillUIVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Weapon_UI_C_SetSkillUIVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetSkillUIVisibility, K2Node_Select_Default) == 0x000004, "Member 'Weapon_UI_C_SetSkillUIVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.IsSkillUIVisible
// 0x0006 (0x0006 - 0x0000)
struct Weapon_UI_C_IsSkillUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_IsSkillUIVisible) == 0x000001, "Wrong alignment on Weapon_UI_C_IsSkillUIVisible");
static_assert(sizeof(Weapon_UI_C_IsSkillUIVisible) == 0x000006, "Wrong size on Weapon_UI_C_IsSkillUIVisible");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, bVisible) == 0x000000, "Member 'Weapon_UI_C_IsSkillUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Weapon_UI_C_IsSkillUIVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, CallFunc_IsVisible_ReturnValue_1) == 0x000002, "Member 'Weapon_UI_C_IsSkillUIVisible::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, CallFunc_IsVisible_ReturnValue_2) == 0x000003, "Member 'Weapon_UI_C_IsSkillUIVisible::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Weapon_UI_C_IsSkillUIVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsSkillUIVisible, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'Weapon_UI_C_IsSkillUIVisible::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.SetWeaponUIVisibility
// 0x0005 (0x0005 - 0x0000)
struct Weapon_UI_C_SetWeaponUIVisibility final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_SetWeaponUIVisibility) == 0x000001, "Wrong alignment on Weapon_UI_C_SetWeaponUIVisibility");
static_assert(sizeof(Weapon_UI_C_SetWeaponUIVisibility) == 0x000005, "Wrong size on Weapon_UI_C_SetWeaponUIVisibility");
static_assert(offsetof(Weapon_UI_C_SetWeaponUIVisibility, NewVisibility) == 0x000000, "Member 'Weapon_UI_C_SetWeaponUIVisibility::NewVisibility' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetWeaponUIVisibility, Temp_bool_Variable) == 0x000001, "Member 'Weapon_UI_C_SetWeaponUIVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetWeaponUIVisibility, Temp_byte_Variable) == 0x000002, "Member 'Weapon_UI_C_SetWeaponUIVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetWeaponUIVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Weapon_UI_C_SetWeaponUIVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_SetWeaponUIVisibility, K2Node_Select_Default) == 0x000004, "Member 'Weapon_UI_C_SetWeaponUIVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.IsWeaponUIVisible
// 0x0004 (0x0004 - 0x0000)
struct Weapon_UI_C_IsWeaponUIVisible final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_UI_C_IsWeaponUIVisible) == 0x000001, "Wrong alignment on Weapon_UI_C_IsWeaponUIVisible");
static_assert(sizeof(Weapon_UI_C_IsWeaponUIVisible) == 0x000004, "Wrong size on Weapon_UI_C_IsWeaponUIVisible");
static_assert(offsetof(Weapon_UI_C_IsWeaponUIVisible, bVisible) == 0x000000, "Member 'Weapon_UI_C_IsWeaponUIVisible::bVisible' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsWeaponUIVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'Weapon_UI_C_IsWeaponUIVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsWeaponUIVisible, CallFunc_IsVisible_ReturnValue_1) == 0x000002, "Member 'Weapon_UI_C_IsWeaponUIVisible::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weapon_UI_C_IsWeaponUIVisible, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Weapon_UI_C_IsWeaponUIVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Weapon_UI.Weapon_UI_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct Weapon_UI_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_UI_C_GetModuleName) == 0x000008, "Wrong alignment on Weapon_UI_C_GetModuleName");
static_assert(sizeof(Weapon_UI_C_GetModuleName) == 0x000010, "Wrong size on Weapon_UI_C_GetModuleName");
static_assert(offsetof(Weapon_UI_C_GetModuleName, ReturnValue) == 0x000000, "Member 'Weapon_UI_C_GetModuleName::ReturnValue' has a wrong offset!");

}

