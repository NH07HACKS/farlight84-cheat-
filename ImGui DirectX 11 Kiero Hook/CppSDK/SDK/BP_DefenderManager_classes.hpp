#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DefenderManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"
#include "E_State_DefenderManager_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DefenderManager.BP_DefenderManager_C
// 0x0020 (0x03F8 - 0x03D8)
class ABP_DefenderManager_C final : public ADefenderManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         ShowTime_Dazzling;                                 // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShowTime_Defender;                                 // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShowTime_Self;                                     // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_State_DefenderManager                       UiState;                                           // 0x03EC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TerminatorReward;                                  // 0x03F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DataReady;                                         // 0x03F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBattleStarted;                                    // 0x03F5(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          bSkipDefenderShow;                                 // 0x03F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSkipOpeningHUD;                                   // 0x03F7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	int32 GetNowTeamShowType();
	bool CheckTeamShowIsStart();
	float GetShowTimeByType(int32 Type);
	void OnDefenderShowStart();
	float GetTotalTime();
	void OnRep_BattleStarted();
	void DataTraceDefender(class ASolarPlayerState* Target, class FString* Name_0, class FString* Data);
	void GetExtraReward(int32* Reward);
	void SetShowTime(float ShowTime_Self_0, float ShowTime_Defender_0, float ShowTime_Dazzling_0);
	void OnRep_UIState();
	void OnDefenderDataReady();
	void ShowDefenderUIForReplay();
	void ShowDefenderUI();
	void OnDefenderAllActorReady();
	void OnHeroPickEndToShowTeamUI();
	void OnUIStateChanged(E_State_DefenderManager UiState_0);
	void _S_ShowDefenderUI();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_DefenderManager(int32 EntryPoint);

	class FString GetModuleName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DefenderManager_C">();
	}
	static class ABP_DefenderManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DefenderManager_C>();
	}
};
static_assert(alignof(ABP_DefenderManager_C) == 0x000008, "Wrong alignment on ABP_DefenderManager_C");
static_assert(sizeof(ABP_DefenderManager_C) == 0x0003F8, "Wrong size on ABP_DefenderManager_C");
static_assert(offsetof(ABP_DefenderManager_C, UberGraphFrame) == 0x0003D8, "Member 'ABP_DefenderManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, ShowTime_Dazzling) == 0x0003E0, "Member 'ABP_DefenderManager_C::ShowTime_Dazzling' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, ShowTime_Defender) == 0x0003E4, "Member 'ABP_DefenderManager_C::ShowTime_Defender' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, ShowTime_Self) == 0x0003E8, "Member 'ABP_DefenderManager_C::ShowTime_Self' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, UiState) == 0x0003EC, "Member 'ABP_DefenderManager_C::UiState' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, TerminatorReward) == 0x0003F0, "Member 'ABP_DefenderManager_C::TerminatorReward' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, DataReady) == 0x0003F4, "Member 'ABP_DefenderManager_C::DataReady' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, bBattleStarted) == 0x0003F5, "Member 'ABP_DefenderManager_C::bBattleStarted' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, bSkipDefenderShow) == 0x0003F6, "Member 'ABP_DefenderManager_C::bSkipDefenderShow' has a wrong offset!");
static_assert(offsetof(ABP_DefenderManager_C, bSkipOpeningHUD) == 0x0003F7, "Member 'ABP_DefenderManager_C::bSkipOpeningHUD' has a wrong offset!");

}

