#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Panel_Interact_Progress

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Interact_Type_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BPS_InteractionButtonViewConfig_structs.hpp"
#include "UMG_structs.hpp"
#include "Solarland_structs.hpp"


namespace SDK::Params
{

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ExecuteUbergraph_Panel_Interact_Progress
// 0x0148 (0x0148 - 0x0000)
struct Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_4;                              // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAutoAtlasType                                Temp_byte_Variable_5;                              // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushAtlasAdapter                CallFunc_Map_Find_Value_1;                         // 0x0050(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCountDownInfo                         K2Node_Event_Info;                                 // 0x0068(0x0058)(ConstParm)
	bool                                          CallFunc_IsPlatformDesktop_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation_1;                          // 0x00D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x00E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        K2Node_CustomEvent_BrushResoucePath;               // 0x00F0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0108(0x0028)(HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_InteractTag;                          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_CharacterId;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LocalTextid;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InNum;                                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress");
static_assert(sizeof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress) == 0x000148, "Wrong size on Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, EntryPoint) == 0x000000, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::EntryPoint' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_bool_Variable) == 0x000004, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable) == 0x000018, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable_1) == 0x000019, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_bool_Variable_1) == 0x00001A, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable_2) == 0x00001B, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable_3) == 0x00001C, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_object_Variable) == 0x000028, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable_4) == 0x000030, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, Temp_byte_Variable_5) == 0x000031, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_Map_Find_Value) == 0x000038, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_Map_Find_Value_1) == 0x000050, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_Map_Find_ReturnValue_1) == 0x000060, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_Info) == 0x000068, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_Info' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_IsPlatformDesktop_ReturnValue) == 0x0000C0, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_IsPlatformDesktop_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_IsDesignTime) == 0x0000C1, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Select_Default) == 0x0000C2, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_PlayAnimation_ReturnValue) == 0x0000C8, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_Animation_1) == 0x0000D0, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_Animation_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Select_Default_1) == 0x0000D8, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D9, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_Animation) == 0x0000E0, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000E8, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_CustomEvent_BrushResoucePath) == 0x0000F0, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_CustomEvent_BrushResoucePath' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000108, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_InteractTag) == 0x000130, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_InteractTag' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_CharacterId) == 0x000138, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_CharacterId' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_LocalTextid) == 0x00013C, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_LocalTextid' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, K2Node_Event_InNum) == 0x000140, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::K2Node_Event_InNum' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000144, "Member 'Panel_Interact_Progress_C_ExecuteUbergraph_Panel_Interact_Progress::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateInteractNum
// 0x0004 (0x0004 - 0x0000)
struct Panel_Interact_Progress_C_UpdateInteractNum final
{
public:
	int32                                         InNum;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_UpdateInteractNum) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_UpdateInteractNum");
static_assert(sizeof(Panel_Interact_Progress_C_UpdateInteractNum) == 0x000004, "Wrong size on Panel_Interact_Progress_C_UpdateInteractNum");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateInteractNum, InNum) == 0x000000, "Member 'Panel_Interact_Progress_C_UpdateInteractNum::InNum' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoEnablePassiveBuffDisplay
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalTextID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay");
static_assert(sizeof(Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay) == 0x000008, "Wrong size on Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay");
static_assert(offsetof(Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay, CharacterID) == 0x000000, "Member 'Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay::CharacterID' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay, LocalTextID) == 0x000004, "Member 'Panel_Interact_Progress_C_DoEnablePassiveBuffDisplay::LocalTextID' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoSetInteractType
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_DoSetInteractType final
{
public:
	struct FGameplayTag                           InteractTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_DoSetInteractType) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_DoSetInteractType");
static_assert(sizeof(Panel_Interact_Progress_C_DoSetInteractType) == 0x000008, "Wrong size on Panel_Interact_Progress_C_DoSetInteractType");
static_assert(offsetof(Panel_Interact_Progress_C_DoSetInteractType, InteractTag) == 0x000000, "Member 'Panel_Interact_Progress_C_DoSetInteractType::InteractTag' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetBurshIcon
// 0x0018 (0x0018 - 0x0000)
struct Panel_Interact_Progress_C_SetBurshIcon final
{
public:
	struct FSoftObjectPath                        BrushResoucePath;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_SetBurshIcon) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_SetBurshIcon");
static_assert(sizeof(Panel_Interact_Progress_C_SetBurshIcon) == 0x000018, "Wrong size on Panel_Interact_Progress_C_SetBurshIcon");
static_assert(offsetof(Panel_Interact_Progress_C_SetBurshIcon, BrushResoucePath) == 0x000000, "Member 'Panel_Interact_Progress_C_SetBurshIcon::BrushResoucePath' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnAnimationStarted
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_OnAnimationStarted final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_OnAnimationStarted) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_OnAnimationStarted");
static_assert(sizeof(Panel_Interact_Progress_C_OnAnimationStarted) == 0x000008, "Wrong size on Panel_Interact_Progress_C_OnAnimationStarted");
static_assert(offsetof(Panel_Interact_Progress_C_OnAnimationStarted, Animation) == 0x000000, "Member 'Panel_Interact_Progress_C_OnAnimationStarted::Animation' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_OnAnimationFinished) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_OnAnimationFinished");
static_assert(sizeof(Panel_Interact_Progress_C_OnAnimationFinished) == 0x000008, "Wrong size on Panel_Interact_Progress_C_OnAnimationFinished");
static_assert(offsetof(Panel_Interact_Progress_C_OnAnimationFinished, Animation) == 0x000000, "Member 'Panel_Interact_Progress_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Panel_Interact_Progress_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Interact_Progress_C_PreConstruct) == 0x000001, "Wrong alignment on Panel_Interact_Progress_C_PreConstruct");
static_assert(sizeof(Panel_Interact_Progress_C_PreConstruct) == 0x000001, "Wrong size on Panel_Interact_Progress_C_PreConstruct");
static_assert(offsetof(Panel_Interact_Progress_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Panel_Interact_Progress_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BP_UpdateStateView
// 0x0058 (0x0058 - 0x0000)
struct Panel_Interact_Progress_C_BP_UpdateStateView final
{
public:
	struct FCountDownInfo                         Info;                                              // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Panel_Interact_Progress_C_BP_UpdateStateView) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_BP_UpdateStateView");
static_assert(sizeof(Panel_Interact_Progress_C_BP_UpdateStateView) == 0x000058, "Wrong size on Panel_Interact_Progress_C_BP_UpdateStateView");
static_assert(offsetof(Panel_Interact_Progress_C_BP_UpdateStateView, Info) == 0x000000, "Member 'Panel_Interact_Progress_C_BP_UpdateStateView::Info' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.OnLoaded_05FF62CE4143ABFEC942C68489E91470
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470");
static_assert(sizeof(Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470) == 0x000008, "Wrong size on Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470");
static_assert(offsetof(Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470, Loaded) == 0x000000, "Member 'Panel_Interact_Progress_C_OnLoaded_05FF62CE4143ABFEC942C68489E91470::Loaded' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateStateView
// 0x0014 (0x0014 - 0x0000)
struct Panel_Interact_Progress_C_UpdateStateView final
{
public:
	ECountDownState                               InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_ConditionalReplaceInteractType_ResultType; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_ConditionalReplaceInteractType_ResultType_1; // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_UpdateStateView) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_UpdateStateView");
static_assert(sizeof(Panel_Interact_Progress_C_UpdateStateView) == 0x000014, "Wrong size on Panel_Interact_Progress_C_UpdateStateView");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateStateView, InState) == 0x000000, "Member 'Panel_Interact_Progress_C_UpdateStateView::InState' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateStateView, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Panel_Interact_Progress_C_UpdateStateView::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateStateView, CallFunc_ConditionalReplaceInteractType_ResultType) == 0x000004, "Member 'Panel_Interact_Progress_C_UpdateStateView::CallFunc_ConditionalReplaceInteractType_ResultType' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateStateView, CallFunc_ConditionalReplaceInteractType_ResultType_1) == 0x00000C, "Member 'Panel_Interact_Progress_C_UpdateStateView::CallFunc_ConditionalReplaceInteractType_ResultType_1' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetInteractType
// 0x0128 (0x0128 - 0x0000)
struct Panel_Interact_Progress_C_SetInteractType final
{
public:
	struct FGameplayTag                           InteractTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FBPS_InteractionButtonViewConfig       CallFunc_GetInteractConfig_InteractConfig;         // 0x0008(0x00D0)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0100(0x0028)()
};
static_assert(alignof(Panel_Interact_Progress_C_SetInteractType) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_SetInteractType");
static_assert(sizeof(Panel_Interact_Progress_C_SetInteractType) == 0x000128, "Wrong size on Panel_Interact_Progress_C_SetInteractType");
static_assert(offsetof(Panel_Interact_Progress_C_SetInteractType, InteractTag) == 0x000000, "Member 'Panel_Interact_Progress_C_SetInteractType::InteractTag' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetInteractType, CallFunc_GetInteractConfig_InteractConfig) == 0x000008, "Member 'Panel_Interact_Progress_C_SetInteractType::CallFunc_GetInteractConfig_InteractConfig' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetInteractType, K2Node_MakeStruct_SlateColor) == 0x0000D8, "Member 'Panel_Interact_Progress_C_SetInteractType::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetInteractType, K2Node_MakeStruct_SlateColor_1) == 0x000100, "Member 'Panel_Interact_Progress_C_SetInteractType::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetProgressBarVisiblity
// 0x0005 (0x0005 - 0x0000)
struct Panel_Interact_Progress_C_SetProgressBarVisiblity final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_SetProgressBarVisiblity) == 0x000001, "Wrong alignment on Panel_Interact_Progress_C_SetProgressBarVisiblity");
static_assert(sizeof(Panel_Interact_Progress_C_SetProgressBarVisiblity) == 0x000005, "Wrong size on Panel_Interact_Progress_C_SetProgressBarVisiblity");
static_assert(offsetof(Panel_Interact_Progress_C_SetProgressBarVisiblity, bShow) == 0x000000, "Member 'Panel_Interact_Progress_C_SetProgressBarVisiblity::bShow' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetProgressBarVisiblity, Temp_bool_Variable) == 0x000001, "Member 'Panel_Interact_Progress_C_SetProgressBarVisiblity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetProgressBarVisiblity, Temp_byte_Variable) == 0x000002, "Member 'Panel_Interact_Progress_C_SetProgressBarVisiblity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetProgressBarVisiblity, Temp_byte_Variable_1) == 0x000003, "Member 'Panel_Interact_Progress_C_SetProgressBarVisiblity::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetProgressBarVisiblity, K2Node_Select_Default) == 0x000004, "Member 'Panel_Interact_Progress_C_SetProgressBarVisiblity::K2Node_Select_Default' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.EnablePassiveBuffDisplay
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_EnablePassiveBuffDisplay final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalTextID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_EnablePassiveBuffDisplay) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_EnablePassiveBuffDisplay");
static_assert(sizeof(Panel_Interact_Progress_C_EnablePassiveBuffDisplay) == 0x000008, "Wrong size on Panel_Interact_Progress_C_EnablePassiveBuffDisplay");
static_assert(offsetof(Panel_Interact_Progress_C_EnablePassiveBuffDisplay, CharacterID) == 0x000000, "Member 'Panel_Interact_Progress_C_EnablePassiveBuffDisplay::CharacterID' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_EnablePassiveBuffDisplay, LocalTextID) == 0x000004, "Member 'Panel_Interact_Progress_C_EnablePassiveBuffDisplay::LocalTextID' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ShowPassiveBuff
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_ShowPassiveBuff final
{
public:
	int32                                         CharacterID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalTextID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_ShowPassiveBuff) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_ShowPassiveBuff");
static_assert(sizeof(Panel_Interact_Progress_C_ShowPassiveBuff) == 0x000008, "Wrong size on Panel_Interact_Progress_C_ShowPassiveBuff");
static_assert(offsetof(Panel_Interact_Progress_C_ShowPassiveBuff, CharacterID) == 0x000000, "Member 'Panel_Interact_Progress_C_ShowPassiveBuff::CharacterID' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ShowPassiveBuff, LocalTextID) == 0x000004, "Member 'Panel_Interact_Progress_C_ShowPassiveBuff::LocalTextID' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.GetInteractConfig
// 0x01B8 (0x01B8 - 0x0000)
struct Panel_Interact_Progress_C_GetInteractConfig final
{
public:
	struct FGameplayTag                           InteractTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FBPS_InteractionButtonViewConfig       InteractConfig;                                    // 0x0008(0x00D0)(Parm, OutParm, HasGetValueTypeHash)
	class UBP_GeneralInteractionListConfig_C*     CallFunc_BPGetConfigDataAsset_DataAsset;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_InteractionButtonViewConfig       CallFunc_Map_Find_Value;                           // 0x00E0(0x00D0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Interact_Progress_C_GetInteractConfig) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_GetInteractConfig");
static_assert(sizeof(Panel_Interact_Progress_C_GetInteractConfig) == 0x0001B8, "Wrong size on Panel_Interact_Progress_C_GetInteractConfig");
static_assert(offsetof(Panel_Interact_Progress_C_GetInteractConfig, InteractTag) == 0x000000, "Member 'Panel_Interact_Progress_C_GetInteractConfig::InteractTag' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_GetInteractConfig, InteractConfig) == 0x000008, "Member 'Panel_Interact_Progress_C_GetInteractConfig::InteractConfig' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_GetInteractConfig, CallFunc_BPGetConfigDataAsset_DataAsset) == 0x0000D8, "Member 'Panel_Interact_Progress_C_GetInteractConfig::CallFunc_BPGetConfigDataAsset_DataAsset' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_GetInteractConfig, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'Panel_Interact_Progress_C_GetInteractConfig::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_GetInteractConfig, CallFunc_Map_Find_ReturnValue) == 0x0001B0, "Member 'Panel_Interact_Progress_C_GetInteractConfig::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.ConditionalReplaceInteractType
// 0x0080 (0x0080 - 0x0000)
struct Panel_Interact_Progress_C_ConditionalReplaceInteractType final
{
public:
	bool                                          IsBuffed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Interact_Type                               OriginalType;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GameplayTag;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ResultType;                                        // 0x000C(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GeneralInteractionListConfig_C*     CallFunc_BPGetConfigDataAsset_DataAsset;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, struct FGameplayTag> K2Node_Select_Default;                            // 0x0020(0x0050)()
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Interact_Progress_C_ConditionalReplaceInteractType) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_ConditionalReplaceInteractType");
static_assert(sizeof(Panel_Interact_Progress_C_ConditionalReplaceInteractType) == 0x000080, "Wrong size on Panel_Interact_Progress_C_ConditionalReplaceInteractType");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, IsBuffed) == 0x000000, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::IsBuffed' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, OriginalType) == 0x000001, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::OriginalType' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, GameplayTag) == 0x000004, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::GameplayTag' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, ResultType) == 0x00000C, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::ResultType' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, Temp_bool_Variable) == 0x000014, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, CallFunc_BPGetConfigDataAsset_DataAsset) == 0x000018, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::CallFunc_BPGetConfigDataAsset_DataAsset' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, K2Node_Select_Default) == 0x000020, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, CallFunc_Map_Find_Value) == 0x000070, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_ConditionalReplaceInteractType, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'Panel_Interact_Progress_C_ConditionalReplaceInteractType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.UpdateGuideVXVisibility
// 0x0006 (0x0006 - 0x0000)
struct Panel_Interact_Progress_C_UpdateGuideVXVisibility final
{
public:
	bool                                          CanShow;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_UpdateGuideVXVisibility) == 0x000001, "Wrong alignment on Panel_Interact_Progress_C_UpdateGuideVXVisibility");
static_assert(sizeof(Panel_Interact_Progress_C_UpdateGuideVXVisibility) == 0x000006, "Wrong size on Panel_Interact_Progress_C_UpdateGuideVXVisibility");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, CanShow) == 0x000000, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::CanShow' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, Temp_bool_Variable) == 0x000001, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, Temp_byte_Variable) == 0x000002, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_UpdateGuideVXVisibility, K2Node_Select_Default) == 0x000005, "Member 'Panel_Interact_Progress_C_UpdateGuideVXVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.BPGetConfigDataAsset
// 0x0020 (0x0020 - 0x0000)
struct Panel_Interact_Progress_C_BPGetConfigDataAsset final
{
public:
	class UBP_GeneralInteractionListConfig_C*     DataAsset;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGeneralInteractionButtonConfigDataAsset* CallFunc_GetConfigDataAsset_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneralInteractionListConfig_C*     K2Node_DynamicCast_AsBP_General_Interaction_List_Config; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Interact_Progress_C_BPGetConfigDataAsset) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_BPGetConfigDataAsset");
static_assert(sizeof(Panel_Interact_Progress_C_BPGetConfigDataAsset) == 0x000020, "Wrong size on Panel_Interact_Progress_C_BPGetConfigDataAsset");
static_assert(offsetof(Panel_Interact_Progress_C_BPGetConfigDataAsset, DataAsset) == 0x000000, "Member 'Panel_Interact_Progress_C_BPGetConfigDataAsset::DataAsset' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_BPGetConfigDataAsset, CallFunc_GetConfigDataAsset_ReturnValue) == 0x000008, "Member 'Panel_Interact_Progress_C_BPGetConfigDataAsset::CallFunc_GetConfigDataAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_BPGetConfigDataAsset, K2Node_DynamicCast_AsBP_General_Interaction_List_Config) == 0x000010, "Member 'Panel_Interact_Progress_C_BPGetConfigDataAsset::K2Node_DynamicCast_AsBP_General_Interaction_List_Config' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_BPGetConfigDataAsset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Panel_Interact_Progress_C_BPGetConfigDataAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.Set Help Num Visible
// 0x0048 (0x0048 - 0x0000)
struct Panel_Interact_Progress_C_Set_Help_Num_Visible final
{
public:
	class USolarTextBlock*                        NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(Panel_Interact_Progress_C_Set_Help_Num_Visible) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_Set_Help_Num_Visible");
static_assert(sizeof(Panel_Interact_Progress_C_Set_Help_Num_Visible) == 0x000048, "Wrong size on Panel_Interact_Progress_C_Set_Help_Num_Visible");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, NewLocalVar_0) == 0x000000, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000009, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00000A, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_Set_Help_Num_Visible, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'Panel_Interact_Progress_C_Set_Help_Num_Visible::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetCurrnetBtnIcon
// 0x00D8 (0x00D8 - 0x0000)
struct Panel_Interact_Progress_C_SetCurrnetBtnIcon final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_InteractionButtonViewConfig       CallFunc_GetInteractConfig_InteractConfig;         // 0x0008(0x00D0)(HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_SetCurrnetBtnIcon) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_SetCurrnetBtnIcon");
static_assert(sizeof(Panel_Interact_Progress_C_SetCurrnetBtnIcon) == 0x0000D8, "Wrong size on Panel_Interact_Progress_C_SetCurrnetBtnIcon");
static_assert(offsetof(Panel_Interact_Progress_C_SetCurrnetBtnIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Panel_Interact_Progress_C_SetCurrnetBtnIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetCurrnetBtnIcon, CallFunc_GetInteractConfig_InteractConfig) == 0x000008, "Member 'Panel_Interact_Progress_C_SetCurrnetBtnIcon::CallFunc_GetInteractConfig_InteractConfig' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.SetIsClose
// 0x0050 (0x0050 - 0x0000)
struct Panel_Interact_Progress_C_SetIsClose final
{
public:
	bool                                          isClose_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_SetIsClose) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_SetIsClose");
static_assert(sizeof(Panel_Interact_Progress_C_SetIsClose) == 0x000050, "Wrong size on Panel_Interact_Progress_C_SetIsClose");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, isClose_0) == 0x000000, "Member 'Panel_Interact_Progress_C_SetIsClose::isClose_0' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_bool_Variable) == 0x000001, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_struct_Variable) == 0x000004, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_struct_Variable_1) == 0x000014, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_bool_Variable_1) == 0x000024, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, K2Node_Select_Default) == 0x000028, "Member 'Panel_Interact_Progress_C_SetIsClose::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_object_Variable) == 0x000038, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, Temp_object_Variable_1) == 0x000040, "Member 'Panel_Interact_Progress_C_SetIsClose::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_SetIsClose, K2Node_Select_Default_1) == 0x000048, "Member 'Panel_Interact_Progress_C_SetIsClose::K2Node_Select_Default_1' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoGetInteractType
// 0x0008 (0x0008 - 0x0000)
struct Panel_Interact_Progress_C_DoGetInteractType final
{
public:
	struct FGameplayTag                           NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_DoGetInteractType) == 0x000004, "Wrong alignment on Panel_Interact_Progress_C_DoGetInteractType");
static_assert(sizeof(Panel_Interact_Progress_C_DoGetInteractType) == 0x000008, "Wrong size on Panel_Interact_Progress_C_DoGetInteractType");
static_assert(offsetof(Panel_Interact_Progress_C_DoGetInteractType, NewParam) == 0x000000, "Member 'Panel_Interact_Progress_C_DoGetInteractType::NewParam' has a wrong offset!");

// Function Panel_Interact_Progress.Panel_Interact_Progress_C.DoGetTagToInteractType
// 0x0058 (0x0058 - 0x0000)
struct Panel_Interact_Progress_C_DoGetTagToInteractType final
{
public:
	TMap<struct FGameplayTag, E_Interact_Type>    NewParam;                                          // 0x0000(0x0050)(Parm, OutParm)
	class UBP_GeneralInteractionListConfig_C*     CallFunc_BPGetConfigDataAsset_DataAsset;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Interact_Progress_C_DoGetTagToInteractType) == 0x000008, "Wrong alignment on Panel_Interact_Progress_C_DoGetTagToInteractType");
static_assert(sizeof(Panel_Interact_Progress_C_DoGetTagToInteractType) == 0x000058, "Wrong size on Panel_Interact_Progress_C_DoGetTagToInteractType");
static_assert(offsetof(Panel_Interact_Progress_C_DoGetTagToInteractType, NewParam) == 0x000000, "Member 'Panel_Interact_Progress_C_DoGetTagToInteractType::NewParam' has a wrong offset!");
static_assert(offsetof(Panel_Interact_Progress_C_DoGetTagToInteractType, CallFunc_BPGetConfigDataAsset_DataAsset) == 0x000050, "Member 'Panel_Interact_Progress_C_DoGetTagToInteractType::CallFunc_BPGetConfigDataAsset_DataAsset' has a wrong offset!");

}

