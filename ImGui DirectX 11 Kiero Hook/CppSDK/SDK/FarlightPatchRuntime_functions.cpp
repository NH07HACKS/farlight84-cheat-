#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FarlightPatchRuntime

#include "Basic.hpp"

#include "FarlightPatchRuntime_classes.hpp"
#include "FarlightPatchRuntime_parameters.hpp"


namespace SDK
{

// Function FarlightPatchRuntime.PakHelper.AddConfigValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    StrippedConfigFileName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            NewValue                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPakHelper::AddConfigValue(const class FString& StrippedConfigFileName, const class FString& Section, const class FString& Key, const TArray<class FString>& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "AddConfigValue");

	Params::PakHelper_AddConfigValue Parms{};

	Parms.StrippedConfigFileName = std::move(StrippedConfigFileName);
	Parms.Section = std::move(Section);
	Parms.Key = std::move(Key);
	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.ClearPakFileCache
// (Final, Native, Static, Public, BlueprintCallable)

void UPakHelper::ClearPakFileCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ClearPakFileCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.CreatePakReader
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoadIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPakReader*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPakReader* UPakHelper::CreatePakReader(const class FString& InFilename, bool bLoadIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "CreatePakReader");

	Params::PakHelper_CreatePakReader Parms{};

	Parms.InFilename = std::move(InFilename);
	Parms.bLoadIndex = bLoadIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.CreatePakWriter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    InMountPoint                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPakWriter*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPakWriter* UPakHelper::CreatePakWriter(const class FString& InFilename, const class FString& InMountPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "CreatePakWriter");

	Params::PakHelper_CreatePakWriter Parms{};

	Parms.InFilename = std::move(InFilename);
	Parms.InMountPoint = std::move(InMountPoint);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.GetProjectName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPakHelper::GetProjectName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "GetProjectName");

	Params::PakHelper_GetProjectName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.GetStrippedConfigFileName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    IniName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPakHelper::GetStrippedConfigFileName(const class FString& IniName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "GetStrippedConfigFileName");

	Params::PakHelper_GetStrippedConfigFileName Parms{};

	Parms.IniName = std::move(IniName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.MountPak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    InPakFilename                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PakOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPakHelper::MountPak(const class FString& InPakFilename, int32 PakOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "MountPak");

	Params::PakHelper_MountPak Parms{};

	Parms.InPakFilename = std::move(InPakFilename);
	Parms.PakOrder = PakOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.OpenShaderPatchLibrary
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    ShaderPatchLibraryName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    LibraryDir                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool&                             bShaderPatchLibUnique                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPakHelper::OpenShaderPatchLibrary(const class FString& ShaderPatchLibraryName, const class FString& LibraryDir, const bool& bShaderPatchLibUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "OpenShaderPatchLibrary");

	Params::PakHelper_OpenShaderPatchLibrary Parms{};

	Parms.ShaderPatchLibraryName = std::move(ShaderPatchLibraryName);
	Parms.LibraryDir = std::move(LibraryDir);
	Parms.bShaderPatchLibUnique = bShaderPatchLibUnique;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.ReloadCVarSettingsFromIni
// (Final, Native, Static, Public, BlueprintCallable)

void UPakHelper::ReloadCVarSettingsFromIni()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ReloadCVarSettingsFromIni");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.ReloadDeviceProfiles
// (Final, Native, Static, Public, BlueprintCallable)

void UPakHelper::ReloadDeviceProfiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ReloadDeviceProfiles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.ReloadGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)

void UPakHelper::ReloadGameUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ReloadGameUserSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.ReloadIniFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    StrippedConfigFileName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    FilePath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPakHelper::ReloadIniFile(const class FString& StrippedConfigFileName, const class FString& FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ReloadIniFile");

	Params::PakHelper_ReloadIniFile Parms{};

	Parms.StrippedConfigFileName = std::move(StrippedConfigFileName);
	Parms.FilePath = std::move(FilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakHelper.ReloadRedirectSettingsFromIni
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    IniPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPakHelper::ReloadRedirectSettingsFromIni(const class FString& IniPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "ReloadRedirectSettingsFromIni");

	Params::PakHelper_ReloadRedirectSettingsFromIni Parms{};

	Parms.IniPath = std::move(IniPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.SetSkipDelBroad
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSkipDelBroad                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPakHelper::SetSkipDelBroad(bool bInSkipDelBroad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "SetSkipDelBroad");

	Params::PakHelper_SetSkipDelBroad Parms{};

	Parms.bInSkipDelBroad = bInSkipDelBroad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakHelper.UpdateConfigValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    StrippedConfigFileName                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    NewValue                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPakHelper::UpdateConfigValue(const class FString& StrippedConfigFileName, const class FString& Section, const class FString& Key, const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PakHelper", "UpdateConfigValue");

	Params::PakHelper_UpdateConfigValue Parms{};

	Parms.StrippedConfigFileName = std::move(StrippedConfigFileName);
	Parms.Section = std::move(Section);
	Parms.Key = std::move(Key);
	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakReader.Close
// (Final, Native, Public, BlueprintCallable)

void UPakReader::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PakReader", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FarlightPatchRuntime.PakReader.GetPakIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FPakEntryInfo>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TArray<struct FPakEntryInfo> UPakReader::GetPakIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PakReader", "GetPakIndex");

	Params::PakReader_GetPakIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FarlightPatchRuntime.PakReader.GetTotalSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UPakReader::GetTotalSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PakReader", "GetTotalSize");

	Params::PakReader_GetTotalSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

