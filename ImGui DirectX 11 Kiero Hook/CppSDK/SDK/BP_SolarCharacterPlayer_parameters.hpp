#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarCharacterPlayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.Is Observation Target
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarCharacterPlayer_C_Is_Observation_Target final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingSpectated_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerLocallyControlledOrSpectated_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsAlive_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_Is_Observation_Target) == 0x000001, "Wrong alignment on BP_SolarCharacterPlayer_C_Is_Observation_Target");
static_assert(sizeof(BP_SolarCharacterPlayer_C_Is_Observation_Target) == 0x000008, "Wrong size on BP_SolarCharacterPlayer_C_Is_Observation_Target");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, ReturnValue) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_IsBeingSpectated_ReturnValue) == 0x000001, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_IsBeingSpectated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_IsPlayerLocallyControlledOrSpectated_ReturnValue) == 0x000002, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_IsPlayerLocallyControlledOrSpectated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_K2_IsAlive_ReturnValue) == 0x000003, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_K2_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_IsLocallyControlled_ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Is_Observation_Target, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'BP_SolarCharacterPlayer_C_Is_Observation_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.FixSpeed
// 0x0010 (0x0010 - 0x0000)
struct BP_SolarCharacterPlayer_C_FixSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_FixSpeed) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_FixSpeed");
static_assert(sizeof(BP_SolarCharacterPlayer_C_FixSpeed) == 0x000010, "Wrong size on BP_SolarCharacterPlayer_C_FixSpeed");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FixSpeed, ReturnValue) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_FixSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FixSpeed, CallFunc_GetFloatValue_ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_FixSpeed::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FixSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_FixSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FixSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_FixSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.FigureSpeed
// 0x0028 (0x0028 - 0x0000)
struct BP_SolarCharacterPlayer_C_FigureSpeed final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFixedSpeed_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_FigureSpeed) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_FigureSpeed");
static_assert(sizeof(BP_SolarCharacterPlayer_C_FigureSpeed) == 0x000028, "Wrong size on BP_SolarCharacterPlayer_C_FigureSpeed");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_BreakVector_X) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_BreakVector_Y) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_BreakVector_Z) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_MakeVector2D_ReturnValue) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_VSize2D_ReturnValue) == 0x000014, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_GetFixedSpeed_ReturnValue) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_GetFixedSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_FigureSpeed, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SolarCharacterPlayer_C_FigureSpeed::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetFixedY
// 0x0044 (0x0044 - 0x0000)
struct BP_SolarCharacterPlayer_C_GetFixedY final
{
public:
	float                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_1;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetFixedY) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_GetFixedY");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetFixedY) == 0x000044, "Wrong size on BP_SolarCharacterPlayer_C_GetFixedY");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, NewParam) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, NewLocalVar_1) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, NewLocalVar_0) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00003C, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedY, CallFunc_SafeDivide_ReturnValue) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_GetFixedY::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetFixedX
// 0x0044 (0x0044 - 0x0000)
struct BP_SolarCharacterPlayer_C_GetFixedX final
{
public:
	float                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_1;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetFixedX) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_GetFixedX");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetFixedX) == 0x000044, "Wrong size on BP_SolarCharacterPlayer_C_GetFixedX");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, NewParam) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, NewLocalVar_1) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, NewLocalVar_0) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00003C, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedX, CallFunc_SafeDivide_ReturnValue) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_GetFixedX::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.SetCameraInput_2
// 0x0058 (0x0058 - 0x0000)
struct BP_SolarCharacterPlayer_C_SetCameraInput_2 final
{
public:
	struct FVector                                NewLocalVar_3;                                     // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFixedY_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFixedX_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_SetCameraInput_2) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_SetCameraInput_2");
static_assert(sizeof(BP_SolarCharacterPlayer_C_SetCameraInput_2) == 0x000058, "Wrong size on BP_SolarCharacterPlayer_C_SetCameraInput_2");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, NewLocalVar_3) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, Temp_bool_Variable) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, Temp_struct_Variable) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_GetFixedY_ReturnValue) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_GetFixedY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_GetFixedX_ReturnValue) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_GetFixedX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, K2Node_Select_Default) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput_2, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput_2::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.SetCameraInput
// 0x0028 (0x0028 - 0x0000)
struct BP_SolarCharacterPlayer_C_SetCameraInput final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_Vector2dToString_ReturnValue;        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_SetCameraInput) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_SetCameraInput");
static_assert(sizeof(BP_SolarCharacterPlayer_C_SetCameraInput) == 0x000028, "Wrong size on BP_SolarCharacterPlayer_C_SetCameraInput");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_SetCameraInput, CallFunc_Conv_Vector2dToString_ReturnValue) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_SetCameraInput::CallFunc_Conv_Vector2dToString_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetFixedLocation
// 0x00AC (0x00AC - 0x0000)
struct BP_SolarCharacterPlayer_C_GetFixedLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_0;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar_2;                                     // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetFixedLocation) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_GetFixedLocation");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetFixedLocation) == 0x0000AC, "Wrong size on BP_SolarCharacterPlayer_C_GetFixedLocation");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, InLocation) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::InLocation' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, ReturnValue) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, NewLocalVar_0) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, NewLocalVar_2) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, Temp_bool_Variable) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, Temp_bool_Variable_1) == 0x000029, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, Temp_struct_Variable) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Divide_VectorInt_ReturnValue) == 0x000044, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000054, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, K2Node_Select_Default) == 0x00005C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, K2Node_Select_Default_1) == 0x000074, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_VSize_ReturnValue) == 0x00009C, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A1, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SolarCharacterPlayer_C_GetFixedLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetFixedSpeed
// 0x0044 (0x0044 - 0x0000)
struct BP_SolarCharacterPlayer_C_GetFixedSpeed final
{
public:
	float                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar_1;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetFixedSpeed) == 0x000004, "Wrong alignment on BP_SolarCharacterPlayer_C_GetFixedSpeed");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetFixedSpeed) == 0x000044, "Wrong size on BP_SolarCharacterPlayer_C_GetFixedSpeed");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, NewParam) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::NewParam' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, ReturnValue) == 0x000004, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, NewLocalVar_1) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, NewLocalVar_0) == 0x00000C, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_SafeDivide_ReturnValue) == 0x000024, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetFixedSpeed, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_GetFixedSpeed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.DecelerationEffectUpdate
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SolarCharacterPlayer_C_DecelerationEffectUpdate final
{
public:
	float                                         Altitude;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       Effects;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         tmpAltitudePercent;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSkydiveLandingHeight_ReturnValue;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_DecelerationEffectUpdate");
static_assert(sizeof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate) == 0x0000D0, "Wrong size on BP_SolarCharacterPlayer_C_DecelerationEffectUpdate");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, Altitude) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::Altitude' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, Effects) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::Effects' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, tmpAltitudePercent) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::tmpAltitudePercent' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_GetSkydiveLandingHeight_ReturnValue) == 0x00001C, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_GetSkydiveLandingHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_DecelerationEffectUpdate, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000044, "Member 'BP_SolarCharacterPlayer_C_DecelerationEffectUpdate::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.UndecelerationEffectUpdate
// 0x0050 (0x0050 - 0x0000)
struct BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate final
{
public:
	float                                         Altitude;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       Effects;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         L_Var;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            UndecelerationEffectCurve;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate");
static_assert(sizeof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate) == 0x000050, "Wrong size on BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, Altitude) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::Altitude' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, Effects) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::Effects' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, L_Var) == 0x000018, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::L_Var' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, UndecelerationEffectCurve) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::UndecelerationEffectCurve' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'BP_SolarCharacterPlayer_C_UndecelerationEffectUpdate::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.InpActEvt_Delete_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_InpActEvt_Delete_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.InpActEvt_BackSpace_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.InpActEvt_Home_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_InpActEvt_Home_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.InpActEvt_End_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_InpActEvt_End_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.Event_UseReviveItem
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarCharacterPlayer_C_Event_UseReviveItem final
{
public:
	class ASCMPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_Event_UseReviveItem) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_Event_UseReviveItem");
static_assert(sizeof(BP_SolarCharacterPlayer_C_Event_UseReviveItem) == 0x000008, "Wrong size on BP_SolarCharacterPlayer_C_Event_UseReviveItem");
static_assert(offsetof(BP_SolarCharacterPlayer_C_Event_UseReviveItem, Player) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_Event_UseReviveItem::Player' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.ExecuteUbergraph_BP_SolarCharacterPlayer
// 0x0080 (0x0080 - 0x0000)
struct BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0040(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0058(0x0018)(HasGetValueTypeHash)
	class ASCMPlayerState*                        K2Node_CustomEvent_Player;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer");
static_assert(sizeof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer) == 0x000080, "Wrong size on BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, EntryPoint) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, K2Node_InputKeyEvent_Key) == 0x000008, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, CallFunc_IsEditor_ReturnValue) == 0x000020, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, K2Node_InputKeyEvent_Key_1) == 0x000028, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, K2Node_InputKeyEvent_Key_2) == 0x000040, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, K2Node_InputKeyEvent_Key_3) == 0x000058, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, K2Node_CustomEvent_Player) == 0x000070, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer, CallFunc_IsEditor_ReturnValue_1) == 0x000078, "Member 'BP_SolarCharacterPlayer_C_ExecuteUbergraph_BP_SolarCharacterPlayer::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetSolarCameraComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarCharacterPlayer_C_GetSolarCameraComponent final
{
public:
	class USolarCameraComponent*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetSolarCameraComponent) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_GetSolarCameraComponent");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetSolarCameraComponent) == 0x000008, "Wrong size on BP_SolarCharacterPlayer_C_GetSolarCameraComponent");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetSolarCameraComponent, ReturnValue) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetSolarCameraComponent::ReturnValue' has a wrong offset!");

// Function BP_SolarCharacterPlayer.BP_SolarCharacterPlayer_C.GetSolarSpringArmComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent final
{
public:
	class USolarSpringArmComponent*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent) == 0x000008, "Wrong alignment on BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent");
static_assert(sizeof(BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent) == 0x000008, "Wrong size on BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent");
static_assert(offsetof(BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent, ReturnValue) == 0x000000, "Member 'BP_SolarCharacterPlayer_C_GetSolarSpringArmComponent::ReturnValue' has a wrong offset!");

}

