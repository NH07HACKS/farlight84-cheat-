#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Hud_Chat_Slot

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "SolarUI_structs.hpp"


namespace SDK::Params
{

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.ExecuteUbergraph_UI_Hud_Chat_Slot
// 0x0020 (0x0020 - 0x0000)
struct UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUSolarWidgetLayoutType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUSolarWidgetLayoutType                       K2Node_Event_InLayoutType;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot) == 0x000008, "Wrong alignment on UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot");
static_assert(sizeof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot) == 0x000020, "Wrong size on UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, EntryPoint) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, Temp_byte_Variable) == 0x000004, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, Temp_bool_Variable) == 0x000005, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, Temp_bool_Variable_1) == 0x000006, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, Temp_byte_Variable_1) == 0x000007, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Event_bIsExpanded) == 0x000008, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Event_bIsSelected) == 0x000009, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Event_ListItemObject) == 0x000010, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Event_IsDesignTime) == 0x000018, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Event_InLayoutType) == 0x000019, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Event_InLayoutType' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Select_Default) == 0x00001A, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot, K2Node_Select_Default_1) == 0x00001C, "Member 'UI_Hud_Chat_Slot_C_ExecuteUbergraph_UI_Hud_Chat_Slot::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.ReceivePlatformLayout
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_Slot_C_ReceivePlatformLayout final
{
public:
	EUSolarWidgetLayoutType                       InLayoutType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong alignment on UI_Hud_Chat_Slot_C_ReceivePlatformLayout");
static_assert(sizeof(UI_Hud_Chat_Slot_C_ReceivePlatformLayout) == 0x000001, "Wrong size on UI_Hud_Chat_Slot_C_ReceivePlatformLayout");
static_assert(offsetof(UI_Hud_Chat_Slot_C_ReceivePlatformLayout, InLayoutType) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_ReceivePlatformLayout::InLayoutType' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Hud_Chat_Slot_C_PreConstruct");
static_assert(sizeof(UI_Hud_Chat_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_Hud_Chat_Slot_C_PreConstruct");
static_assert(offsetof(UI_Hud_Chat_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct UI_Hud_Chat_Slot_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on UI_Hud_Chat_Slot_C_OnListItemObjectSet");
static_assert(sizeof(UI_Hud_Chat_Slot_C_OnListItemObjectSet) == 0x000008, "Wrong size on UI_Hud_Chat_Slot_C_OnListItemObjectSet");
static_assert(offsetof(UI_Hud_Chat_Slot_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.BpSetChatType
// 0x0040 (0x0040 - 0x0000)
struct UI_Hud_Chat_Slot_C_BpSetChatType final
{
public:
	EChatGroupType                                ChatType_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InPos;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatGroupType                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_BpSetChatType) == 0x000008, "Wrong alignment on UI_Hud_Chat_Slot_C_BpSetChatType");
static_assert(sizeof(UI_Hud_Chat_Slot_C_BpSetChatType) == 0x000040, "Wrong size on UI_Hud_Chat_Slot_C_BpSetChatType");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, ChatType_0) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::ChatType_0' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, InPos) == 0x000004, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::InPos' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, Temp_byte_Variable) == 0x000008, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, K2Node_SwitchInteger_CmpSuccess) == 0x000009, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, Temp_object_Variable) == 0x000010, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, Temp_object_Variable_1) == 0x000018, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, Temp_object_Variable_2) == 0x000020, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, Temp_object_Variable_3) == 0x000028, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, K2Node_Select_Default) == 0x000030, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BpSetChatType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'UI_Hud_Chat_Slot_C_BpSetChatType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.BP_IsNotSelectableOrNavigable
// 0x0001 (0x0001 - 0x0000)
struct UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong alignment on UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(sizeof(UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable) == 0x000001, "Wrong size on UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable");
static_assert(offsetof(UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable, ReturnValue) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_BP_IsNotSelectableOrNavigable::ReturnValue' has a wrong offset!");

// Function UI_Hud_Chat_Slot.UI_Hud_Chat_Slot_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_Hud_Chat_Slot_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_Hud_Chat_Slot_C_GetModuleName) == 0x000008, "Wrong alignment on UI_Hud_Chat_Slot_C_GetModuleName");
static_assert(sizeof(UI_Hud_Chat_Slot_C_GetModuleName) == 0x000010, "Wrong size on UI_Hud_Chat_Slot_C_GetModuleName");
static_assert(offsetof(UI_Hud_Chat_Slot_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_Hud_Chat_Slot_C_GetModuleName::ReturnValue' has a wrong offset!");

}

