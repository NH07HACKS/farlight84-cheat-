#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameState_Framework

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GameState_Framework.BP_GameState_Framework_C
// 0x0048 (0x0E48 - 0x0E00)
class ABP_GameState_Framework_C final : public ASCustomGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_PlayerManager_C*                   PlayerManager;                                     // 0x0E08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0E10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnBasicSystemReady_0;                              // 0x0E18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bBasicSystemReady_0;                               // 0x0E28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E29[0x3];                                      // 0x0E29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WarmGameID;                                        // 0x0E2C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(ESCMInGameState NewState)> OnGameStateChanged;                     // 0x0E30(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ESCMInGameState                               GameState;                                         // 0x0E40(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_GameState_Framework(int32 EntryPoint);
	void OnRep_GameState();
	void SetGameState(ESCMInGameState NewState);
	void OnDataManagerPrepare();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GameState_Framework_C">();
	}
	static class ABP_GameState_Framework_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GameState_Framework_C>();
	}
};
static_assert(alignof(ABP_GameState_Framework_C) == 0x000008, "Wrong alignment on ABP_GameState_Framework_C");
static_assert(sizeof(ABP_GameState_Framework_C) == 0x000E48, "Wrong size on ABP_GameState_Framework_C");
static_assert(offsetof(ABP_GameState_Framework_C, UberGraphFrame) == 0x000E00, "Member 'ABP_GameState_Framework_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, PlayerManager) == 0x000E08, "Member 'ABP_GameState_Framework_C::PlayerManager' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, DefaultSceneRoot) == 0x000E10, "Member 'ABP_GameState_Framework_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, OnBasicSystemReady_0) == 0x000E18, "Member 'ABP_GameState_Framework_C::OnBasicSystemReady_0' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, bBasicSystemReady_0) == 0x000E28, "Member 'ABP_GameState_Framework_C::bBasicSystemReady_0' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, WarmGameID) == 0x000E2C, "Member 'ABP_GameState_Framework_C::WarmGameID' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, OnGameStateChanged) == 0x000E30, "Member 'ABP_GameState_Framework_C::OnGameStateChanged' has a wrong offset!");
static_assert(offsetof(ABP_GameState_Framework_C, GameState) == 0x000E40, "Member 'ABP_GameState_Framework_C::GameState' has a wrong offset!");

}

