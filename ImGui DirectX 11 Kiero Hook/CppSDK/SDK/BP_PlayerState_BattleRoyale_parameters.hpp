#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerState_BattleRoyale

#include "Basic.hpp"

#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerItems
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetPlayerItems final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_BPGetPlayerItems_Output;                  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetPlayerItems) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetPlayerItems");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetPlayerItems) == 0x000020, "Wrong size on BP_PlayerState_BattleRoyale_C_GetPlayerItems");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerItems, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerItems::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerItems, CallFunc_BPGetPlayerItems_Output) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerItems::CallFunc_BPGetPlayerItems_Output' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerAccessories
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetPlayerAccessories final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_BPGetPlayerAccessories_Output;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetPlayerAccessories) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetPlayerAccessories");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetPlayerAccessories) == 0x000020, "Wrong size on BP_PlayerState_BattleRoyale_C_GetPlayerAccessories");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerAccessories, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerAccessories::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerAccessories, CallFunc_BPGetPlayerAccessories_Output) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerAccessories::CallFunc_BPGetPlayerAccessories_Output' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetSpecialHitTypeArray
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray final
{
public:
	TArray<int32>                                 NewParam;                                          // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray) == 0x000038, "Wrong size on BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, NewParam) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000011, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00001C, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_GetSpecialHitTypeArray::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetExpByBehavior
// 0x0188 (0x0188 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetExpByBehavior final
{
public:
	EExpBehaviorType                              InBehaviorType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InParamOne;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InParamTwo;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InDamage;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Multiplier;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSpecialHitTypeArray_NewParam;          // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarTablesData_Behavior              CallFunc_GetRowData_ReturnValue;                   // 0x0068(0x0040)(ConstParm)
	struct FSolarTablesData_EscapeExp             CallFunc_GetRowData_ReturnValue_1;                 // 0x00A8(0x0040)(ConstParm)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRowKey_ReturnValue_1;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_ItemBehavior          CallFunc_GetRowData_ReturnValue_2;                 // 0x00F0(0x0090)(ConstParm)
	bool                                          CallFunc_HasRowKey_ReturnValue_2;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetExpByBehavior");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior) == 0x000188, "Wrong size on BP_PlayerState_BattleRoyale_C_GetExpByBehavior");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, InBehaviorType) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::InBehaviorType' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, InParamOne) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::InParamOne' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, InParamTwo) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::InParamTwo' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, InDamage) == 0x00000C, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::InDamage' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, ReturnValue) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, Multiplier) == 0x000014, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, ID) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_MakeLiteralByte_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_GetSpecialHitTypeArray_NewParam) == 0x000030, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_GetSpecialHitTypeArray_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, Temp_int_Variable) == 0x000040, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_Array_Contains_ReturnValue) == 0x000044, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, Temp_int_Variable_1) == 0x000048, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, Temp_bool_Variable) == 0x00004C, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, K2Node_Select_Default) == 0x000050, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000058, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc__A_GetExcelTableReader_TablesReader_1) == 0x000060, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc__A_GetExcelTableReader_TablesReader_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_GetRowData_ReturnValue) == 0x000068, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_GetRowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_GetRowData_ReturnValue_1) == 0x0000A8, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_GetRowData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_HasRowKey_ReturnValue) == 0x0000EC, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_HasRowKey_ReturnValue_1) == 0x0000ED, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_HasRowKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_GetRowData_ReturnValue_2) == 0x0000F0, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_GetRowData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetExpByBehavior, CallFunc_HasRowKey_ReturnValue_2) == 0x000180, "Member 'BP_PlayerState_BattleRoyale_C_GetExpByBehavior::CallFunc_HasRowKey_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PlayerCanRebirthBlueprint
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCGMGameplayConfig*                     CallFunc_GetCGMGameplayConfig_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCFG_Framework_C*                       K2Node_DynamicCast_AsCFG_Framework;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ReviveItemManger_BattleRoyale_C*    CallFunc_GetActorOfClass_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerUseReviveItem_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerReviving_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint) == 0x000030, "Wrong size on BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, Temp_bool_Variable) == 0x000001, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, Temp_bool_Variable_1) == 0x000002, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, CallFunc_GetCGMGameplayConfig_ReturnValue) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::CallFunc_GetCGMGameplayConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, K2Node_DynamicCast_AsCFG_Framework) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::K2Node_DynamicCast_AsCFG_Framework' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, CallFunc_GetActorOfClass_ReturnValue) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, CallFunc_CanPlayerUseReviveItem_ReturnValue) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::CallFunc_CanPlayerUseReviveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, CallFunc_IsPlayerReviving_ReturnValue) == 0x000029, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::CallFunc_IsPlayerReviving_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint, K2Node_Select_Default) == 0x00002A, "Member 'BP_PlayerState_BattleRoyale_C_PlayerCanRebirthBlueprint::K2Node_Select_Default' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PlayerIsResurrecting
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting) == 0x000001, "Wrong alignment on BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting) == 0x000001, "Wrong size on BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_PlayerIsResurrecting::ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.IsPlayerWaitingForTeammatesHelp
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp) == 0x000001, "Wrong alignment on BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp) == 0x000002, "Wrong size on BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerState_BattleRoyale_C_IsPlayerWaitingForTeammatesHelp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetItemData
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetItemData final
{
public:
	int32                                         ItemID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quality;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetRowData_HasKey;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_ItemInBattle          CallFunc_TryGetRowData_ReturnValue;                // 0x0020(0x0090)(ConstParm)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetItemData) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetItemData");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetItemData) == 0x0000B0, "Wrong size on BP_PlayerState_BattleRoyale_C_GetItemData");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, ItemID) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, Valid) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, ID) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, Quality) == 0x00000C, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::Quality' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, CallFunc_TryGetRowData_HasKey) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::CallFunc_TryGetRowData_HasKey' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetItemData, CallFunc_TryGetRowData_ReturnValue) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_GetItemData::CallFunc_TryGetRowData_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetPlayerChestOpen
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen final
{
public:
	class FString                                 Output;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         OutputString;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_Valid;                        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemData_ID;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemData_Quality;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapDataInt_OutValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMapDataInt_ReturnValue;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen) == 0x0000D0, "Wrong size on BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, Output) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::Output' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, OutputString) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::OutputString' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_JoinStringArray_ReturnValue) == 0x000040, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_GetItemData_Valid) == 0x000054, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_GetItemData_Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_GetItemData_ID) == 0x000058, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_GetItemData_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_GetItemData_Quality) == 0x00005C, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_GetItemData_Quality' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_GetMapDataInt_OutValue) == 0x000080, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_GetMapDataInt_OutValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_GetMapDataInt_ReturnValue) == 0x000084, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_GetMapDataInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000A0, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_PlayerState_BattleRoyale_C_GetPlayerChestOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetSinglePlayerItem
// 0x0140 (0x0140 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem final
{
public:
	int32                                         ItemID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasItem;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarItemData                         CallFunc_GetBackpackItemDataByID_ItemData;         // 0x0018(0x0120)()
	bool                                          CallFunc_GetBackpackItemDataByID_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem) == 0x000140, "Wrong size on BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, ItemID) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, HasItem) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::HasItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, Count) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, CallFunc_GetSolarCharacter_ReturnValue) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, CallFunc_GetBackpackItemDataByID_ItemData) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::CallFunc_GetBackpackItemDataByID_ItemData' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem, CallFunc_GetBackpackItemDataByID_ReturnValue) == 0x000138, "Member 'BP_PlayerState_BattleRoyale_C_GetSinglePlayerItem::CallFunc_GetBackpackItemDataByID_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetWeaponPartData
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetWeaponPartData final
{
public:
	int32                                         ItemID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quality;                                           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarTables_TablesReader*              CallFunc__A_GetExcelTableReader_TablesReader;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRowKey_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarTablesData_ItemInBattle          CallFunc_GetRowData_ReturnValue;                   // 0x0020(0x0090)(ConstParm)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetWeaponPartData");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData) == 0x0000B0, "Wrong size on BP_PlayerState_BattleRoyale_C_GetWeaponPartData");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, ItemID) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, Valid) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, ID) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, Quality) == 0x00000C, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::Quality' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, CallFunc__A_GetExcelTableReader_TablesReader) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::CallFunc__A_GetExcelTableReader_TablesReader' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, CallFunc_HasRowKey_ReturnValue) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::CallFunc_HasRowKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetWeaponPartData, CallFunc_GetRowData_ReturnValue) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_GetWeaponPartData::CallFunc_GetRowData_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.BPGetPlayerItems
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_BPGetPlayerItems final
{
public:
	class FString                                 Output;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         OutputString;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSinglePlayerItem_HasItem;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSinglePlayerItem_Count;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_BPGetPlayerItems");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems) == 0x0000B0, "Wrong size on BP_PlayerState_BattleRoyale_C_BPGetPlayerItems");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, Output) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::Output' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, OutputString) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::OutputString' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_JoinStringArray_ReturnValue) == 0x000040, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_GetSinglePlayerItem_HasItem) == 0x000068, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_GetSinglePlayerItem_HasItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_GetSinglePlayerItem_Count) == 0x00006C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_GetSinglePlayerItem_Count' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerItems, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.BPGetPlayerAccessories
// 0x05C8 (0x05C8 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories final
{
public:
	class FString                                 Output;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         OutputString;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMap<struct FIntPoint, int32>                 Accessories;                                       // 0x0020(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarWeapon*                           CallFunc_GetWeaponBySlot_ReturnValue;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarWeapon*                           CallFunc_GetWeaponBySlot_ReturnValue_1;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponPartsData                       CallFunc_GetWeaponParts_Parts;                     // 0x0194(0x0018)(NoDestructor)
	bool                                          CallFunc_GetWeaponParts_ReturnValue;               // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponPartsData                       CallFunc_GetWeaponParts_Parts_1;                   // 0x01B0(0x0018)(NoDestructor)
	bool                                          CallFunc_GetWeaponParts_ReturnValue_1;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWeaponPartData_Valid;                  // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID;                     // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality;                // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_1;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_1;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_2;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_2;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_2;              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_3;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_3;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_3;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_2;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_3;                      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_4;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_4;                   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_4;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_5;                // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_5;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_5;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_4;                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_5;                      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_6;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_6;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_6;              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_7;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_7;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_7;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_6;                      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_7;                      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_8;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_8;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_8;              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponPartData_Valid_9;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPartData_ID_9;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPartData_Quality_9;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_8;                      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_9;                      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_9;                               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarCharacter*                        CallFunc_GetSolarCharacter_ReturnValue_1;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSolarItemData                         CallFunc_GetBackpackItemDataByType_ItemData;       // 0x02B0(0x0120)()
	bool                                          CallFunc_GetBackpackItemDataByType_ReturnValue;    // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_10;                     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSolarItemData                         CallFunc_GetBackpackItemDataByType_ItemData_1;     // 0x03F8(0x0120)()
	bool                                          CallFunc_GetBackpackItemDataByType_ReturnValue_1;  // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_3;                         // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_11;                     // 0x0524(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_5;                         // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54D[0x3];                                      // 0x054D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_6;                         // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_7;                         // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_8;                         // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_575[0x3];                                      // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_7;                           // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_9;                         // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_9;                   // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_10;                        // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_10;                  // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_595[0x3];                                      // 0x0595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_8;                           // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_9;                           // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_11;                        // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_11;                  // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_12;                        // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_12;                  // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_10;                          // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_11;                          // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories) == 0x0005C8, "Wrong size on BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Output) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Output' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, OutputString) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::OutputString' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Accessories) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Accessories' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable) == 0x000070, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_1) == 0x000071, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_2) == 0x000072, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable) == 0x000074, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_3) == 0x000078, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_1) == 0x00007C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_2) == 0x000080, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_4) == 0x000084, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_3) == 0x000088, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_5) == 0x00008C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_4) == 0x000094, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_5) == 0x000098, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_JoinStringArray_ReturnValue) == 0x0000A0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value) == 0x0000CC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Conv_IntToString_ReturnValue) == 0x0000D8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000E8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000F8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_6) == 0x000108, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Concat_StrStr_ReturnValue) == 0x000110, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_6) == 0x000120, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_7) == 0x000158, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Array_Add_ReturnValue) == 0x00015C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_7) == 0x000160, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_8) == 0x000164, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_9) == 0x00016C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Less_IntInt_ReturnValue) == 0x00016D, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_8) == 0x000174, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetSolarCharacter_ReturnValue) == 0x000178, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetSolarCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponBySlot_ReturnValue) == 0x000180, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponBySlot_ReturnValue_1) == 0x000188, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponBySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_IsValid_ReturnValue_1) == 0x000191, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponParts_Parts) == 0x000194, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponParts_Parts' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponParts_ReturnValue) == 0x0001AC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponParts_Parts_1) == 0x0001B0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponParts_Parts_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponParts_ReturnValue_1) == 0x0001C8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponParts_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid) == 0x0001C9, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID) == 0x0001CC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality) == 0x0001D0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_1) == 0x0001D4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_1) == 0x0001D8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_1) == 0x0001DC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint) == 0x0001E0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_1) == 0x0001E8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_2) == 0x0001F0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_2) == 0x0001F4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_2) == 0x0001F8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_3) == 0x0001FC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_3) == 0x000200, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_3) == 0x000204, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_2) == 0x000208, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_3) == 0x000210, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_4) == 0x000218, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_4) == 0x00021C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_4) == 0x000220, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_5) == 0x000224, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_5) == 0x000228, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_5) == 0x00022C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_4) == 0x000230, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_5) == 0x000238, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_6) == 0x000240, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_6) == 0x000244, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_6) == 0x000248, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_7) == 0x00024C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_7) == 0x000250, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_7) == 0x000254, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_6) == 0x000258, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_7) == 0x000260, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_8) == 0x000268, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_8) == 0x00026C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_8) == 0x000270, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Valid_9) == 0x000274, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Valid_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_ID_9) == 0x000278, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_ID_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetWeaponPartData_Quality_9) == 0x00027C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetWeaponPartData_Quality_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_8) == 0x000280, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_9) == 0x000288, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_10) == 0x000290, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_int_Variable_9) == 0x000294, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, Temp_bool_Variable_11) == 0x000298, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetSolarCharacter_ReturnValue_1) == 0x0002A0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetSolarCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_1) == 0x0002A8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_1) == 0x0002AC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetBackpackItemDataByType_ItemData) == 0x0002B0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetBackpackItemDataByType_ItemData' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetBackpackItemDataByType_ReturnValue) == 0x0003D0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetBackpackItemDataByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003D4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_10) == 0x0003D8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default) == 0x0003E0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_2) == 0x0003E4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_2) == 0x0003E8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003EC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003F0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_1) == 0x0003F4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetBackpackItemDataByType_ItemData_1) == 0x0003F8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetBackpackItemDataByType_ItemData_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_GetBackpackItemDataByType_ReturnValue_1) == 0x000518, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_GetBackpackItemDataByType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_3) == 0x00051C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_3) == 0x000520, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_MakeStruct_IntPoint_11) == 0x000524, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_MakeStruct_IntPoint_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00052C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_4) == 0x000530, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_4) == 0x000534, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_3) == 0x000538, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_4) == 0x00053C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_2) == 0x000540, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_3) == 0x000544, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_5) == 0x000548, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_5) == 0x00054C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_6) == 0x000550, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_6) == 0x000554, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_5) == 0x000558, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_6) == 0x00055C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_4) == 0x000560, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_5) == 0x000564, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_7) == 0x000568, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_7) == 0x00056C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_8) == 0x000570, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_8) == 0x000574, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_7) == 0x000578, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_8) == 0x00057C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_6) == 0x000580, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_7) == 0x000584, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_9) == 0x000588, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_9) == 0x00058C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_10) == 0x000590, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_10) == 0x000594, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_9) == 0x000598, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_10) == 0x00059C, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_8) == 0x0005A0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_9) == 0x0005A4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_11) == 0x0005A8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_11) == 0x0005AC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_Value_12) == 0x0005B0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_Value_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Map_Find_ReturnValue_12) == 0x0005B4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Map_Find_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_11) == 0x0005B8, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, CallFunc_Add_IntInt_ReturnValue_12) == 0x0005BC, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_10) == 0x0005C0, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories, K2Node_Select_Default_11) == 0x0005C4, "Member 'BP_PlayerState_BattleRoyale_C_BPGetPlayerAccessories::K2Node_Select_Default_11' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.Set Intervened By AI
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI) == 0x000004, "Wrong alignment on BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI) == 0x000008, "Wrong size on BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI, Temp_int_Variable) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_Set_Intervened_By_AI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.ResurrectionStateChange
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_ResurrectionStateChange final
{
public:
	EResurrectionState                            NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_ResurrectionStateChange) == 0x000001, "Wrong alignment on BP_PlayerState_BattleRoyale_C_ResurrectionStateChange");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_ResurrectionStateChange) == 0x000001, "Wrong size on BP_PlayerState_BattleRoyale_C_ResurrectionStateChange");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ResurrectionStateChange, NewState) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_ResurrectionStateChange::NewState' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.DropPickableItem
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_DropPickableItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_DropPickableItem) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_DropPickableItem");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_DropPickableItem) == 0x000008, "Wrong size on BP_PlayerState_BattleRoyale_C_DropPickableItem");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_DropPickableItem, Item) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_DropPickableItem::Item' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.PickupPickableItem
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_PickupPickableItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_PickupPickableItem) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_PickupPickableItem");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_PickupPickableItem) == 0x000008, "Wrong size on BP_PlayerState_BattleRoyale_C_PickupPickableItem");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_PickupPickableItem, Item) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_PickupPickableItem::Item' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.ExecuteUbergraph_BP_PlayerState_BattleRoyale
// 0x0110 (0x0110 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EResurrectionState                            K2Node_CustomEvent_NewState;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASolarCharacter*                        CallFunc___C_Get_Viewport_Focused_Character_Character; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASolarPlayerState*                      CallFunc_GetSolarPlayerState_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeammateWith_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_BuyResurrection_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDeathBoxLoc_ReturnValue;               // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SI_RebornLine_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarPlayerState*                      CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASCMPlayerState*                        K2Node_DynamicCast_AsSCMPlayer_State;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResurrecting_ReturnValue;              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_BuyResurrection_C*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EResurrectionState NewState)>  K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Item_1;                               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_PickableItem_C>     K2Node_DynamicCast_AsI_Pickable_Item;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Item;                                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_PickableItem_C>     K2Node_DynamicCast_AsI_Pickable_Item_1;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSpectateOtherPlayer_ReturnValue;     // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale) == 0x000010, "Wrong alignment on BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale) == 0x000110, "Wrong size on BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, EntryPoint) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_CustomEvent_NewState) == 0x000004, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsServer_ReturnValue) == 0x000006, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsServer_ReturnValue_1) == 0x000007, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc___C_Get_Viewport_Focused_Character_Character) == 0x000008, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc___C_Get_Viewport_Focused_Character_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetSolarPlayerState_ReturnValue) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetSolarPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsTeammateWith_ReturnValue) == 0x000019, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsTeammateWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000030, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetDeathBoxLoc_ReturnValue) == 0x000068, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetDeathBoxLoc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsServer_ReturnValue_2) == 0x000081, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000088, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_AsSCMPlayer_State) == 0x000090, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_AsSCMPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000099, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetResurrecting_ReturnValue) == 0x00009A, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetResurrecting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_IsServer_ReturnValue_3) == 0x0000C0, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_Event_Item_1) == 0x0000C8, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_Event_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_AsI_Pickable_Item) == 0x0000D0, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_AsI_Pickable_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_Event_Item) == 0x0000E8, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_AsI_Pickable_Item_1) == 0x0000F0, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_AsI_Pickable_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale, CallFunc_BeginSpectateOtherPlayer_ReturnValue) == 0x000101, "Member 'BP_PlayerState_BattleRoyale_C_ExecuteUbergraph_BP_PlayerState_BattleRoyale::CallFunc_BeginSpectateOtherPlayer_ReturnValue' has a wrong offset!");

// Function BP_PlayerState_BattleRoyale.BP_PlayerState_BattleRoyale_C.GetDeathBoxLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_BuyResurrection_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDeathBoxLoc_ReturnValue;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation) == 0x000008, "Wrong alignment on BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation");
static_assert(sizeof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation) == 0x000028, "Wrong size on BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation, ReturnValue) == 0x000000, "Member 'BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation, CallFunc_GetDeathBoxLoc_ReturnValue) == 0x00001C, "Member 'BP_PlayerState_BattleRoyale_C_GetDeathBoxLocation::CallFunc_GetDeathBoxLoc_ReturnValue' has a wrong offset!");

}

