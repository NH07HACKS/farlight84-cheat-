#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WorldMark_FrameType

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_WorldMark_FrameType_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WorldMark_FrameType.WorldMark_FrameType_C
// 0x0020 (0x0610 - 0x05F0)
class UWorldMark_FrameType_C final : public USolarUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Spread;                                       // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Img_WorldMark_Frame;                               // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_WorldMark_FrameType                         FrameType;                                         // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WorldMark_FrameType(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetFrameByWorldMarkData(const struct FWorldMarkData& WorldMarkData);
	void SetFrameType();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WorldMark_FrameType_C">();
	}
	static class UWorldMark_FrameType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWorldMark_FrameType_C>();
	}
};
static_assert(alignof(UWorldMark_FrameType_C) == 0x000008, "Wrong alignment on UWorldMark_FrameType_C");
static_assert(sizeof(UWorldMark_FrameType_C) == 0x000610, "Wrong size on UWorldMark_FrameType_C");
static_assert(offsetof(UWorldMark_FrameType_C, UberGraphFrame) == 0x0005F0, "Member 'UWorldMark_FrameType_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWorldMark_FrameType_C, Anim_Spread) == 0x0005F8, "Member 'UWorldMark_FrameType_C::Anim_Spread' has a wrong offset!");
static_assert(offsetof(UWorldMark_FrameType_C, Img_WorldMark_Frame) == 0x000600, "Member 'UWorldMark_FrameType_C::Img_WorldMark_Frame' has a wrong offset!");
static_assert(offsetof(UWorldMark_FrameType_C, FrameType) == 0x000608, "Member 'UWorldMark_FrameType_C::FrameType' has a wrong offset!");

}

