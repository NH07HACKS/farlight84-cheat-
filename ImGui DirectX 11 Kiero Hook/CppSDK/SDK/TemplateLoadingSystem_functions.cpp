#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemplateLoadingSystem

#include "Basic.hpp"

#include "TemplateLoadingSystem_classes.hpp"
#include "TemplateLoadingSystem_parameters.hpp"


namespace SDK
{

// Function TemplateLoadingSystem.LoadingWidgetInterface.OnLoadingFinished
// (Native, Event, Protected, BlueprintEvent)

void ILoadingWidgetInterface::OnLoadingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("LoadingWidgetInterface", "OnLoadingFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingWidgetInterface.OnLoadingStarted
// (Native, Event, Protected, BlueprintEvent)

void ILoadingWidgetInterface::OnLoadingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("LoadingWidgetInterface", "OnLoadingStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.Get
// (Final, Native, Static, Private)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoadingScreenSubsystem*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULoadingScreenSubsystem* ULoadingScreenSubsystem::Get(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LoadingScreenSubsystem", "Get");

	Params::LoadingScreenSubsystem_Get Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.CloseLoadingScreen
// (Final, Native, Public, BlueprintCallable)

void ULoadingScreenSubsystem::CloseLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubsystem", "CloseLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.OnTransitionAnimFinished
// (Final, Native, Protected)

void ULoadingScreenSubsystem::OnTransitionAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubsystem", "OnTransitionAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.StartLoadingScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class ULoadingWidgetBase>   InWidgetClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoadingWidgetBase*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULoadingWidgetBase* ULoadingScreenSubsystem::StartLoadingScreen(TSubclassOf<class ULoadingWidgetBase> InWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubsystem", "StartLoadingScreen");

	Params::LoadingScreenSubsystem_StartLoadingScreen Parms{};

	Parms.InWidgetClass = InWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.StartLoadingScreenByWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      InUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            InMoviePaths                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadingScreenSubsystem::StartLoadingScreenByWidget(class UUserWidget* InUserWidget, const TArray<class FString>& InMoviePaths)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubsystem", "StartLoadingScreenByWidget");

	Params::LoadingScreenSubsystem_StartLoadingScreenByWidget Parms{};

	Parms.InUserWidget = InUserWidget;
	Parms.InMoviePaths = std::move(InMoviePaths);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingScreenSubsystem.StopLoadingScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      TransitionAnimWidget                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadingScreenSubsystem::StopLoadingScreen(class UUserWidget* TransitionAnimWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadingScreenSubsystem", "StopLoadingScreen");

	Params::LoadingScreenSubsystem_StopLoadingScreen Parms{};

	Parms.TransitionAnimWidget = TransitionAnimWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemplateLoadingSystem.LoadingTransitionWidgetInterface.GetTransitionAnimation
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* ILoadingTransitionWidgetInterface::GetTransitionAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("LoadingTransitionWidgetInterface", "GetTransitionAnimation");

	Params::LoadingTransitionWidgetInterface_GetTransitionAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemplateLoadingSystem.LoadingTransitionWidgetInterface.SetLoadingTransitionCallback
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                InCallback                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ILoadingTransitionWidgetInterface::SetLoadingTransitionCallback(const TDelegate<void()>& InCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("LoadingTransitionWidgetInterface", "SetLoadingTransitionCallback");

	Params::LoadingTransitionWidgetInterface_SetLoadingTransitionCallback Parms{};

	Parms.InCallback = InCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

