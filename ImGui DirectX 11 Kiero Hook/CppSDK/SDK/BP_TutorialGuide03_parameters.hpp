#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialGuide03

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.ExecuteUbergraph_BP_TutorialGuide03
// 0x0020 (0x0020 - 0x0000)
struct BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActionID_1;                     // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActionID;                       // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContainedInIDs_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContainedInIDs_ReturnValue_1;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03) == 0x000008, "Wrong alignment on BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03");
static_assert(sizeof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03) == 0x000020, "Wrong size on BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, EntryPoint) == 0x000000, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, K2Node_CustomEvent_ActionID_1) == 0x000004, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::K2Node_CustomEvent_ActionID_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, K2Node_CustomEvent_ActionID) == 0x000008, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::K2Node_CustomEvent_ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, CallFunc_IsContainedInIDs_ReturnValue) == 0x00000C, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::CallFunc_IsContainedInIDs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, CallFunc_IsContainedInIDs_ReturnValue_1) == 0x00000D, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::CallFunc_IsContainedInIDs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000010, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_TutorialGuide03_C_ExecuteUbergraph_BP_TutorialGuide03::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.OnStepActionEnded
// 0x0004 (0x0004 - 0x0000)
struct BP_TutorialGuide03_C_OnStepActionEnded final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialGuide03_C_OnStepActionEnded) == 0x000004, "Wrong alignment on BP_TutorialGuide03_C_OnStepActionEnded");
static_assert(sizeof(BP_TutorialGuide03_C_OnStepActionEnded) == 0x000004, "Wrong size on BP_TutorialGuide03_C_OnStepActionEnded");
static_assert(offsetof(BP_TutorialGuide03_C_OnStepActionEnded, ActionID) == 0x000000, "Member 'BP_TutorialGuide03_C_OnStepActionEnded::ActionID' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.OnStepActionBegan
// 0x0004 (0x0004 - 0x0000)
struct BP_TutorialGuide03_C_OnStepActionBegan final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialGuide03_C_OnStepActionBegan) == 0x000004, "Wrong alignment on BP_TutorialGuide03_C_OnStepActionBegan");
static_assert(sizeof(BP_TutorialGuide03_C_OnStepActionBegan) == 0x000004, "Wrong size on BP_TutorialGuide03_C_OnStepActionBegan");
static_assert(offsetof(BP_TutorialGuide03_C_OnStepActionBegan, ActionID) == 0x000000, "Member 'BP_TutorialGuide03_C_OnStepActionBegan::ActionID' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.IsContainedInIDs
// 0x0008 (0x0008 - 0x0000)
struct BP_TutorialGuide03_C_IsContainedInIDs final
{
public:
	int32                                         ActionID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialGuide03_C_IsContainedInIDs) == 0x000004, "Wrong alignment on BP_TutorialGuide03_C_IsContainedInIDs");
static_assert(sizeof(BP_TutorialGuide03_C_IsContainedInIDs) == 0x000008, "Wrong size on BP_TutorialGuide03_C_IsContainedInIDs");
static_assert(offsetof(BP_TutorialGuide03_C_IsContainedInIDs, ActionID) == 0x000000, "Member 'BP_TutorialGuide03_C_IsContainedInIDs::ActionID' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_IsContainedInIDs, ReturnValue) == 0x000004, "Member 'BP_TutorialGuide03_C_IsContainedInIDs::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_IsContainedInIDs, CallFunc_Array_Contains_ReturnValue) == 0x000005, "Member 'BP_TutorialGuide03_C_IsContainedInIDs::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.Register Event Internal
// 0x0030 (0x0030 - 0x0000)
struct BP_TutorialGuide03_C_Register_Event_Internal final
{
public:
	TDelegate<void(int32 StepActionID)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 StepActionID)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialGuide03_C_Register_Event_Internal) == 0x000008, "Wrong alignment on BP_TutorialGuide03_C_Register_Event_Internal");
static_assert(sizeof(BP_TutorialGuide03_C_Register_Event_Internal) == 0x000030, "Wrong size on BP_TutorialGuide03_C_Register_Event_Internal");
static_assert(offsetof(BP_TutorialGuide03_C_Register_Event_Internal, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_TutorialGuide03_C_Register_Event_Internal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Register_Event_Internal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_TutorialGuide03_C_Register_Event_Internal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Register_Event_Internal, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000020, "Member 'BP_TutorialGuide03_C_Register_Event_Internal::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Register_Event_Internal, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_TutorialGuide03_C_Register_Event_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.SetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_TutorialGuide03_C_SetVisibility final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialGuide03_C_SetVisibility) == 0x000001, "Wrong alignment on BP_TutorialGuide03_C_SetVisibility");
static_assert(sizeof(BP_TutorialGuide03_C_SetVisibility) == 0x000001, "Wrong size on BP_TutorialGuide03_C_SetVisibility");
static_assert(offsetof(BP_TutorialGuide03_C_SetVisibility, Visibility) == 0x000000, "Member 'BP_TutorialGuide03_C_SetVisibility::Visibility' has a wrong offset!");

// Function BP_TutorialGuide03.BP_TutorialGuide03_C.Unregister Event Internal
// 0x0030 (0x0030 - 0x0000)
struct BP_TutorialGuide03_C_Unregister_Event_Internal final
{
public:
	TDelegate<void(int32 StepActionID)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 StepActionID)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class USolarTutorialManager*                  CallFunc_GetSolarTutorialManager_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TutorialGuide03_C_Unregister_Event_Internal) == 0x000008, "Wrong alignment on BP_TutorialGuide03_C_Unregister_Event_Internal");
static_assert(sizeof(BP_TutorialGuide03_C_Unregister_Event_Internal) == 0x000030, "Wrong size on BP_TutorialGuide03_C_Unregister_Event_Internal");
static_assert(offsetof(BP_TutorialGuide03_C_Unregister_Event_Internal, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_TutorialGuide03_C_Unregister_Event_Internal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Unregister_Event_Internal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_TutorialGuide03_C_Unregister_Event_Internal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Unregister_Event_Internal, CallFunc_GetSolarTutorialManager_ReturnValue) == 0x000020, "Member 'BP_TutorialGuide03_C_Unregister_Event_Internal::CallFunc_GetSolarTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialGuide03_C_Unregister_Event_Internal, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_TutorialGuide03_C_Unregister_Event_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

