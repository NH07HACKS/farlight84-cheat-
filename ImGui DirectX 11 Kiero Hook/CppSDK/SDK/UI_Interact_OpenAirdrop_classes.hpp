#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Interact_OpenAirdrop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Solarland_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C
// 0x0020 (0x06E8 - 0x06C8)
class UUI_Interact_OpenAirdrop_C final : public USolarInteractionCipherBoxWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPanel_Interact_Progress_C*             Panel_Interact_Progress;                           // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECountDownState                               PassiveState;                                      // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastFadeOutTime;                                   // 0x06DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInCooldown;                                    // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Interact_OpenAirdrop(int32 EntryPoint);
	void RefreshToSelfOpening();
	void RefreshToOtherOpening();
	void RefreshToCanOpen();
	void RefreshProgressDisplay(float Progress, float InMaxOpenTime);
	void UpdateInteractType(ECipherBoxType InCipherType);
	void FadeOut();
	void FadeIn();
	void BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature();
	void BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature();
	void DoRefreshProgressDisplay(float Progress, float MaxOpenTime);
	void GetPanelInteractProgress(class USolarProgressiveInteractButton** ProgressButton);
	void GetCancelKeyPrompt(class USolarProgressiveInteractButton** ProgressButton);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Interact_OpenAirdrop_C">();
	}
	static class UUI_Interact_OpenAirdrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Interact_OpenAirdrop_C>();
	}
};
static_assert(alignof(UUI_Interact_OpenAirdrop_C) == 0x000008, "Wrong alignment on UUI_Interact_OpenAirdrop_C");
static_assert(sizeof(UUI_Interact_OpenAirdrop_C) == 0x0006E8, "Wrong size on UUI_Interact_OpenAirdrop_C");
static_assert(offsetof(UUI_Interact_OpenAirdrop_C, UberGraphFrame) == 0x0006C8, "Member 'UUI_Interact_OpenAirdrop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Interact_OpenAirdrop_C, Panel_Interact_Progress) == 0x0006D0, "Member 'UUI_Interact_OpenAirdrop_C::Panel_Interact_Progress' has a wrong offset!");
static_assert(offsetof(UUI_Interact_OpenAirdrop_C, PassiveState) == 0x0006D8, "Member 'UUI_Interact_OpenAirdrop_C::PassiveState' has a wrong offset!");
static_assert(offsetof(UUI_Interact_OpenAirdrop_C, LastFadeOutTime) == 0x0006DC, "Member 'UUI_Interact_OpenAirdrop_C::LastFadeOutTime' has a wrong offset!");
static_assert(offsetof(UUI_Interact_OpenAirdrop_C, FadeInCooldown) == 0x0006E0, "Member 'UUI_Interact_OpenAirdrop_C::FadeInCooldown' has a wrong offset!");

}

