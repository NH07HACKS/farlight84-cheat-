#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SolarTreasureBoxSpawner

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Solarland_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SolarTreasureBoxSpawner.BP_SolarTreasureBoxSpawner_C
// 0x0040 (0x05A0 - 0x0560)
class ABP_SolarTreasureBoxSpawner_C final : public ASolarTreasureBoxSpawner
{
public:
	class USolarNavModifierComponent*             SolarNavModifier;                                  // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BoxCube;                                           // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneRoot;                                         // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   GroupMatColors;                                    // 0x0588(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SolarTreasureBoxSpawner_C">();
	}
	static class ABP_SolarTreasureBoxSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SolarTreasureBoxSpawner_C>();
	}
};
static_assert(alignof(ABP_SolarTreasureBoxSpawner_C) == 0x000010, "Wrong alignment on ABP_SolarTreasureBoxSpawner_C");
static_assert(sizeof(ABP_SolarTreasureBoxSpawner_C) == 0x0005A0, "Wrong size on ABP_SolarTreasureBoxSpawner_C");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, SolarNavModifier) == 0x000560, "Member 'ABP_SolarTreasureBoxSpawner_C::SolarNavModifier' has a wrong offset!");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, Cube) == 0x000568, "Member 'ABP_SolarTreasureBoxSpawner_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, Arrow) == 0x000570, "Member 'ABP_SolarTreasureBoxSpawner_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, BoxCube) == 0x000578, "Member 'ABP_SolarTreasureBoxSpawner_C::BoxCube' has a wrong offset!");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, SceneRoot) == 0x000580, "Member 'ABP_SolarTreasureBoxSpawner_C::SceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SolarTreasureBoxSpawner_C, GroupMatColors) == 0x000588, "Member 'ABP_SolarTreasureBoxSpawner_C::GroupMatColors' has a wrong offset!");

}

