#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Interact_OpenAirdrop

#include "Basic.hpp"

#include "UI_Interact_OpenAirdrop_classes.hpp"
#include "UI_Interact_OpenAirdrop_parameters.hpp"


namespace SDK
{

// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.ExecuteUbergraph_UI_Interact_OpenAirdrop
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::ExecuteUbergraph_UI_Interact_OpenAirdrop(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "ExecuteUbergraph_UI_Interact_OpenAirdrop");

	Params::UI_Interact_OpenAirdrop_C_ExecuteUbergraph_UI_Interact_OpenAirdrop Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.RefreshToSelfOpening
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::RefreshToSelfOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "RefreshToSelfOpening");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.RefreshToOtherOpening
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::RefreshToOtherOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "RefreshToOtherOpening");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.RefreshToCanOpen
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::RefreshToCanOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "RefreshToCanOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.RefreshProgressDisplay
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMaxOpenTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::RefreshProgressDisplay(float Progress, float InMaxOpenTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "RefreshProgressDisplay");

	Params::UI_Interact_OpenAirdrop_C_RefreshProgressDisplay Parms{};

	Parms.Progress = Progress;
	Parms.InMaxOpenTime = InMaxOpenTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.UpdateInteractType
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECipherBoxType                          InCipherType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::UpdateInteractType(ECipherBoxType InCipherType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "UpdateInteractType");

	Params::UI_Interact_OpenAirdrop_C_UpdateInteractType Parms{};

	Parms.InCipherType = InCipherType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.FadeOut
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.FadeIn
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_3_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature
// (BlueprintEvent)

void UUI_Interact_OpenAirdrop_C::BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "BndEvt__Panel_Interact_Progress_K2Node_ComponentBoundEvent_2_SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.DoRefreshProgressDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxOpenTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::DoRefreshProgressDisplay(float Progress, float MaxOpenTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "DoRefreshProgressDisplay");

	Params::UI_Interact_OpenAirdrop_C_DoRefreshProgressDisplay Parms{};

	Parms.Progress = Progress;
	Parms.MaxOpenTime = MaxOpenTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.GetPanelInteractProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarProgressiveInteractButton** ProgressButton                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::GetPanelInteractProgress(class USolarProgressiveInteractButton** ProgressButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "GetPanelInteractProgress");

	Params::UI_Interact_OpenAirdrop_C_GetPanelInteractProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressButton != nullptr)
		*ProgressButton = Parms.ProgressButton;
}


// Function UI_Interact_OpenAirdrop.UI_Interact_OpenAirdrop_C.GetCancelKeyPrompt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USolarProgressiveInteractButton** ProgressButton                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Interact_OpenAirdrop_C::GetCancelKeyPrompt(class USolarProgressiveInteractButton** ProgressButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interact_OpenAirdrop_C", "GetCancelKeyPrompt");

	Params::UI_Interact_OpenAirdrop_C_GetCancelKeyPrompt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProgressButton != nullptr)
		*ProgressButton = Parms.ProgressButton;
}

}

