#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Vehicle_Status_Broken

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Vehicle_Status_Broken.GC_Vehicle_Status_Broken_C.WhileActive
// 0x00F0 (0x00F0 - 0x0000)
struct GC_Vehicle_Status_Broken_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WhileActive_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarVehiclePawn*                      K2Node_DynamicCast_AsSolar_Vehicle_Pawn;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Vehicle_Status_Broken_C_WhileActive) == 0x000008, "Wrong alignment on GC_Vehicle_Status_Broken_C_WhileActive");
static_assert(sizeof(GC_Vehicle_Status_Broken_C_WhileActive) == 0x0000F0, "Wrong size on GC_Vehicle_Status_Broken_C_WhileActive");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, MyTarget) == 0x000000, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, Parameters) == 0x000008, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, ReturnValue) == 0x0000D8, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, CallFunc_WhileActive_ReturnValue) == 0x0000D9, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::CallFunc_WhileActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, K2Node_DynamicCast_AsSolar_Vehicle_Pawn) == 0x0000E0, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::K2Node_DynamicCast_AsSolar_Vehicle_Pawn' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GC_Vehicle_Status_Broken_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GC_Vehicle_Status_Broken.GC_Vehicle_Status_Broken_C.OnActive
// 0x00F0 (0x00F0 - 0x0000)
struct GC_Vehicle_Status_Broken_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnActive_ReturnValue;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASolarVehiclePawn*                      K2Node_DynamicCast_AsSolar_Vehicle_Pawn;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Vehicle_Status_Broken_C_OnActive) == 0x000008, "Wrong alignment on GC_Vehicle_Status_Broken_C_OnActive");
static_assert(sizeof(GC_Vehicle_Status_Broken_C_OnActive) == 0x0000F0, "Wrong size on GC_Vehicle_Status_Broken_C_OnActive");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, MyTarget) == 0x000000, "Member 'GC_Vehicle_Status_Broken_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, Parameters) == 0x000008, "Member 'GC_Vehicle_Status_Broken_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, ReturnValue) == 0x0000D8, "Member 'GC_Vehicle_Status_Broken_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, CallFunc_OnActive_ReturnValue) == 0x0000D9, "Member 'GC_Vehicle_Status_Broken_C_OnActive::CallFunc_OnActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, K2Node_DynamicCast_AsSolar_Vehicle_Pawn) == 0x0000E0, "Member 'GC_Vehicle_Status_Broken_C_OnActive::K2Node_DynamicCast_AsSolar_Vehicle_Pawn' has a wrong offset!");
static_assert(offsetof(GC_Vehicle_Status_Broken_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GC_Vehicle_Status_Broken_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

