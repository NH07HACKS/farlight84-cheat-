#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_KeyMappingPrompt

#include "Basic.hpp"

#include "S_KeyPrompt_structs.hpp"
#include "Solarland_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_Type_Mouse_structs.hpp"
#include "E_KeyPromptStyle_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.ExecuteUbergraph_UI_KeyMappingPrompt
// 0x0198 (0x0198 - 0x0000)
struct UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_KeyPrompt                           K2Node_Event_InInfo;                               // 0x0008(0x00B8)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Hover;                                // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InCustomText;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_KeyPrompt                           K2Node_Event_CustomInfo;                           // 0x00D8(0x00B8)(HasGetValueTypeHash)
	E_Type_Mouse                                  K2Node_Event_MouseType;                            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              K2Node_Event_Style;                                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt");
static_assert(sizeof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt) == 0x000198, "Wrong size on UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, EntryPoint) == 0x000000, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_InInfo) == 0x000008, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_InInfo' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, Temp_bool_Variable) == 0x0000C0, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, Temp_byte_Variable) == 0x0000C1, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, Temp_byte_Variable_1) == 0x0000C2, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_IsDesignTime) == 0x0000C3, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C4, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Select_Default) == 0x0000C5, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_Hover) == 0x0000C6, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_Hover' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_InCustomText) == 0x0000C8, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_InCustomText' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_CustomInfo) == 0x0000D8, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_CustomInfo' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_MouseType) == 0x000190, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_MouseType' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt, K2Node_Event_Style) == 0x000191, "Member 'UI_KeyMappingPrompt_C_ExecuteUbergraph_UI_KeyMappingPrompt::K2Node_Event_Style' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetKeyPromptCustomInfo
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo final
{
public:
	struct FS_KeyPrompt                           InInfo;                                            // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo, InInfo) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetKeyPromptCustomInfo::InInfo' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetStyle
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetStyle final
{
public:
	E_KeyPromptStyle                              Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetStyle) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetStyle");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetStyle) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetStyle");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyle, Style_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetStyle::Style_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetMouseType
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetMouseType final
{
public:
	E_Type_Mouse                                  MouseType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetMouseType) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetMouseType");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetMouseType) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetMouseType");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetMouseType, MouseType) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetMouseType::MouseType' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.Update Key Prompt Custom Info
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info final
{
public:
	struct FS_KeyPrompt                           CustomInfo_0;                                      // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info");
static_assert(sizeof(UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info");
static_assert(offsetof(UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info, CustomInfo_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_Update_Key_Prompt_Custom_Info::CustomInfo_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetCustomText
// 0x0010 (0x0010 - 0x0000)
struct UI_KeyMappingPrompt_C_SetCustomText final
{
public:
	class FString                                 InCustomText;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetCustomText) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetCustomText");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetCustomText) == 0x000010, "Wrong size on UI_KeyMappingPrompt_C_SetCustomText");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetCustomText, InCustomText) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetCustomText::InCustomText' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetHover
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetHover final
{
public:
	bool                                          Hover_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetHover) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetHover");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetHover) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetHover");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHover, Hover_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetHover::Hover_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_PreConstruct) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_PreConstruct");
static_assert(sizeof(UI_KeyMappingPrompt_C_PreConstruct) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_PreConstruct");
static_assert(offsetof(UI_KeyMappingPrompt_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_KeyMappingPrompt_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetStyleInternal
// 0x000F (0x000F - 0x0000)
struct UI_KeyMappingPrompt_C_SetStyleInternal final
{
public:
	E_KeyPromptStyle                              Style_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyPromptStyle                              Temp_byte_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetStyleInternal) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetStyleInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetStyleInternal) == 0x00000F, "Wrong size on UI_KeyMappingPrompt_C_SetStyleInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Style_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Style_0' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable) == 0x000001, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_1) == 0x000002, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_2) == 0x000003, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_3) == 0x000004, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_4) == 0x000005, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_5) == 0x000006, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_6) == 0x000007, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, K2Node_Select_Default) == 0x000008, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_7) == 0x000009, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_8) == 0x00000A, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_9) == 0x00000B, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_10) == 0x00000C, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, Temp_byte_Variable_11) == 0x00000D, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetStyleInternal, K2Node_Select_Default_1) == 0x00000E, "Member 'UI_KeyMappingPrompt_C_SetStyleInternal::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetEnableEmptyDispaly
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetEnableEmptyDispaly final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetEnableEmptyDispaly) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetEnableEmptyDispaly");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetEnableEmptyDispaly) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetEnableEmptyDispaly");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetEnableEmptyDispaly, bEnable) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetEnableEmptyDispaly::bEnable' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetEnableInputSettingHide
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetEnableInputSettingHide final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetEnableInputSettingHide) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetEnableInputSettingHide");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetEnableInputSettingHide) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetEnableInputSettingHide");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetEnableInputSettingHide, bEnable) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetEnableInputSettingHide::bEnable' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetOnlyDisplayMouseAndKeyboard
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard final
{
public:
	bool                                          bInOnlyDisplayMouseAndKeyboard;                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard, bInOnlyDisplayMouseAndKeyboard) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetOnlyDisplayMouseAndKeyboard::bInOnlyDisplayMouseAndKeyboard' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetKeyPromptCustomInfoInternal
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal final
{
public:
	struct FS_KeyPrompt                           InInfo;                                            // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal, InInfo) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetKeyPromptCustomInfoInternal::InInfo' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetEnableBtn
// 0x0001 (0x0001 - 0x0000)
struct UI_KeyMappingPrompt_C_SetEnableBtn final
{
public:
	bool                                          bInEnableBtn;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetEnableBtn) == 0x000001, "Wrong alignment on UI_KeyMappingPrompt_C_SetEnableBtn");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetEnableBtn) == 0x000001, "Wrong size on UI_KeyMappingPrompt_C_SetEnableBtn");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetEnableBtn, bInEnableBtn) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetEnableBtn::bInEnableBtn' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetMouseTypeInternal
// 0x0020 (0x0020 - 0x0000)
struct UI_KeyMappingPrompt_C_SetMouseTypeInternal final
{
public:
	E_Type_Mouse                                  MouseType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USolarComponentMouse*                   CallFunc_GetMouse_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Component_Mouse_C*                  K2Node_DynamicCast_AsUI_Component_Mouse;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetMouseTypeInternal) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetMouseTypeInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetMouseTypeInternal) == 0x000020, "Wrong size on UI_KeyMappingPrompt_C_SetMouseTypeInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetMouseTypeInternal, MouseType) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetMouseTypeInternal::MouseType' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetMouseTypeInternal, CallFunc_GetMouse_ReturnValue) == 0x000008, "Member 'UI_KeyMappingPrompt_C_SetMouseTypeInternal::CallFunc_GetMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetMouseTypeInternal, K2Node_DynamicCast_AsUI_Component_Mouse) == 0x000010, "Member 'UI_KeyMappingPrompt_C_SetMouseTypeInternal::K2Node_DynamicCast_AsUI_Component_Mouse' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetMouseTypeInternal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_KeyMappingPrompt_C_SetMouseTypeInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetHoverInternal
// 0x0060 (0x0060 - 0x0000)
struct UI_KeyMappingPrompt_C_SetHoverInternal final
{
public:
	bool                                          Hover_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetHoverInternal) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetHoverInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetHoverInternal) == 0x000060, "Wrong size on UI_KeyMappingPrompt_C_SetHoverInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, Hover_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::Hover_0' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, Temp_bool_Variable) == 0x000001, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, Temp_struct_Variable) == 0x000004, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, Temp_struct_Variable_1) == 0x000014, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, K2Node_Select_Default) == 0x000024, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetHoverInternal, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'UI_KeyMappingPrompt_C_SetHoverInternal::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.UpdateKeyPromptCustomInfoInternal
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal final
{
public:
	struct FS_KeyPrompt                           CustomInfo_0;                                      // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal, CustomInfo_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoInternal::CustomInfo_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.UpdateKeyPromptCustomInfoLua
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua final
{
public:
	struct FS_KeyPrompt                           CustomInfo_0;                                      // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua");
static_assert(sizeof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua");
static_assert(offsetof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua, CustomInfo_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLua::CustomInfo_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.SetCustomTextInternal
// 0x0028 (0x0028 - 0x0000)
struct UI_KeyMappingPrompt_C_SetCustomTextInternal final
{
public:
	class FString                                 InCustomText;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(UI_KeyMappingPrompt_C_SetCustomTextInternal) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_SetCustomTextInternal");
static_assert(sizeof(UI_KeyMappingPrompt_C_SetCustomTextInternal) == 0x000028, "Wrong size on UI_KeyMappingPrompt_C_SetCustomTextInternal");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetCustomTextInternal, InCustomText) == 0x000000, "Member 'UI_KeyMappingPrompt_C_SetCustomTextInternal::InCustomText' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_SetCustomTextInternal, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'UI_KeyMappingPrompt_C_SetCustomTextInternal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.GetKeyMappingProgressAdapter
// 0x0008 (0x0008 - 0x0000)
struct UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter final
{
public:
	class USolarAdapterWidget*                    AdapterProgress;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter");
static_assert(sizeof(UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter) == 0x000008, "Wrong size on UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter");
static_assert(offsetof(UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter, AdapterProgress) == 0x000000, "Member 'UI_KeyMappingPrompt_C_GetKeyMappingProgressAdapter::AdapterProgress' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.GetKeyMappingProgress
// 0x0010 (0x0010 - 0x0000)
struct UI_KeyMappingPrompt_C_GetKeyMappingProgress final
{
public:
	class USolarComponentKeyProgress*             NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USolarComponentKeyProgress*             CallFunc_GetProgress_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_GetKeyMappingProgress) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_GetKeyMappingProgress");
static_assert(sizeof(UI_KeyMappingPrompt_C_GetKeyMappingProgress) == 0x000010, "Wrong size on UI_KeyMappingPrompt_C_GetKeyMappingProgress");
static_assert(offsetof(UI_KeyMappingPrompt_C_GetKeyMappingProgress, NewParam) == 0x000000, "Member 'UI_KeyMappingPrompt_C_GetKeyMappingProgress::NewParam' has a wrong offset!");
static_assert(offsetof(UI_KeyMappingPrompt_C_GetKeyMappingProgress, CallFunc_GetProgress_ReturnValue) == 0x000008, "Member 'UI_KeyMappingPrompt_C_GetKeyMappingProgress::CallFunc_GetProgress_ReturnValue' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.RefreshKeyDisplayFromCpp
// 0x0010 (0x0010 - 0x0000)
struct UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp final
{
public:
	class FString                                 InActionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp");
static_assert(sizeof(UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp) == 0x000010, "Wrong size on UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp");
static_assert(offsetof(UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp, InActionName) == 0x000000, "Member 'UI_KeyMappingPrompt_C_RefreshKeyDisplayFromCpp::InActionName' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.UpdateKeyPromptCustomInfoLuaCopy
// 0x00B8 (0x00B8 - 0x0000)
struct UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy final
{
public:
	struct FS_KeyPrompt                           CustomInfo_0;                                      // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy");
static_assert(sizeof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy) == 0x0000B8, "Wrong size on UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy");
static_assert(offsetof(UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy, CustomInfo_0) == 0x000000, "Member 'UI_KeyMappingPrompt_C_UpdateKeyPromptCustomInfoLuaCopy::CustomInfo_0' has a wrong offset!");

// Function UI_KeyMappingPrompt.UI_KeyMappingPrompt_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct UI_KeyMappingPrompt_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_KeyMappingPrompt_C_GetModuleName) == 0x000008, "Wrong alignment on UI_KeyMappingPrompt_C_GetModuleName");
static_assert(sizeof(UI_KeyMappingPrompt_C_GetModuleName) == 0x000010, "Wrong size on UI_KeyMappingPrompt_C_GetModuleName");
static_assert(offsetof(UI_KeyMappingPrompt_C_GetModuleName, ReturnValue) == 0x000000, "Member 'UI_KeyMappingPrompt_C_GetModuleName::ReturnValue' has a wrong offset!");

}

